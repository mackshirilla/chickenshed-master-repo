{"mappings":"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","sources":["src/modules/components/listStudents.ts","src/modules/components/listAdditionalStudents.ts","src/modules/components/listCaregivers.ts","src/modules/components/listCaregivingFor.ts"],"sourcesContent":["import { WFDynamicList, WFComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../../api/apiConfig\";\n\ninterface Student {\n  id: number;\n  first_name: string;\n  last_name: string;\n  email: string;\n  phone: string;\n  profile_pic: {\n    url: string;\n  } | null;\n}\n\ninterface StudentApiResponse {\n  students: Student[];\n}\n\nexport async function fetchStudentProfiles(): Promise<Student[]> {\n  try {\n    const getStudents = apiClient.get<StudentApiResponse>(\n      \"/profiles/student_profiles\"\n    );\n    const response = await getStudents.fetch();\n    return response.students;\n  } catch (error) {\n    console.error(\"Error fetching student profiles:\", error);\n    throw error;\n  }\n}\n\nexport async function initializeDynamicStudentList(containerSelector: string) {\n  // Initialize a new instance of WFDynamicList\n  const list = new WFDynamicList<Student>(containerSelector, {\n    rowSelector: \"#listStudentCard\",\n    loaderSelector: \"#listStudentProfilesloading\",\n    emptySelector: \"#listStudentProfilesEmpty\",\n  });\n\n  // Customize the rendering of the loader\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({\n      display: \"flex\",\n    });\n    return loaderElement;\n  });\n\n  // Customize the rendering of the empty state\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({\n      display: \"flex\",\n    });\n    return emptyElement;\n  });\n\n  // Customize the rendering of list items\n  list.rowRenderer(({ rowData, rowElement }) => {\n    const studentCard = new WFComponent(rowElement);\n    const studentImage = new WFImage(\n      studentCard.getChildAsComponent(\"#listStudentCardImage\").getElement()\n    );\n    const studentName = studentCard.getChildAsComponent(\"#studentName\");\n\n    if (rowData.profile_pic && rowData.profile_pic.url) {\n      studentImage.setImage(rowData.profile_pic.url);\n    } else {\n      studentImage.setImage(\n        \"https://cdn.prod.website-files.com/66102236c16b61185de61fe3/66102236c16b61185de6204e_placeholder.svg\"\n      );\n    }\n    studentName.setText(`${rowData.first_name} ${rowData.last_name}`);\n\n    // Show the list item\n    rowElement.setStyle({\n      display: \"block\",\n    });\n\n    return rowElement;\n  });\n\n  // Load and display student profiles\n  try {\n    // Enable the loading state\n    list.changeLoadingStatus(true);\n\n    const students = await fetchStudentProfiles();\n\n    // Sort students alphabetically by last name\n    students.sort((a, b) => a.last_name.localeCompare(b.last_name));\n\n    // Set the data to be displayed in the dynamic list\n    list.setData(students);\n\n    // Disable the loading state\n    list.changeLoadingStatus(false);\n  } catch (error) {\n    console.error(\"Error loading student profiles:\", error);\n\n    // If there's an error, set an empty array to trigger the empty state\n    list.setData([]);\n\n    // Disable the loading state\n    list.changeLoadingStatus(false);\n  }\n}\n","import { WFDynamicList, WFComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../../api/apiConfig\";\n\ninterface AdditionalStudent {\n  id: number;\n  first_name: string;\n  last_name: string;\n  email: string;\n  phone: string;\n  profile_pic: {\n    url: string;\n  } | null;\n}\n\ninterface AdditionalStudentApiResponse {\n  additional_students: AdditionalStudent[];\n}\n\nexport async function fetchAdditionalStudentProfiles(): Promise<\n  AdditionalStudent[]\n> {\n  try {\n    const getAdditionalStudents = apiClient.get<AdditionalStudentApiResponse>(\n      \"/profiles/additional_students\"\n    );\n    const response = await getAdditionalStudents.fetch();\n    return response.additional_students;\n  } catch (error) {\n    console.error(\"Error fetching additional student profiles:\", error);\n    throw error;\n  }\n}\n\nexport async function initializeDynamicAdditionalStudentList(\n  containerSelector: string\n) {\n  // Initialize a new instance of WFDynamicList\n  const list = new WFDynamicList<AdditionalStudent>(containerSelector, {\n    rowSelector: \"#listAdditionalStudentCard\",\n    loaderSelector: \"#listAdditionalStudentProfilesloading\",\n    emptySelector: \"#listAdditionalStudentProfilesEmpty\",\n  });\n\n  // Customize the rendering of the loader\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({\n      display: \"flex\",\n    });\n    return loaderElement;\n  });\n\n  // Customize the rendering of the empty state\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({\n      display: \"flex\",\n    });\n    return emptyElement;\n  });\n\n  // Customize the rendering of list items\n  list.rowRenderer(({ rowData, rowElement }) => {\n    const studentCard = new WFComponent(rowElement);\n    const studentImage = new WFImage(\n      studentCard\n        .getChildAsComponent(\"#listAdditionalStudentCardImage\")\n        .getElement()\n    );\n    const studentName = studentCard.getChildAsComponent(\n      \"#additionalStudentName\"\n    );\n\n    if (rowData.profile_pic && rowData.profile_pic.url) {\n      studentImage.setImage(rowData.profile_pic.url);\n    } else {\n      studentImage.setImage(\n        \"https://cdn.prod.website-files.com/66102236c16b61185de61fe3/66102236c16b61185de6204e_placeholder.svg\"\n      );\n    }\n    studentName.setText(`${rowData.first_name} ${rowData.last_name}`);\n\n    // Show the list item\n    rowElement.setStyle({\n      display: \"flex\",\n    });\n\n    return rowElement;\n  });\n\n  // Load and display additional student profiles\n  try {\n    // Enable the loading state\n    list.changeLoadingStatus(true);\n\n    const additionalStudents = await fetchAdditionalStudentProfiles();\n\n    // Sort additional students alphabetically by last name\n    additionalStudents.sort((a, b) => a.last_name.localeCompare(b.last_name));\n\n    // Set the data to be displayed in the dynamic list\n    list.setData(additionalStudents);\n\n    // Disable the loading state\n    list.changeLoadingStatus(false);\n  } catch (error) {\n    console.error(\"Error loading additional student profiles:\", error);\n\n    // If there's an error, set an empty array to trigger the empty state\n    list.setData([]);\n\n    // Disable the loading state\n    list.changeLoadingStatus(false);\n  }\n}\n","import { WFDynamicList, WFComponent, WFFormComponent } from \"@xatom/core\";\nimport { apiClient } from \"../../api/apiConfig\";\nimport { handleRecaptcha } from \"../../utils/recaptchaUtils\";\nimport { toggleError } from \"../../utils/formUtils\";\nimport { createValidationFunction } from \"../../utils/formUtils\";\nimport { validateEmail } from \"../../utils/validationUtils\";\n\ninterface Caregiver {\n  id: number;\n  caregiver_user_id: number;\n  invite_status: string;\n  invite_email: string;\n}\n\ninterface CaregiverApiResponse {\n  caregivers: Caregiver[];\n}\n\ninterface caregiverReponse {\n  status: string;\n  message: string;\n}\n\n// Declare dialog forms and reset buttons first\nconst resendInviteForm = new WFFormComponent(\"#resendCaregiverInviteForm\");\nconst deleteCaregiverForm = new WFFormComponent(\"#deleteCaregiverForm\");\nconst inviteCaregiverForm = new WFFormComponent(\"#inviteCaregiverForm\");\n\nconst resetCaregiverForm = new WFComponent(\"#resetCaregiverForm\");\nconst resetDeleteCaregiverForm = new WFComponent(\"#resetDeleteCaregiverForm\");\nconst resetResendInviteForm = new WFComponent(\n  \"#resetResendCaregiverInviteForm\"\n);\n\n// Declare success triggers\nconst resendCaregiverInviteSuccessTrigger = new WFComponent(\n  \"#resendCaregiverInviteSuccessTrigger\"\n);\nconst deleteCaregiverSuccessTrigger = new WFComponent(\n  \"#deleteCaregiverSuccessTrigger\"\n);\nconst inviteCaregiverSuccessTrigger = new WFComponent(\n  \"#inviteCaregiverSuccessTrigger\"\n);\n\n// Flags to track success state\nlet isResendInviteSuccess = false;\nlet isDeleteCaregiverSuccess = false;\nlet isInviteCaregiverSuccess = false;\n\n// Attach reset button event listeners\nresetCaregiverForm.on(\"click\", () => {\n  console.log(\"Reset Caregiver Form clicked\");\n  inviteCaregiverForm.resetForm();\n  inviteCaregiverForm.showForm();\n  if (isInviteCaregiverSuccess) {\n    inviteCaregiverSuccessTrigger.getElement().click();\n    isInviteCaregiverSuccess = false;\n  }\n});\n\nresetDeleteCaregiverForm.on(\"click\", () => {\n  console.log(\"Reset Delete Caregiver Form clicked\");\n  console.log(deleteCaregiverSuccessTrigger.getElement());\n  deleteCaregiverForm.resetForm();\n  deleteCaregiverForm.showForm();\n  if (isDeleteCaregiverSuccess) {\n    deleteCaregiverSuccessTrigger.getElement().click();\n    isDeleteCaregiverSuccess = false;\n  }\n});\n\nresetResendInviteForm.on(\"click\", () => {\n  console.log(\"Reset Resend Invite Form clicked\");\n  resendInviteForm.resetForm();\n  resendInviteForm.showForm();\n  if (isResendInviteSuccess) {\n    resendCaregiverInviteSuccessTrigger.getElement().click();\n    isResendInviteSuccess = false;\n  }\n});\n\nexport async function fetchCaregiverProfiles(): Promise<Caregiver[]> {\n  try {\n    const getCaregivers = apiClient.get<CaregiverApiResponse>(\"/caregivers\");\n    const response = await getCaregivers.fetch();\n    console.log(\"API response:\", response); // Log the entire response for debugging\n\n    if (response.caregivers && Array.isArray(response.caregivers)) {\n      return response.caregivers;\n    } else {\n      throw new Error(\"Invalid response structure\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching caregiver profiles:\", error);\n    throw error;\n  }\n}\n\nexport async function initializeDynamicCaregiverList(\n  containerSelector: string\n) {\n  // Ensure the container exists before initializing the list\n  const container = document.querySelector(containerSelector);\n  if (!container) {\n    console.error(\"Container not found for selector:\", containerSelector);\n    return;\n  }\n\n  // Initialize a new instance of WFDynamicList\n  const list = new WFDynamicList<Caregiver>(containerSelector, {\n    rowSelector: \"#caregiverCard\",\n    loaderSelector: \"#caregiversLoading\",\n    emptySelector: \"#caregiversEmpty\",\n  });\n\n  let selectedEmail: string | null = null;\n  let selectedCaregiverId: number | null = null;\n\n  // Customize the rendering of the loader\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({\n      display: \"flex\",\n    });\n    return loaderElement;\n  });\n\n  // Customize the rendering of the empty state\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({\n      display: \"block\",\n    });\n    return emptyElement;\n  });\n\n  // Customize the rendering of list items\n  list.rowRenderer(({ rowData, rowElement }) => {\n    const caregiverCard = new WFComponent(rowElement);\n    const caregiverStatus =\n      caregiverCard.getChildAsComponent(\"#caregiverStatus\");\n    const caregiverEmail = caregiverCard.getChildAsComponent(\"#caregiverEmail\");\n    const resendButton =\n      caregiverCard.getChildAsComponent(\".resend-invite-btn\");\n    const deleteButton = caregiverCard.getChildAsComponent(\n      \".delete-caregiver-btn\"\n    );\n\n    caregiverEmail.setText(rowData.invite_email);\n    caregiverStatus.setText(rowData.invite_status);\n\n    // Hide the resend button if the status is \"Active\"\n    if (rowData.invite_status === \"Active\") {\n      resendButton.setStyle({ display: \"none\" });\n    }\n\n    // Attach event listener to the resend button\n    resendButton.on(\"click\", () => {\n      const dialog = document.getElementById(\n        \"resendCaregiverInviteDialog\"\n      ) as HTMLDialogElement;\n      if (dialog) {\n        selectedEmail = rowData.invite_email; // Store the email for later use\n        console.log(\"Selected email:\", selectedEmail);\n        dialog.showModal();\n        document.body.style.overflow = \"hidden\"; // Prevent page scroll\n\n        const closeDialog = () => {\n          dialog.close();\n          document.body.style.overflow = \"auto\"; // Restore page scroll\n          resetResendInviteForm.getElement().click();\n        };\n\n        // Close dialog when clicking outside of it\n        const closeOutsideClick = (event: MouseEvent) => {\n          if (event.target === dialog) {\n            closeDialog();\n          }\n        };\n        dialog.addEventListener(\"click\", closeOutsideClick);\n\n        // Close dialog on pressing ESC key\n        const closeOnEsc = (event: KeyboardEvent) => {\n          if (event.key === \"Escape\" && dialog.open) {\n            closeDialog();\n          }\n        };\n        document.addEventListener(\"keydown\", closeOnEsc);\n\n        // Close dialog when clicking the close button\n        const closeDialogBtn = dialog.querySelector(\n          \"#close-dialog-btn\"\n        ) as HTMLButtonElement;\n        if (closeDialogBtn) {\n          closeDialogBtn.addEventListener(\"click\", () => {\n            closeDialog();\n          });\n        }\n\n        // Remove event listeners when the dialog is closed\n        dialog.addEventListener(\n          \"close\",\n          () => {\n            dialog.removeEventListener(\"click\", closeOutsideClick);\n            document.removeEventListener(\"keydown\", closeOnEsc);\n          },\n          { once: true }\n        );\n      } else {\n        console.error(\"Dialog element not found\");\n      }\n    });\n\n    // Attach event listener to the delete button\n    const dashboardWrapper = new WFComponent(\".page_main\");\n\n    deleteButton.on(\"click\", () => {\n      dashboardWrapper.setAttribute(\"data-brand\", \"6\");\n      const dialog = document.getElementById(\n        \"deleteCaregiverDialog\"\n      ) as HTMLDialogElement;\n      if (dialog) {\n        selectedCaregiverId = rowData.id; // Store the caregiver ID for later use\n        console.log(\"Selected caregiver ID:\", selectedCaregiverId);\n        dialog.showModal();\n        document.body.style.overflow = \"hidden\"; // Prevent page scroll\n\n        const closeDialog = () => {\n          dialog.close();\n          document.body.style.overflow = \"auto\"; // Restore page scroll\n          resetDeleteCaregiverForm.getElement().click();\n          dashboardWrapper.setAttribute(\"data-brand\", \"2\");\n        };\n\n        // Close dialog when clicking outside of it\n        const closeOutsideClick = (event: MouseEvent) => {\n          if (event.target === dialog) {\n            closeDialog();\n            dashboardWrapper.setAttribute(\"data-brand\", \"2\");\n          }\n        };\n        dialog.addEventListener(\"click\", closeOutsideClick);\n\n        // Close dialog on pressing ESC key\n        const closeOnEsc = (event: KeyboardEvent) => {\n          if (event.key === \"Escape\" && dialog.open) {\n            closeDialog();\n            dashboardWrapper.setAttribute(\"data-brand\", \"2\");\n          }\n        };\n        document.addEventListener(\"keydown\", closeOnEsc);\n\n        // Close dialog when clicking the close button\n        const closeDialogBtn = dialog.querySelector(\n          \"#close-dialog-btn\"\n        ) as HTMLButtonElement;\n        if (closeDialogBtn) {\n          closeDialogBtn.addEventListener(\"click\", () => {\n            closeDialog();\n            dashboardWrapper.setAttribute(\"data-brand\", \"2\");\n          });\n        }\n\n        // Remove event listeners when the dialog is closed\n        dialog.addEventListener(\n          \"close\",\n          () => {\n            dialog.removeEventListener(\"click\", closeOutsideClick);\n            document.removeEventListener(\"keydown\", closeOnEsc);\n          },\n          { once: true }\n        );\n      } else {\n        console.error(\"Dialog element not found\");\n      }\n    });\n\n    // Show the list item\n    rowElement.setStyle({\n      display: \"block\",\n    });\n\n    return rowElement;\n  });\n\n  // Handle resend invite form submission\n  const caregiverRequestingAnimation = new WFComponent(\n    \"#caregiverRequestingAnimation\"\n  );\n  const submitCaregiverError = new WFComponent(\"#submitCaregiverError\");\n  const onSuccessTrigger = new WFComponent(\n    \"#resendCaregiverInviteSuccessTrigger\"\n  );\n\n  resendInviteForm.onFormSubmit(async (formData, event) => {\n    event.preventDefault(); // Stop the form from submitting normally\n    caregiverRequestingAnimation.setStyle({ display: \"block\" }); // Show loading animation\n\n    if (!selectedEmail) {\n      console.error(\"No email selected\");\n      toggleError(\n        submitCaregiverError,\n        \"No email selected. Please try again.\",\n        true\n      );\n      caregiverRequestingAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n      return;\n    }\n\n    console.log(\"Selected email before sending:\", selectedEmail);\n\n    // Handle reCAPTCHA verification\n    const recaptchaAction = \"resend_caregiver_invite\";\n    const isRecaptchaValid = await handleRecaptcha(recaptchaAction);\n\n    if (!isRecaptchaValid) {\n      toggleError(\n        submitCaregiverError,\n        \"reCAPTCHA verification failed. Please try again.\",\n        true\n      );\n      caregiverRequestingAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n      return;\n    }\n\n    // Post data to a server endpoint\n    try {\n      console.log(\"Sending request to /caregivers/invite with data:\", {\n        caregiver_email: selectedEmail,\n      });\n      const response = await apiClient\n        .post(\"/caregivers/invite\", {\n          data: { caregiver_email: selectedEmail },\n        })\n        .fetch();\n\n      console.log(\"Invite sent successfully:\", response);\n      resendInviteForm.showSuccessState(); // Show success state\n      isResendInviteSuccess = true;\n      onSuccessTrigger.getElement().click(); // Trigger the resend success action\n      caregiverRequestingAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n\n      // Reload the caregiver list\n      await reloadCaregiverList(list);\n    } catch (error) {\n      console.error(\"Error sending invite:\", error);\n      toggleError(\n        submitCaregiverError,\n        error.response?.data?.message || \"Failed to send invite.\",\n        true\n      );\n      caregiverRequestingAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n    }\n  });\n\n  // Handle delete caregiver form submission\n  const caregiverDeletingAnimation = new WFComponent(\n    \"#caregiverDeletingAnimation\"\n  );\n  const submitDeleteCaregiverError = new WFComponent(\n    \"#submitDeleteCaregiverError\"\n  );\n  const onDeleteSuccessTrigger = new WFComponent(\n    \"#deleteCaregiverSuccessTrigger\"\n  );\n\n  deleteCaregiverForm.onFormSubmit(async (formData, event) => {\n    event.preventDefault(); // Stop the form from submitting normally\n    caregiverDeletingAnimation.setStyle({ display: \"block\" }); // Show loading animation\n\n    if (!selectedCaregiverId) {\n      console.error(\"No caregiver ID selected\");\n      toggleError(\n        submitDeleteCaregiverError,\n        \"No caregiver ID selected. Please try again.\",\n        true\n      );\n      caregiverDeletingAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n      return;\n    }\n\n    console.log(\"Selected caregiver ID before deleting:\", selectedCaregiverId);\n\n    // Handle reCAPTCHA verification\n    const recaptchaAction = \"delete_caregiver\";\n    const isRecaptchaValid = await handleRecaptcha(recaptchaAction);\n\n    if (!isRecaptchaValid) {\n      toggleError(\n        submitDeleteCaregiverError,\n        \"reCAPTCHA verification failed. Please try again.\",\n        true\n      );\n      caregiverDeletingAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n      return;\n    }\n\n    // Delete data from the server endpoint\n    try {\n      console.log(\n        `Sending delete request to /caregivers/${selectedCaregiverId}`\n      );\n      const response = await apiClient\n        .delete(`/caregivers/${selectedCaregiverId}`)\n        .fetch();\n\n      console.log(\"Caregiver deleted successfully:\", response);\n      deleteCaregiverForm.showSuccessState(); // Show success state\n      isDeleteCaregiverSuccess = true;\n      onDeleteSuccessTrigger.getElement().click(); // Trigger the delete success action\n      caregiverDeletingAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n\n      // Reload the caregiver list\n      await reloadCaregiverList(list);\n    } catch (error) {\n      console.error(\"Error deleting caregiver:\", error);\n      toggleError(\n        submitDeleteCaregiverError,\n        error.response?.data?.message || \"Failed to delete caregiver.\",\n        true\n      );\n      caregiverDeletingAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n    }\n  });\n\n  // Initialize the form components\n\n  const fieldsCaregiver = [\n    {\n      input: new WFComponent(\"#caregiverEmailInput\"),\n      error: new WFComponent(\"#caregiverEmailInputError\"),\n      validationFn: validateEmail,\n      message: \"Please enter a valid email address\",\n    },\n  ];\n\n  // Handle invite caregiver form submission\n  const caregiverInviteAnimation = new WFComponent(\n    \"#caregiverRequestingAnimation\"\n  );\n  const submitInviteCaregiverError = new WFComponent(\n    \"#submitInviteCaregiverError\"\n  );\n  const inviteSuccessTrigger = new WFComponent(\n    \"#inviteCaregiverSuccessTrigger\"\n  );\n\n  inviteCaregiverForm.onFormSubmit(async (formData, event) => {\n    event.preventDefault(); // Stop the form from submitting normally\n    caregiverInviteAnimation.setStyle({ display: \"block\" }); // Show loading animation\n\n    let isFormValid = true;\n    // Validate all fields before proceeding\n    fieldsCaregiver.forEach(({ input, error, validationFn, message }) => {\n      const errorMessage = createValidationFunction(\n        input,\n        validationFn,\n        message\n      )();\n\n      if (errorMessage) {\n        toggleError(error, errorMessage, true);\n        isFormValid = false;\n      } else {\n        toggleError(error, \"\", false);\n      }\n    });\n\n    if (!isFormValid) {\n      console.log(\"Validation failed:\", formData);\n      toggleError(\n        submitInviteCaregiverError,\n        \"Please correct all errors above.\",\n        true\n      );\n      caregiverInviteAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n      return;\n    }\n\n    // Handle reCAPTCHA verification\n    const recaptchaAction = \"invite_caregiver\";\n    const isRecaptchaValid = await handleRecaptcha(recaptchaAction);\n\n    if (!isRecaptchaValid) {\n      toggleError(\n        submitInviteCaregiverError,\n        \"reCAPTCHA verification failed. Please try again.\",\n        true\n      );\n      caregiverInviteAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n      return;\n    }\n\n    // Post data to a server endpoint\n    try {\n      console.log(\"Sending request to /caregivers/invite with data:\", formData);\n      const response = await apiClient\n        .post<caregiverReponse>(\"/caregivers/invite\", { data: formData })\n        .fetch();\n\n      if (response.status === \"success\") {\n        inviteCaregiverForm.showSuccessState();\n        isInviteCaregiverSuccess = true;\n        inviteSuccessTrigger.getElement().click();\n        caregiverInviteAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n\n        // Reload the caregiver list\n        await reloadCaregiverList(list);\n      }\n    } catch (error) {\n      toggleError(\n        submitInviteCaregiverError,\n        error.response.data.message || \"Failed to send invite.\",\n        true\n      );\n      caregiverInviteAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n    }\n  });\n\n  // Load and display caregiver profiles\n  try {\n    await reloadCaregiverList(list);\n  } catch (error) {\n    console.error(\"Error loading caregiver profiles:\", error);\n  }\n\n  // Attach event listener to the invite caregiver button\n  const inviteCaregiverButton = document.getElementById(\"inviteCaregiver\");\n  if (inviteCaregiverButton) {\n    inviteCaregiverButton.addEventListener(\"click\", () => {\n      const dialog = document.getElementById(\n        \"inviteCaregiverDialog\"\n      ) as HTMLDialogElement;\n      if (dialog) {\n        dialog.showModal();\n        document.body.style.overflow = \"hidden\"; // Prevent page scroll\n\n        const closeDialog = () => {\n          dialog.close();\n          document.body.style.overflow = \"auto\"; // Restore page scroll\n          resetCaregiverForm.getElement().click();\n        };\n\n        // Close dialog when clicking outside of it\n        const closeOutsideClick = (event: MouseEvent) => {\n          if (event.target === dialog) {\n            closeDialog();\n          }\n        };\n        dialog.addEventListener(\"click\", closeOutsideClick);\n\n        // Close dialog on pressing ESC key\n        const closeOnEsc = (event: KeyboardEvent) => {\n          if (event.key === \"Escape\" && dialog.open) {\n            closeDialog();\n          }\n        };\n        document.addEventListener(\"keydown\", closeOnEsc);\n\n        // Close dialog when clicking the close button\n        const closeDialogBtn = dialog.querySelector(\n          \"#close-dialog-btn\"\n        ) as HTMLButtonElement;\n        if (closeDialogBtn) {\n          closeDialogBtn.addEventListener(\n            \"click\",\n            () => {\n              closeDialog();\n            },\n            { once: true }\n          );\n        }\n\n        // Remove event listeners when the dialog is closed\n        dialog.addEventListener(\n          \"close\",\n          () => {\n            dialog.removeEventListener(\"click\", closeOutsideClick);\n            document.removeEventListener(\"keydown\", closeOnEsc);\n          },\n          { once: true }\n        );\n      } else {\n        console.error(\"Dialog element not found\");\n      }\n    });\n  } else {\n    console.error(\"Invite caregiver button not found\");\n  }\n}\n\n// Function to reload the caregiver list\nasync function reloadCaregiverList(list: WFDynamicList<Caregiver>) {\n  try {\n    const caregivers = await fetchCaregiverProfiles();\n    console.log(\"Fetched caregivers:\", caregivers); // Log the fetched caregivers for debugging\n\n    // Sort caregivers alphabetically by email\n    caregivers.sort((a, b) => a.invite_email.localeCompare(b.invite_email));\n\n    list.setData(caregivers);\n\n    // Log all resend buttons found in the dynamic list\n    const resendButtons = list\n      .getElement()\n      .querySelectorAll(\".resend-invite-btn\");\n    console.log(\"Resend buttons found:\", resendButtons);\n\n    // Log all delete buttons found in the dynamic list\n    const deleteButtons = list\n      .getElement()\n      .querySelectorAll(\".delete-caregiver-btn\");\n    console.log(\"Delete buttons found:\", deleteButtons);\n  } catch (error) {\n    console.error(\"Error reloading caregiver profiles:\", error);\n  }\n}\n","import { WFDynamicList, WFComponent, WFFormComponent } from \"@xatom/core\";\nimport { apiClient } from \"../../api/apiConfig\";\nimport { handleRecaptcha } from \"../../utils/recaptchaUtils\";\nimport { toggleError } from \"../../utils/formUtils\";\n\ninterface CaregivingFor {\n  id: number;\n  caregiver_user_id: number;\n  status: string;\n  invite_status: string;\n  sent_by_email: string;\n}\n\ninterface CaregivingForApiResponse {\n  CaregiverFor: CaregivingFor[];\n}\n\n// Declare forms and reset buttons first\nconst deleteCaregivingForForm = new WFFormComponent(\"#deleteCaregiverForForm\");\n\nconst resetDeleteCaregivingForForm = new WFComponent(\n  \"#resetDeleteCaregivingForForm\"\n);\n\n// Declare success trigger\nconst deleteCaregivingForSuccessTrigger = new WFComponent(\n  \"#deleteCaregivingForSuccessTrigger\"\n);\n\n// Flag to track success state\nlet isDeleteCaregivingForSuccess = false;\n\nresetDeleteCaregivingForForm.on(\"click\", () => {\n  deleteCaregivingForForm.resetForm();\n  deleteCaregivingForForm.showForm();\n  if (isDeleteCaregivingForSuccess) {\n    deleteCaregivingForSuccessTrigger.getElement().click();\n    isDeleteCaregivingForSuccess = false;\n  }\n});\n\nexport async function fetchCaregivingForProfiles(): Promise<CaregivingFor[]> {\n  try {\n    const getCaregivingFor = apiClient.get<CaregivingForApiResponse>(\n      \"/caregivers/caregiving_for\"\n    );\n    const response = await getCaregivingFor.fetch();\n    console.log(\"API response:\", response); // Log the entire response for debugging\n\n    if (response.CaregiverFor && Array.isArray(response.CaregiverFor)) {\n      return response.CaregiverFor;\n    } else {\n      throw new Error(\"Invalid response structure\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching caregiving for profiles:\", error);\n    throw error;\n  }\n}\n\nexport async function initializeDynamicCaregivingForList(\n  containerSelector: string\n) {\n  // Ensure the container exists before initializing the list\n  const container = document.querySelector(containerSelector);\n  if (!container) {\n    console.error(\"Container not found for selector:\", containerSelector);\n    return;\n  }\n\n  // Initialize a new instance of WFDynamicList\n  const list = new WFDynamicList<CaregivingFor>(containerSelector, {\n    rowSelector: \"#caregivingForCard\",\n    loaderSelector: \"#caregivingForLoading\",\n    emptySelector: \"#caregivingForEmpty\",\n  });\n\n  // Customize the rendering of the loader\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({\n      display: \"flex\",\n    });\n    return loaderElement;\n  });\n\n  // Customize the rendering of the empty state\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({\n      display: \"block\",\n    });\n    return emptyElement;\n  });\n\n  // Set initial loading state\n  list.changeLoadingStatus(true);\n\n  let selectedCaregiverId: number | null = null;\n\n  // Customize the rendering of list items\n  list.rowRenderer(({ rowData, rowElement }) => {\n    const caregivingForCard = new WFComponent(rowElement);\n    const caregivingForStatus = caregivingForCard.getChildAsComponent(\n      \"#caregivingForStatus\"\n    );\n    const caregivingForEmail = caregivingForCard.getChildAsComponent(\n      \"#caregivingForEmail\"\n    );\n    const deleteButton = caregivingForCard.getChildAsComponent(\n      \".delete-caregiver-for-btn\"\n    );\n\n    caregivingForEmail.setText(rowData.sent_by_email || \"N/A\");\n    caregivingForStatus.setText(rowData.invite_status || \"Unknown\");\n\n    // Attach event listener to the delete button\n    const dashboardWrapper = new WFComponent(\".page_main\");\n    deleteButton.on(\"click\", () => {\n      dashboardWrapper.setAttribute(\"data-brand\", \"6\");\n\n      const dialog = document.getElementById(\n        \"deleteCaregiverForDialog\"\n      ) as HTMLDialogElement;\n      if (dialog) {\n        selectedCaregiverId = rowData.id; // Store the caregiver ID for later use\n        console.log(\"Selected caregiver ID:\", selectedCaregiverId);\n        dialog.showModal();\n        document.body.style.overflow = \"hidden\"; // Prevent page scroll\n\n        const closeDialog = () => {\n          dialog.close();\n          document.body.style.overflow = \"auto\"; // Restore page scroll\n          resetDeleteCaregivingForForm.getElement().click();\n          dashboardWrapper.setAttribute(\"data-brand\", \"2\");\n        };\n\n        // Close dialog when clicking outside of it\n        dialog.addEventListener(\n          \"click\",\n          (event) => {\n            if (event.target === dialog) {\n              closeDialog();\n            }\n          },\n          { once: true }\n        );\n\n        // Close dialog on pressing ESC key\n        document.addEventListener(\n          \"keydown\",\n          (event) => {\n            if (event.key === \"Escape\" && dialog.open) {\n              closeDialog();\n              dashboardWrapper.setAttribute(\"data-brand\", \"2\");\n            }\n          },\n          { once: true }\n        );\n\n        // Close dialog when clicking the close button\n        const closeDialogBtn = dialog.querySelector(\n          \"#close-dialog-btn\"\n        ) as HTMLButtonElement;\n        if (closeDialogBtn) {\n          closeDialogBtn.addEventListener(\n            \"click\",\n            () => {\n              closeDialog();\n              dashboardWrapper.setAttribute(\"data-brand\", \"2\");\n            },\n            { once: true }\n          );\n        }\n      } else {\n        console.error(\"Dialog element not found\");\n      }\n    });\n\n    // Show the list item\n    rowElement.setStyle({\n      display: \"block\",\n    });\n\n    return rowElement;\n  });\n\n  // Handle delete caregiving for form submission\n  const caregivingForDeletingAnimation = new WFComponent(\n    \"#caregivingForDeletingAnimation\"\n  );\n  const submitDeleteCaregivingForError = new WFComponent(\n    \"#submitDeleteCaregiverError\"\n  );\n  const onDeleteSuccessTrigger = new WFComponent(\n    \"#deleteCaregivingForSuccessTrigger\"\n  );\n\n  deleteCaregivingForForm.onFormSubmit(async (formData, event) => {\n    event.preventDefault(); // Stop the form from submitting normally\n    caregivingForDeletingAnimation.setStyle({ display: \"block\" }); // Show loading animation\n\n    if (!selectedCaregiverId) {\n      console.error(\"No caregiver ID selected\");\n      toggleError(\n        submitDeleteCaregivingForError,\n        \"No caregiver ID selected. Please try again.\",\n        true\n      );\n      caregivingForDeletingAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n      return;\n    }\n\n    console.log(\"Selected caregiver ID before deleting:\", selectedCaregiverId);\n\n    // Handle reCAPTCHA verification\n    const recaptchaAction = \"delete_caregiver\";\n    const isRecaptchaValid = await handleRecaptcha(recaptchaAction);\n\n    if (!isRecaptchaValid) {\n      toggleError(\n        submitDeleteCaregivingForError,\n        \"reCAPTCHA verification failed. Please try again.\",\n        true\n      );\n      caregivingForDeletingAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n      return;\n    }\n\n    // Delete data from the server endpoint\n    try {\n      console.log(\n        `Sending delete request to /caregivers/${selectedCaregiverId}`\n      );\n      const response = await apiClient\n        .delete(`/caregivers/${selectedCaregiverId}`)\n        .fetch();\n\n      console.log(\"Caregiver deleted successfully:\", response);\n      deleteCaregivingForForm.showSuccessState(); // Show success state\n      isDeleteCaregivingForSuccess = true;\n      onDeleteSuccessTrigger.getElement().click(); // Trigger the delete success action\n      caregivingForDeletingAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n\n      // Reload the caregiving for list\n      await reloadCaregivingForList(list);\n    } catch (error) {\n      console.error(\"Error deleting caregiver:\", error);\n      toggleError(\n        submitDeleteCaregivingForError,\n        error.response?.data?.message || \"Failed to delete caregiver.\",\n        true\n      );\n      caregivingForDeletingAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n    }\n  });\n\n  // Load and display caregiving for profiles\n  try {\n    await reloadCaregivingForList(list);\n  } catch (error) {\n    console.error(\"Error loading caregiving for profiles:\", error);\n  }\n}\n\n// Function to reload the caregiving for list\nasync function reloadCaregivingForList(list: WFDynamicList<CaregivingFor>) {\n  try {\n    const caregivingFor = await fetchCaregivingForProfiles();\n    console.log(\"Fetched caregiving for profiles:\", caregivingFor); // Log the fetched caregiving for profiles for debugging\n\n    // Sort caregiving for alphabetically by email\n    caregivingFor.sort((a, b) =>\n      a.sent_by_email.localeCompare(b.sent_by_email)\n    );\n\n    list.setData(caregivingFor);\n    list.changeLoadingStatus(false); // Disable the loading state\n\n    // Log all delete buttons found in the dynamic list\n    const deleteButtons = list\n      .getElement()\n      .querySelectorAll(\".delete-caregiver-for-btn\");\n    console.log(\"Delete buttons found:\", deleteButtons);\n  } catch (error) {\n    console.error(\"Error reloading caregiving for profiles:\", error);\n    list.setData([]); // Set empty data to trigger empty state\n    list.changeLoadingStatus(false); // Disable the loading state\n  }\n}\n"],"names":[],"version":3,"file":"dashboard.aeabe7d6.js.map","sourceRoot":"../"}