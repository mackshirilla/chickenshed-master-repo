{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,Q,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCkBa,EAAA,MAAA,CAAA,EAAA,oBAAA,IAAA,GAhBb,IAAA,EAAA,EAAA,eAGA,EAAA,EAAA,aACA,EAAA,EAAA,YACA,EAAA,EAAA,iBACA,EAAA,EAAA,iBACA,EAAA,EAAA,iBACA,EAAA,EAAA,iBACA,EAAA,EAAA,iBACA,EAAA,EAAA,iBACA,EAAA,EAAA,iBACA,EAAA,EAAA,iBACA,EAAA,EAAA,iBACA,EAAA,EAAA,kBAEO,IAAM,EAAoB,UAC/B,QAAQ,GAAG,CAAC,+BAGZ,AAAA,CAAA,EAAA,EAAA,2BAA0B,AAA1B,IAGA,IAAM,EAAS,AAAA,CAAA,EAAA,EAAA,gBAAgB,AAAhB,IAGT,EAAc,IAAI,EAAA,eAAc,CAMnC,gBAEG,EAAc,IAAI,EAAA,eAAc,CAMnC,gBAEG,EAAgB,IAAI,EAAA,eAAc,CAErC,kBAEG,EAAe,IAAI,EAAA,eAAc,CAMp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","sources":["<anon>","src/modules/forms/profiles/addStudentProfile/index.ts","src/modules/forms/profiles/addStudentProfile/sidebar.ts","src/modules/forms/profiles/addStudentProfile/slider.ts","node_modules/.pnpm/@xatom+slider@1.0.0_@xatom+core@1.0.12/node_modules/@xatom/slider/dist/index.js","src/modules/forms/profiles/addStudentProfile/steps/step1.ts","src/utils/formUtils.ts","node_modules/.pnpm/@xatom+image@1.0.0_@xatom+core@1.0.12/node_modules/@xatom/image/dist/index.js","src/utils/validationUtils.ts","src/utils/recaptchaUtils.ts","src/modules/forms/profiles/addStudentProfile/steps/step2.ts","src/modules/forms/profiles/addStudentProfile/steps/step3.ts","src/modules/forms/profiles/addStudentProfile/steps/step4.ts","src/modules/forms/profiles/addStudentProfile/caregiverDialog.ts","src/modules/forms/profiles/addStudentProfile/steps/step5.ts","src/modules/forms/profiles/addStudentProfile/steps/step6.ts","src/modules/forms/profiles/addStudentProfile/steps/step7.ts","src/modules/forms/profiles/addStudentProfile/steps/step8.ts","src/modules/forms/profiles/addStudentProfile/steps/step9.ts","src/modules/forms/profiles/addStudentProfile/steps/step10.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"8ujNa\":[function(require,module,exports) {\n// src/modules/forms/profiles/addStudentProfile/index.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"addStudentProfile\", ()=>addStudentProfile);\nvar _core = require(\"@xatom/core\");\nvar _sidebar = require(\"./sidebar\");\nvar _slider = require(\"./slider\");\nvar _step1 = require(\"./steps/step1\");\nvar _step2 = require(\"./steps/step2\");\nvar _step3 = require(\"./steps/step3\");\nvar _step4 = require(\"./steps/step4\");\nvar _step5 = require(\"./steps/step5\");\nvar _step6 = require(\"./steps/step6\");\nvar _step7 = require(\"./steps/step7\");\nvar _step8 = require(\"./steps/step8\");\nvar _step9 = require(\"./steps/step9\");\nvar _step10 = require(\"./steps/step10\");\nconst addStudentProfile = async ()=>{\n    console.log(\"Initialize Add Student Form\");\n    // Initialize the sidebar indicators\n    (0, _sidebar.initializeSidebarIndicators)();\n    // Initialize the slider\n    const slider = (0, _slider.initializeSlider)();\n    // Initialize form components for all steps\n    const formStepOne = new (0, _core.WFFormComponent)(\"#formStepOne\");\n    const formStepTwo = new (0, _core.WFFormComponent)(\"#formStepTwo\");\n    const formStepThree = new (0, _core.WFFormComponent)(\"#formStepThree\");\n    const formStepFive = new (0, _core.WFFormComponent)(\"#formStepFive\");\n    const formStepSix = new (0, _core.WFFormComponent)(\"#formStepSix\");\n    const formStepSeven = new (0, _core.WFFormComponent)(\"#formStepSeven\");\n    // Function to collect form data from each step\n    const getFormData = ()=>{\n        const formStepOneData = formStepOne.getFormData();\n        const formStepTwoData = formStepTwo.getFormData();\n        const formStepThreeData = formStepThree.getFormData();\n        const formStepFiveData = formStepFive.getFormData();\n        const formStepSixData = formStepSix.getFormData();\n        const formStepSevenData = formStepSeven.getFormData();\n        // Retrieve the existing student's ID from local storage, if any\n        const existingStudent = localStorage.getItem(\"current_student\");\n        const studentId = existingStudent ? JSON.parse(existingStudent).id : null;\n        // Consolidate all form data\n        const formData = {\n            ...formStepOneData,\n            ...formStepTwoData,\n            ...formStepThreeData,\n            ...formStepFiveData,\n            ...formStepSixData,\n            ...formStepSevenData\n        };\n        // Add the student ID to the form data if available\n        if (studentId) formData.student_id = studentId;\n        return formData;\n    };\n    // Initialize all steps\n    (0, _step1.initializeStepOne)(slider);\n    (0, _step2.initializeStepTwo)(slider);\n    (0, _step3.initializeStepThree)(slider);\n    (0, _step4.initializeStepFour)(slider);\n    (0, _step5.initializeStepFive)(slider);\n    (0, _step6.initializeStepSix)(slider);\n    (0, _step7.initializeStepSeven)(slider);\n    (0, _step8.initializeStepEight)(slider, getFormData); // Pass both slider and getFormData to Step Eight\n    (0, _step9.initializeStepNine)(slider);\n    (0, _step10.initializeStepTen)(slider);\n};\n\n},{\"@xatom/core\":\"65YBq\",\"./sidebar\":\"fusS1\",\"./slider\":\"iPmwm\",\"./steps/step1\":\"3tLjf\",\"./steps/step2\":\"8CGBG\",\"./steps/step3\":\"9E92H\",\"./steps/step4\":\"kZzhc\",\"./steps/step5\":\"lk6df\",\"./steps/step6\":\"hSoAl\",\"./steps/step7\":\"frLQ8\",\"./steps/step8\":\"4vVew\",\"./steps/step9\":\"iPCZP\",\"./steps/step10\":\"gjbWs\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"fusS1\":[function(require,module,exports) {\n// src/modules/forms/profiles/addStudentProfile/sidebar.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeSidebarIndicators\", ()=>initializeSidebarIndicators);\nparcelHelpers.export(exports, \"setActiveStep\", ()=>setActiveStep);\nparcelHelpers.export(exports, \"unsetActiveStep\", ()=>unsetActiveStep);\nparcelHelpers.export(exports, \"markStepAsCompleted\", ()=>markStepAsCompleted);\nparcelHelpers.export(exports, \"unmarkStepAsCompleted\", ()=>unmarkStepAsCompleted);\nvar _core = require(\"@xatom/core\");\nvar _authConfig = require(\"../../../../auth/authConfig\");\nconst initializeSidebarIndicators = ()=>{\n    const steps = [\n        {\n            id: \"sidebarStepOne\",\n            index: 1\n        },\n        {\n            id: \"sidebarStepTwo\",\n            index: 2\n        },\n        {\n            id: \"sidebarStepThree\",\n            index: 3\n        },\n        {\n            id: \"sidebarStepFour\",\n            index: 4\n        },\n        {\n            id: \"sidebarStepFive\",\n            index: 5\n        },\n        {\n            id: \"sidebarStepSix\",\n            index: 6\n        },\n        {\n            id: \"sidebarStepSeven\",\n            index: 7\n        },\n        {\n            id: \"sidebarStepEight\",\n            index: 8\n        }\n    ];\n    // Set sidebar first name from userAuth\n    const firstNameText = new (0, _core.WFComponent)(\"#firstNameText\");\n    const user = (0, _authConfig.userAuth).getUser();\n    if (user && user.profile && user.profile.first_name) firstNameText.setText(user.profile.first_name);\n    else firstNameText.setText(\"Friend\");\n    // Initialize step components with click listeners\n    steps.forEach((step)=>{\n        const stepComponent = new (0, _core.WFComponent)(`#${step.id}`);\n        let isCompleted = false; // Track the completed state\n        stepComponent.on(\"click\", ()=>{\n            if (isCompleted) {\n                isCompleted = false;\n                stepComponent.removeCssClass(\"is-completed\");\n            // Optionally, trigger reverse animation here\n            } else {\n                isCompleted = true;\n                stepComponent.addCssClass(\"is-completed\");\n            // Optionally, trigger completed animation here\n            }\n        });\n    });\n};\nconst setActiveStep = (stepNumber)=>{\n    const stepId = getStepId(stepNumber);\n    if (!stepId) {\n        console.warn(`No sidebar step defined for step number ${stepNumber}`);\n        return;\n    }\n    const stepComponent = new (0, _core.WFComponent)(`#${stepId}`);\n    stepComponent.addCssClass(\"is-active\");\n};\nconst unsetActiveStep = (stepNumber)=>{\n    const stepId = getStepId(stepNumber);\n    if (!stepId) {\n        console.warn(`No sidebar step defined for step number ${stepNumber}`);\n        return;\n    }\n    const stepComponent = new (0, _core.WFComponent)(`#${stepId}`);\n    stepComponent.removeCssClass(\"is-active\");\n};\nconst markStepAsCompleted = (stepNumber)=>{\n    const stepId = getStepId(stepNumber);\n    if (!stepId) {\n        console.warn(`No sidebar step defined for step number ${stepNumber}`);\n        return;\n    }\n    const step = new (0, _core.WFComponent)(`#${stepId}`);\n    step.getElement().click(); // Programmatically trigger the click event to mark as complete\n};\nconst unmarkStepAsCompleted = (stepNumber)=>{\n    const stepId = getStepId(stepNumber);\n    if (!stepId) {\n        console.warn(`No sidebar step defined for step number ${stepNumber}`);\n        return;\n    }\n    const step = new (0, _core.WFComponent)(`#${stepId}`);\n    step.getElement().click(); // Programmatically trigger the click event to unmark as complete\n};\n// Helper function to get the ID string for a step\nconst getStepId = (stepNumber)=>{\n    const stepMap = {\n        1: \"sidebarStepOne\",\n        2: \"sidebarStepTwo\",\n        3: \"sidebarStepThree\",\n        4: \"sidebarStepFour\",\n        5: \"sidebarStepFive\",\n        6: \"sidebarStepSix\",\n        7: \"sidebarStepSeven\",\n        8: \"sidebarStepEight\"\n    };\n    return stepMap[stepNumber] || null;\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../../../../auth/authConfig\":\"dHwPR\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"iPmwm\":[function(require,module,exports) {\n// src/modules/forms/profiles/addStudentProfile/slider.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeSlider\", ()=>initializeSlider);\nvar _slider = require(\"@xatom/slider\");\nvar _sidebar = require(\"./sidebar\");\nconst initializeSlider = ()=>{\n    const slider = new (0, _slider.WFSlider)(\".multi-step_form_slider\");\n    // Initialize the slider's slide change handler using imported functions\n    slider.onSlideChange((activeIndex, prevIndex)=>{\n        console.log(`Slide changed from ${prevIndex} to ${activeIndex}`);\n        // Set the active step in the sidebar\n        (0, _sidebar.setActiveStep)(activeIndex + 1);\n        if (prevIndex !== -1 && prevIndex < activeIndex) // Moving forward: mark the previous step as completed\n        (0, _sidebar.markStepAsCompleted)(prevIndex + 1);\n        if (prevIndex !== -1 && prevIndex > activeIndex) // Moving backward: unmark steps beyond the current\n        (0, _sidebar.unmarkStepAsCompleted)(prevIndex + 1);\n    });\n    // Set the initial active sidebar step\n    (0, _sidebar.setActiveStep)(slider.getActiveSlideIndex() + 1);\n    return slider;\n};\n\n},{\"@xatom/slider\":\"ejxGx\",\"./sidebar\":\"fusS1\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"ejxGx\":[function(require,module,exports) {\nvar e = require(\"1a87f3bc23b90fa3\"), s = require(\"37b5fd8189a9f4c7\");\nvar t, i, r, l, d = {};\nt = d, i = \"WFSlider\", r = ()=>o, Object.defineProperty(t, i, {\n    get: r,\n    set: l,\n    enumerable: !0,\n    configurable: !0\n});\nconst n = window.jQuery;\nclass o extends e.WFComponent {\n    _sliderConfig = {};\n    _slides = [];\n    _defaultSwipeDisabled = !1;\n    _index = 0;\n    _listeners = new Map;\n    constructor(e){\n        super(e), this.init();\n    }\n    init() {\n        this._defaultSwipeDisabled = \"true\" === this.getAttribute(\"data-disable-swipe\"), this._sliderConfig = n(this.getElement()).data()[\".wSlider\"], this._slides = Array.from(this._sliderConfig.slides).map((s)=>new e.WFComponent(s)), this._mask = new e.WFComponent(this._sliderConfig.mask[0]), this._nav = new e.WFComponent(this._sliderConfig.nav[0]), this._left = new e.WFComponent(this._sliderConfig.left[0]), this._right = new e.WFComponent(this._sliderConfig.right[0]), function(e, s) {\n            if (!document.styleSheets) return;\n            if (0 == document.getElementsByTagName(\"head\").length) return;\n            let t, i;\n            if (document.styleSheets.length > 0) {\n                for(var r = 0, l = document.styleSheets.length; r < l; r++)if (!document.styleSheets[r].disabled) {\n                    var d = document.styleSheets[r].media;\n                    if (i = typeof d, \"string\" === i ? \"\" !== d && -1 === d.indexOf(\"screen\") || (t = document.styleSheets[r]) : \"object\" == i && (\"\" !== d.mediaText && -1 === d.mediaText.indexOf(\"screen\") || (t = document.styleSheets[r])), void 0 !== t) break;\n                }\n            }\n            if (void 0 === t) {\n                var n = document.createElement(\"style\");\n                for(n.type = \"text/css\", document.getElementsByTagName(\"head\")[0].appendChild(n), r = 0; r < document.styleSheets.length; r++)document.styleSheets[r].disabled || (t = document.styleSheets[r]);\n                i = typeof t.media;\n            }\n            if (\"string\" === i) {\n                for(r = 0, l = t.rules.length; r < l; r++)if (t.rules[r].selectorText && t.rules[r].selectorText.toLowerCase() == e.toLowerCase()) return void (t.rules[r].style.cssText = s);\n                t.addRule(e, s);\n            } else if (\"object\" === i) {\n                var o = t.cssRules ? t.cssRules.length : 0;\n                for(r = 0; r < o; r++)if (t.cssRules[r].selectorText && t.cssRules[r].selectorText.toLowerCase() == e.toLowerCase()) return void (t.cssRules[r].style.cssText = s);\n                t.insertRule(e + \"{\" + s + \"}\", o);\n            }\n        }(\".xa-slider-disable\", \"display:none !important;\");\n        const s = this;\n        Object.defineProperty(s._sliderConfig, \"index\", {\n            set: function(e) {\n                s._index = e, s._triggerOnChange();\n            },\n            get: function() {\n                return s._index;\n            }\n        }), this.refereshSlides();\n    }\n    reloadWFSlider() {\n        window.Webflow.require(\"slider\").destroy(), window.Webflow.require(\"slider\").redraw(), window.Webflow.require(\"slider\").ready();\n    }\n    refereshSlides() {\n        this._mask.getChildAsComponents(\".w-slide\").forEach((e)=>e.remove()), this._slides.reverse().forEach((e)=>{\n            this._mask.getElement().prepend(e.getElement());\n        }), this._slides.reverse(), this.reloadWFSlider();\n    }\n    getActiveSlide() {\n        return this._slides[this._index];\n    }\n    getAllSlides() {\n        return [\n            ...this._slides\n        ];\n    }\n    getSlideByIndex(e) {\n        return this._slides[e];\n    }\n    getActiveSlideIndex() {\n        return this._index;\n    }\n    getPreviousSlideIndex() {\n        return this._sliderConfig.previous;\n    }\n    goNext() {\n        this._sliderConfig.right.click();\n    }\n    goPrevious() {\n        this._sliderConfig.left.click();\n    }\n    goToIndex(e) {\n        e >= 0 && e < this._slides.length && (console.log(e), n(this._sliderConfig.nav.children()[e]).click());\n    }\n    addSlide(s, t = {}) {\n        const i = t.index, r = t.cssClass, l = (0, e.createComponent)(\"div\");\n        l.addCssClass(\"w-slide\"), r && l.addCssClass(r), l.appendChild(s);\n        const d = \"number\" != typeof i ? -1 : i, n = this._slides;\n        d >= 0 && d <= n.length ? n.splice(i, 0, l) : n.push(l), this._slides = [\n            ...n\n        ], this.refereshSlides();\n    }\n    removeSlide(e) {\n        const s = [\n            ...this._slides\n        ];\n        e >= 0 && e < s.length && s.splice(e, 1), this._slides = [\n            ...s\n        ], console.log(this._slides), this.refereshSlides();\n    }\n    getSlideNav() {\n        return this._nav;\n    }\n    setSlideNavigationState(e) {\n        e ? (this._left.removeCssClass(\"xa-slider-disable\"), this._right.removeCssClass(\"xa-slider-disable\"), this._nav.removeCssClass(\"xa-slider-disable\"), this.setAttribute(\"data-disable-swipe\", this._defaultSwipeDisabled ? \"true\" : \"false\")) : (this._left.addCssClass(\"xa-slider-disable\"), this._right.addCssClass(\"xa-slider-disable\"), this._nav.addCssClass(\"xa-slider-disable\"), this.setAttribute(\"data-disable-swipe\", \"true\")), this.reloadWFSlider();\n    }\n    onSlideChange(e) {\n        const t = (0, s.v4)();\n        return this._listeners.set(t, e), ()=>{\n            this._listeners.delete(t);\n        };\n    }\n    _triggerOnChange() {\n        Array.from(this._listeners.values()).forEach((e)=>{\n            e(this._index, this._sliderConfig.previous);\n        });\n    }\n    getConfig() {\n        return this._sliderConfig;\n    }\n}\nvar a, h;\na = module.exports, h = d, Object.keys(h).forEach(function(e) {\n    \"default\" === e || \"__esModule\" === e || a.hasOwnProperty(e) || Object.defineProperty(a, e, {\n        enumerable: !0,\n        get: function() {\n            return h[e];\n        }\n    });\n});\n\n},{\"1a87f3bc23b90fa3\":\"65YBq\",\"37b5fd8189a9f4c7\":\"faiuA\"}],\"3tLjf\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeStepOne\", ()=>initializeStepOne);\nvar _core = require(\"@xatom/core\");\nvar _formUtils = require(\"../../../../../utils/formUtils\");\nvar _validationUtils = require(\"../../../../../utils/validationUtils\");\nvar _recaptchaUtils = require(\"../../../../../utils/recaptchaUtils\");\nvar _apiConfig = require(\"../../../../../api/apiConfig\");\nvar _authConfig = require(\"../../../../../auth/authConfig\");\nconst initializeStepOne = (slider)=>{\n    console.log(\"Initialize Add Student Form\");\n    // Set sidebar first name from userAuth\n    const firstNameText = new (0, _core.WFComponent)(\"#firstNameText\");\n    firstNameText.setText((0, _authConfig.userAuth).getUser().profile.first_name);\n    console.log(`First name set to: ${(0, _authConfig.userAuth).getUser().profile.first_name}`);\n    // Step 1 Form Initialization\n    const formStepOne = new (0, _core.WFFormComponent)(\"#formStepOne\");\n    // Check if current_student exists in local storage\n    const existingStudent = localStorage.getItem(\"current_student\");\n    console.log(`Existing Student at Initialization: ${existingStudent}`);\n    if (existingStudent) try {\n        const student = JSON.parse(existingStudent);\n        console.log(\"Parsed existing student data:\", student);\n        formStepOne.setFromData({\n            first_name: student.first_name,\n            last_name: student.last_name,\n            email: student.email,\n            phone: student.phone,\n            send_texts: student.send_texts\n        });\n    } catch (parseError) {\n        console.error(\"Error parsing existing_student:\", parseError);\n    }\n    // Define the fields with associated validation rules and error messages\n    const fieldsStepOne = [\n        {\n            input: new (0, _core.WFComponent)(\"#firstNameInput\"),\n            error: new (0, _core.WFComponent)(\"#firstNameInputError\"),\n            validationFn: (0, _validationUtils.validateNotEmpty),\n            message: \"First name is required\"\n        },\n        {\n            input: new (0, _core.WFComponent)(\"#lastNameInput\"),\n            error: new (0, _core.WFComponent)(\"#lastNameInputError\"),\n            validationFn: (0, _validationUtils.validateNotEmpty),\n            message: \"Last name is required\"\n        },\n        {\n            input: new (0, _core.WFComponent)(\"#emailInput\"),\n            error: new (0, _core.WFComponent)(\"#emailInputError\"),\n            validationFn: (0, _validationUtils.validateEmailOptional),\n            message: \"Please enter a valid email address\"\n        },\n        {\n            input: new (0, _core.WFComponent)(\"#phoneNumberInput\"),\n            error: new (0, _core.WFComponent)(\"#phoneNumberInputError\"),\n            validationFn: (0, _validationUtils.validatePhoneNumberOptional),\n            message: \"Please enter a valid phone number or leave it empty\"\n        }\n    ];\n    // Auto-format phone number input to (xxx) xxx-xxxx\n    const phoneNumberInput = new (0, _core.WFComponent)(\"#phoneNumberInput\");\n    phoneNumberInput.on(\"input\", ()=>{\n        const inputElement = phoneNumberInput.getElement();\n        const cursorPosition = inputElement.selectionStart;\n        const originalValue = inputElement.value;\n        inputElement.value = formatPhoneNumber(inputElement.value);\n        const formattedLength = inputElement.value.length;\n        const cleanedLength = inputElement.value.replace(/\\D/g, \"\").length;\n        inputElement.setSelectionRange(cursorPosition + (formattedLength - cleanedLength), cursorPosition + (formattedLength - cleanedLength));\n        console.log(`Phone number formatted from \"${originalValue}\" to \"${inputElement.value}\"`);\n    });\n    // Initialize validation for each field\n    fieldsStepOne.forEach(({ input, error, validationFn, message })=>{\n        input.on(\"blur\", ()=>{\n            const errorMessage = (0, _formUtils.createValidationFunction)(input, validationFn, message)();\n            if (errorMessage) (0, _formUtils.toggleError)(error, errorMessage, true);\n            else (0, _formUtils.toggleError)(error, \"\", false);\n        });\n        (0, _formUtils.setupValidation)(input, error, (0, _formUtils.createValidationFunction)(input, validationFn, message), new (0, _core.WFComponent)(\"#submitStepOneError\"));\n    });\n    // Handle form submission for Step 1\n    formStepOne.onFormSubmit(async (formData, event)=>{\n        event.preventDefault();\n        console.log(\"Form submission initiated.\");\n        const stepOneRequestingAnimation = new (0, _core.WFComponent)(\"#stepOneRequestingAnimation\");\n        stepOneRequestingAnimation.setStyle({\n            display: \"block\"\n        });\n        let isFormValid = true;\n        fieldsStepOne.forEach(({ input, error, validationFn, message })=>{\n            const errorMessage = (0, _formUtils.createValidationFunction)(input, validationFn, message)();\n            if (errorMessage) {\n                (0, _formUtils.toggleError)(error, errorMessage, true);\n                isFormValid = false;\n            } else (0, _formUtils.toggleError)(error, \"\", false);\n        });\n        if (!isFormValid) {\n            (0, _formUtils.toggleError)(new (0, _core.WFComponent)(\"#submitStepOneError\"), \"Please correct all errors above.\", true);\n            stepOneRequestingAnimation.setStyle({\n                display: \"none\"\n            });\n            return;\n        }\n        const existingStudentNow = localStorage.getItem(\"current_student\");\n        if (existingStudentNow) {\n            try {\n                const student = JSON.parse(existingStudentNow);\n                const formMatchesExisting = compareFormDataWithStudent(formData, student);\n                if (formMatchesExisting) {\n                    slider.goNext();\n                    stepOneRequestingAnimation.setStyle({\n                        display: \"none\"\n                    });\n                    return;\n                } else {\n                    const updatedProfile = await updateStudentProfile(student.id, formData);\n                    localStorage.setItem(\"current_student\", JSON.stringify(updatedProfile));\n                    slider.goNext();\n                }\n            } catch (error) {\n                const errorMessage = error.response?.data?.message || error.message || \"Failed to update student profile.\";\n                (0, _formUtils.toggleError)(new (0, _core.WFComponent)(\"#submitStepOneError\"), errorMessage, true);\n            } finally{\n                stepOneRequestingAnimation.setStyle({\n                    display: \"none\"\n                });\n            }\n            return;\n        }\n        const recaptchaAction = \"create_account\";\n        const isRecaptchaValid = await (0, _recaptchaUtils.handleRecaptcha)(recaptchaAction);\n        if (!isRecaptchaValid) {\n            (0, _formUtils.toggleError)(new (0, _core.WFComponent)(\"#submitStepOneError\"), \"reCAPTCHA verification failed. Please try again.\", true);\n            stepOneRequestingAnimation.setStyle({\n                display: \"none\"\n            });\n            return;\n        }\n        try {\n            const response = await (0, _apiConfig.apiClient).post(\"/profiles/students/create-student\", {\n                data: formData\n            }).fetch();\n            if (response.status === \"success\" && response.profile) {\n                localStorage.setItem(\"current_student\", JSON.stringify(response.profile));\n                slider.goNext();\n            } else throw new Error(response.message || \"Failed to create student profile.\");\n        } catch (error) {\n            const errorMessage = error.response?.data?.message || error.message || \"Failed to create student profile.\";\n            (0, _formUtils.toggleError)(new (0, _core.WFComponent)(\"#submitStepOneError\"), errorMessage, true);\n        } finally{\n            stepOneRequestingAnimation.setStyle({\n                display: \"none\"\n            });\n        }\n    });\n};\nfunction formatPhoneNumber(value) {\n    const cleaned = value.replace(/\\D/g, \"\");\n    return cleaned.length <= 3 ? cleaned : cleaned.length <= 6 ? `(${cleaned.slice(0, 3)}) ${cleaned.slice(3)}` : `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6, 10)}`;\n}\nfunction compareFormDataWithStudent(formData, student) {\n    return formData.first_name === student.first_name && formData.last_name === student.last_name && formData.email === student.email && formData.phone === student.phone && formData.send_texts === student.send_texts;\n}\nasync function updateStudentProfile(id, formData) {\n    const response = await (0, _apiConfig.apiClient).post(\"/profiles/students/create-student-updated\", {\n        data: {\n            ...formData,\n            id\n        }\n    }).fetch();\n    if (response.status === \"success\" && response.profile) return response.profile;\n    else throw new Error(response.message || \"Failed to update student profile.\");\n}\n\n},{\"@xatom/core\":\"65YBq\",\"../../../../../utils/formUtils\":\"gepHz\",\"../../../../../utils/validationUtils\":\"gu2z7\",\"../../../../../utils/recaptchaUtils\":\"Jsdel\",\"../../../../../api/apiConfig\":\"dUmIV\",\"../../../../../auth/authConfig\":\"dHwPR\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"gepHz\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"toggleError\", ()=>toggleError);\nparcelHelpers.export(exports, \"setupValidation\", ()=>setupValidation);\nparcelHelpers.export(exports, \"createValidationFunction\", ()=>createValidationFunction);\nparcelHelpers.export(exports, \"createCheckboxValidationFunction\", ()=>createCheckboxValidationFunction);\nparcelHelpers.export(exports, \"setupCheckboxValidation\", ()=>setupCheckboxValidation);\nparcelHelpers.export(exports, \"validateSelectedSessions\", ()=>validateSelectedSessions);\n/**\n * Updates the user's profile picture URL in the authentication system.\n * @param {string} imageUrl - The URL of the uploaded image.\n */ parcelHelpers.export(exports, \"setProfilePicUrl\", ()=>setProfilePicUrl);\n/**\n * Handles file upload and displays the uploaded image.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */ /**\n * Handles file upload and displays the uploaded image.\n * Only JPEG files less than 2 MB can be uploaded.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */ parcelHelpers.export(exports, \"setupFileUpload\", ()=>setupFileUpload);\nparcelHelpers.export(exports, \"formatPhoneNumber\", ()=>formatPhoneNumber);\nvar _core = require(\"@xatom/core\");\nvar _image = require(\"@xatom/image\");\nvar _apiConfig = require(\"../api/apiConfig\");\nvar _authConfig = require(\"../auth/authConfig\");\nfunction toggleError(errorMessageComponent, message, show) {\n    errorMessageComponent.updateTextViaAttrVar({\n        text: show ? message : \"\"\n    });\n    errorMessageComponent.setStyle({\n        display: show ? \"flex\" : \"none\"\n    });\n}\nfunction setupValidation(inputComponent, errorComponent, validate, requestErrorComponent // Optional component to clear on input change\n) {\n    const validateAndUpdate = ()=>{\n        const errorMessage = validate();\n        toggleError(errorComponent, errorMessage, !!errorMessage);\n        if (requestErrorComponent && errorMessage === \"\") // Clear request error message when the user is correcting the input\n        toggleError(requestErrorComponent, \"\", false);\n    };\n    // Attach event listeners for real-time validation\n    inputComponent.on(\"input\", validateAndUpdate);\n    inputComponent.on(\"blur\", validateAndUpdate);\n    inputComponent.on(\"change\", validateAndUpdate);\n}\nfunction createValidationFunction(inputComponent, validationFn, errorMessage) {\n    return ()=>{\n        const inputElement = inputComponent.getElement();\n        const isValid = validationFn(inputElement.value);\n        return isValid ? \"\" : errorMessage;\n    };\n}\nfunction createCheckboxValidationFunction(checkboxComponent, errorMessage) {\n    return ()=>{\n        const checkbox = checkboxComponent.getElement();\n        return checkbox.checked ? \"\" : errorMessage;\n    };\n}\nfunction setupCheckboxValidation(checkboxComponent, checkboxErrorComponent, errorMessage) {\n    const validate = createCheckboxValidationFunction(checkboxComponent, errorMessage);\n    setupValidation(checkboxComponent, checkboxErrorComponent, validate);\n}\nfunction validateSelectedSessions(selectedSessions, errorMessageComponent, errorMessage) {\n    const isValid = selectedSessions.length > 0 && selectedSessions.some((session)=>session.studentIds.length > 0);\n    if (!isValid) toggleError(errorMessageComponent, errorMessage, true);\n    else toggleError(errorMessageComponent, \"\", false);\n    return isValid;\n}\nfunction setProfilePicUrl(imageUrl) {\n    const user = (0, _authConfig.userAuth).getUser();\n    if (user && user.profile) {\n        // Ensure the profile_picture object exists\n        user.profile.profile_pic = user.profile.profile_pic || {\n            url: \"\"\n        };\n        // Set the profile picture URL\n        user.profile.profile_pic.url = imageUrl;\n        (0, _authConfig.userAuth).setUser(user);\n        localStorage.setItem(\"auth_user\", JSON.stringify(user));\n    }\n}\nfunction setupFileUpload(fileInput, fileInputError, fileInputSuccess, uploadEndpoint) {\n    const profilePictureImage = new (0, _image.WFImage)(\"#profilePictureImage\");\n    const uploadAnimation = new (0, _core.WFComponent)(\"#uploadAnimation\");\n    const overlay = new (0, _core.WFComponent)(\".drop-zone\");\n    let dragCounter = 0;\n    return new Promise((resolve)=>{\n        const handleFile = (file)=>{\n            // Validate file type and size\n            const validTypes = [\n                \"image/jpeg\",\n                \"image/jpg\"\n            ];\n            const maxSizeInBytes = 2097152; // 2 MB\n            if (!validTypes.includes(file.type) && !/\\.(jpg|jpeg)$/i.test(file.name)) {\n                const errorMessage = \"Only JPEG images are allowed.\";\n                toggleError(fileInputError, errorMessage, true);\n                // Reset file input value\n                fileInput.getElement().value = \"\";\n                return;\n            }\n            if (file.size > maxSizeInBytes) {\n                const errorMessage = \"File size must be less than 2 MB.\";\n                toggleError(fileInputError, errorMessage, true);\n                // Reset file input value\n                fileInput.getElement().value = \"\";\n                return;\n            }\n            // Show upload animation immediately\n            uploadAnimation.setStyle({\n                display: \"flex\"\n            });\n            // Hide error and success messages\n            fileInputError.setStyle({\n                display: \"none\"\n            });\n            fileInputSuccess.setStyle({\n                display: \"none\"\n            });\n            const reader = new FileReader();\n            // Display preview image as soon as the file is loaded into memory\n            reader.onload = (event)=>{\n                // Set the preview image for the profile picture\n                const result = event.target?.result;\n                profilePictureImage.setImage(result);\n                // Hide overlay once the image is set\n                overlay.setStyle({\n                    display: \"none\"\n                });\n            };\n            reader.readAsDataURL(file);\n            const formData = new FormData();\n            formData.append(\"profile_picture\", file);\n            const existingStudent = localStorage.getItem(\"current_student\");\n            if (existingStudent) {\n                const student = JSON.parse(existingStudent);\n                formData.append(\"student_profile_id\", student.id.toString());\n            }\n            // Send the file to the server\n            const postRequest = (0, _apiConfig.apiClient).post(uploadEndpoint, {\n                data: formData\n            });\n            postRequest.onData((response)=>{\n                if (response.status === \"success\") {\n                    const imageUrl = response.url.profile_pic.url;\n                    // Update the profile picture URL in the user session and local storage\n                    setProfilePicUrl(imageUrl);\n                    // Update the image for other parts of the UI as well\n                    profilePictureImage.setImage(imageUrl);\n                    // Store the URL in local storage\n                    localStorage.setItem(\"image_upload\", imageUrl);\n                    // Show success message and hide upload animation\n                    fileInputSuccess.setStyle({\n                        display: \"flex\"\n                    });\n                    uploadAnimation.setStyle({\n                        display: \"none\"\n                    });\n                    // Resolve with the uploaded image URL\n                    resolve(imageUrl);\n                } else {\n                    const errorMessage = \"Failed to upload profile picture.\";\n                    toggleError(fileInputError, errorMessage, true);\n                    uploadAnimation.setStyle({\n                        display: \"none\"\n                    });\n                    overlay.setStyle({\n                        display: \"none\"\n                    });\n                    dragCounter = 0;\n                    // Reset file input value\n                    fileInput.getElement().value = \"\";\n                }\n            });\n            postRequest.onError((error)=>{\n                let errorMessage = \"An error occurred during image upload.\";\n                if (error.response && error.response.data) errorMessage = error.response.data.message || errorMessage;\n                else if (error.message) errorMessage = error.message;\n                // Show error message and hide upload animation\n                toggleError(fileInputError, errorMessage, true);\n                uploadAnimation.setStyle({\n                    display: \"none\"\n                });\n                overlay.setStyle({\n                    display: \"none\"\n                });\n                dragCounter = 0;\n                // Reset file input value\n                fileInput.getElement().value = \"\";\n            });\n            // Make the API call\n            postRequest.fetch();\n        };\n        // Event listener for file input changes\n        fileInput.on(\"change\", ()=>{\n            const file = fileInput.getElement().files?.[0];\n            if (file) handleFile(file);\n        });\n        // Event listeners for drag-and-drop\n        const dragZoneElement = document.body;\n        dragZoneElement.addEventListener(\"dragenter\", (event)=>{\n            event.preventDefault();\n            dragCounter++;\n            if (dragCounter === 1) overlay.setStyle({\n                display: \"flex\"\n            });\n        });\n        dragZoneElement.addEventListener(\"dragleave\", ()=>{\n            dragCounter--;\n            if (dragCounter <= 0) {\n                overlay.setStyle({\n                    display: \"none\"\n                });\n                dragCounter = 0;\n            }\n        });\n        dragZoneElement.addEventListener(\"dragover\", (event)=>{\n            event.preventDefault();\n        });\n        dragZoneElement.addEventListener(\"drop\", (event)=>{\n            event.preventDefault();\n            const files = event.dataTransfer?.files;\n            if (files?.length) handleFile(files[0]);\n            overlay.setStyle({\n                display: \"none\"\n            });\n            dragCounter = 0;\n        });\n    });\n}\nconst formatPhoneNumber = (value)=>{\n    const cleaned = value.replace(/\\D/g, \"\"); // Remove all non-digit characters\n    if (cleaned.length <= 3) return cleaned;\n    else if (cleaned.length <= 6) return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3)}`;\n    else if (cleaned.length <= 10) return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6)}`;\n    else // If more than 10 digits, truncate the extra digits\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6, 10)}`;\n};\n\n},{\"@xatom/core\":\"65YBq\",\"@xatom/image\":\"bavwf\",\"../api/apiConfig\":\"dUmIV\",\"../auth/authConfig\":\"dHwPR\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"bavwf\":[function(require,module,exports) {\nvar t = require(\"d023971cccd819e3\");\nvar e, r, s, i, o, n, u = {};\ne = u, r = \"WFImage\", s = ()=>c, Object.defineProperty(e, r, {\n    get: s,\n    set: i,\n    enumerable: !0,\n    configurable: !0\n});\nclass c extends t.WFComponent {\n    constructor(t){\n        super(t);\n    }\n    getImageConfig() {\n        return this._config;\n    }\n    getSrc() {\n        return this.getAttribute(\"src\");\n    }\n    getSizes() {\n        return this.getAttribute(\"sizes\");\n    }\n    getSrcSet() {\n        return this.getAttribute(\"srcset\");\n    }\n    getLoading() {\n        return this.getAttribute(\"loading\");\n    }\n    onLoad(t) {\n        return this.on(\"load\", t), ()=>{\n            this.off(\"load\", t);\n        };\n    }\n    onLoadError(t) {\n        return this.on(\"error\", t), ()=>{\n            this.off(\"error\", t);\n        };\n    }\n    setImage(t) {\n        if (\"string\" == typeof t) this.setAttribute(\"src\", t), this.removeAttribute(\"srcset\"), this.removeAttribute(\"sizes\");\n        else {\n            if (this.setAttribute(\"src\", t.src), \"object\" == typeof t && t.srcSet && t.srcSet.length && t.sizes && t.sizes.length) {\n                const e = t.srcSet.map((t)=>`${t.url} ${t.size}`).join(\", \");\n                this.setAttribute(\"srcset\", e);\n            } else this.removeAttribute(\"srcset\"), this.removeAttribute(\"sizes\");\n            t.loading && this.setAttribute(\"loading\", t.loading);\n        }\n    }\n}\no = module.exports, n = u, Object.keys(n).forEach(function(t) {\n    \"default\" === t || \"__esModule\" === t || o.hasOwnProperty(t) || Object.defineProperty(o, t, {\n        enumerable: !0,\n        get: function() {\n            return n[t];\n        }\n    });\n});\n\n},{\"d023971cccd819e3\":\"65YBq\"}],\"gu2z7\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"validateNotEmpty\", ()=>validateNotEmpty);\nparcelHelpers.export(exports, \"validateEmail\", ()=>validateEmail);\nparcelHelpers.export(exports, \"validateEmailOptional\", ()=>validateEmailOptional);\nparcelHelpers.export(exports, \"validatePasswordRequirements\", ()=>validatePasswordRequirements);\nparcelHelpers.export(exports, \"validateCheckbox\", ()=>validateCheckbox);\nparcelHelpers.export(exports, \"validatePasswordsMatch\", ()=>validatePasswordsMatch);\nparcelHelpers.export(exports, \"validateSelectField\", ()=>validateSelectField);\nparcelHelpers.export(exports, \"validatePhoneNumber\", ()=>validatePhoneNumber);\nparcelHelpers.export(exports, \"validatePhoneNumberOptional\", ()=>validatePhoneNumberOptional);\nfunction validateNotEmpty(input) {\n    return input !== undefined && input.trim() !== \"\";\n}\nfunction validateEmail(input) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(input);\n}\nconst validateEmailOptional = (value)=>{\n    if (value.trim() === \"\") // Email is optional, so empty string is valid\n    return true;\n    // Validate the email format if not empty\n    return validateEmail(value);\n};\nfunction validatePasswordRequirements(password) {\n    const hasLowercase = /[a-z]/.test(password);\n    const hasUppercase = /[A-Z]/.test(password);\n    const hasDigit = /\\d/.test(password);\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n    const hasValidLength = password.length >= 8;\n    return hasLowercase && hasUppercase && hasDigit && hasSpecialChar && hasValidLength;\n}\nfunction validateCheckbox(checked) {\n    return checked;\n}\nfunction validatePasswordsMatch(originalPassword, confirmPassword) {\n    return originalPassword === confirmPassword;\n}\nfunction validateSelectField(input) {\n    return input !== undefined && input !== \"N/A\";\n}\nfunction validatePhoneNumber(input) {\n    const phoneRegex = /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/;\n    return phoneRegex.test(input);\n}\nconst validatePhoneNumberOptional = (value)=>{\n    if (value.trim() === \"\") // Phone number is optional, so empty string is valid\n    return true;\n    // Validate the phone number format if not empty\n    return validatePhoneNumber(value);\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"Jsdel\":[function(require,module,exports) {\n//../../utils/recaptchaUtils.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/**\n * Asynchronously obtains a reCAPTCHA token for a specified action.\n * @param {string} action - The action name for which the reCAPTCHA token is requested.\n * @returns {Promise<string>} A promise that resolves with the reCAPTCHA token.\n */ parcelHelpers.export(exports, \"getRecaptchaToken\", ()=>getRecaptchaToken);\n/**\n * Validates a reCAPTCHA token with the backend server.\n * @param {string} token - The reCAPTCHA token to validate.\n * @returns {Promise<any>} A promise that resolves with the validation response from the server.\n */ parcelHelpers.export(exports, \"validateRecaptchaToken\", ()=>validateRecaptchaToken);\n/**\n * Handles the full reCAPTCHA verification flow from obtaining the token to validating it.\n * @param {string} action - The action name for which the reCAPTCHA should be processed.\n * @returns {Promise<boolean>} A promise that resolves with true if the reCAPTCHA verification is successful.\n */ parcelHelpers.export(exports, \"handleRecaptcha\", ()=>handleRecaptcha);\nvar _apiConfig = require(\"../api/apiConfig\");\nasync function getRecaptchaToken(action) {\n    return new Promise((resolve, reject)=>{\n        // Ensure grecaptcha is ready and execute the token request.\n        grecaptcha.ready(()=>{\n            grecaptcha.execute(\"6Lekaa8pAAAAAN6qiq0LSP5Akckql4Blg6K5ToUq\", {\n                action: action\n            }).then((token)=>{\n                resolve(token); // Resolve with the obtained token.\n            }, reject); // Reject the promise if there is an error.\n        });\n    });\n}\nasync function validateRecaptchaToken(token) {\n    try {\n        // Send the reCAPTCHA token to the server for validation.\n        const response = await (0, _apiConfig.apiClient).post(\"/recaptcha/validate\", {\n            data: {\n                \"g-recaptcha-response\": token\n            }\n        }).fetch();\n        // Return the server's response directly assuming it's already in JSON format.\n        return response; // Assume response is the direct JSON body.\n    } catch (error) {\n        throw new Error(`ReCAPTCHA validation failed: ${error}`);\n    }\n}\nasync function handleRecaptcha(action) {\n    try {\n        const token = await getRecaptchaToken(action);\n        const validationResponse = await validateRecaptchaToken(token);\n        return validationResponse.status === \"success\";\n    } catch (error) {\n        console.error(\"ReCAPTCHA handling failed:\", error);\n        // If error has a response, log it for more context\n        if (error.response) console.error(\"Error response:\", error.response);\n        return false;\n    }\n}\n\n},{\"../api/apiConfig\":\"dUmIV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"8CGBG\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeStepTwo\", ()=>initializeStepTwo);\nvar _core = require(\"@xatom/core\");\nvar _formUtils = require(\"../../../../../utils/formUtils\");\nvar _validationUtils = require(\"../../../../../utils/validationUtils\");\nvar _sidebar = require(\"../sidebar\");\nconst initializeStepTwo = (slider)=>{\n    console.log(\"Initialize Step Two Form\");\n    // Step 2 Form Initialization\n    const formStepTwo = new (0, _core.WFFormComponent)(\"#formStepTwo\");\n    // File Upload Setup for Profile Picture\n    const profilePictureInput = new (0, _core.WFComponent)(\"#profilePictureInput\");\n    const profilePictureInputError = new (0, _core.WFComponent)(\"#profilePictureInputError\");\n    const profilePictureInputSuccess = new (0, _core.WFComponent)(\"#profilePictureInputSuccess\");\n    // Set up file upload with enhanced functionality\n    (0, _formUtils.setupFileUpload)(profilePictureInput, profilePictureInputError, profilePictureInputSuccess, \"/profiles/students/image-upload\" // Replace with your actual endpoint\n    ).then((imageUrl)=>{\n        console.log(\"Image uploaded successfully: \", imageUrl);\n        // Update the 'profile_pic' field in the form with the uploaded image URL\n        const profilePicInputElement = document.querySelector(\"#profile_pic\");\n        if (profilePicInputElement) {\n            profilePicInputElement.value = imageUrl;\n            console.log(`'profile_pic' field set to: ${imageUrl}`);\n        } else console.warn(\"Profile picture input element ('#profile_pic') not found.\");\n        // Indicate success to the user\n        profilePictureInputSuccess.setText(\"Image uploaded successfully!\");\n    }).catch((error)=>{\n        console.error(\"Error uploading image: \", error.message);\n        (0, _formUtils.toggleError)(profilePictureInputError, \"Failed to upload image. Please try again.\", true);\n    });\n    // Define the fields with associated validation rules and error messages\n    const fieldsStepTwo = [\n        {\n            input: new (0, _core.WFComponent)(\"#gradeInput\"),\n            error: new (0, _core.WFComponent)(\"#gradeInputError\"),\n            validationFn: (0, _validationUtils.validateSelectField),\n            message: \"Grade is required\"\n        },\n        {\n            input: new (0, _core.WFComponent)(\"#schoolInput\"),\n            error: new (0, _core.WFComponent)(\"#schoolInputError\"),\n            validationFn: (0, _validationUtils.validateNotEmpty),\n            message: \"School is required\"\n        },\n        {\n            input: new (0, _core.WFComponent)(\"#dobInput\"),\n            error: new (0, _core.WFComponent)(\"#dobInputError\"),\n            validationFn: (0, _validationUtils.validateNotEmpty),\n            message: \"Date of birth is required\"\n        },\n        {\n            input: new (0, _core.WFComponent)(\"#genderInput\"),\n            error: new (0, _core.WFComponent)(\"#genderInputError\"),\n            validationFn: (0, _validationUtils.validateSelectField),\n            message: \"Please select an option\"\n        }\n    ];\n    // Initialize validation for each field\n    fieldsStepTwo.forEach(({ input, error, validationFn, message })=>{\n        (0, _formUtils.setupValidation)(input, error, (0, _formUtils.createValidationFunction)(input, validationFn, message), new (0, _core.WFComponent)(\"#submitStepTwoError\"));\n    });\n    // Handle form submission for Step 2\n    formStepTwo.onFormSubmit(async (formData, event)=>{\n        event.preventDefault(); // Stop default form submission\n        console.log(\"Step Two Form submission initiated.\");\n        let isFormValid = true;\n        // Validate all fields before proceeding\n        fieldsStepTwo.forEach(({ input, error, validationFn, message })=>{\n            const errorMessage = (0, _formUtils.createValidationFunction)(input, validationFn, message)();\n            console.log(`Validation result for ${input.getElement().id}: \"${errorMessage}\"`);\n            if (errorMessage) {\n                (0, _formUtils.toggleError)(error, errorMessage, true);\n                isFormValid = false;\n            } else (0, _formUtils.toggleError)(error, \"\", false);\n        });\n        if (!isFormValid) {\n            (0, _formUtils.toggleError)(new (0, _core.WFComponent)(\"#submitStepTwoError\"), \"Please correct all errors above.\", true);\n            console.log(\"Form validation failed. Errors are displayed.\");\n            return;\n        }\n        // **Check if an image was uploaded by examining the 'profile_pic' field**\n        if (!formData.profile_pic) {\n            localStorage.removeItem(\"image_upload\");\n            console.log(\"No image uploaded. Cleared 'image_upload' from local storage.\");\n        } else // Optionally, you can ensure 'image_upload' is set correctly if needed\n        // Example:\n        // localStorage.setItem(\"image_upload\", formData.profile_pic);\n        console.log(\"'profile_pic' exists. No action taken on 'image_upload'.\");\n        // Proceed to the next step\n        console.log(\"Form is valid. Navigating to the next step.\");\n        slider.goNext();\n    });\n    // Handle back button for Step 2\n    const backStepButton = new (0, _core.WFComponent)(\"#backStepTwo\");\n    backStepButton.on(\"click\", ()=>{\n        console.log(\"Back button clicked. Navigating to the previous step.\");\n        slider.goPrevious();\n        (0, _sidebar.unsetActiveStep)(2);\n        (0, _sidebar.unmarkStepAsCompleted)(1);\n        (0, _sidebar.unmarkStepAsCompleted)(2);\n    });\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../../../../../utils/formUtils\":\"gepHz\",\"../../../../../utils/validationUtils\":\"gu2z7\",\"../sidebar\":\"fusS1\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"9E92H\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeStepThree\", ()=>initializeStepThree);\nvar _core = require(\"@xatom/core\");\nvar _formUtils = require(\"../../../../../utils/formUtils\");\nvar _validationUtils = require(\"../../../../../utils/validationUtils\");\nvar _sidebar = require(\"../sidebar\");\nconst initializeStepThree = (slider)=>{\n    console.log(\"Initialize Step Three Form\");\n    // Step 3 Form Initialization\n    const formStepThree = new (0, _core.WFFormComponent)(\"#formStepThree\");\n    // Define the fields with associated validation rules and error messages\n    const fieldsStepThree = [\n        {\n            input: new (0, _core.WFComponent)(\"#healthInput\"),\n            error: new (0, _core.WFComponent)(\"#healthInputError\"),\n            validationFn: (0, _validationUtils.validateNotEmpty),\n            message: \"Health information is required\"\n        }\n    ];\n    // Initialize validation for each field\n    fieldsStepThree.forEach(({ input, error, validationFn, message })=>{\n        (0, _formUtils.setupValidation)(input, error, (0, _formUtils.createValidationFunction)(input, validationFn, message), new (0, _core.WFComponent)(\"#submitStepThreeError\"));\n    });\n    // Handle form submission for Step 3\n    formStepThree.onFormSubmit(async (formData, event)=>{\n        event.preventDefault(); // Stop default form submission\n        let isFormValid = true;\n        // Validate all fields before proceeding\n        fieldsStepThree.forEach(({ input, error, validationFn, message })=>{\n            const errorMessage = (0, _formUtils.createValidationFunction)(input, validationFn, message)();\n            if (errorMessage) {\n                (0, _formUtils.toggleError)(error, errorMessage, true);\n                isFormValid = false;\n            } else (0, _formUtils.toggleError)(error, \"\", false);\n        });\n        if (!isFormValid) {\n            (0, _formUtils.toggleError)(new (0, _core.WFComponent)(\"#submitStepThreeError\"), \"Please correct all errors above.\", true);\n            return;\n        }\n        // Proceed to the next step\n        slider.goNext();\n    });\n    // Handle back button for Step 3\n    const backStepButton = new (0, _core.WFComponent)(\"#backStepThree\");\n    backStepButton.on(\"click\", ()=>{\n        slider.goPrevious();\n        (0, _sidebar.unsetActiveStep)(3);\n        (0, _sidebar.unmarkStepAsCompleted)(2);\n        (0, _sidebar.unmarkStepAsCompleted)(3);\n    });\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../../../../../utils/formUtils\":\"gepHz\",\"../../../../../utils/validationUtils\":\"gu2z7\",\"../sidebar\":\"fusS1\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"kZzhc\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeStepFour\", ()=>initializeStepFour);\nvar _core = require(\"@xatom/core\");\nvar _caregiverDialog = require(\"../caregiverDialog\");\nvar _sidebar = require(\"../sidebar\");\nconst initializeStepFour = (slider)=>{\n    console.log(\"Initialize Step Four Form - Invite Caregiver\");\n    // Initialize Caregiver Dialog/Form\n    (0, _caregiverDialog.initializeCaregiverDialog)();\n    // Handle Step 4 submission (Continue to Step 5)\n    const submitStepFour = new (0, _core.WFComponent)(\"#submitStepFour\");\n    submitStepFour.on(\"click\", ()=>{\n        slider.goNext();\n    });\n    // Handle back button for Step 4\n    const backStepButton = new (0, _core.WFComponent)(\"#backStepFour\");\n    backStepButton.on(\"click\", ()=>{\n        slider.goPrevious();\n        (0, _sidebar.unsetActiveStep)(4);\n        (0, _sidebar.unmarkStepAsCompleted)(3);\n        (0, _sidebar.unmarkStepAsCompleted)(4);\n    });\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../caregiverDialog\":\"iCqpy\",\"../sidebar\":\"fusS1\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"iCqpy\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeCaregiverDialog\", ()=>initializeCaregiverDialog);\nvar _core = require(\"@xatom/core\");\nvar _formUtils = require(\"../../../../utils/formUtils\");\nvar _validationUtils = require(\"../../../../utils/validationUtils\");\nvar _recaptchaUtils = require(\"../../../../utils/recaptchaUtils\");\nvar _apiConfig = require(\"../../../../api/apiConfig\");\nconst initializeCaregiverDialog = ()=>{\n    console.log(\"Initialize Invite Caregiver Form\");\n    // Caregiver Form Initialization\n    const caregiverForm = new (0, _core.WFFormComponent)(\"#inviteCaregiverDialog\");\n    // Define the fields with associated validation rules and error messages\n    const fieldsCaregiver = [\n        {\n            input: new (0, _core.WFComponent)(\"#caregiverEmailInput\"),\n            error: new (0, _core.WFComponent)(\"#caregiverEmailInputError\"),\n            validationFn: (0, _validationUtils.validateEmail),\n            message: \"Please enter a valid email address\"\n        }\n    ];\n    // Initialize validation for each field\n    fieldsCaregiver.forEach(({ input, error, validationFn, message })=>{\n        (0, _formUtils.setupValidation)(input, error, (0, _formUtils.createValidationFunction)(input, validationFn, message), new (0, _core.WFComponent)(\"#submitInviteCaregiverError\"));\n    });\n    // Handle form submission for Caregiver Form\n    caregiverForm.onFormSubmit(async (formData, event)=>{\n        event.preventDefault(); // Stop default form submission\n        const caregiverRequestingAnimation = new (0, _core.WFComponent)(\"#caregiverRequestingAnimation\");\n        caregiverRequestingAnimation.setStyle({\n            display: \"block\"\n        }); // Show loading animation\n        let isFormValid = true;\n        // Validate all fields before proceeding\n        fieldsCaregiver.forEach(({ input, error, validationFn, message })=>{\n            const errorMessage = (0, _formUtils.createValidationFunction)(input, validationFn, message)();\n            if (errorMessage) {\n                (0, _formUtils.toggleError)(error, errorMessage, true);\n                isFormValid = false;\n            } else (0, _formUtils.toggleError)(error, \"\", false);\n        });\n        if (!isFormValid) {\n            console.log(\"Validation failed:\", formData);\n            (0, _formUtils.toggleError)(new (0, _core.WFComponent)(\"#submitInviteCaregiverError\"), \"Please correct all errors above.\", true);\n            caregiverRequestingAnimation.setStyle({\n                display: \"none\"\n            }); // Hide loading animation\n            return;\n        }\n        // Handle reCAPTCHA verification\n        const recaptchaAction = \"complete_caregiver\";\n        const isRecaptchaValid = await (0, _recaptchaUtils.handleRecaptcha)(recaptchaAction);\n        if (!isRecaptchaValid) {\n            (0, _formUtils.toggleError)(new (0, _core.WFComponent)(\"#submitInviteCaregiverError\"), \"reCAPTCHA verification failed. Please try again.\", true);\n            caregiverRequestingAnimation.setStyle({\n                display: \"none\"\n            }); // Hide loading animation\n            return;\n        }\n        // Post data to a server endpoint\n        try {\n            const response = await (0, _apiConfig.apiClient).post(\"/caregivers/invite\", {\n                data: formData\n            }).fetch();\n            if (response.status === \"success\") {\n                const onSuccessTrigger = new (0, _core.WFComponent)(\"#inviteCaregiverSuccessTrigger\");\n                caregiverForm.showSuccessState();\n                onSuccessTrigger.getElement()?.click();\n            } else throw new Error(response.message || \"Failed to invite caregiver.\");\n        } catch (error) {\n            console.error(\"Error inviting caregiver:\", error);\n            const errorMessage = error.response?.data?.message || error.message || \"Failed to invite caregiver.\";\n            (0, _formUtils.toggleError)(new (0, _core.WFComponent)(\"#submitInviteCaregiverError\"), errorMessage, true);\n        } finally{\n            caregiverRequestingAnimation.setStyle({\n                display: \"none\"\n            }); // Hide loading animation\n        }\n    });\n    // Initialize reset form button\n    const resetCaregiverForm = new (0, _core.WFComponent)(\"#resetCaregiverForm\");\n    resetCaregiverForm.on(\"click\", ()=>{\n        caregiverForm.resetForm();\n        caregiverForm.showForm();\n        const onSuccessTrigger = new (0, _core.WFComponent)(\"#inviteCaregiverSuccessTrigger\");\n        onSuccessTrigger.getElement()?.click();\n    });\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../../../../utils/formUtils\":\"gepHz\",\"../../../../utils/validationUtils\":\"gu2z7\",\"../../../../utils/recaptchaUtils\":\"Jsdel\",\"../../../../api/apiConfig\":\"dUmIV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"lk6df\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeStepFive\", ()=>initializeStepFive);\nvar _core = require(\"@xatom/core\");\nvar _formUtils = require(\"../../../../../utils/formUtils\");\nvar _validationUtils = require(\"../../../../../utils/validationUtils\");\nvar _sidebar = require(\"../sidebar\");\nconst initializeStepFive = (slider)=>{\n    console.log(\"Initialize Step Five Form - Emergency Contact\");\n    // Step 5 Form Initialization\n    const formStepFive = new (0, _core.WFFormComponent)(\"#formStepFive\");\n    // Define the fields with associated validation rules and error messages\n    const fieldsStepFive = [\n        {\n            input: new (0, _core.WFComponent)(\"#emergencyFirstNameInput\"),\n            error: new (0, _core.WFComponent)(\"#emergencyFirstNameInputError\"),\n            validationFn: (0, _validationUtils.validateNotEmpty),\n            message: \"First name is required\"\n        },\n        {\n            input: new (0, _core.WFComponent)(\"#emergencyLastNameInput\"),\n            error: new (0, _core.WFComponent)(\"#emergencyLastNameInputError\"),\n            validationFn: (0, _validationUtils.validateNotEmpty),\n            message: \"Last name is required\"\n        },\n        {\n            input: new (0, _core.WFComponent)(\"#emergencyEmailInput\"),\n            error: new (0, _core.WFComponent)(\"#emergencyEmailInputError\"),\n            validationFn: (0, _validationUtils.validateEmail),\n            message: \"Please enter a valid email address\"\n        },\n        {\n            input: new (0, _core.WFComponent)(\"#emergencyPhoneInput\"),\n            error: new (0, _core.WFComponent)(\"#emergencyPhoneInputError\"),\n            validationFn: (0, _validationUtils.validatePhoneNumber),\n            message: \"Please enter a valid phone number\"\n        },\n        {\n            input: new (0, _core.WFComponent)(\"#emergencyRelationshipInput\"),\n            error: new (0, _core.WFComponent)(\"#emergencyRelationshipInputError\"),\n            validationFn: (0, _validationUtils.validateNotEmpty),\n            message: \"Relationship is required\"\n        }\n    ];\n    // Auto-format phone number input to (xxx) xxx-xxxx\n    const emergencyPhoneNumberInput = new (0, _core.WFComponent)(\"#emergencyPhoneInput\");\n    emergencyPhoneNumberInput.on(\"input\", ()=>{\n        const inputElement = emergencyPhoneNumberInput.getElement();\n        const cursorPosition = inputElement.selectionStart;\n        inputElement.value = formatPhoneNumber(inputElement.value);\n        const formattedLength = inputElement.value.length;\n        const cleanedLength = inputElement.value.replace(/\\D/g, \"\").length;\n        inputElement.setSelectionRange(cursorPosition + (formattedLength - cleanedLength), cursorPosition + (formattedLength - cleanedLength));\n    });\n    // Initialize validation for each field\n    fieldsStepFive.forEach(({ input, error, validationFn, message })=>{\n        (0, _formUtils.setupValidation)(input, error, (0, _formUtils.createValidationFunction)(input, validationFn, message), new (0, _core.WFComponent)(\"#submitStepFiveError\"));\n    });\n    // Handle form submission for Step 5\n    formStepFive.onFormSubmit(async (formData, event)=>{\n        event.preventDefault(); // Stop default form submission\n        let isFormValid = true;\n        // Validate all fields before proceeding\n        fieldsStepFive.forEach(({ input, error, validationFn, message })=>{\n            const errorMessage = (0, _formUtils.createValidationFunction)(input, validationFn, message)();\n            if (errorMessage) {\n                (0, _formUtils.toggleError)(error, errorMessage, true);\n                isFormValid = false;\n            } else (0, _formUtils.toggleError)(error, \"\", false);\n        });\n        if (!isFormValid) {\n            console.log(\"Validation failed:\", formData);\n            (0, _formUtils.toggleError)(new (0, _core.WFComponent)(\"#submitStepFiveError\"), \"Please correct all errors above.\", true);\n            return;\n        }\n        // Proceed to the next step\n        slider.goNext();\n    });\n    // Handle back button for Step 5\n    const backStepButton = new (0, _core.WFComponent)(\"#backStepFive\");\n    backStepButton.on(\"click\", ()=>{\n        slider.goPrevious();\n        (0, _sidebar.unsetActiveStep)(5);\n        (0, _sidebar.unmarkStepAsCompleted)(4);\n        (0, _sidebar.unmarkStepAsCompleted)(5);\n    });\n};\n// Helper function to format phone number\nfunction formatPhoneNumber(value) {\n    const cleaned = value.replace(/\\D/g, \"\");\n    let formatted = \"\";\n    if (cleaned.length <= 3) formatted = cleaned;\n    else if (cleaned.length <= 6) formatted = `(${cleaned.slice(0, 3)}) ${cleaned.slice(3)}`;\n    else formatted = `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6, 10)}`;\n    return formatted;\n}\n\n},{\"@xatom/core\":\"65YBq\",\"../../../../../utils/formUtils\":\"gepHz\",\"../../../../../utils/validationUtils\":\"gu2z7\",\"../sidebar\":\"fusS1\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"hSoAl\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeStepSix\", ()=>initializeStepSix);\nvar _core = require(\"@xatom/core\");\nvar _formUtils = require(\"../../../../../utils/formUtils\");\nvar _validationUtils = require(\"../../../../../utils/validationUtils\");\nvar _sidebar = require(\"../sidebar\");\nconst initializeStepSix = (slider)=>{\n    console.log(\"Initialize Step Six Form - Dismissal Permissions\");\n    // Step 6 Form Initialization\n    const formStepSix = new (0, _core.WFFormComponent)(\"#formStepSix\");\n    // Define fields with associated validation rules and error messages\n    const fieldsStepSix = [\n        {\n            input: new (0, _core.WFComponent)(\"#dismissalNamesInput\"),\n            error: new (0, _core.WFComponent)(\"#dismissalNamesInputError\"),\n            validationFn: (0, _validationUtils.validateNotEmpty),\n            message: \"Dismissal names are required\"\n        }\n    ];\n    // Initialize validation for each field\n    fieldsStepSix.forEach(({ input, error, validationFn, message })=>{\n        (0, _formUtils.setupValidation)(input, error, (0, _formUtils.createValidationFunction)(input, validationFn, message), new (0, _core.WFComponent)(\"#submitStepSixError\"));\n    });\n    // Handle form submission for Step 6\n    formStepSix.onFormSubmit(async (formData, event)=>{\n        event.preventDefault(); // Stop default form submission\n        let isFormValid = true;\n        // Validate all fields before proceeding\n        fieldsStepSix.forEach(({ input, error, validationFn, message })=>{\n            const errorMessage = (0, _formUtils.createValidationFunction)(input, validationFn, message)();\n            if (errorMessage) {\n                (0, _formUtils.toggleError)(error, errorMessage, true);\n                isFormValid = false;\n            } else (0, _formUtils.toggleError)(error, \"\", false);\n        });\n        if (!isFormValid) {\n            console.log(\"Validation failed:\", formData);\n            (0, _formUtils.toggleError)(new (0, _core.WFComponent)(\"#submitStepSixError\"), \"Please correct all errors above.\", true);\n            return;\n        }\n        // Proceed to the next step\n        slider.goNext();\n    });\n    // Handle back button for Step 6\n    const backStepButton = new (0, _core.WFComponent)(\"#backStepSix\");\n    backStepButton.on(\"click\", ()=>{\n        slider.goPrevious();\n        (0, _sidebar.unsetActiveStep)(6);\n        (0, _sidebar.unmarkStepAsCompleted)(5);\n        (0, _sidebar.unmarkStepAsCompleted)(6);\n    });\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../../../../../utils/formUtils\":\"gepHz\",\"../../../../../utils/validationUtils\":\"gu2z7\",\"../sidebar\":\"fusS1\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"frLQ8\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeStepSeven\", ()=>initializeStepSeven);\nvar _core = require(\"@xatom/core\");\nvar _formUtils = require(\"../../../../../utils/formUtils\");\nvar _validationUtils = require(\"../../../../../utils/validationUtils\");\nvar _sidebar = require(\"../sidebar\");\nconst initializeStepSeven = (slider)=>{\n    console.log(\"Initialize Step Seven Form - Family Involvement & Photo Release\");\n    // Step 7 Form Initialization\n    const formStepSeven = new (0, _core.WFFormComponent)(\"#formStepSeven\");\n    // Define fields with associated validation rules and error messages\n    const fieldsStepSeven = [\n        {\n            input: new (0, _core.WFComponent)(\"#familyInvolvedInput\"),\n            error: new (0, _core.WFComponent)(\"#familyInvolvedInputError\"),\n            validationFn: (0, _validationUtils.validateNotEmpty),\n            message: \"Family involvement is required\"\n        }\n    ];\n    // Initialize validation for each field\n    fieldsStepSeven.forEach(({ input, error, validationFn, message })=>{\n        (0, _formUtils.setupValidation)(input, error, (0, _formUtils.createValidationFunction)(input, validationFn, message), new (0, _core.WFComponent)(\"#submitStepSevenError\"));\n    });\n    // Handle form submission for Step 7\n    formStepSeven.onFormSubmit(async (formData, event)=>{\n        event.preventDefault(); // Stop default form submission\n        let isFormValid = true;\n        // Validate all fields before proceeding\n        fieldsStepSeven.forEach(({ input, error, validationFn, message })=>{\n            const errorMessage = (0, _formUtils.createValidationFunction)(input, validationFn, message)();\n            if (errorMessage) {\n                (0, _formUtils.toggleError)(error, errorMessage, true);\n                isFormValid = false;\n            } else (0, _formUtils.toggleError)(error, \"\", false);\n        });\n        if (!isFormValid) {\n            console.log(\"Validation failed:\", formData);\n            (0, _formUtils.toggleError)(new (0, _core.WFComponent)(\"#submitStepSevenError\"), \"Please correct all errors above.\", true);\n            return;\n        }\n        // Proceed to the next step\n        slider.goNext();\n    });\n    // Handle back button for Step 7\n    const backStepButton = new (0, _core.WFComponent)(\"#backStepSeven\");\n    backStepButton.on(\"click\", ()=>{\n        slider.goPrevious();\n        (0, _sidebar.unsetActiveStep)(7);\n        (0, _sidebar.unmarkStepAsCompleted)(6);\n        (0, _sidebar.unmarkStepAsCompleted)(7);\n    });\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../../../../../utils/formUtils\":\"gepHz\",\"../../../../../utils/validationUtils\":\"gu2z7\",\"../sidebar\":\"fusS1\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"4vVew\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeStepEight\", ()=>initializeStepEight);\nvar _core = require(\"@xatom/core\");\nvar _image = require(\"@xatom/image\");\nvar _recaptchaUtils = require(\"../../../../../utils/recaptchaUtils\");\nvar _apiConfig = require(\"../../../../../api/apiConfig\");\nvar _formUtils = require(\"../../../../../utils/formUtils\");\nvar _sidebar = require(\"../sidebar\");\n// Prevent double-binding on initialization\nlet step8Initialized = false;\nconst initializeStepEight = (slider, getFormData)=>{\n    // Guard to ensure this setup runs only once\n    if (step8Initialized) return;\n    step8Initialized = true;\n    console.log(\"Initialize Step Eight\");\n    // Initialize form review items\n    const studentProfilePic = new (0, _image.WFImage)(\"#studentProfilePic\");\n    const studentFullName = new (0, _core.WFComponent)(\"#studentFullName\");\n    const studentEmail = new (0, _core.WFComponent)(\"#studentEmail\");\n    const studentPhone = new (0, _core.WFComponent)(\"#studentPhone\");\n    const studentGrade = new (0, _core.WFComponent)(\"#studentGrade\");\n    const studentSchool = new (0, _core.WFComponent)(\"#studentSchool\");\n    const studentDOB = new (0, _core.WFComponent)(\"#studentDOB\");\n    const studentGender = new (0, _core.WFComponent)(\"#studentGender\");\n    const studentHealth = new (0, _core.WFComponent)(\"#studentHealth\");\n    const studentEmergencyName = new (0, _core.WFComponent)(\"#studentEmergencyName\");\n    const studentEmergencyEmail = new (0, _core.WFComponent)(\"#studentEmergencyEmail\");\n    const studentEmergencyPhone = new (0, _core.WFComponent)(\"#studentEmergencyPhone\");\n    const studentEmergencyRelationship = new (0, _core.WFComponent)(\"#studentEmergencyRelationship\");\n    const studentDismissalNames = new (0, _core.WFComponent)(\"#studentDismissalNames\");\n    const studentTravelTrue = new (0, _core.WFComponent)(\"#studentTravelTrue\");\n    const studentTravelFalse = new (0, _core.WFComponent)(\"#studentTravelFalse\");\n    const studentFamily = new (0, _core.WFComponent)(\"#studentFamily\");\n    const studentPhotoTrue = new (0, _core.WFComponent)(\"#studentPhotoTrue\");\n    const studentPhotoFalse = new (0, _core.WFComponent)(\"#studentPhotoFalse\");\n    const studentTextTrue = new (0, _core.WFComponent)(\"#studentTextTrue\");\n    const studentTextFalse = new (0, _core.WFComponent)(\"#studentTextFalse\");\n    // Function to set form review items from collected data\n    const setFormReviewItems = ()=>{\n        const data = getFormData();\n        // Set student profile picture if available\n        if (localStorage.getItem(\"image_upload\")) {\n            const image = localStorage.getItem(\"image_upload\");\n            studentProfilePic.setImage(image);\n        } else {\n            console.log(\"No profile picture available\");\n            studentProfilePic.setImage(\"https://cdn.prod.website-files.com/667f080f36260b9afbdc46b2/667f080f36260b9afbdc46be_placeholder.svg\");\n        }\n        // Set form review items with the appropriate data\n        studentFullName.setText(`${data.first_name} ${data.last_name}`);\n        studentEmail.setText(data.email);\n        studentPhone.setText(data.phone);\n        studentGrade.setText(data.grade);\n        studentSchool.setText(data.school);\n        studentDOB.setText(data.dob);\n        studentGender.setText(data.gender);\n        studentHealth.setText(data.health);\n        studentEmergencyName.setText(`${data.emergency_first_name} ${data.emergency_last_name}`);\n        studentEmergencyEmail.setText(data.emergency_email);\n        studentEmergencyPhone.setText(data.emergency_phone);\n        studentEmergencyRelationship.setText(data.emergency_relationship);\n        studentDismissalNames.setText(data.dismissal_names);\n        studentFamily.setText(data.family_involved);\n        // Set independent travel info\n        if (data.independent_travel) {\n            studentTravelTrue.setStyle({\n                display: \"block\"\n            });\n            studentTravelFalse.setStyle({\n                display: \"none\"\n            });\n        } else {\n            studentTravelFalse.setStyle({\n                display: \"block\"\n            });\n            studentTravelTrue.setStyle({\n                display: \"none\"\n            });\n        }\n        // Set photo release info\n        if (data.photo_release) {\n            studentPhotoTrue.setStyle({\n                display: \"block\"\n            });\n            studentPhotoFalse.setStyle({\n                display: \"none\"\n            });\n        } else {\n            studentPhotoFalse.setStyle({\n                display: \"block\"\n            });\n            studentPhotoTrue.setStyle({\n                display: \"none\"\n            });\n        }\n        // Set text message opt-in info\n        if (data.send_texts) {\n            studentTextTrue.setStyle({\n                display: \"block\"\n            });\n            studentTextFalse.setStyle({\n                display: \"none\"\n            });\n        } else {\n            studentTextFalse.setStyle({\n                display: \"block\"\n            });\n            studentTextTrue.setStyle({\n                display: \"none\"\n            });\n        }\n    };\n    // Set review items when slide changes to step 8\n    slider.onSlideChange(setFormReviewItems);\n    // Handle Step Eight form submission (Review and Save)\n    const submitStepEight = new (0, _core.WFComponent)(\"#submitStepEight\");\n    const stepEightRequestingAnimation = new (0, _core.WFComponent)(\"#stepEightRequestingAnimation\");\n    const submitStepEightError = new (0, _core.WFComponent)(\"#submitStepEightError\");\n    submitStepEight.on(\"click\", async (event)=>{\n        event.preventDefault(); // Prevent normal form submission\n        stepEightRequestingAnimation.setStyle({\n            display: \"block\"\n        }); // Show loading animation\n        // Handle reCAPTCHA verification\n        const recaptchaAction = \"complete_student\";\n        const isRecaptchaValid = await (0, _recaptchaUtils.handleRecaptcha)(recaptchaAction);\n        if (!isRecaptchaValid) {\n            (0, _formUtils.toggleError)(submitStepEightError, \"reCAPTCHA verification failed. Please try again.\", true);\n            stepEightRequestingAnimation.setStyle({\n                display: \"none\"\n            }); // Hide loading animation\n            return;\n        }\n        const formData = getFormData();\n        try {\n            const response = await (0, _apiConfig.apiClient).post(\"/profiles/students/complete-profile\", {\n                data: formData\n            }).fetch();\n            if (response.status === \"success\" && response.profile) {\n                const profile = response.profile;\n                // Update the profile link template with the returned data\n                const studentProfileLinkTemplate = new (0, _core.WFComponent)(\"#studentCard\");\n                studentProfileLinkTemplate.updateTextViaAttrVar({\n                    name: `${profile.first_name} ${profile.last_name}`,\n                    email: profile.email,\n                    phone: profile.phone\n                });\n                // **Updated code to append ?id={student_id} to the #studentCard link**\n                const studentCardElement = studentProfileLinkTemplate.getElement();\n                const currentHref = studentCardElement.getAttribute(\"href\") || \"\";\n                const newHref = `${currentHref}?id=${profile.id}`;\n                studentCardElement.setAttribute(\"href\", newHref);\n                // Update the profile card image with the profile picture if available\n                const profileCardImg = new (0, _image.WFImage)(\"#profileCardImg\");\n                if (profile.profile_pic?.url) profileCardImg.setImage(profile.profile_pic.url);\n                else {\n                    console.log(\"No profile picture available\");\n                    profileCardImg.setImage(\"https://cdn.prod.website-files.com/667f080f36260b9afbdc46b2/667f080f36260b9afbdc46be_placeholder.svg\");\n                }\n                // Clear current student and uploaded image from local storage\n                localStorage.removeItem(\"current_student\");\n                localStorage.removeItem(\"image_upload\");\n                stepEightRequestingAnimation.setStyle({\n                    display: \"none\"\n                }); // Hide loading animation\n                slider.goNext(); // Navigate to the next step\n            } else {\n                (0, _formUtils.toggleError)(submitStepEightError, response.message || \"Failed to complete profile.\", true);\n                stepEightRequestingAnimation.setStyle({\n                    display: \"none\"\n                }); // Hide loading animation\n            }\n        } catch (error) {\n            console.error(\"Error completing profile:\", error);\n            (0, _formUtils.toggleError)(submitStepEightError, error.response?.data?.message || \"Failed to complete profile.\", true);\n            stepEightRequestingAnimation.setStyle({\n                display: \"none\"\n            });\n        }\n    });\n    // Handle back button for Step 8\n    const backStepButton = new (0, _core.WFComponent)(\"#backStepEight\");\n    backStepButton.on(\"click\", ()=>{\n        slider.goPrevious();\n        (0, _sidebar.unsetActiveStep)(8);\n        (0, _sidebar.unmarkStepAsCompleted)(7);\n        (0, _sidebar.unmarkStepAsCompleted)(8);\n    });\n};\n\n},{\"@xatom/core\":\"65YBq\",\"@xatom/image\":\"bavwf\",\"../../../../../utils/recaptchaUtils\":\"Jsdel\",\"../../../../../api/apiConfig\":\"dUmIV\",\"../../../../../utils/formUtils\":\"gepHz\",\"../sidebar\":\"fusS1\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"iPCZP\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeStepNine\", ()=>initializeStepNine);\nvar _core = require(\"@xatom/core\");\nconst initializeStepNine = (slider)=>{\n    // Initialize the form components for Step 9\n    const submitStepNine = new (0, _core.WFComponent)(\"#submitStepNine\");\n    // Event listener for submitting step nine\n    submitStepNine.on(\"click\", async (event)=>{\n        event.preventDefault(); // Prevent the default behavior\n        try {\n            // Placeholder for any step 9 submission logic\n            console.log(\"Step 9: Submit action or add another student\");\n            // Proceed to the next slide without triggering any sidebar changes\n            slider.goNext();\n        } catch (error) {\n            console.error(\"Error during Step 9 submission: \", error);\n        }\n    });\n};\n\n},{\"@xatom/core\":\"65YBq\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"gjbWs\":[function(require,module,exports) {\n// src/modules/forms/profiles/addStudentProfile/steps/step10.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeStepTen\", ()=>initializeStepTen);\nvar _core = require(\"@xatom/core\");\nconst initializeStepTen = (slider)=>{\n    // Initialize the back button for Step 10\n    const backStepTen = new (0, _core.WFComponent)(\"#backStepTen\");\n    // Event listener for going back to Step 9\n    backStepTen.on(\"click\", ()=>{\n        slider.goPrevious();\n    });\n};\n\n},{\"@xatom/core\":\"65YBq\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}]},[], null, \"parcelRequired346\")\n\n//# sourceMappingURL=addStudentProfile.3a77f4c9.js.map\n","// src/modules/forms/profiles/addStudentProfile/index.ts\n\nimport { WFComponent, WFFormComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { WFSlider } from \"@xatom/slider\";\nimport { initializeSidebarIndicators } from \"./sidebar\";\nimport { initializeSlider } from \"./slider\";\nimport { initializeStepOne } from \"./steps/step1\";\nimport { initializeStepTwo } from \"./steps/step2\";\nimport { initializeStepThree } from \"./steps/step3\";\nimport { initializeStepFour } from \"./steps/step4\";\nimport { initializeStepFive } from \"./steps/step5\";\nimport { initializeStepSix } from \"./steps/step6\";\nimport { initializeStepSeven } from \"./steps/step7\";\nimport { initializeStepEight } from \"./steps/step8\";\nimport { initializeStepNine } from \"./steps/step9\";\nimport { initializeStepTen } from \"./steps/step10\";\n\nexport const addStudentProfile = async () => {\n  console.log(\"Initialize Add Student Form\");\n\n  // Initialize the sidebar indicators\n  initializeSidebarIndicators();\n\n  // Initialize the slider\n  const slider = initializeSlider();\n\n  // Initialize form components for all steps\n  const formStepOne = new WFFormComponent<{\n    first_name: string;\n    last_name: string;\n    email: string;\n    phone: string;\n    send_texts: boolean;\n  }>(\"#formStepOne\");\n\n  const formStepTwo = new WFFormComponent<{\n    profile_pic: string;\n    grade: string;\n    school: string;\n    dob: string;\n    gender: string;\n  }>(\"#formStepTwo\");\n\n  const formStepThree = new WFFormComponent<{\n    health: string;\n  }>(\"#formStepThree\");\n\n  const formStepFive = new WFFormComponent<{\n    emergency_first_name: string;\n    emergency_last_name: string;\n    emergency_email: string;\n    emergency_phone: string;\n    emergency_relationship: string;\n  }>(\"#formStepFive\");\n\n  const formStepSix = new WFFormComponent<{\n    dismissal_names: string;\n    independent_travel: boolean;\n  }>(\"#formStepSix\");\n\n  const formStepSeven = new WFFormComponent<{\n    family_involved: string;\n    photo_release: boolean;\n    student_id: number | null;\n  }>(\"#formStepSeven\");\n\n  // Function to collect form data from each step\n  const getFormData = () => {\n    const formStepOneData = formStepOne.getFormData();\n    const formStepTwoData = formStepTwo.getFormData();\n    const formStepThreeData = formStepThree.getFormData();\n    const formStepFiveData = formStepFive.getFormData();\n    const formStepSixData = formStepSix.getFormData();\n    const formStepSevenData = formStepSeven.getFormData();\n\n    // Retrieve the existing student's ID from local storage, if any\n    const existingStudent = localStorage.getItem(\"current_student\");\n    const studentId = existingStudent ? JSON.parse(existingStudent).id : null;\n\n    // Consolidate all form data\n    const formData = {\n      ...formStepOneData,\n      ...formStepTwoData,\n      ...formStepThreeData,\n      ...formStepFiveData,\n      ...formStepSixData,\n      ...formStepSevenData,\n    };\n\n    // Add the student ID to the form data if available\n    if (studentId) {\n      formData.student_id = studentId;\n    }\n\n    return formData;\n  };\n\n  // Initialize all steps\n  initializeStepOne(slider);\n  initializeStepTwo(slider);\n  initializeStepThree(slider);\n  initializeStepFour(slider);\n  initializeStepFive(slider);\n  initializeStepSix(slider);\n  initializeStepSeven(slider);\n  initializeStepEight(slider, getFormData); // Pass both slider and getFormData to Step Eight\n  initializeStepNine(slider);\n  initializeStepTen(slider);\n\n  \n};\n\n","// src/modules/forms/profiles/addStudentProfile/sidebar.ts\n\nimport { WFComponent } from \"@xatom/core\";\nimport { userAuth } from \"../../../../auth/authConfig\";\n\n// Initialize the sidebar indicators\nexport const initializeSidebarIndicators = () => {\n  const steps = [\n    { id: \"sidebarStepOne\", index: 1 },\n    { id: \"sidebarStepTwo\", index: 2 },\n    { id: \"sidebarStepThree\", index: 3 },\n    { id: \"sidebarStepFour\", index: 4 },\n    { id: \"sidebarStepFive\", index: 5 },\n    { id: \"sidebarStepSix\", index: 6 },\n    { id: \"sidebarStepSeven\", index: 7 },\n    { id: \"sidebarStepEight\", index: 8 },\n  ];\n\n  // Set sidebar first name from userAuth\n  const firstNameText = new WFComponent(\"#firstNameText\");\n  const user = userAuth.getUser();\n\n  if (user && user.profile && user.profile.first_name) {\n    firstNameText.setText(user.profile.first_name);\n  } else {\n    firstNameText.setText(\"Friend\");\n  }\n\n  // Initialize step components with click listeners\n  steps.forEach((step) => {\n    const stepComponent = new WFComponent(`#${step.id}`);\n    let isCompleted = false; // Track the completed state\n\n    stepComponent.on(\"click\", () => {\n      if (isCompleted) {\n        isCompleted = false;\n        stepComponent.removeCssClass(\"is-completed\");\n        // Optionally, trigger reverse animation here\n      } else {\n        isCompleted = true;\n        stepComponent.addCssClass(\"is-completed\");\n        // Optionally, trigger completed animation here\n      }\n    });\n  });\n};\n\n// Set the active step\nexport const setActiveStep = (stepNumber: number) => {\n  const stepId = getStepId(stepNumber);\n  if (!stepId) {\n    console.warn(`No sidebar step defined for step number ${stepNumber}`);\n    return;\n  }\n  const stepComponent = new WFComponent(`#${stepId}`);\n  stepComponent.addCssClass(\"is-active\");\n};\n\n// Unset the active step\nexport const unsetActiveStep = (stepNumber: number) => {\n  const stepId = getStepId(stepNumber);\n  if (!stepId) {\n    console.warn(`No sidebar step defined for step number ${stepNumber}`);\n    return;\n  }\n  const stepComponent = new WFComponent(`#${stepId}`);\n  stepComponent.removeCssClass(\"is-active\");\n};\n\n// Mark step as completed\nexport const markStepAsCompleted = (stepNumber: number) => {\n  const stepId = getStepId(stepNumber);\n  if (!stepId) {\n    console.warn(`No sidebar step defined for step number ${stepNumber}`);\n    return;\n  }\n  const step = new WFComponent(`#${stepId}`);\n  step.getElement().click(); // Programmatically trigger the click event to mark as complete\n};\n\n// Unmark step as completed (reverse the completed animation)\nexport const unmarkStepAsCompleted = (stepNumber: number) => {\n  const stepId = getStepId(stepNumber);\n  if (!stepId) {\n    console.warn(`No sidebar step defined for step number ${stepNumber}`);\n    return;\n  }\n  const step = new WFComponent(`#${stepId}`);\n  step.getElement().click(); // Programmatically trigger the click event to unmark as complete\n};\n\n// Helper function to get the ID string for a step\nconst getStepId = (stepNumber: number): string | null => {\n  const stepMap: Record<number, string> = {\n    1: \"sidebarStepOne\",\n    2: \"sidebarStepTwo\",\n    3: \"sidebarStepThree\",\n    4: \"sidebarStepFour\",\n    5: \"sidebarStepFive\",\n    6: \"sidebarStepSix\",\n    7: \"sidebarStepSeven\",\n    8: \"sidebarStepEight\",\n  };\n  return stepMap[stepNumber] || null;\n};\n","// src/modules/forms/profiles/addStudentProfile/slider.ts\n\nimport { WFSlider } from \"@xatom/slider\";\nimport {\n  setActiveStep,\n  markStepAsCompleted,\n  unmarkStepAsCompleted,\n} from \"./sidebar\";\n\nexport const initializeSlider = (): WFSlider => {\n  const slider = new WFSlider(\".multi-step_form_slider\");\n\n  // Initialize the slider's slide change handler using imported functions\n  slider.onSlideChange((activeIndex, prevIndex) => {\n    console.log(`Slide changed from ${prevIndex} to ${activeIndex}`);\n\n    // Set the active step in the sidebar\n    setActiveStep(activeIndex + 1);\n\n    if (prevIndex !== -1 && prevIndex < activeIndex) {\n      // Moving forward: mark the previous step as completed\n      markStepAsCompleted(prevIndex + 1);\n    }\n\n    if (prevIndex !== -1 && prevIndex > activeIndex) {\n      // Moving backward: unmark steps beyond the current\n      unmarkStepAsCompleted(prevIndex + 1);\n    }\n  });\n\n  // Set the initial active sidebar step\n  setActiveStep(slider.getActiveSlideIndex() + 1);\n\n  return slider;\n};\n","var e=require(\"@xatom/core\"),s=require(\"uuid\");var t,i,r,l,d={};t=d,i=\"WFSlider\",r=()=>o,Object.defineProperty(t,i,{get:r,set:l,enumerable:!0,configurable:!0});const n=window.jQuery;class o extends e.WFComponent{_sliderConfig={};_slides=[];_defaultSwipeDisabled=!1;_index=0;_listeners=new Map;constructor(e){super(e),this.init()}init(){this._defaultSwipeDisabled=\"true\"===this.getAttribute(\"data-disable-swipe\"),this._sliderConfig=n(this.getElement()).data()[\".wSlider\"],this._slides=Array.from(this._sliderConfig.slides).map((s=>new(0,e.WFComponent)(s))),this._mask=new(0,e.WFComponent)(this._sliderConfig.mask[0]),this._nav=new(0,e.WFComponent)(this._sliderConfig.nav[0]),this._left=new(0,e.WFComponent)(this._sliderConfig.left[0]),this._right=new(0,e.WFComponent)(this._sliderConfig.right[0]),function(e,s){if(!document.styleSheets)return;if(0==document.getElementsByTagName(\"head\").length)return;let t,i;if(document.styleSheets.length>0)for(var r=0,l=document.styleSheets.length;r<l;r++)if(!document.styleSheets[r].disabled){var d=document.styleSheets[r].media;if(i=typeof d,\"string\"===i?\"\"!==d&&-1===d.indexOf(\"screen\")||(t=document.styleSheets[r]):\"object\"==i&&(\"\"!==d.mediaText&&-1===d.mediaText.indexOf(\"screen\")||(t=document.styleSheets[r])),void 0!==t)break}if(void 0===t){var n=document.createElement(\"style\");for(n.type=\"text/css\",document.getElementsByTagName(\"head\")[0].appendChild(n),r=0;r<document.styleSheets.length;r++)document.styleSheets[r].disabled||(t=document.styleSheets[r]);i=typeof t.media}if(\"string\"===i){for(r=0,l=t.rules.length;r<l;r++)if(t.rules[r].selectorText&&t.rules[r].selectorText.toLowerCase()==e.toLowerCase())return void(t.rules[r].style.cssText=s);t.addRule(e,s)}else if(\"object\"===i){var o=t.cssRules?t.cssRules.length:0;for(r=0;r<o;r++)if(t.cssRules[r].selectorText&&t.cssRules[r].selectorText.toLowerCase()==e.toLowerCase())return void(t.cssRules[r].style.cssText=s);t.insertRule(e+\"{\"+s+\"}\",o)}}(\".xa-slider-disable\",\"display:none !important;\");const s=this;Object.defineProperty(s._sliderConfig,\"index\",{set:function(e){s._index=e,s._triggerOnChange()},get:function(){return s._index}}),this.refereshSlides()}reloadWFSlider(){window.Webflow.require(\"slider\").destroy(),window.Webflow.require(\"slider\").redraw(),window.Webflow.require(\"slider\").ready()}refereshSlides(){this._mask.getChildAsComponents(\".w-slide\").forEach((e=>e.remove())),this._slides.reverse().forEach((e=>{this._mask.getElement().prepend(e.getElement())})),this._slides.reverse(),this.reloadWFSlider()}getActiveSlide(){return this._slides[this._index]}getAllSlides(){return[...this._slides]}getSlideByIndex(e){return this._slides[e]}getActiveSlideIndex(){return this._index}getPreviousSlideIndex(){return this._sliderConfig.previous}goNext(){this._sliderConfig.right.click()}goPrevious(){this._sliderConfig.left.click()}goToIndex(e){e>=0&&e<this._slides.length&&(console.log(e),n(this._sliderConfig.nav.children()[e]).click())}addSlide(s,t={}){const i=t.index,r=t.cssClass,l=(0,e.createComponent)(\"div\");l.addCssClass(\"w-slide\"),r&&l.addCssClass(r),l.appendChild(s);const d=\"number\"!=typeof i?-1:i,n=this._slides;d>=0&&d<=n.length?n.splice(i,0,l):n.push(l),this._slides=[...n],this.refereshSlides()}removeSlide(e){const s=[...this._slides];e>=0&&e<s.length&&s.splice(e,1),this._slides=[...s],console.log(this._slides),this.refereshSlides()}getSlideNav(){return this._nav}setSlideNavigationState(e){e?(this._left.removeCssClass(\"xa-slider-disable\"),this._right.removeCssClass(\"xa-slider-disable\"),this._nav.removeCssClass(\"xa-slider-disable\"),this.setAttribute(\"data-disable-swipe\",this._defaultSwipeDisabled?\"true\":\"false\")):(this._left.addCssClass(\"xa-slider-disable\"),this._right.addCssClass(\"xa-slider-disable\"),this._nav.addCssClass(\"xa-slider-disable\"),this.setAttribute(\"data-disable-swipe\",\"true\")),this.reloadWFSlider()}onSlideChange(e){const t=(0,s.v4)();return this._listeners.set(t,e),()=>{this._listeners.delete(t)}}_triggerOnChange(){Array.from(this._listeners.values()).forEach((e=>{e(this._index,this._sliderConfig.previous)}))}getConfig(){return this._sliderConfig}}var a,h;a=module.exports,h=d,Object.keys(h).forEach((function(e){\"default\"===e||\"__esModule\"===e||a.hasOwnProperty(e)||Object.defineProperty(a,e,{enumerable:!0,get:function(){return h[e]}})}));","import { WFComponent, WFFormComponent } from \"@xatom/core\";\nimport {\n  setupValidation,\n  createValidationFunction,\n  toggleError,\n} from \"../../../../../utils/formUtils\";\nimport {\n  validateNotEmpty,\n  validateEmailOptional,\n  validatePhoneNumberOptional,\n} from \"../../../../../utils/validationUtils\";\nimport { handleRecaptcha } from \"../../../../../utils/recaptchaUtils\";\nimport { apiClient } from \"../../../../../api/apiConfig\";\nimport { WFSlider } from \"@xatom/slider\";\nimport { userAuth } from \"../../../../../auth/authConfig\";\n\ntype ApiResponse<T> = {\n  status: string;\n  message?: string;\n  profile?: T;\n};\n\ntype StudentProfile = {\n  id: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n  phone: string;\n  send_texts: boolean;\n};\n\nexport const initializeStepOne = (slider: WFSlider) => {\n  console.log(\"Initialize Add Student Form\");\n\n  // Set sidebar first name from userAuth\n  const firstNameText = new WFComponent(\"#firstNameText\");\n  firstNameText.setText(userAuth.getUser().profile.first_name);\n  console.log(`First name set to: ${userAuth.getUser().profile.first_name}`);\n\n  // Step 1 Form Initialization\n  const formStepOne = new WFFormComponent<{\n    first_name: string;\n    last_name: string;\n    email: string;\n    phone: string;\n    send_texts: boolean;\n  }>(\"#formStepOne\");\n\n  // Check if current_student exists in local storage\n  const existingStudent = localStorage.getItem(\"current_student\");\n  console.log(`Existing Student at Initialization: ${existingStudent}`);\n  if (existingStudent) {\n    try {\n      const student = JSON.parse(existingStudent);\n      console.log(\"Parsed existing student data:\", student);\n      formStepOne.setFromData({\n        first_name: student.first_name,\n        last_name: student.last_name,\n        email: student.email,\n        phone: student.phone,\n        send_texts: student.send_texts,\n      });\n    } catch (parseError) {\n      console.error(\"Error parsing existing_student:\", parseError);\n    }\n  }\n\n  // Define the fields with associated validation rules and error messages\n  const fieldsStepOne = [\n    {\n      input: new WFComponent(\"#firstNameInput\"),\n      error: new WFComponent(\"#firstNameInputError\"),\n      validationFn: validateNotEmpty,\n      message: \"First name is required\",\n    },\n    {\n      input: new WFComponent(\"#lastNameInput\"),\n      error: new WFComponent(\"#lastNameInputError\"),\n      validationFn: validateNotEmpty,\n      message: \"Last name is required\",\n    },\n    {\n      input: new WFComponent(\"#emailInput\"),\n      error: new WFComponent(\"#emailInputError\"),\n      validationFn: validateEmailOptional,\n      message: \"Please enter a valid email address\",\n    },\n    {\n      input: new WFComponent(\"#phoneNumberInput\"),\n      error: new WFComponent(\"#phoneNumberInputError\"),\n      validationFn: validatePhoneNumberOptional,\n      message: \"Please enter a valid phone number or leave it empty\",\n    },\n  ];\n\n  // Auto-format phone number input to (xxx) xxx-xxxx\n  const phoneNumberInput = new WFComponent(\"#phoneNumberInput\");\n  phoneNumberInput.on(\"input\", () => {\n    const inputElement = phoneNumberInput.getElement() as HTMLInputElement;\n    const cursorPosition = inputElement.selectionStart as number;\n    const originalValue = inputElement.value;\n    inputElement.value = formatPhoneNumber(inputElement.value);\n    const formattedLength = inputElement.value.length;\n    const cleanedLength = inputElement.value.replace(/\\D/g, \"\").length;\n    inputElement.setSelectionRange(\n      cursorPosition + (formattedLength - cleanedLength),\n      cursorPosition + (formattedLength - cleanedLength)\n    );\n    console.log(\n      `Phone number formatted from \"${originalValue}\" to \"${inputElement.value}\"`\n    );\n  });\n\n  // Initialize validation for each field\n  fieldsStepOne.forEach(({ input, error, validationFn, message }) => {\n    input.on(\"blur\", () => {\n      const errorMessage = createValidationFunction(input, validationFn, message)();\n      if (errorMessage) {\n        toggleError(error, errorMessage, true);\n      } else {\n        toggleError(error, \"\", false);\n      }\n    });\n\n    setupValidation(\n      input,\n      error,\n      createValidationFunction(input, validationFn, message),\n      new WFComponent(\"#submitStepOneError\")\n    );\n  });\n\n  // Handle form submission for Step 1\n  formStepOne.onFormSubmit(async (formData, event) => {\n    event.preventDefault();\n    console.log(\"Form submission initiated.\");\n    const stepOneRequestingAnimation = new WFComponent(\"#stepOneRequestingAnimation\");\n    stepOneRequestingAnimation.setStyle({ display: \"block\" });\n\n    let isFormValid = true;\n    fieldsStepOne.forEach(({ input, error, validationFn, message }) => {\n      const errorMessage = createValidationFunction(input, validationFn, message)();\n      if (errorMessage) {\n        toggleError(error, errorMessage, true);\n        isFormValid = false;\n      } else {\n        toggleError(error, \"\", false);\n      }\n    });\n\n    if (!isFormValid) {\n      toggleError(new WFComponent(\"#submitStepOneError\"), \"Please correct all errors above.\", true);\n      stepOneRequestingAnimation.setStyle({ display: \"none\" });\n      return;\n    }\n\n    const existingStudentNow = localStorage.getItem(\"current_student\");\n    if (existingStudentNow) {\n      try {\n        const student = JSON.parse(existingStudentNow);\n        const formMatchesExisting = compareFormDataWithStudent(formData, student);\n\n        if (formMatchesExisting) {\n          slider.goNext();\n          stepOneRequestingAnimation.setStyle({ display: \"none\" });\n          return;\n        } else {\n          const updatedProfile = await updateStudentProfile(student.id, formData);\n          localStorage.setItem(\"current_student\", JSON.stringify(updatedProfile));\n          slider.goNext();\n        }\n      } catch (error: any) {\n        const errorMessage =\n          error.response?.data?.message || error.message || \"Failed to update student profile.\";\n        toggleError(new WFComponent(\"#submitStepOneError\"), errorMessage, true);\n      } finally {\n        stepOneRequestingAnimation.setStyle({ display: \"none\" });\n      }\n      return;\n    }\n\n    const recaptchaAction = \"create_account\";\n    const isRecaptchaValid = await handleRecaptcha(recaptchaAction);\n    if (!isRecaptchaValid) {\n      toggleError(\n        new WFComponent(\"#submitStepOneError\"),\n        \"reCAPTCHA verification failed. Please try again.\",\n        true\n      );\n      stepOneRequestingAnimation.setStyle({ display: \"none\" });\n      return;\n    }\n\n    try {\n      const response = await apiClient\n        .post<ApiResponse<StudentProfile>>(\"/profiles/students/create-student\", {\n          data: formData,\n        })\n        .fetch();\n\n      if (response.status === \"success\" && response.profile) {\n        localStorage.setItem(\"current_student\", JSON.stringify(response.profile));\n        slider.goNext();\n      } else {\n        throw new Error(response.message || \"Failed to create student profile.\");\n      }\n    } catch (error: any) {\n      const errorMessage =\n        error.response?.data?.message || error.message || \"Failed to create student profile.\";\n      toggleError(new WFComponent(\"#submitStepOneError\"), errorMessage, true);\n    } finally {\n      stepOneRequestingAnimation.setStyle({ display: \"none\" });\n    }\n  });\n};\n\nfunction formatPhoneNumber(value: string): string {\n  const cleaned = value.replace(/\\D/g, \"\");\n  return cleaned.length <= 3\n    ? cleaned\n    : cleaned.length <= 6\n    ? `(${cleaned.slice(0, 3)}) ${cleaned.slice(3)}`\n    : `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6, 10)}`;\n}\n\nfunction compareFormDataWithStudent(formData: StudentProfile, student: StudentProfile): boolean {\n  return (\n    formData.first_name === student.first_name &&\n    formData.last_name === student.last_name &&\n    formData.email === student.email &&\n    formData.phone === student.phone &&\n    formData.send_texts === student.send_texts\n  );\n}\n\nasync function updateStudentProfile(id: string, formData: StudentProfile): Promise<StudentProfile> {\n  const response = await apiClient\n    .post<ApiResponse<StudentProfile>>(\"/profiles/students/create-student-updated\", {\n      data: { ...formData, id },\n    })\n    .fetch();\n\n  if (response.status === \"success\" && response.profile) {\n    return response.profile;\n  } else {\n    throw new Error(response.message || \"Failed to update student profile.\");\n  }\n}\n","import { WFComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../api/apiConfig\";\nimport { userAuth } from \"../auth/authConfig\";\n\nexport function toggleError(\n  errorMessageComponent: WFComponent<any>,\n  message: string,\n  show: boolean\n): void {\n  errorMessageComponent.updateTextViaAttrVar({ text: show ? message : \"\" });\n  errorMessageComponent.setStyle({ display: show ? \"flex\" : \"none\" });\n}\n\nexport function setupValidation(\n  inputComponent: WFComponent,\n  errorComponent: WFComponent,\n  validate: () => string,\n  requestErrorComponent?: WFComponent // Optional component to clear on input change\n) {\n  const validateAndUpdate = () => {\n    const errorMessage = validate();\n    toggleError(errorComponent, errorMessage, !!errorMessage);\n    if (requestErrorComponent && errorMessage === \"\") {\n      // Clear request error message when the user is correcting the input\n      toggleError(requestErrorComponent, \"\", false);\n    }\n  };\n\n  // Attach event listeners for real-time validation\n  inputComponent.on(\"input\", validateAndUpdate);\n  inputComponent.on(\"blur\", validateAndUpdate);\n  inputComponent.on(\"change\", validateAndUpdate);\n}\n\nexport function createValidationFunction(\n  inputComponent: WFComponent,\n  validationFn: (input: string) => boolean,\n  errorMessage: string\n): () => string {\n  return () => {\n    const inputElement = inputComponent.getElement() as HTMLInputElement;\n    const isValid = validationFn(inputElement.value);\n    return isValid ? \"\" : errorMessage;\n  };\n}\n\nexport function createCheckboxValidationFunction(\n  checkboxComponent: WFComponent,\n  errorMessage: string\n): () => string {\n  return () => {\n    const checkbox = checkboxComponent.getElement() as HTMLInputElement;\n    return checkbox.checked ? \"\" : errorMessage;\n  };\n}\n\nexport function setupCheckboxValidation(\n  checkboxComponent: WFComponent,\n  checkboxErrorComponent: WFComponent,\n  errorMessage: string\n) {\n  const validate = createCheckboxValidationFunction(\n    checkboxComponent,\n    errorMessage\n  );\n  setupValidation(checkboxComponent, checkboxErrorComponent, validate);\n}\n\nexport function validateSelectedSessions(\n  selectedSessions: { sessionId: string; studentIds: string[] }[],\n  errorMessageComponent: WFComponent<any>,\n  errorMessage: string\n): boolean {\n  const isValid =\n    selectedSessions.length > 0 &&\n    selectedSessions.some((session) => session.studentIds.length > 0);\n\n  if (!isValid) {\n    toggleError(errorMessageComponent, errorMessage, true);\n  } else {\n    toggleError(errorMessageComponent, \"\", false);\n  }\n\n  return isValid;\n}\n\ntype fileUploadResponse = {\n  status: string;\n  url: {\n    profile_pic: {\n      url: string;\n    };\n  };\n};\n\n/**\n * Updates the user's profile picture URL in the authentication system.\n * @param {string} imageUrl - The URL of the uploaded image.\n */\nexport function setProfilePicUrl(imageUrl: string): void {\n  const user = userAuth.getUser();\n  if (user && user.profile) {\n    // Ensure the profile_picture object exists\n    user.profile.profile_pic = user.profile.profile_pic || { url: \"\" };\n\n    // Set the profile picture URL\n    user.profile.profile_pic.url = imageUrl;\n    userAuth.setUser(user);\n    localStorage.setItem(\"auth_user\", JSON.stringify(user));\n  }\n}\n\n/**\n * Handles file upload and displays the uploaded image.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */\n/**\n * Handles file upload and displays the uploaded image.\n * Only JPEG files less than 2 MB can be uploaded.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */\nexport function setupFileUpload(\n  fileInput: WFComponent,\n  fileInputError: WFComponent,\n  fileInputSuccess: WFComponent,\n  uploadEndpoint: string\n): Promise<string> {\n  const profilePictureImage = new WFImage(\"#profilePictureImage\");\n  const uploadAnimation = new WFComponent(\"#uploadAnimation\");\n\n  const overlay = new WFComponent(\".drop-zone\");\n  let dragCounter = 0;\n\n  return new Promise<string>((resolve) => {\n    const handleFile = (file: File) => {\n      // Validate file type and size\n      const validTypes = [\"image/jpeg\", \"image/jpg\"];\n      const maxSizeInBytes = 2 * 1024 * 1024; // 2 MB\n\n      if (\n        !validTypes.includes(file.type) &&\n        !/\\.(jpg|jpeg)$/i.test(file.name)\n      ) {\n        const errorMessage = \"Only JPEG images are allowed.\";\n        toggleError(fileInputError, errorMessage, true);\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n        return;\n      }\n\n      if (file.size > maxSizeInBytes) {\n        const errorMessage = \"File size must be less than 2 MB.\";\n        toggleError(fileInputError, errorMessage, true);\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n        return;\n      }\n\n      // Show upload animation immediately\n      uploadAnimation.setStyle({ display: \"flex\" });\n\n      // Hide error and success messages\n      fileInputError.setStyle({ display: \"none\" });\n      fileInputSuccess.setStyle({ display: \"none\" });\n\n      const reader = new FileReader();\n\n      // Display preview image as soon as the file is loaded into memory\n      reader.onload = (event) => {\n        // Set the preview image for the profile picture\n        const result = event.target?.result as string;\n        profilePictureImage.setImage(result);\n\n        // Hide overlay once the image is set\n        overlay.setStyle({ display: \"none\" });\n      };\n\n      reader.readAsDataURL(file);\n\n      const formData = new FormData();\n      formData.append(\"profile_picture\", file);\n\n      const existingStudent = localStorage.getItem(\"current_student\");\n      if (existingStudent) {\n        const student = JSON.parse(existingStudent);\n        formData.append(\"student_profile_id\", student.id.toString());\n      }\n\n      // Send the file to the server\n      const postRequest = apiClient.post<fileUploadResponse>(uploadEndpoint, {\n        data: formData,\n      });\n\n      postRequest.onData((response) => {\n        if (response.status === \"success\") {\n          const imageUrl = response.url.profile_pic.url;\n\n          // Update the profile picture URL in the user session and local storage\n          setProfilePicUrl(imageUrl);\n\n          // Update the image for other parts of the UI as well\n          profilePictureImage.setImage(imageUrl);\n\n          // Store the URL in local storage\n          localStorage.setItem(\"image_upload\", imageUrl);\n\n          // Show success message and hide upload animation\n          fileInputSuccess.setStyle({ display: \"flex\" });\n          uploadAnimation.setStyle({ display: \"none\" });\n\n          // Resolve with the uploaded image URL\n          resolve(imageUrl);\n        } else {\n          const errorMessage = \"Failed to upload profile picture.\";\n          toggleError(fileInputError, errorMessage, true);\n          uploadAnimation.setStyle({ display: \"none\" });\n          overlay.setStyle({ display: \"none\" });\n          dragCounter = 0;\n          // Reset file input value\n          (fileInput.getElement() as HTMLInputElement).value = \"\";\n        }\n      });\n\n      postRequest.onError((error) => {\n        let errorMessage = \"An error occurred during image upload.\";\n        if (error.response && error.response.data) {\n          errorMessage = error.response.data.message || errorMessage;\n        } else if (error.message) {\n          errorMessage = error.message;\n        }\n\n        // Show error message and hide upload animation\n        toggleError(fileInputError, errorMessage, true);\n        uploadAnimation.setStyle({ display: \"none\" });\n        overlay.setStyle({ display: \"none\" });\n        dragCounter = 0;\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n      });\n\n      // Make the API call\n      postRequest.fetch();\n    };\n\n    // Event listener for file input changes\n    fileInput.on(\"change\", () => {\n      const file = (fileInput.getElement() as HTMLInputElement).files?.[0];\n      if (file) {\n        handleFile(file);\n      }\n    });\n\n    // Event listeners for drag-and-drop\n    const dragZoneElement = document.body;\n    dragZoneElement.addEventListener(\"dragenter\", (event) => {\n      event.preventDefault();\n      dragCounter++;\n      if (dragCounter === 1) {\n        overlay.setStyle({ display: \"flex\" });\n      }\n    });\n\n    dragZoneElement.addEventListener(\"dragleave\", () => {\n      dragCounter--;\n      if (dragCounter <= 0) {\n        overlay.setStyle({ display: \"none\" });\n        dragCounter = 0;\n      }\n    });\n\n    dragZoneElement.addEventListener(\"dragover\", (event) => {\n      event.preventDefault();\n    });\n\n    dragZoneElement.addEventListener(\"drop\", (event) => {\n      event.preventDefault();\n\n      const files = event.dataTransfer?.files;\n      if (files?.length) {\n        handleFile(files[0]);\n      }\n\n      overlay.setStyle({ display: \"none\" });\n      dragCounter = 0;\n    });\n  });\n}\n\n// src/utils/formUtils.ts\n\n/**\n * Formats a phone number string to the format (xxx) xxx-xxxx.\n * If the input contains more than 10 digits, it truncates the extra digits.\n * If it contains fewer, it formats as much as possible.\n *\n * @param value - The raw phone number string.\n * @returns The formatted phone number string.\n */\nexport const formatPhoneNumber = (value: string): string => {\n  const cleaned = value.replace(/\\D/g, \"\"); // Remove all non-digit characters\n\n  if (cleaned.length <= 3) {\n    return cleaned;\n  } else if (cleaned.length <= 6) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3)}`;\n  } else if (cleaned.length <= 10) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(\n      6\n    )}`;\n  } else {\n    // If more than 10 digits, truncate the extra digits\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(\n      6,\n      10\n    )}`;\n  }\n};\n","var t=require(\"@xatom/core\");var e,r,s,i,o,n,u={};e=u,r=\"WFImage\",s=()=>c,Object.defineProperty(e,r,{get:s,set:i,enumerable:!0,configurable:!0});class c extends t.WFComponent{constructor(t){super(t)}getImageConfig(){return this._config}getSrc(){return this.getAttribute(\"src\")}getSizes(){return this.getAttribute(\"sizes\")}getSrcSet(){return this.getAttribute(\"srcset\")}getLoading(){return this.getAttribute(\"loading\")}onLoad(t){return this.on(\"load\",t),()=>{this.off(\"load\",t)}}onLoadError(t){return this.on(\"error\",t),()=>{this.off(\"error\",t)}}setImage(t){if(\"string\"==typeof t)this.setAttribute(\"src\",t),this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");else{if(this.setAttribute(\"src\",t.src),\"object\"==typeof t&&t.srcSet&&t.srcSet.length&&t.sizes&&t.sizes.length){const e=t.srcSet.map((t=>`${t.url} ${t.size}`)).join(\", \");this.setAttribute(\"srcset\",e)}else this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");t.loading&&this.setAttribute(\"loading\",t.loading)}}}o=module.exports,n=u,Object.keys(n).forEach((function(t){\"default\"===t||\"__esModule\"===t||o.hasOwnProperty(t)||Object.defineProperty(o,t,{enumerable:!0,get:function(){return n[t]}})}));","import { WFComponent } from \"@xatom/core\";\nimport { toggleError } from \"./formUtils\";\n\nexport function validateNotEmpty(input: string | undefined): boolean {\n  return input !== undefined && input.trim() !== \"\";\n}\n\nexport function validateEmail(input: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(input);\n}\n\n/**\n * Validates that the email is either empty or correctly formatted.\n * @param value The email input value.\n * @returns True if valid, false otherwise.\n */\nexport const validateEmailOptional = (value: string): boolean => {\n  if (value.trim() === \"\") {\n    // Email is optional, so empty string is valid\n    return true;\n  }\n  // Validate the email format if not empty\n  return validateEmail(value);\n};\n\nexport function validatePasswordRequirements(password: string): boolean {\n  const hasLowercase = /[a-z]/.test(password);\n  const hasUppercase = /[A-Z]/.test(password);\n  const hasDigit = /\\d/.test(password);\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n  const hasValidLength = password.length >= 8;\n  return (\n    hasLowercase && hasUppercase && hasDigit && hasSpecialChar && hasValidLength\n  );\n}\n\nexport function validateCheckbox(checked: boolean): boolean {\n  return checked;\n}\n\nexport function validatePasswordsMatch(\n  originalPassword: string,\n  confirmPassword: string\n): boolean {\n  return originalPassword === confirmPassword;\n}\n\nexport function validateSelectField(input: string | undefined): boolean {\n  return input !== undefined && input !== \"N/A\";\n}\n\nexport function validatePhoneNumber(input: string): boolean {\n  const phoneRegex = /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/;\n  return phoneRegex.test(input);\n}\n\nexport const validatePhoneNumberOptional = (value: string): boolean => {\n  if (value.trim() === \"\") {\n    // Phone number is optional, so empty string is valid\n    return true;\n  }\n  // Validate the phone number format if not empty\n  return validatePhoneNumber(value);\n};\n","//../../utils/recaptchaUtils.ts\nimport { apiClient } from \"../api/apiConfig\";\n\n// Declaration for the global reCAPTCHA variable.\ndeclare const grecaptcha: any;\n\n/**\n * Asynchronously obtains a reCAPTCHA token for a specified action.\n * @param {string} action - The action name for which the reCAPTCHA token is requested.\n * @returns {Promise<string>} A promise that resolves with the reCAPTCHA token.\n */\nexport async function getRecaptchaToken(action: string): Promise<string> {\n  return new Promise<string>((resolve, reject) => {\n    // Ensure grecaptcha is ready and execute the token request.\n    grecaptcha.ready(() => {\n      grecaptcha\n        .execute(\"6Lekaa8pAAAAAN6qiq0LSP5Akckql4Blg6K5ToUq\", { action: action })\n        .then((token: string) => {\n          resolve(token); // Resolve with the obtained token.\n        }, reject); // Reject the promise if there is an error.\n    });\n  });\n}\n\n/**\n * Validates a reCAPTCHA token with the backend server.\n * @param {string} token - The reCAPTCHA token to validate.\n * @returns {Promise<any>} A promise that resolves with the validation response from the server.\n */\nexport async function validateRecaptchaToken(token: string): Promise<any> {\n  try {\n    // Send the reCAPTCHA token to the server for validation.\n    const response = await apiClient\n      .post(\"/recaptcha/validate\", {\n        data: { \"g-recaptcha-response\": token },\n      })\n      .fetch();\n\n    // Return the server's response directly assuming it's already in JSON format.\n    return response; // Assume response is the direct JSON body.\n  } catch (error) {\n    throw new Error(`ReCAPTCHA validation failed: ${error}`);\n  }\n}\n\n/**\n * Handles the full reCAPTCHA verification flow from obtaining the token to validating it.\n * @param {string} action - The action name for which the reCAPTCHA should be processed.\n * @returns {Promise<boolean>} A promise that resolves with true if the reCAPTCHA verification is successful.\n */\nexport async function handleRecaptcha(action: string): Promise<boolean> {\n  try {\n    const token = await getRecaptchaToken(action);\n    const validationResponse = await validateRecaptchaToken(token);\n    return validationResponse.status === \"success\";\n  } catch (error) {\n    console.error(\"ReCAPTCHA handling failed:\", error);\n    // If error has a response, log it for more context\n    if (error.response) {\n      console.error(\"Error response:\", error.response);\n    }\n    return false;\n  }\n}\n","import { WFComponent, WFFormComponent } from \"@xatom/core\";\nimport {\n  setupValidation,\n  createValidationFunction,\n  toggleError,\n  setupFileUpload,\n} from \"../../../../../utils/formUtils\";\nimport {\n  validateNotEmpty,\n  validateSelectField,\n} from \"../../../../../utils/validationUtils\";\nimport { WFSlider } from \"@xatom/slider\";\nimport { unmarkStepAsCompleted, unsetActiveStep } from \"../sidebar\";\n\n/**\n * Initializes Step Two of the Add Student Profile Form.\n * Handles image uploads, field validations, and form submissions.\n * @param slider - The WFSlider instance controlling the form steps.\n */\nexport const initializeStepTwo = (slider: WFSlider) => {\n  console.log(\"Initialize Step Two Form\");\n\n  // Step 2 Form Initialization\n  const formStepTwo = new WFFormComponent<{\n    profile_pic: string;\n    grade: string;\n    school: string;\n    dob: string;\n    gender: string;\n  }>(\"#formStepTwo\");\n\n  // File Upload Setup for Profile Picture\n  const profilePictureInput = new WFComponent(\"#profilePictureInput\");\n  const profilePictureInputError = new WFComponent(\"#profilePictureInputError\");\n  const profilePictureInputSuccess = new WFComponent(\n    \"#profilePictureInputSuccess\"\n  );\n\n  // Set up file upload with enhanced functionality\n  setupFileUpload(\n    profilePictureInput,\n    profilePictureInputError,\n    profilePictureInputSuccess,\n    \"/profiles/students/image-upload\" // Replace with your actual endpoint\n  )\n    .then((imageUrl) => {\n      console.log(\"Image uploaded successfully: \", imageUrl);\n\n      // Update the 'profile_pic' field in the form with the uploaded image URL\n      const profilePicInputElement = document.querySelector(\n        \"#profile_pic\"\n      ) as HTMLInputElement;\n      if (profilePicInputElement) {\n        profilePicInputElement.value = imageUrl;\n        console.log(`'profile_pic' field set to: ${imageUrl}`);\n      } else {\n        console.warn(\n          \"Profile picture input element ('#profile_pic') not found.\"\n        );\n      }\n\n      // Indicate success to the user\n      profilePictureInputSuccess.setText(\"Image uploaded successfully!\");\n    })\n    .catch((error) => {\n      console.error(\"Error uploading image: \", error.message);\n      toggleError(\n        profilePictureInputError,\n        \"Failed to upload image. Please try again.\",\n        true\n      );\n    });\n\n  // Define the fields with associated validation rules and error messages\n  const fieldsStepTwo = [\n    {\n      input: new WFComponent(\"#gradeInput\"),\n      error: new WFComponent(\"#gradeInputError\"),\n      validationFn: validateSelectField,\n      message: \"Grade is required\",\n    },\n    {\n      input: new WFComponent(\"#schoolInput\"),\n      error: new WFComponent(\"#schoolInputError\"),\n      validationFn: validateNotEmpty,\n      message: \"School is required\",\n    },\n    {\n      input: new WFComponent(\"#dobInput\"),\n      error: new WFComponent(\"#dobInputError\"),\n      validationFn: validateNotEmpty,\n      message: \"Date of birth is required\",\n    },\n    {\n      input: new WFComponent(\"#genderInput\"),\n      error: new WFComponent(\"#genderInputError\"),\n      validationFn: validateSelectField,\n      message: \"Please select an option\",\n    },\n  ];\n\n  // Initialize validation for each field\n  fieldsStepTwo.forEach(({ input, error, validationFn, message }) => {\n    setupValidation(\n      input,\n      error,\n      createValidationFunction(input, validationFn, message),\n      new WFComponent(\"#submitStepTwoError\")\n    );\n  });\n\n  // Handle form submission for Step 2\n  formStepTwo.onFormSubmit(async (formData, event) => {\n    event.preventDefault(); // Stop default form submission\n    console.log(\"Step Two Form submission initiated.\");\n\n    let isFormValid = true;\n\n    // Validate all fields before proceeding\n    fieldsStepTwo.forEach(({ input, error, validationFn, message }) => {\n      const errorMessage = createValidationFunction(\n        input,\n        validationFn,\n        message\n      )();\n      console.log(\n        `Validation result for ${input.getElement().id}: \"${errorMessage}\"`\n      );\n      if (errorMessage) {\n        toggleError(error, errorMessage, true);\n        isFormValid = false;\n      } else {\n        toggleError(error, \"\", false);\n      }\n    });\n\n    if (!isFormValid) {\n      toggleError(\n        new WFComponent(\"#submitStepTwoError\"),\n        \"Please correct all errors above.\",\n        true\n      );\n      console.log(\"Form validation failed. Errors are displayed.\");\n      return;\n    }\n\n    // **Check if an image was uploaded by examining the 'profile_pic' field**\n    if (!formData.profile_pic) {\n      localStorage.removeItem(\"image_upload\");\n      console.log(\"No image uploaded. Cleared 'image_upload' from local storage.\");\n    } else {\n      // Optionally, you can ensure 'image_upload' is set correctly if needed\n      // Example:\n      // localStorage.setItem(\"image_upload\", formData.profile_pic);\n      console.log(\"'profile_pic' exists. No action taken on 'image_upload'.\");\n    }\n\n    // Proceed to the next step\n    console.log(\"Form is valid. Navigating to the next step.\");\n    slider.goNext();\n  });\n\n  // Handle back button for Step 2\n  const backStepButton = new WFComponent(\"#backStepTwo\");\n  backStepButton.on(\"click\", () => {\n    console.log(\"Back button clicked. Navigating to the previous step.\");\n    slider.goPrevious();\n    unsetActiveStep(2);\n    unmarkStepAsCompleted(1);\n    unmarkStepAsCompleted(2);\n  });\n};\n","import { WFComponent, WFFormComponent } from \"@xatom/core\";\nimport {\n  setupValidation,\n  createValidationFunction,\n  toggleError,\n} from \"../../../../../utils/formUtils\";\nimport { validateNotEmpty } from \"../../../../../utils/validationUtils\";\nimport { WFSlider } from \"@xatom/slider\";\nimport { unmarkStepAsCompleted, unsetActiveStep } from \"../sidebar\";\n\nexport const initializeStepThree = (slider: WFSlider) => {\n  console.log(\"Initialize Step Three Form\");\n\n  // Step 3 Form Initialization\n  const formStepThree = new WFFormComponent<{\n    health: string;\n  }>(\"#formStepThree\");\n\n  // Define the fields with associated validation rules and error messages\n  const fieldsStepThree = [\n    {\n      input: new WFComponent(\"#healthInput\"),\n      error: new WFComponent(\"#healthInputError\"),\n      validationFn: validateNotEmpty,\n      message: \"Health information is required\",\n    },\n  ];\n\n  // Initialize validation for each field\n  fieldsStepThree.forEach(({ input, error, validationFn, message }) => {\n    setupValidation(\n      input,\n      error,\n      createValidationFunction(input, validationFn, message),\n      new WFComponent(\"#submitStepThreeError\")\n    );\n  });\n\n  // Handle form submission for Step 3\n  formStepThree.onFormSubmit(async (formData, event) => {\n    event.preventDefault(); // Stop default form submission\n    let isFormValid = true;\n\n    // Validate all fields before proceeding\n    fieldsStepThree.forEach(({ input, error, validationFn, message }) => {\n      const errorMessage = createValidationFunction(\n        input,\n        validationFn,\n        message\n      )();\n      if (errorMessage) {\n        toggleError(error, errorMessage, true);\n        isFormValid = false;\n      } else {\n        toggleError(error, \"\", false);\n      }\n    });\n\n    if (!isFormValid) {\n      toggleError(\n        new WFComponent(\"#submitStepThreeError\"),\n        \"Please correct all errors above.\",\n        true\n      );\n      return;\n    }\n\n    // Proceed to the next step\n    slider.goNext();\n  });\n\n  // Handle back button for Step 3\n  const backStepButton = new WFComponent(\"#backStepThree\");\n  backStepButton.on(\"click\", () => {\n    slider.goPrevious();\n    unsetActiveStep(3);\n    unmarkStepAsCompleted(2);\n    unmarkStepAsCompleted(3);\n  });\n};\n","import { WFComponent } from \"@xatom/core\";\nimport { WFSlider } from \"@xatom/slider\";\nimport { initializeCaregiverDialog } from \"../caregiverDialog\";\nimport { unmarkStepAsCompleted, unsetActiveStep } from \"../sidebar\";\n\nexport const initializeStepFour = (slider: WFSlider) => {\n  console.log(\"Initialize Step Four Form - Invite Caregiver\");\n\n  // Initialize Caregiver Dialog/Form\n  initializeCaregiverDialog();\n\n  // Handle Step 4 submission (Continue to Step 5)\n  const submitStepFour = new WFComponent(\"#submitStepFour\");\n  submitStepFour.on(\"click\", () => {\n    slider.goNext();\n  });\n\n  // Handle back button for Step 4\n  const backStepButton = new WFComponent(\"#backStepFour\");\n  backStepButton.on(\"click\", () => {\n    slider.goPrevious();\n    unsetActiveStep(4);\n    unmarkStepAsCompleted(3);\n    unmarkStepAsCompleted(4);\n  });\n};\n","import { WFComponent, WFFormComponent } from \"@xatom/core\";\nimport {\n  setupValidation,\n  createValidationFunction,\n  toggleError,\n} from \"../../../../utils/formUtils\";\nimport { validateEmail } from \"../../../../utils/validationUtils\";\nimport { handleRecaptcha } from \"../../../../utils/recaptchaUtils\";\nimport { apiClient } from \"../../../../api/apiConfig\";\n\nexport const initializeCaregiverDialog = () => {\n  console.log(\"Initialize Invite Caregiver Form\");\n\n  // Caregiver Form Initialization\n  const caregiverForm = new WFFormComponent<{\n    caregiver_email: string;\n  }>(\"#inviteCaregiverDialog\");\n\n  // Define the fields with associated validation rules and error messages\n  const fieldsCaregiver = [\n    {\n      input: new WFComponent(\"#caregiverEmailInput\"),\n      error: new WFComponent(\"#caregiverEmailInputError\"),\n      validationFn: validateEmail,\n      message: \"Please enter a valid email address\",\n    },\n  ];\n\n  // Initialize validation for each field\n  fieldsCaregiver.forEach(({ input, error, validationFn, message }) => {\n    setupValidation(\n      input,\n      error,\n      createValidationFunction(input, validationFn, message),\n      new WFComponent(\"#submitInviteCaregiverError\")\n    );\n  });\n\n  // Handle form submission for Caregiver Form\n  caregiverForm.onFormSubmit(async (formData, event) => {\n    event.preventDefault(); // Stop default form submission\n    const caregiverRequestingAnimation = new WFComponent(\"#caregiverRequestingAnimation\");\n    caregiverRequestingAnimation.setStyle({ display: \"block\" }); // Show loading animation\n\n    let isFormValid = true;\n\n    // Validate all fields before proceeding\n    fieldsCaregiver.forEach(({ input, error, validationFn, message }) => {\n      const errorMessage = createValidationFunction(input, validationFn, message)();\n      if (errorMessage) {\n        toggleError(error, errorMessage, true);\n        isFormValid = false;\n      } else {\n        toggleError(error, \"\", false);\n      }\n    });\n\n    if (!isFormValid) {\n      console.log(\"Validation failed:\", formData);\n      toggleError(\n        new WFComponent(\"#submitInviteCaregiverError\"),\n        \"Please correct all errors above.\",\n        true\n      );\n      caregiverRequestingAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n      return;\n    }\n\n    // Handle reCAPTCHA verification\n    const recaptchaAction = \"complete_caregiver\";\n    const isRecaptchaValid = await handleRecaptcha(recaptchaAction);\n    if (!isRecaptchaValid) {\n      toggleError(\n        new WFComponent(\"#submitInviteCaregiverError\"),\n        \"reCAPTCHA verification failed. Please try again.\",\n        true\n      );\n      caregiverRequestingAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n      return;\n    }\n\n    // Post data to a server endpoint\n    try {\n      const response = await apiClient\n        .post<{ status: string; message?: string }>(\"/caregivers/invite\", {\n          data: formData,\n        })\n        .fetch();\n\n      if (response.status === \"success\") {\n        const onSuccessTrigger = new WFComponent(\"#inviteCaregiverSuccessTrigger\");\n        caregiverForm.showSuccessState();\n        onSuccessTrigger.getElement()?.click();\n      } else {\n        throw new Error(response.message || \"Failed to invite caregiver.\");\n      }\n    } catch (error: any) {\n      console.error(\"Error inviting caregiver:\", error);\n      const errorMessage =\n        error.response?.data?.message || error.message || \"Failed to invite caregiver.\";\n      toggleError(\n        new WFComponent(\"#submitInviteCaregiverError\"),\n        errorMessage,\n        true\n      );\n    } finally {\n      caregiverRequestingAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n    }\n  });\n\n  // Initialize reset form button\n  const resetCaregiverForm = new WFComponent(\"#resetCaregiverForm\");\n  resetCaregiverForm.on(\"click\", () => {\n    caregiverForm.resetForm();\n    caregiverForm.showForm();\n    const onSuccessTrigger = new WFComponent(\"#inviteCaregiverSuccessTrigger\");\n    onSuccessTrigger.getElement()?.click();\n  });\n};\n","import { WFComponent, WFFormComponent } from \"@xatom/core\";\nimport {\n  setupValidation,\n  createValidationFunction,\n  toggleError,\n} from \"../../../../../utils/formUtils\";\nimport {\n  validateNotEmpty,\n  validateEmail,\n  validatePhoneNumber,\n} from \"../../../../../utils/validationUtils\";\nimport { WFSlider } from \"@xatom/slider\";\nimport { unmarkStepAsCompleted, unsetActiveStep } from \"../sidebar\";\n\nexport const initializeStepFive = (slider: WFSlider) => {\n  console.log(\"Initialize Step Five Form - Emergency Contact\");\n\n  // Step 5 Form Initialization\n  const formStepFive = new WFFormComponent<{\n    emergency_first_name: string;\n    emergency_last_name: string;\n    emergency_email: string;\n    emergency_phone: string;\n    emergency_relationship: string;\n  }>(\"#formStepFive\");\n\n  // Define the fields with associated validation rules and error messages\n  const fieldsStepFive = [\n    {\n      input: new WFComponent(\"#emergencyFirstNameInput\"),\n      error: new WFComponent(\"#emergencyFirstNameInputError\"),\n      validationFn: validateNotEmpty,\n      message: \"First name is required\",\n    },\n    {\n      input: new WFComponent(\"#emergencyLastNameInput\"),\n      error: new WFComponent(\"#emergencyLastNameInputError\"),\n      validationFn: validateNotEmpty,\n      message: \"Last name is required\",\n    },\n    {\n      input: new WFComponent(\"#emergencyEmailInput\"),\n      error: new WFComponent(\"#emergencyEmailInputError\"),\n      validationFn: validateEmail,\n      message: \"Please enter a valid email address\",\n    },\n    {\n      input: new WFComponent(\"#emergencyPhoneInput\"),\n      error: new WFComponent(\"#emergencyPhoneInputError\"),\n      validationFn: validatePhoneNumber,\n      message: \"Please enter a valid phone number\",\n    },\n    {\n      input: new WFComponent(\"#emergencyRelationshipInput\"),\n      error: new WFComponent(\"#emergencyRelationshipInputError\"),\n      validationFn: validateNotEmpty,\n      message: \"Relationship is required\",\n    },\n  ];\n\n  // Auto-format phone number input to (xxx) xxx-xxxx\n  const emergencyPhoneNumberInput = new WFComponent(\"#emergencyPhoneInput\");\n  emergencyPhoneNumberInput.on(\"input\", () => {\n    const inputElement =\n      emergencyPhoneNumberInput.getElement() as HTMLInputElement;\n    const cursorPosition = inputElement.selectionStart as number;\n    inputElement.value = formatPhoneNumber(inputElement.value);\n    const formattedLength = inputElement.value.length;\n    const cleanedLength = inputElement.value.replace(/\\D/g, \"\").length;\n    inputElement.setSelectionRange(\n      cursorPosition + (formattedLength - cleanedLength),\n      cursorPosition + (formattedLength - cleanedLength)\n    );\n  });\n\n  // Initialize validation for each field\n  fieldsStepFive.forEach(({ input, error, validationFn, message }) => {\n    setupValidation(\n      input,\n      error,\n      createValidationFunction(input, validationFn, message),\n      new WFComponent(\"#submitStepFiveError\")\n    );\n  });\n\n  // Handle form submission for Step 5\n  formStepFive.onFormSubmit(async (formData, event) => {\n    event.preventDefault(); // Stop default form submission\n    let isFormValid = true;\n\n    // Validate all fields before proceeding\n    fieldsStepFive.forEach(({ input, error, validationFn, message }) => {\n      const errorMessage = createValidationFunction(\n        input,\n        validationFn,\n        message\n      )();\n      if (errorMessage) {\n        toggleError(error, errorMessage, true);\n        isFormValid = false;\n      } else {\n        toggleError(error, \"\", false);\n      }\n    });\n\n    if (!isFormValid) {\n      console.log(\"Validation failed:\", formData);\n      toggleError(\n        new WFComponent(\"#submitStepFiveError\"),\n        \"Please correct all errors above.\",\n        true\n      );\n      return;\n    }\n\n    // Proceed to the next step\n    slider.goNext();\n  });\n\n  // Handle back button for Step 5\n  const backStepButton = new WFComponent(\"#backStepFive\");\n  backStepButton.on(\"click\", () => {\n    slider.goPrevious();\n    unsetActiveStep(5);\n    unmarkStepAsCompleted(4);\n    unmarkStepAsCompleted(5);\n  });\n};\n\n// Helper function to format phone number\nfunction formatPhoneNumber(value: string): string {\n  const cleaned = value.replace(/\\D/g, \"\");\n  let formatted = \"\";\n  if (cleaned.length <= 3) {\n    formatted = cleaned;\n  } else if (cleaned.length <= 6) {\n    formatted = `(${cleaned.slice(0, 3)}) ${cleaned.slice(3)}`;\n  } else {\n    formatted = `(${cleaned.slice(0, 3)}) ${cleaned.slice(\n      3,\n      6\n    )}-${cleaned.slice(6, 10)}`;\n  }\n  return formatted;\n}\n","import { WFComponent, WFFormComponent } from \"@xatom/core\";\nimport {\n  setupValidation,\n  createValidationFunction,\n  toggleError,\n} from \"../../../../../utils/formUtils\";\nimport { validateNotEmpty } from \"../../../../../utils/validationUtils\";\nimport { WFSlider } from \"@xatom/slider\";\nimport { unmarkStepAsCompleted, unsetActiveStep } from \"../sidebar\";\n\nexport const initializeStepSix = (slider: WFSlider) => {\n  console.log(\"Initialize Step Six Form - Dismissal Permissions\");\n\n  // Step 6 Form Initialization\n  const formStepSix = new WFFormComponent<{\n    dismissal_names: string;\n    independent_travel: boolean;\n  }>(\"#formStepSix\");\n\n  // Define fields with associated validation rules and error messages\n  const fieldsStepSix = [\n    {\n      input: new WFComponent(\"#dismissalNamesInput\"),\n      error: new WFComponent(\"#dismissalNamesInputError\"),\n      validationFn: validateNotEmpty,\n      message: \"Dismissal names are required\",\n    },\n  ];\n\n  // Initialize validation for each field\n  fieldsStepSix.forEach(({ input, error, validationFn, message }) => {\n    setupValidation(\n      input,\n      error,\n      createValidationFunction(input, validationFn, message),\n      new WFComponent(\"#submitStepSixError\")\n    );\n  });\n\n  // Handle form submission for Step 6\n  formStepSix.onFormSubmit(async (formData, event) => {\n    event.preventDefault(); // Stop default form submission\n    let isFormValid = true;\n\n    // Validate all fields before proceeding\n    fieldsStepSix.forEach(({ input, error, validationFn, message }) => {\n      const errorMessage = createValidationFunction(\n        input,\n        validationFn,\n        message\n      )();\n      if (errorMessage) {\n        toggleError(error, errorMessage, true);\n        isFormValid = false;\n      } else {\n        toggleError(error, \"\", false);\n      }\n    });\n\n    if (!isFormValid) {\n      console.log(\"Validation failed:\", formData);\n      toggleError(\n        new WFComponent(\"#submitStepSixError\"),\n        \"Please correct all errors above.\",\n        true\n      );\n      return;\n    }\n\n    // Proceed to the next step\n    slider.goNext();\n  });\n\n  // Handle back button for Step 6\n  const backStepButton = new WFComponent(\"#backStepSix\");\n  backStepButton.on(\"click\", () => {\n    slider.goPrevious();\n    unsetActiveStep(6);\n    unmarkStepAsCompleted(5);\n    unmarkStepAsCompleted(6);\n  });\n};\n","import { WFComponent, WFFormComponent } from \"@xatom/core\";\nimport {\n  setupValidation,\n  createValidationFunction,\n  toggleError,\n} from \"../../../../../utils/formUtils\";\nimport { validateNotEmpty } from \"../../../../../utils/validationUtils\";\nimport { WFSlider } from \"@xatom/slider\";\nimport { unmarkStepAsCompleted, unsetActiveStep } from \"../sidebar\";\n\nexport const initializeStepSeven = (slider: WFSlider) => {\n  console.log(\n    \"Initialize Step Seven Form - Family Involvement & Photo Release\"\n  );\n\n  // Step 7 Form Initialization\n  const formStepSeven = new WFFormComponent<{\n    family_involved: string;\n    photo_release: boolean;\n    student_id: number | null;\n  }>(\"#formStepSeven\");\n\n  // Define fields with associated validation rules and error messages\n  const fieldsStepSeven = [\n    {\n      input: new WFComponent(\"#familyInvolvedInput\"),\n      error: new WFComponent(\"#familyInvolvedInputError\"),\n      validationFn: validateNotEmpty,\n      message: \"Family involvement is required\",\n    },\n  ];\n\n  // Initialize validation for each field\n  fieldsStepSeven.forEach(({ input, error, validationFn, message }) => {\n    setupValidation(\n      input,\n      error,\n      createValidationFunction(input, validationFn, message),\n      new WFComponent(\"#submitStepSevenError\")\n    );\n  });\n\n  // Handle form submission for Step 7\n  formStepSeven.onFormSubmit(async (formData, event) => {\n    event.preventDefault(); // Stop default form submission\n    let isFormValid = true;\n\n    // Validate all fields before proceeding\n    fieldsStepSeven.forEach(({ input, error, validationFn, message }) => {\n      const errorMessage = createValidationFunction(\n        input,\n        validationFn,\n        message\n      )();\n      if (errorMessage) {\n        toggleError(error, errorMessage, true);\n        isFormValid = false;\n      } else {\n        toggleError(error, \"\", false);\n      }\n    });\n\n    if (!isFormValid) {\n      console.log(\"Validation failed:\", formData);\n      toggleError(\n        new WFComponent(\"#submitStepSevenError\"),\n        \"Please correct all errors above.\",\n        true\n      );\n      return;\n    }\n\n    // Proceed to the next step\n    slider.goNext();\n  });\n\n  // Handle back button for Step 7\n  const backStepButton = new WFComponent(\"#backStepSeven\");\n  backStepButton.on(\"click\", () => {\n    slider.goPrevious();\n    unsetActiveStep(7);\n    unmarkStepAsCompleted(6);\n    unmarkStepAsCompleted(7);\n  });\n};\n","import { WFComponent } from \"@xatom/core\";\nimport { WFSlider } from \"@xatom/slider\";\nimport { WFImage } from \"@xatom/image\";\nimport { handleRecaptcha } from \"../../../../../utils/recaptchaUtils\";\nimport { apiClient } from \"../../../../../api/apiConfig\";\nimport { toggleError } from \"../../../../../utils/formUtils\";\nimport { unmarkStepAsCompleted, unsetActiveStep } from \"../sidebar\";\n\n// Prevent double-binding on initialization\nlet step8Initialized = false;\n\ntype ApiResponse<T> = {\n  status: string;\n  message?: string;\n  profile?: T;\n};\n\ntype StudentProfile = {\n  id: number;\n  first_name: string;\n  last_name: string;\n  email: string;\n  phone: string;\n  profile_pic?: {\n    url?: string;\n  };\n};\n\nexport const initializeStepEight = (slider: WFSlider, getFormData: () => any) => {\n  // Guard to ensure this setup runs only once\n  if (step8Initialized) return;\n  step8Initialized = true;\n\n  console.log(\"Initialize Step Eight\");\n\n  // Initialize form review items\n  const studentProfilePic = new WFImage(\"#studentProfilePic\");\n  const studentFullName = new WFComponent(\"#studentFullName\");\n  const studentEmail = new WFComponent(\"#studentEmail\");\n  const studentPhone = new WFComponent(\"#studentPhone\");\n  const studentGrade = new WFComponent(\"#studentGrade\");\n  const studentSchool = new WFComponent(\"#studentSchool\");\n  const studentDOB = new WFComponent(\"#studentDOB\");\n  const studentGender = new WFComponent(\"#studentGender\");\n  const studentHealth = new WFComponent(\"#studentHealth\");\n  const studentEmergencyName = new WFComponent(\"#studentEmergencyName\");\n  const studentEmergencyEmail = new WFComponent(\"#studentEmergencyEmail\");\n  const studentEmergencyPhone = new WFComponent(\"#studentEmergencyPhone\");\n  const studentEmergencyRelationship = new WFComponent(\"#studentEmergencyRelationship\");\n  const studentDismissalNames = new WFComponent(\"#studentDismissalNames\");\n  const studentTravelTrue = new WFComponent(\"#studentTravelTrue\");\n  const studentTravelFalse = new WFComponent(\"#studentTravelFalse\");\n  const studentFamily = new WFComponent(\"#studentFamily\");\n  const studentPhotoTrue = new WFComponent(\"#studentPhotoTrue\");\n  const studentPhotoFalse = new WFComponent(\"#studentPhotoFalse\");\n  const studentTextTrue = new WFComponent(\"#studentTextTrue\");\n  const studentTextFalse = new WFComponent(\"#studentTextFalse\");\n\n  // Function to set form review items from collected data\n  const setFormReviewItems = () => {\n    const data = getFormData();\n\n    // Set student profile picture if available\n    if (localStorage.getItem(\"image_upload\")) {\n      const image = localStorage.getItem(\"image_upload\");\n      studentProfilePic.setImage(image);\n    } else {\n      console.log(\"No profile picture available\");\n      studentProfilePic.setImage(\n        \"https://cdn.prod.website-files.com/667f080f36260b9afbdc46b2/667f080f36260b9afbdc46be_placeholder.svg\"\n      );\n    }\n\n    // Set form review items with the appropriate data\n    studentFullName.setText(`${data.first_name} ${data.last_name}`);\n    studentEmail.setText(data.email);\n    studentPhone.setText(data.phone);\n    studentGrade.setText(data.grade);\n    studentSchool.setText(data.school);\n    studentDOB.setText(data.dob);\n    studentGender.setText(data.gender);\n    studentHealth.setText(data.health);\n    studentEmergencyName.setText(\n      `${data.emergency_first_name} ${data.emergency_last_name}`\n    );\n    studentEmergencyEmail.setText(data.emergency_email);\n    studentEmergencyPhone.setText(data.emergency_phone);\n    studentEmergencyRelationship.setText(data.emergency_relationship);\n    studentDismissalNames.setText(data.dismissal_names);\n    studentFamily.setText(data.family_involved);\n\n    // Set independent travel info\n    if (data.independent_travel) {\n      studentTravelTrue.setStyle({ display: \"block\" });\n      studentTravelFalse.setStyle({ display: \"none\" });\n    } else {\n      studentTravelFalse.setStyle({ display: \"block\" });\n      studentTravelTrue.setStyle({ display: \"none\" });\n    }\n\n    // Set photo release info\n    if (data.photo_release) {\n      studentPhotoTrue.setStyle({ display: \"block\" });\n      studentPhotoFalse.setStyle({ display: \"none\" });\n    } else {\n      studentPhotoFalse.setStyle({ display: \"block\" });\n      studentPhotoTrue.setStyle({ display: \"none\" });\n    }\n\n    // Set text message opt-in info\n    if (data.send_texts) {\n      studentTextTrue.setStyle({ display: \"block\" });\n      studentTextFalse.setStyle({ display: \"none\" });\n    } else {\n      studentTextFalse.setStyle({ display: \"block\" });\n      studentTextTrue.setStyle({ display: \"none\" });\n    }\n  };\n\n  // Set review items when slide changes to step 8\n  slider.onSlideChange(setFormReviewItems);\n\n  // Handle Step Eight form submission (Review and Save)\n  const submitStepEight = new WFComponent(\"#submitStepEight\");\n  const stepEightRequestingAnimation = new WFComponent(\"#stepEightRequestingAnimation\");\n  const submitStepEightError = new WFComponent(\"#submitStepEightError\");\n\n  submitStepEight.on(\"click\", async (event) => {\n    event.preventDefault(); // Prevent normal form submission\n    stepEightRequestingAnimation.setStyle({ display: \"block\" }); // Show loading animation\n\n    // Handle reCAPTCHA verification\n    const recaptchaAction = \"complete_student\";\n    const isRecaptchaValid = await handleRecaptcha(recaptchaAction);\n\n    if (!isRecaptchaValid) {\n      toggleError(\n        submitStepEightError,\n        \"reCAPTCHA verification failed. Please try again.\",\n        true\n      );\n      stepEightRequestingAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n      return;\n    }\n\n    const formData = getFormData();\n\n    try {\n      const response = await apiClient\n        .post<ApiResponse<StudentProfile>>(\"/profiles/students/complete-profile\", {\n          data: formData,\n        })\n        .fetch();\n    \n      if (response.status === \"success\" && response.profile) {\n        const profile = response.profile;\n    \n        // Update the profile link template with the returned data\n        const studentProfileLinkTemplate = new WFComponent(\"#studentCard\");\n        studentProfileLinkTemplate.updateTextViaAttrVar({\n          name: `${profile.first_name} ${profile.last_name}`,\n          email: profile.email,\n          phone: profile.phone,\n        });\n    \n        // **Updated code to append ?id={student_id} to the #studentCard link**\n        const studentCardElement =\n          studentProfileLinkTemplate.getElement() as HTMLAnchorElement;\n        const currentHref = studentCardElement.getAttribute(\"href\") || \"\";\n        const newHref = `${currentHref}?id=${profile.id}`;\n        studentCardElement.setAttribute(\"href\", newHref);\n    \n        // Update the profile card image with the profile picture if available\n        const profileCardImg = new WFImage(\"#profileCardImg\");\n        if (profile.profile_pic?.url) {\n          profileCardImg.setImage(profile.profile_pic.url);\n        } else {\n          console.log(\"No profile picture available\");\n          profileCardImg.setImage(\n            \"https://cdn.prod.website-files.com/667f080f36260b9afbdc46b2/667f080f36260b9afbdc46be_placeholder.svg\"\n          );\n        }\n    \n        // Clear current student and uploaded image from local storage\n        localStorage.removeItem(\"current_student\");\n        localStorage.removeItem(\"image_upload\");\n    \n        stepEightRequestingAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n        slider.goNext(); // Navigate to the next step\n      } else {\n        toggleError(\n          submitStepEightError,\n          response.message || \"Failed to complete profile.\",\n          true\n        );\n        stepEightRequestingAnimation.setStyle({ display: \"none\" }); // Hide loading animation\n      }\n    } catch (error: any) {\n      console.error(\"Error completing profile:\", error);\n      toggleError(\n        submitStepEightError,\n        error.response?.data?.message || \"Failed to complete profile.\",\n        true\n      );\n      stepEightRequestingAnimation.setStyle({ display: \"none\" });\n    }\n  });\n\n  // Handle back button for Step 8\n  const backStepButton = new WFComponent(\"#backStepEight\");\n  backStepButton.on(\"click\", () => {\n    slider.goPrevious();\n    unsetActiveStep(8);\n    unmarkStepAsCompleted(7);\n    unmarkStepAsCompleted(8);\n  });\n};\n","import { WFComponent } from \"@xatom/core\";\nimport { WFSlider } from \"@xatom/slider\";\n\nexport const initializeStepNine = (slider: WFSlider) => {\n  // Initialize the form components for Step 9\n  const submitStepNine = new WFComponent(\"#submitStepNine\");\n  \n\n  // Event listener for submitting step nine\n  submitStepNine.on(\"click\", async (event) => {\n    event.preventDefault(); // Prevent the default behavior\n\n    try {\n      // Placeholder for any step 9 submission logic\n      console.log(\"Step 9: Submit action or add another student\");\n\n      // Proceed to the next slide without triggering any sidebar changes\n      slider.goNext();\n    } catch (error) {\n      console.error(\"Error during Step 9 submission: \", error);\n    }\n  });\n\n};\n","// src/modules/forms/profiles/addStudentProfile/steps/step10.ts\n\nimport { WFComponent } from \"@xatom/core\";\nimport { WFSlider } from \"@xatom/slider\";\n\nexport const initializeStepTen = (slider: WFSlider) => {\n  // Initialize the back button for Step 10\n  const backStepTen = new WFComponent(\"#backStepTen\");\n\n  // Event listener for going back to Step 9\n  backStepTen.on(\"click\", () => {\n    slider.goPrevious();\n  });\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","export","addStudentProfile","_core","_sidebar","_slider","_step1","_step2","_step3","_step4","_step5","_step6","_step7","_step8","_step9","_step10","console","log","initializeSidebarIndicators","slider","initializeSlider","formStepOne","WFFormComponent","formStepTwo","formStepThree","formStepFive","formStepSix","formStepSeven","initializeStepOne","initializeStepTwo","initializeStepThree","initializeStepFour","initializeStepFive","initializeStepSix","initializeStepSeven","initializeStepEight","formStepOneData","getFormData","formStepTwoData","formStepThreeData","formStepFiveData","formStepSixData","formStepSevenData","existingStudent","localStorage","getItem","studentId","JSON","parse","formData","student_id","initializeStepNine","initializeStepTen","setActiveStep","unsetActiveStep","markStepAsCompleted","unmarkStepAsCompleted","_authConfig","firstNameText","WFComponent","user","userAuth","getUser","profile","first_name","setText","steps","index","forEach","step","stepComponent","isCompleted","on","removeCssClass","addCssClass","stepNumber","stepId","getStepId","warn","getElement","click","stepMap","WFSlider","onSlideChange","activeIndex","prevIndex","getActiveSlideIndex","a","e","s","d","o","set","enumerable","configurable","n","jQuery","_sliderConfig","_slides","_defaultSwipeDisabled","_index","_listeners","Map","constructor","init","getAttribute","data","Array","from","slides","map","_mask","mask","_nav","nav","_left","left","_right","right","t","document","styleSheets","getElementsByTagName","r","l","disabled","media","indexOf","mediaText","createElement","type","appendChild","rules","selectorText","toLowerCase","style","cssText","addRule","cssRules","insertRule","_triggerOnChange","refereshSlides","reloadWFSlider","Webflow","destroy","redraw","ready","getChildAsComponents","remove","reverse","prepend","getActiveSlide","getAllSlides","getSlideByIndex","getPreviousSlideIndex","previous","goNext","goPrevious","goToIndex","children","addSlide","cssClass","createComponent","splice","push","removeSlide","getSlideNav","setSlideNavigationState","setAttribute","v4","delete","values","getConfig","keys","hasOwnProperty","h","_formUtils","_validationUtils","_recaptchaUtils","_apiConfig","student","setFromData","last_name","email","phone","send_texts","parseError","error","fieldsStepOne","input","validationFn","validateNotEmpty","message","validateEmailOptional","validatePhoneNumberOptional","phoneNumberInput","inputElement","cursorPosition","selectionStart","originalValue","value","formatPhoneNumber","cleaned","replace","slice","formattedLength","cleanedLength","setSelectionRange","errorMessage","createValidationFunction","toggleError","setupValidation","onFormSubmit","event","preventDefault","stepOneRequestingAnimation","setStyle","display","isFormValid","existingStudentNow","updatedProfile","updateStudentProfile","setItem","stringify","response","handleRecaptcha","apiClient","post","fetch","status","createCheckboxValidationFunction","setupCheckboxValidation","validateSelectedSessions","setProfilePicUrl","setupFileUpload","_image","errorMessageComponent","show","updateTextViaAttrVar","text","inputComponent","errorComponent","validate","requestErrorComponent","validateAndUpdate","isValid","checkboxComponent","checkbox","checked","checkboxErrorComponent","selectedSessions","some","session","studentIds","imageUrl","profile_pic","url","setUser","fileInput","fileInputError","fileInputSuccess","uploadEndpoint","profilePictureImage","WFImage","uploadAnimation","overlay","dragCounter","Promise","handleFile","file","validTypes","includes","test","size","reader","FileReader","onload","result","target","setImage","readAsDataURL","FormData","append","toString","postRequest","onData","onError","files","dragZoneElement","body","addEventListener","dataTransfer","u","c","getImageConfig","_config","getSrc","getSizes","getSrcSet","getLoading","onLoad","off","onLoadError","removeAttribute","src","srcSet","sizes","join","loading","undefined","trim","validateEmail","emailRegex","validatePasswordRequirements","validateCheckbox","validatePasswordsMatch","validateSelectField","validatePhoneNumber","password","hasLowercase","hasUppercase","hasDigit","hasSpecialChar","hasValidLength","originalPassword","confirmPassword","phoneRegex","getRecaptchaToken","validateRecaptchaToken","action","reject","grecaptcha","execute","then","token","validationResponse","profilePictureInput","profilePictureInputError","profilePictureInputSuccess","profilePicInputElement","querySelector","catch","fieldsStepTwo","removeItem","backStepButton","fieldsStepThree","_caregiverDialog","initializeCaregiverDialog","submitStepFour","caregiverForm","fieldsCaregiver","caregiverRequestingAnimation","onSuccessTrigger","showSuccessState","resetCaregiverForm","resetForm","showForm","fieldsStepFive","emergencyPhoneNumberInput","fieldsStepSix","fieldsStepSeven","step8Initialized","studentProfilePic","studentFullName","studentEmail","studentPhone","studentGrade","studentSchool","studentDOB","studentGender","studentHealth","studentEmergencyName","studentEmergencyEmail","studentEmergencyPhone","studentEmergencyRelationship","studentDismissalNames","studentTravelTrue","studentTravelFalse","studentFamily","studentPhotoTrue","studentPhotoFalse","studentTextTrue","studentTextFalse","image","grade","school","dob","gender","health","emergency_first_name","emergency_last_name","emergency_email","emergency_phone","emergency_relationship","dismissal_names","family_involved","independent_travel","photo_release","submitStepEight","stepEightRequestingAnimation","submitStepEightError","studentProfileLinkTemplate","studentCardElement","currentHref","newHref","profileCardImg","submitStepNine","backStepTen"],"version":3,"file":"addStudentProfile.3a77f4c9.js.map"}