{"mappings":"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","sources":["src/modules/dashboard/studentProfile/index.ts","src/modules/dashboard/studentProfile/getStudentDetails.ts","node_modules/.pnpm/@xatom+image@1.0.0_@xatom+core@1.0.12/node_modules/@xatom/image/dist/index.js","src/modules/dashboard/studentProfile/editStudentDialog.ts","src/utils/formUtils.ts","src/utils/validationUtils.ts","src/modules/dashboard/studentProfile/editEmergencyDialog.ts","src/modules/dashboard/studentProfile/studentRegistrations.ts","src/modules/dashboard/studentProfile/deleteStudent.ts","src/modules/dashboard/studentProfile/caregiverView.ts","src/modules/dashboard/studentProfile/registrationBreadcrumbs.ts","src/modules/dashboard/studentProfile/listStudentFiles.ts"],"sourcesContent":["// src/modules/pages/studentProfile/index.ts\n\nimport { getStudentDetails } from \"./getStudentDetails\";\nimport { initializeEditStudentDialog } from \"./editStudentDialog\";\nimport { initializeEditEmergencyDialog } from \"./editEmergencyDialog\";\nimport { initializeStudentRegistrations } from \"./studentRegistrations\";\nimport { initializeDeleteStudent } from \"./deleteStudent\";\nimport { initializeCaregiverView } from \"./caregiverView\";\nimport { initializeRegistrationBreadcrumbs } from \"./registrationBreadcrumbs\";\nimport { initializeDynamicStudentFileList } from \"./listStudentFiles\";\n\nexport const initializeStudentProfilePage = async () => {\n  // Get the student ID from the URL\n  const urlParams = new URLSearchParams(window.location.search);\n  const studentIdParam = urlParams.get(\"id\");\n  if (!studentIdParam) {\n    console.error(\"No student ID provided in the URL.\");\n    return;\n  }\n\n  const studentId = parseInt(studentIdParam, 10);\n\n  // Fetch and display student details\n  await getStudentDetails(studentId);\n\n  // Initialize the caregiver view adjustments\n  initializeCaregiverView();\n\n  // Initialize the edit student dialog\n  await initializeEditStudentDialog(studentId);\n\n  // Initialize the edit emergency contact dialog\n  await initializeEditEmergencyDialog(studentId);\n\n  await initializeDynamicStudentFileList(\"#filesList\"); // Initialize the student files list\n\n  // Initialize the student registrations list\n  initializeStudentRegistrations(studentId);\n\n  // Initialize the delete student functionality\n  initializeDeleteStudent(studentId);\n\n  // Initialize registration breadcrumbs\n  initializeRegistrationBreadcrumbs(); // Initialize the breadcrumbs\n\n  // Add an event listener to remove current_student from localStorage when navigating away\n  window.addEventListener(\"beforeunload\", () => {\n    localStorage.removeItem(\"current_student\");\n  });\n};\n","// src/modules/pages/studentProfile/getStudentDetails.ts\n\nimport { apiClient } from \"../../../api/apiConfig\";\nimport { WFComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\n\nexport const getStudentDetails = async (studentId: number) => {\n  // Show loading spinner\n  const loadingSpinner = new WFComponent(\".dashboard_loading_wall\");\n  console.log(\"Displaying loading spinner\");\n  loadingSpinner.setStyle({ display: \"flex\" });\n\n  try {\n    const response = await apiClient\n      .get(`/dashboard/profiles/student/${studentId}`)\n      .fetch();\n\n    if (response) {\n      const student = response as any; // Define an interface for better type safety\n\n      // Hide the loading spinner\n      triggerSuccessEvent(\".success_trigger\");\n\n      // Update the breadcrumb with the student's name\n      const studentBreadcrumb = new WFComponent(\"#studentBreadcrumb\");\n      studentBreadcrumb.setText(`${student.first_name} ${student.last_name}`);\n\n      // Set student name\n      const studentFullName = new WFComponent(\"#studentFullName\");\n      studentFullName.setText(`${student.first_name} ${student.last_name}`);\n\n      // Set profile picture\n      const studentProfilePicture = new WFImage(\"#studentProfilePicture\");\n      if (student.profile_pic && student.profile_pic.url) {\n        studentProfilePicture.setImage(student.profile_pic.url);\n      } else {\n        studentProfilePicture.setImage(\n          \"https://cdn.prod.website-files.com/plugins/Basic/assets/placeholder.60f9b1840cb14_The+Shed+-+97.jpg\"\n        );\n      }\n\n      // Set email\n      const studentEmail = new WFComponent(\"#studentEmail\");\n      studentEmail.setText(student.email || \"N/A\");\n\n      // Set phone\n      const studentPhone = new WFComponent(\"#studentPhone\");\n      studentPhone.setText(student.phone || \"N/A\");\n\n      // Set date of birth\n      const studentDob = new WFComponent(\"#studentDob\");\n      studentDob.setText(student.dob || \"N/A\");\n\n      // Set gender\n      const studentGender = new WFComponent(\"#studentGender\");\n      studentGender.setText(student.gender || \"N/A\");\n\n      // Set school\n      const studentSchool = new WFComponent(\"#studentSchool\");\n      studentSchool.setText(student.school || \"N/A\");\n\n      // Set grade\n      const studentGrade = new WFComponent(\"#studentGrade\");\n      studentGrade.setText(student.grade || \"N/A\");\n\n      // Set ethnicity (if available)\n      const studentEthnicity = new WFComponent(\"#studentEthnicity\");\n      studentEthnicity.setText(student.ethnicity || \"N/A\");\n\n      // Set health information\n      const studentHealth = new WFComponent(\"#studentHealth\");\n      studentHealth.setText(student.health || \"N/A\");\n\n      // Set dismissal names\n      const studentDismissal = new WFComponent(\"#studentDismissal\");\n      studentDismissal.setText(student.dismissal_names || \"N/A\");\n\n      // Set send texts preference\n      const studentTextTrue = new WFComponent(\"#studentTextTrue\");\n      const studentTextFalse = new WFComponent(\"#studentTextFalse\");\n      if (student.send_texts) {\n        studentTextTrue.setStyle({ display: \"block\" });\n        studentTextFalse.setStyle({ display: \"none\" });\n      } else {\n        studentTextTrue.setStyle({ display: \"none\" });\n        studentTextFalse.setStyle({ display: \"block\" });\n      }\n\n      // Set independent travel\n      const studentTravelTrue = new WFComponent(\"#studentTravelTrue\");\n      const studentTravelFalse = new WFComponent(\"#studentTravelFalse\");\n      if (student.independent_travel) {\n        studentTravelTrue.setStyle({ display: \"block\" });\n        studentTravelFalse.setStyle({ display: \"none\" });\n      } else {\n        studentTravelTrue.setStyle({ display: \"none\" });\n        studentTravelFalse.setStyle({ display: \"block\" });\n      }\n\n      // Set photo release\n      const studentPhotoTrue = new WFComponent(\"#studentPhotoTrue\");\n      const studentPhotoFalse = new WFComponent(\"#studentPhotoFalse\");\n      if (student.photo_release) {\n        studentPhotoTrue.setStyle({ display: \"block\" });\n        studentPhotoFalse.setStyle({ display: \"none\" });\n      } else {\n        studentPhotoTrue.setStyle({ display: \"none\" });\n        studentPhotoFalse.setStyle({ display: \"block\" });\n      }\n\n      // Set status pills\n      const studentApprovedPill = new WFComponent(\"#studentApprovedPill\");\n      const studentPendingPill = new WFComponent(\"#studentPendingPill\");\n      if (student.Status === \"Approved\") {\n        studentApprovedPill.setStyle({ display: \"block\" });\n        studentPendingPill.setStyle({ display: \"none\" });\n      } else {\n        studentApprovedPill.setStyle({ display: \"none\" });\n        studentPendingPill.setStyle({ display: \"block\" });\n      }\n\n      // Save student data for later use (e.g., in edit forms)\n      localStorage.setItem(\"current_student\", JSON.stringify(student));\n    } else {\n      // If response is null, display an alert and navigate back\n      alert(\"Error: Received null response from the server.\");\n      console.error(\"Received null response from the server.\");\n\n      // Navigate back to the previous page\n      window.history.back();\n    }\n  } catch (error: any) {\n    console.error(\"Error fetching student details:\", error);\n    // Display the error message in an alert box\n    alert(`Error fetching student details: ${error.message || error}`);\n\n    // Navigate back to the previous page\n    window.history.back();\n  } finally {\n    // Hide loading spinner in all cases\n    loadingSpinner.setStyle({ display: \"none\" });\n  }\n};\n\nconst triggerSuccessEvent = (selector: string) => {\n  const successTrigger = document.querySelector(selector);\n  if (successTrigger instanceof HTMLElement) {\n    successTrigger.click();\n  }\n};\n","var t=require(\"@xatom/core\");var e,r,s,i,o,n,u={};e=u,r=\"WFImage\",s=()=>c,Object.defineProperty(e,r,{get:s,set:i,enumerable:!0,configurable:!0});class c extends t.WFComponent{constructor(t){super(t)}getImageConfig(){return this._config}getSrc(){return this.getAttribute(\"src\")}getSizes(){return this.getAttribute(\"sizes\")}getSrcSet(){return this.getAttribute(\"srcset\")}getLoading(){return this.getAttribute(\"loading\")}onLoad(t){return this.on(\"load\",t),()=>{this.off(\"load\",t)}}onLoadError(t){return this.on(\"error\",t),()=>{this.off(\"error\",t)}}setImage(t){if(\"string\"==typeof t)this.setAttribute(\"src\",t),this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");else{if(this.setAttribute(\"src\",t.src),\"object\"==typeof t&&t.srcSet&&t.srcSet.length&&t.sizes&&t.sizes.length){const e=t.srcSet.map((t=>`${t.url} ${t.size}`)).join(\", \");this.setAttribute(\"srcset\",e)}else this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");t.loading&&this.setAttribute(\"loading\",t.loading)}}}o=module.exports,n=u,Object.keys(n).forEach((function(t){\"default\"===t||\"__esModule\"===t||o.hasOwnProperty(t)||Object.defineProperty(o,t,{enumerable:!0,get:function(){return n[t]}})}));","// src/modules/pages/studentProfile/editStudentDialog.ts\n\nimport { WFComponent, WFFormComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../../../api/apiConfig\";\nimport {\n  setupValidation,\n  createValidationFunction,\n  toggleError,\n  setupFileUpload,\n} from \"../../../utils/formUtils\";\nimport {\n  validateNotEmpty,\n  validateEmailOptional,\n  validatePhoneNumber,\n  validateSelectField,\n} from \"../../../utils/validationUtils\";\nimport { getStudentDetails } from \"./getStudentDetails\";\n\n// Define the ApiResponse interface to type the API responses\ninterface ApiResponse {\n  status: string;\n  message?: string;\n  profile_pic?: any;\n  [key: string]: any;\n}\n\nexport const initializeEditStudentDialog = (studentId: number) => {\n  // Attempt to retrieve and initialize the \"Open Edit Dialog\" button\n  let openEditDialogButton: WFComponent | null = null;\n  try {\n    openEditDialogButton = new WFComponent(\"#openEditStudentDialog\");\n  } catch (error) {\n    console.warn(\n      \"Element #openEditStudentDialog not found. Skipping initialization of edit dialog opener.\"\n    );\n  }\n\n  // Attempt to retrieve the edit student dialog element\n  const editStudentDialogElement = document.getElementById(\n    \"editStudentDialog\"\n  ) as HTMLDialogElement | null;\n\n  // Attempt to retrieve and initialize the \"Close Dialog\" button\n  let closeDialogButton: WFComponent | null = null;\n  try {\n    closeDialogButton = new WFComponent(\"#close-dialog-btn\");\n  } catch (error) {\n    console.warn(\n      \"Element #close-dialog-btn not found. Skipping initialization of dialog closer.\"\n    );\n  }\n\n  // If the \"Open Edit Dialog\" button exists, set up the click event listener\n  if (openEditDialogButton && editStudentDialogElement) {\n    openEditDialogButton.on(\"click\", () => {\n      populateEditStudentForm();\n      editStudentDialogElement.showModal();\n    });\n  }\n\n  // If the \"Close Dialog\" button exists and the dialog element is present, set up the click event listener\n  if (closeDialogButton && editStudentDialogElement) {\n    closeDialogButton.on(\"click\", () => {\n      editStudentDialogElement.close();\n    });\n  }\n\n  // Initialize the form if it exists\n  let form: WFFormComponent<any> | null = null;\n  try {\n    form = new WFFormComponent<{\n      profile_pic: File | null;\n      first_name: string;\n      last_name: string;\n      email: string;\n      phone: string;\n      send_texts: boolean;\n      dob: string;\n      gender: string;\n      school: string;\n      grade: string;\n      health: string;\n      dismissal_names: string;\n      independent_travel: boolean;\n      family_involved: string;\n      photo_release: boolean;\n    }>(\"#editStudentForm\");\n  } catch (error) {\n    console.warn(\n      \"Element #editStudentForm not found. Skipping form initialization.\"\n    );\n  }\n\n  // Initialize error component for form submission errors if it exists\n  let formSubmitError: WFComponent | null = null;\n  try {\n    formSubmitError = new WFComponent(\"#editStudentSubmitError\");\n  } catch (error) {\n    console.warn(\n      \"Element #editStudentSubmitError not found. Skipping initialization of form submission error display.\"\n    );\n  }\n\n  // Define validation rules for each field if the form exists\n  const fields = form\n    ? [\n        {\n          input: new WFComponent(\"#firstNameInput\"),\n          error: new WFComponent(\"#firstNameInputError\"),\n          validationFn: validateNotEmpty,\n          message: \"First name is required\",\n        },\n        {\n          input: new WFComponent(\"#lastNameInput\"),\n          error: new WFComponent(\"#lastNameInputError\"),\n          validationFn: validateNotEmpty,\n          message: \"Last name is required\",\n        },\n        {\n          input: new WFComponent(\"#emailInput\"),\n          error: new WFComponent(\"#emailInputError\"),\n          validationFn: validateEmailOptional,\n          message: \"Invalid email format\",\n        },\n        {\n          input: new WFComponent(\"#phoneNumberInput\"),\n          error: new WFComponent(\"#phoneNumberInputError\"),\n          validationFn: validatePhoneNumber,\n          message: \"Phone number must be in the format (xxx) xxx-xxxx\",\n        },\n        {\n          input: new WFComponent(\"#dobInput\"),\n          error: new WFComponent(\"#dobInputError\"),\n          validationFn: validateNotEmpty,\n          message: \"Date of birth is required\",\n        },\n        {\n          input: new WFComponent(\"#genderInput\"),\n          error: new WFComponent(\"#genderInputError\"),\n          validationFn: validateSelectField,\n          message: \"Please select a gender\",\n        },\n        {\n          input: new WFComponent(\"#schoolInput\"),\n          error: new WFComponent(\"#schoolInputError\"),\n          validationFn: validateNotEmpty,\n          message: \"School is required\",\n        },\n        {\n          input: new WFComponent(\"#gradeInput\"),\n          error: new WFComponent(\"#gradeInputError\"),\n          validationFn: validateSelectField,\n          message: \"Please select a grade\",\n        },\n        {\n          input: new WFComponent(\"#healthInput\"),\n          error: new WFComponent(\"#healthInputError\"),\n          validationFn: validateNotEmpty,\n          message: \"Health information is required\",\n        },\n        {\n          input: new WFComponent(\"#dismissalNamesInput\"),\n          error: new WFComponent(\"#dismissalNamesInputError\"),\n          validationFn: validateNotEmpty,\n          message: \"Dismissal names are required\",\n        },\n        {\n          input: new WFComponent(\"#familyInvolvedInput\"),\n          error: new WFComponent(\"#familyInvolvedInputError\"),\n          validationFn: validateNotEmpty,\n          message: \"Family involvement information is required\",\n        },\n      ]\n    : [];\n\n  // Setup validation for each field if the form exists\n  if (form && formSubmitError) {\n    fields.forEach(({ input, error, validationFn, message }) => {\n      try {\n        setupValidation(\n          input,\n          error,\n          createValidationFunction(input, validationFn, message),\n          formSubmitError\n        );\n      } catch (error) {\n        console.warn(\n          `Validation setup failed for one of the fields: ${message}. Error:`,\n          error\n        );\n      }\n    });\n  }\n\n  // Setup checkbox components if they exist\n  let sendTextsInput: WFComponent | null = null;\n  let independentTravelInput: WFComponent | null = null;\n  let photoReleaseInput: WFComponent | null = null;\n\n  try {\n    sendTextsInput = new WFComponent(\"#sendTextsInput\");\n  } catch (error) {\n    console.warn(\n      \"Element #sendTextsInput not found. Skipping initialization of sendTextsInput.\"\n    );\n  }\n\n  try {\n    independentTravelInput = new WFComponent(\"#independentTravelInput\");\n  } catch (error) {\n    console.warn(\n      \"Element #independentTravelInput not found. Skipping initialization of independentTravelInput.\"\n    );\n  }\n\n  try {\n    photoReleaseInput = new WFComponent(\"#photoReleaseInput\");\n  } catch (error) {\n    console.warn(\n      \"Element #photoReleaseInput not found. Skipping initialization of photoReleaseInput.\"\n    );\n  }\n\n  // Handle form submission if the form exists\n  if (form && formSubmitError) {\n    form.onFormSubmit(async (formData, event) => {\n      event.preventDefault();\n      // Show loading animation inside submit button if it exists\n      let requestingAnimation: WFComponent | null = null;\n      try {\n        requestingAnimation = new WFComponent(\"#requestingAnimation\");\n        requestingAnimation.setStyle({ display: \"block\" });\n      } catch (error) {\n        console.warn(\n          \"Element #requestingAnimation not found. Skipping loading animation.\"\n        );\n      }\n\n      let isFormValid = true;\n\n      // Validate all fields\n      fields.forEach(({ input, error, validationFn, message }) => {\n        try {\n          const errorMessage = createValidationFunction(\n            input,\n            validationFn,\n            message\n          )();\n          if (errorMessage) {\n            toggleError(error, errorMessage, true);\n            isFormValid = false;\n          } else {\n            toggleError(error, \"\", false);\n          }\n        } catch (error) {\n          console.warn(\n            `Validation failed for field \"${message}\". Error:`,\n            error\n          );\n          isFormValid = false;\n        }\n      });\n\n      // No validation required for checkboxes since they are optional\n\n      if (!isFormValid) {\n        toggleError(formSubmitError, \"Please correct all errors above.\", true);\n        // Hide loading animation if it exists\n        if (requestingAnimation) {\n          requestingAnimation.setStyle({ display: \"none\" });\n        }\n        return;\n      } else {\n        toggleError(formSubmitError, \"\", false);\n      }\n\n      // Disable submit button if it exists\n      let submitButton: WFComponent | null = null;\n      try {\n        submitButton = new WFComponent(\"#editStudentSubmitButton\");\n        submitButton.setAttribute(\"disabled\", \"true\");\n      } catch (error) {\n        console.warn(\n          \"Element #editStudentSubmitButton not found. Skipping disabling the submit button.\"\n        );\n      }\n\n      // Prepare data for API\n      const dataToUpdate = { ...formData };\n\n      try {\n        // Send update request to API\n        const response = (await apiClient\n          .post(`/profiles/students/update_profile/${studentId}`, {\n            data: dataToUpdate,\n          })\n          .fetch()) as ApiResponse;\n\n        if (response.status === \"success\") {\n          // Update successful\n\n          // Refresh the student details on the page\n          await getStudentDetails(studentId);\n\n          // Reset the form with updated information\n          populateEditStudentForm();\n\n          // Close the dialog after successful request and data refresh if the dialog exists\n          if (editStudentDialogElement) {\n            editStudentDialogElement.close();\n          }\n        } else {\n          throw new Error(response.message || \"Update failed\");\n        }\n      } catch (error: any) {\n        console.error(\"Error updating student profile:\", error);\n        toggleError(\n          formSubmitError,\n          error.message || \"An error occurred\",\n          true\n        );\n      } finally {\n        // Hide loading animation if it exists\n        if (requestingAnimation) {\n          requestingAnimation.setStyle({ display: \"none\" });\n        }\n        // Re-enable submit button if it exists\n        if (submitButton) {\n          submitButton.removeAttribute(\"disabled\");\n        }\n      }\n    });\n  }\n\n  // Set up the file upload for the profile picture if the input exists\n  try {\n    const profilePictureInput = new WFComponent(\"#profilePictureInput\");\n    const profilePictureInputError = new WFComponent(\n      \"#profilePictureInputError\"\n    );\n    const profilePictureInputSuccess = new WFComponent(\n      \"#profilePictureInputSuccess\"\n    );\n    setupFileUpload(\n      profilePictureInput,\n      profilePictureInputError,\n      profilePictureInputSuccess,\n      \"/profiles/students/image-upload\"\n    );\n  } catch (error) {\n    console.warn(\n      \"One or more profile picture upload elements not found. Skipping file upload setup.\"\n    );\n  }\n};\n\n// Function to populate the form with existing student data\nconst populateEditStudentForm = () => {\n  const studentData = localStorage.getItem(\"current_student\");\n  if (!studentData) {\n    console.error(\"No student data found\");\n    return;\n  }\n\n  let student: any;\n  try {\n    student = JSON.parse(studentData);\n  } catch (parseError) {\n    console.error(\"Error parsing student data from localStorage:\", parseError);\n    return;\n  }\n\n  // Log the student data for debugging\n  console.log(\"Populating form with student data:\", student);\n\n  // Helper function to set input value if the element exists\n  const setInputValue = (\n    selector: string,\n    value: string | boolean,\n    isCheckbox: boolean = false\n  ) => {\n    try {\n      const element = document.querySelector(selector) as\n        | HTMLInputElement\n        | HTMLSelectElement\n        | HTMLTextAreaElement\n        | null;\n      if (element) {\n        if (isCheckbox && element instanceof HTMLInputElement) {\n          element.checked = Boolean(value);\n          console.log(`Set checkbox ${selector} to`, value);\n        } else if (\n          element instanceof HTMLInputElement ||\n          element instanceof HTMLSelectElement ||\n          element instanceof HTMLTextAreaElement\n        ) {\n          element.value = String(value);\n          console.log(`Set value of ${selector} to`, value);\n        } else {\n          console.warn(\n            `Element ${selector} is not an input, select, or textarea. Skipping setting its value.`\n          );\n        }\n      } else {\n        console.warn(\n          `Element ${selector} not found. Skipping setting its value.`\n        );\n      }\n    } catch (error) {\n      console.warn(`Error setting value for ${selector}:`, error);\n    }\n  };\n\n  // Set form fields using the helper function\n  setInputValue(\"#firstNameInput\", student.first_name);\n  setInputValue(\"#lastNameInput\", student.last_name);\n  setInputValue(\"#emailInput\", student.email);\n  setInputValue(\"#phoneNumberInput\", student.phone);\n  setInputValue(\"#sendTextsInput\", student.send_texts, true);\n  setInputValue(\"#dobInput\", student.dob);\n  setInputValue(\"#genderInput\", student.gender);\n  setInputValue(\"#schoolInput\", student.school);\n  setInputValue(\"#gradeInput\", student.grade);\n  setInputValue(\"#healthInput\", student.health); // Ensure this selector matches an input/select/textarea\n  setInputValue(\"#dismissalNamesInput\", student.dismissal_names);\n  setInputValue(\"#independentTravelInput\", student.independent_travel, true);\n  setInputValue(\"#familyInvolvedInput\", student.family_involved);\n  setInputValue(\"#photoReleaseInput\", student.photo_release, true);\n\n  // Set profile picture preview using WFImage if the element exists\n  try {\n    const profilePictureImage = new WFImage(\"#profilePictureImage\");\n    if (student.profile_pic && student.profile_pic.url) {\n      profilePictureImage.setImage(student.profile_pic.url);\n      console.log(\"Set profile picture to:\", student.profile_pic.url);\n    } else {\n      profilePictureImage.setImage(\"default-image-url\");\n      console.log(\"Set profile picture to default-image-url\");\n    }\n  } catch (error) {\n    console.warn(\n      \"Element #profilePictureImage not found. Skipping setting profile picture.\"\n    );\n  }\n};\n","import { WFComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../api/apiConfig\";\nimport { userAuth } from \"../auth/authConfig\";\n\nexport function toggleError(\n  errorMessageComponent: WFComponent<any>,\n  message: string,\n  show: boolean\n): void {\n  errorMessageComponent.updateTextViaAttrVar({ text: show ? message : \"\" });\n  errorMessageComponent.setStyle({ display: show ? \"flex\" : \"none\" });\n}\n\nexport function setupValidation(\n  inputComponent: WFComponent,\n  errorComponent: WFComponent,\n  validate: () => string,\n  requestErrorComponent?: WFComponent // Optional component to clear on input change\n) {\n  const validateAndUpdate = () => {\n    const errorMessage = validate();\n    toggleError(errorComponent, errorMessage, !!errorMessage);\n    if (requestErrorComponent && errorMessage === \"\") {\n      // Clear request error message when the user is correcting the input\n      toggleError(requestErrorComponent, \"\", false);\n    }\n  };\n\n  // Attach event listeners for real-time validation\n  inputComponent.on(\"input\", validateAndUpdate);\n  inputComponent.on(\"blur\", validateAndUpdate);\n  inputComponent.on(\"change\", validateAndUpdate);\n}\n\nexport function createValidationFunction(\n  inputComponent: WFComponent,\n  validationFn: (input: string) => boolean,\n  errorMessage: string\n): () => string {\n  return () => {\n    const inputElement = inputComponent.getElement() as HTMLInputElement;\n    const isValid = validationFn(inputElement.value);\n    return isValid ? \"\" : errorMessage;\n  };\n}\n\nexport function createCheckboxValidationFunction(\n  checkboxComponent: WFComponent,\n  errorMessage: string\n): () => string {\n  return () => {\n    const checkbox = checkboxComponent.getElement() as HTMLInputElement;\n    return checkbox.checked ? \"\" : errorMessage;\n  };\n}\n\nexport function setupCheckboxValidation(\n  checkboxComponent: WFComponent,\n  checkboxErrorComponent: WFComponent,\n  errorMessage: string\n) {\n  const validate = createCheckboxValidationFunction(\n    checkboxComponent,\n    errorMessage\n  );\n  setupValidation(checkboxComponent, checkboxErrorComponent, validate);\n}\n\nexport function validateSelectedSessions(\n  selectedSessions: { sessionId: string; studentIds: string[] }[],\n  errorMessageComponent: WFComponent<any>,\n  errorMessage: string\n): boolean {\n  const isValid =\n    selectedSessions.length > 0 &&\n    selectedSessions.some((session) => session.studentIds.length > 0);\n\n  if (!isValid) {\n    toggleError(errorMessageComponent, errorMessage, true);\n  } else {\n    toggleError(errorMessageComponent, \"\", false);\n  }\n\n  return isValid;\n}\n\ntype fileUploadResponse = {\n  status: string;\n  url: {\n    profile_pic: {\n      url: string;\n    };\n  };\n};\n\n/**\n * Updates the user's profile picture URL in the authentication system.\n * @param {string} imageUrl - The URL of the uploaded image.\n */\nexport function setProfilePicUrl(imageUrl: string): void {\n  const user = userAuth.getUser();\n  if (user && user.profile) {\n    // Ensure the profile_picture object exists\n    user.profile.profile_pic = user.profile.profile_pic || { url: \"\" };\n\n    // Set the profile picture URL\n    user.profile.profile_pic.url = imageUrl;\n    userAuth.setUser(user);\n    localStorage.setItem(\"auth_user\", JSON.stringify(user));\n  }\n}\n\n/**\n * Handles file upload and displays the uploaded image.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */\n/**\n * Handles file upload and displays the uploaded image.\n * Only JPEG files less than 2 MB can be uploaded.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */\nexport function setupFileUpload(\n  fileInput: WFComponent,\n  fileInputError: WFComponent,\n  fileInputSuccess: WFComponent,\n  uploadEndpoint: string\n): Promise<string> {\n  const profilePictureImage = new WFImage(\"#profilePictureImage\");\n  const uploadAnimation = new WFComponent(\"#uploadAnimation\");\n\n  const overlay = new WFComponent(\".drop-zone\");\n  let dragCounter = 0;\n\n  return new Promise<string>((resolve) => {\n    const handleFile = (file: File) => {\n      // Validate file type and size\n      const validTypes = [\"image/jpeg\", \"image/jpg\"];\n      const maxSizeInBytes = 2 * 1024 * 1024; // 2 MB\n\n      if (\n        !validTypes.includes(file.type) &&\n        !/\\.(jpg|jpeg)$/i.test(file.name)\n      ) {\n        const errorMessage = \"Only JPEG images are allowed.\";\n        toggleError(fileInputError, errorMessage, true);\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n        return;\n      }\n\n      if (file.size > maxSizeInBytes) {\n        const errorMessage = \"File size must be less than 2 MB.\";\n        toggleError(fileInputError, errorMessage, true);\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n        return;\n      }\n\n      // Show upload animation immediately\n      uploadAnimation.setStyle({ display: \"flex\" });\n\n      // Hide error and success messages\n      fileInputError.setStyle({ display: \"none\" });\n      fileInputSuccess.setStyle({ display: \"none\" });\n\n      const reader = new FileReader();\n\n      // Display preview image as soon as the file is loaded into memory\n      reader.onload = (event) => {\n        // Set the preview image for the profile picture\n        const result = event.target?.result as string;\n        profilePictureImage.setImage(result);\n\n        // Hide overlay once the image is set\n        overlay.setStyle({ display: \"none\" });\n      };\n\n      reader.readAsDataURL(file);\n\n      const formData = new FormData();\n      formData.append(\"profile_picture\", file);\n\n      const existingStudent = localStorage.getItem(\"current_student\");\n      if (existingStudent) {\n        const student = JSON.parse(existingStudent);\n        formData.append(\"student_profile_id\", student.id.toString());\n      }\n\n      // Send the file to the server\n      const postRequest = apiClient.post<fileUploadResponse>(uploadEndpoint, {\n        data: formData,\n      });\n\n      postRequest.onData((response) => {\n        if (response.status === \"success\") {\n          const imageUrl = response.url.profile_pic.url;\n\n          // Update the profile picture URL in the user session and local storage\n          setProfilePicUrl(imageUrl);\n\n          // Update the image for other parts of the UI as well\n          profilePictureImage.setImage(imageUrl);\n\n          // Store the URL in local storage\n          localStorage.setItem(\"image_upload\", imageUrl);\n\n          // Show success message and hide upload animation\n          fileInputSuccess.setStyle({ display: \"flex\" });\n          uploadAnimation.setStyle({ display: \"none\" });\n\n          // Resolve with the uploaded image URL\n          resolve(imageUrl);\n        } else {\n          const errorMessage = \"Failed to upload profile picture.\";\n          toggleError(fileInputError, errorMessage, true);\n          uploadAnimation.setStyle({ display: \"none\" });\n          overlay.setStyle({ display: \"none\" });\n          dragCounter = 0;\n          // Reset file input value\n          (fileInput.getElement() as HTMLInputElement).value = \"\";\n        }\n      });\n\n      postRequest.onError((error) => {\n        let errorMessage = \"An error occurred during image upload.\";\n        if (error.response && error.response.data) {\n          errorMessage = error.response.data.message || errorMessage;\n        } else if (error.message) {\n          errorMessage = error.message;\n        }\n\n        // Show error message and hide upload animation\n        toggleError(fileInputError, errorMessage, true);\n        uploadAnimation.setStyle({ display: \"none\" });\n        overlay.setStyle({ display: \"none\" });\n        dragCounter = 0;\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n      });\n\n      // Make the API call\n      postRequest.fetch();\n    };\n\n    // Event listener for file input changes\n    fileInput.on(\"change\", () => {\n      const file = (fileInput.getElement() as HTMLInputElement).files?.[0];\n      if (file) {\n        handleFile(file);\n      }\n    });\n\n    // Event listeners for drag-and-drop\n    const dragZoneElement = document.body;\n    dragZoneElement.addEventListener(\"dragenter\", (event) => {\n      event.preventDefault();\n      dragCounter++;\n      if (dragCounter === 1) {\n        overlay.setStyle({ display: \"flex\" });\n      }\n    });\n\n    dragZoneElement.addEventListener(\"dragleave\", () => {\n      dragCounter--;\n      if (dragCounter <= 0) {\n        overlay.setStyle({ display: \"none\" });\n        dragCounter = 0;\n      }\n    });\n\n    dragZoneElement.addEventListener(\"dragover\", (event) => {\n      event.preventDefault();\n    });\n\n    dragZoneElement.addEventListener(\"drop\", (event) => {\n      event.preventDefault();\n\n      const files = event.dataTransfer?.files;\n      if (files?.length) {\n        handleFile(files[0]);\n      }\n\n      overlay.setStyle({ display: \"none\" });\n      dragCounter = 0;\n    });\n  });\n}\n\n// src/utils/formUtils.ts\n\n/**\n * Formats a phone number string to the format (xxx) xxx-xxxx.\n * If the input contains more than 10 digits, it truncates the extra digits.\n * If it contains fewer, it formats as much as possible.\n *\n * @param value - The raw phone number string.\n * @returns The formatted phone number string.\n */\nexport const formatPhoneNumber = (value: string): string => {\n  const cleaned = value.replace(/\\D/g, \"\"); // Remove all non-digit characters\n\n  if (cleaned.length <= 3) {\n    return cleaned;\n  } else if (cleaned.length <= 6) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3)}`;\n  } else if (cleaned.length <= 10) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(\n      6\n    )}`;\n  } else {\n    // If more than 10 digits, truncate the extra digits\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(\n      6,\n      10\n    )}`;\n  }\n};\n","import { WFComponent } from \"@xatom/core\";\nimport { toggleError } from \"./formUtils\";\n\nexport function validateNotEmpty(input: string | undefined): boolean {\n  return input !== undefined && input.trim() !== \"\";\n}\n\nexport function validateEmail(input: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(input);\n}\n\n/**\n * Validates that the email is either empty or correctly formatted.\n * @param value The email input value.\n * @returns True if valid, false otherwise.\n */\nexport const validateEmailOptional = (value: string): boolean => {\n  if (value.trim() === \"\") {\n    // Email is optional, so empty string is valid\n    return true;\n  }\n  // Validate the email format if not empty\n  return validateEmail(value);\n};\n\nexport function validatePasswordRequirements(password: string): boolean {\n  const hasLowercase = /[a-z]/.test(password);\n  const hasUppercase = /[A-Z]/.test(password);\n  const hasDigit = /\\d/.test(password);\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n  const hasValidLength = password.length >= 8;\n  return (\n    hasLowercase && hasUppercase && hasDigit && hasSpecialChar && hasValidLength\n  );\n}\n\nexport function validateCheckbox(checked: boolean): boolean {\n  return checked;\n}\n\nexport function validatePasswordsMatch(\n  originalPassword: string,\n  confirmPassword: string\n): boolean {\n  return originalPassword === confirmPassword;\n}\n\nexport function validateSelectField(input: string | undefined): boolean {\n  return input !== undefined && input !== \"N/A\";\n}\n\nexport function validatePhoneNumber(input: string): boolean {\n  const phoneRegex = /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/;\n  return phoneRegex.test(input);\n}\n","// src/modules/pages/studentProfile/editEmergencyDialog.ts\n\nimport { WFComponent, WFFormComponent } from \"@xatom/core\";\nimport { apiClient } from \"../../../api/apiConfig\";\nimport {\n  setupValidation,\n  createValidationFunction,\n  toggleError,\n} from \"../../../utils/formUtils\";\nimport {\n  validateNotEmpty,\n  validateEmailOptional,\n  validatePhoneNumber,\n} from \"../../../utils/validationUtils\";\nimport { getStudentDetails } from \"./getStudentDetails\";\n\n// Define the ApiResponse interface to type the API responses\ninterface ApiResponse {\n  status: string;\n  message?: string;\n  [key: string]: any;\n}\n\nexport const initializeEditEmergencyDialog = (studentId: number) => {\n  const openDialogButton = new WFComponent(\"#openEmergencyContactDialog\");\n  const emergencyDialog = document.getElementById(\n    \"editEmergencyContactDialog\"\n  ) as HTMLDialogElement;\n  const closeDialogButton = new WFComponent(\"#close-emergency-dialog-btn\");\n\n  // Open the dialog when the button is clicked\n  openDialogButton.on(\"click\", async () => {\n    // Fetch the latest student details before populating the form\n    await getStudentDetails(studentId);\n\n    // Populate the form with the latest emergency contact details\n    populateEmergencyContactForm();\n\n    // Update the emergency contact full name on the page\n    updateEmergencyContactFullName();\n\n    emergencyDialog.showModal();\n  });\n\n  // Close the dialog when the close button is clicked\n  closeDialogButton.on(\"click\", () => {\n    emergencyDialog.close();\n  });\n\n  // Initialize the form\n  const form = new WFFormComponent<{\n    emergency_first_name: string;\n    emergency_last_name: string;\n    emergency_email: string;\n    emergency_phone: string;\n    emergency_relationship: string;\n  }>(\"#editEmergencyContactForm\");\n\n  // Initialize error component for form submission errors\n  const formSubmitError = new WFComponent(\"#editEmergencySubmitError\");\n\n  // Define validation rules\n  const fields = [\n    {\n      input: new WFComponent(\"#emergencyFirstNameInput\"),\n      error: new WFComponent(\"#emergencyFirstNameInputError\"),\n      validationFn: validateNotEmpty,\n      message: \"First name is required\",\n    },\n    {\n      input: new WFComponent(\"#emergencyLastNameInput\"),\n      error: new WFComponent(\"#emergencyLastNameInputError\"),\n      validationFn: validateNotEmpty,\n      message: \"Last name is required\",\n    },\n    {\n      input: new WFComponent(\"#emergencyEmailInput\"),\n      error: new WFComponent(\"#emergencyEmailInputError\"),\n      validationFn: validateEmailOptional,\n      message: \"Invalid email format\",\n    },\n    {\n      input: new WFComponent(\"#emergencyPhoneInput\"),\n      error: new WFComponent(\"#emergencyPhoneInputError\"),\n      validationFn: validatePhoneNumber,\n      message: \"Phone number must be in the format (xxx) xxx-xxxx\",\n    },\n    {\n      input: new WFComponent(\"#emergencyRelationshipInput\"),\n      error: new WFComponent(\"#emergencyRelationshipInputError\"),\n      validationFn: validateNotEmpty,\n      message: \"Relationship is required\",\n    },\n  ];\n\n  // Setup validation for each field\n  fields.forEach(({ input, error, validationFn, message }) => {\n    setupValidation(\n      input,\n      error,\n      createValidationFunction(input, validationFn, message),\n      formSubmitError\n    );\n  });\n\n  // Handle form submission\n  form.onFormSubmit(async (formData, event) => {\n    event.preventDefault();\n\n    let isFormValid = true;\n\n    // Validate all fields\n    fields.forEach(({ input, error, validationFn, message }) => {\n      const errorMessage = createValidationFunction(\n        input,\n        validationFn,\n        message\n      )();\n      if (errorMessage) {\n        toggleError(error, errorMessage, true);\n        isFormValid = false;\n      } else {\n        toggleError(error, \"\", false);\n      }\n    });\n\n    if (!isFormValid) {\n      toggleError(formSubmitError, \"Please correct all errors above.\", true);\n      return;\n    } else {\n      toggleError(formSubmitError, \"\", false);\n    }\n\n    // Show loading animation inside submit button\n    const requestingAnimation = new WFComponent(\n      \"#requestingEmergencyAnimation\"\n    );\n    requestingAnimation.setStyle({ display: \"block\" });\n\n    // Disable submit button\n    const submitButton = new WFComponent(\"#editEmergencySubmitButton\");\n    submitButton.setAttribute(\"disabled\", \"true\");\n\n    // Prepare data for API\n    const dataToUpdate = { ...formData };\n\n    try {\n      // Send update request to API\n      const response = (await apiClient\n        .post(`/profiles/students/update_profile/${studentId}`, {\n          data: dataToUpdate,\n        })\n        .fetch()) as ApiResponse;\n\n      if (response.status === \"success\") {\n        // Update successful\n\n        // Refresh the student details on the page\n        await getStudentDetails(studentId);\n\n        // Reset the form with updated information\n        populateEmergencyContactForm();\n\n        // Update the emergency contact full name on the page\n        updateEmergencyContactFullName();\n\n        // Close the dialog after successful request and data refresh\n        emergencyDialog.close();\n      } else {\n        throw new Error(response.message || \"Update failed\");\n      }\n    } catch (error: any) {\n      console.error(\"Error updating emergency contact:\", error);\n      toggleError(formSubmitError, error.message || \"An error occurred\", true);\n    } finally {\n      requestingAnimation.setStyle({ display: \"none\" });\n      submitButton.removeAttribute(\"disabled\");\n    }\n  });\n\n  // Update the emergency contact full name on page load\n  updateEmergencyContactFullName();\n};\n\n// Function to populate the form with existing emergency contact data\nconst populateEmergencyContactForm = () => {\n  const studentData = localStorage.getItem(\"current_student\");\n  if (!studentData) {\n    console.error(\"No student data found\");\n    return;\n  }\n\n  const student = JSON.parse(studentData);\n\n  // Set form fields directly from student object\n  const emergencyFirstNameInput = new WFComponent(\n    \"#emergencyFirstNameInput\"\n  ).getElement() as HTMLInputElement;\n  emergencyFirstNameInput.value = student.emergency_first_name || \"\";\n\n  const emergencyLastNameInput = new WFComponent(\n    \"#emergencyLastNameInput\"\n  ).getElement() as HTMLInputElement;\n  emergencyLastNameInput.value = student.emergency_last_name || \"\";\n\n  const emergencyEmailInput = new WFComponent(\n    \"#emergencyEmailInput\"\n  ).getElement() as HTMLInputElement;\n  emergencyEmailInput.value = student.emergency_email || \"\";\n\n  const emergencyPhoneInput = new WFComponent(\n    \"#emergencyPhoneInput\"\n  ).getElement() as HTMLInputElement;\n  emergencyPhoneInput.value = student.emergency_phone || \"\";\n\n  const emergencyRelationshipInput = new WFComponent(\n    \"#emergencyRelationshipInput\"\n  ).getElement() as HTMLInputElement;\n  emergencyRelationshipInput.value = student.emergency_relationship || \"\";\n};\n\n// Function to update the emergency contact full name on the page\nconst updateEmergencyContactFullName = () => {\n  const studentData = localStorage.getItem(\"current_student\");\n  if (!studentData) {\n    console.error(\"No student data found\");\n    return;\n  }\n\n  const student = JSON.parse(studentData);\n\n  const fullName = `${student.emergency_first_name || \"\"} ${\n    student.emergency_last_name || \"\"\n  }`.trim();\n\n  const fullNameComponent = new WFComponent(\"#emergencyContactFullName\");\n  fullNameComponent.setText(fullName);\n};\n","// src/modules/pages/studentProfile/studentRegistrations.ts\n\nimport { WFDynamicList, WFComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../../../api/apiConfig\";\n\n// Define the interface for the registration data\ninterface Registration {\n  id: number;\n  created_at: number;\n  status: string;\n  subscription_type: string;\n  program_name: string;\n  workshop_name?: string; // Marked as optional\n  weekday: string;\n  location: string;\n  time_block: string;\n  session_id: string;\n  price_id: string;\n  user_id: number;\n  subscription_id: number;\n  student_profile_id: number;\n  cancellation_reason: string;\n  image_url: string;\n  program_id: string;\n  workshop_id?: string; // Marked as optional\n  // Additional fields if needed\n  // first_name?: string;\n  // last_name?: string;\n}\n\n/**\n * Function to fetch registrations for a student.\n * @param studentId - The ID of the student.\n * @returns A promise that resolves to an array of Registration objects.\n */\nexport async function fetchStudentRegistrations(\n  studentId: number\n): Promise<Registration[]> {\n  try {\n    const response = await apiClient\n      .get(`/dashboard/profiles/student/${studentId}/registrations`)\n      .fetch();\n\n    if (response) {\n      const registrations = response as Registration[];\n      return registrations;\n    } else {\n      console.error(\"No registrations found for the student.\");\n      return [];\n    }\n  } catch (error) {\n    console.error(\"Error fetching student registrations:\", error);\n    return [];\n  }\n}\n\n/**\n * Function to initialize the dynamic list of registrations.\n * @param studentId - The ID of the student.\n */\nexport async function initializeStudentRegistrations(studentId: number) {\n  // Initialize the dynamic list\n  const list = new WFDynamicList<Registration>(\"#listRegistration\", {\n    rowSelector: \"#listRegistrationCard\",\n    loaderSelector: \"#listRegistrationloading\",\n    emptySelector: \"#listRegistrationEmpty\",\n  });\n\n  // Customize the rendering of the loader\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({\n      display: \"flex\",\n    });\n    return loaderElement;\n  });\n\n  // Customize the rendering of the empty state\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({\n      display: \"flex\",\n    });\n    return emptyElement;\n  });\n\n  /**\n   * Customize the rendering of each registration card.\n   * This includes adding necessary classes and data attributes for breadcrumb tracking.\n   */\n  list.rowRenderer(({ rowData, rowElement }) => {\n    const registrationCard = new WFComponent(rowElement);\n\n    // Retrieve the student's name from localStorage\n    const currentStudent = localStorage.getItem(\"current_student\");\n    let studentName = \"N/A\";\n    if (currentStudent) {\n      try {\n        const student = JSON.parse(currentStudent);\n        studentName =\n          `${student.first_name || \"\"} ${student.last_name || \"\"}`.trim() ||\n          \"N/A\";\n      } catch (parseError) {\n        console.error(\n          \"Error parsing current_student from localStorage:\",\n          parseError\n        );\n      }\n    } else {\n      console.warn(\"current_student not found in localStorage.\");\n    }\n\n    // Build the base URL with required parameters\n    let href = `/dashboard/registration/subscription/workshop?program=${encodeURIComponent(\n      rowData.program_id\n    )}&subscription=${encodeURIComponent(rowData.subscription_id)}`;\n\n    // Conditionally add the workshop parameter if workshop_id is present and not empty\n    if (rowData.workshop_id && rowData.workshop_id.trim() !== \"\") {\n      href += `&workshop=${encodeURIComponent(rowData.workshop_id)}`;\n    }\n\n    // Set the href attribute\n    registrationCard.setAttribute(\"href\", href);\n\n    // Add the 'registration-link' class for event delegation\n    registrationCard.addCssClass(\"registration-link\");\n\n    /**\n     * Set data attributes required for breadcrumb tracking.\n     * These attributes are essential for the registrationBreadcrumbs.ts module to function correctly.\n     */\n    registrationCard.setAttribute(\n      \"data-student-id\",\n      String(rowData.student_profile_id)\n    );\n    registrationCard.setAttribute(\"data-student-name\", studentName);\n    registrationCard.setAttribute(\n      \"data-workshop-name\",\n      rowData.workshop_name || \"\"\n    );\n    registrationCard.setAttribute(\n      \"data-workshop-id\",\n      rowData.workshop_id || \"\"\n    );\n    registrationCard.setAttribute(\n      \"data-program-name\",\n      rowData.program_name || \"\"\n    );\n    registrationCard.setAttribute(\"data-program-id\", rowData.program_id || \"\");\n    registrationCard.setAttribute(\n      \"data-subscription-id\",\n      String(rowData.subscription_id)\n    );\n\n    // Update the program name\n    const programName =\n      registrationCard.getChildAsComponent(\"#cardProgramName\");\n    if (programName) {\n      programName.setText(rowData.program_name || \"N/A\");\n    } else {\n      console.warn(\"#cardProgramName not found in registrationCard.\");\n    }\n\n    // Update the workshop name, if available\n    const workshopName =\n      registrationCard.getChildAsComponent(\"#cardWorkshopName\");\n    if (workshopName) {\n      workshopName.setText(rowData.workshop_name || \" \");\n    } else {\n      console.warn(\"#cardWorkshopName not found in registrationCard.\");\n    }\n\n    // Update the registration image\n    const registrationImageElement = registrationCard.getChildAsComponent(\n      \"#cardRegistrationImage\"\n    );\n    if (registrationImageElement) {\n      const registrationImage = new WFImage(\n        registrationImageElement.getElement()\n      );\n      if (rowData.image_url) {\n        registrationImage.setImage(rowData.image_url);\n      } else {\n        registrationImage.setImage(\n          \"https://cdn.prod.website-files.com/667f080f36260b9afbdc46b2/667f080f36260b9afbdc46be_placeholder.svg\"\n        );\n      }\n    } else {\n      console.warn(\"#cardRegistrationImage not found in registrationCard.\");\n    }\n\n    // Update the status pills\n    const activePill = registrationCard.getChildAsComponent(\"#cardActivePill\");\n    const depositPill =\n      registrationCard.getChildAsComponent(\"#cardDepositPill\");\n\n    if (activePill && depositPill) {\n      if (rowData.status === \"Active\") {\n        activePill.setStyle({ display: \"block\" });\n        depositPill.setStyle({ display: \"none\" });\n      } else if (rowData.status === \"Deposit Paid\") {\n        activePill.setStyle({ display: \"none\" });\n        depositPill.setStyle({ display: \"block\" });\n      } else {\n        // Handle other statuses if needed\n        activePill.setStyle({ display: \"none\" });\n        depositPill.setStyle({ display: \"none\" });\n      }\n    } else {\n      console.warn(\n        \"Status pills (#cardActivePill or #cardDepositPill) not found in registrationCard.\"\n      );\n    }\n\n    // Show the registration card\n    rowElement.setStyle({\n      display: \"block\",\n    });\n\n    return rowElement;\n  });\n\n  // Load and display the student's registrations\n  try {\n    // Enable the loading state\n    list.changeLoadingStatus(true);\n\n    const registrations = await fetchStudentRegistrations(studentId);\n\n    // Sort registrations by created_at date (optional)\n    registrations.sort((a, b) => b.created_at - a.created_at);\n\n    // Set the data for the dynamic list\n    list.setData(registrations);\n\n    // Disable the loading state\n    list.changeLoadingStatus(false);\n  } catch (error) {\n    console.error(\"Error initializing student registrations:\", error);\n\n    // Set an empty array to trigger the empty state\n    list.setData([]);\n\n    // Disable the loading state\n    list.changeLoadingStatus(false);\n  }\n}\n","// src/modules/pages/studentProfile/deleteStudent.ts\n\nimport { WFComponent } from \"@xatom/core\";\nimport { apiClient } from \"../../../api/apiConfig\";\nimport { fetchStudentRegistrations } from \"./studentRegistrations\"; // Import the fetch function\n\n/**\n * Initializes the delete student functionality.\n * @param studentId - The ID of the student to be deleted.\n */\nexport function initializeDeleteStudent(studentId: number) {\n  // Attempt to retrieve and initialize the \"Open Delete Dialog\" button\n  let openDeleteDialogBtn: WFComponent | null = null;\n  try {\n    openDeleteDialogBtn = new WFComponent(\"#openDeleteDialog\");\n  } catch (error) {\n    console.warn(\n      \"Element #openDeleteDialog not found. Skipping initialization of delete dialog opener.\"\n    );\n  }\n\n  // Attempt to retrieve the delete student dialog element\n  const deleteStudentDialogElement = document.getElementById(\n    \"deleteStudentDialog\"\n  ) as HTMLDialogElement | null;\n\n  // Attempt to retrieve and initialize the \"Close Delete Dialog\" button\n  let closeDeleteDialogBtn: WFComponent | null = null;\n  try {\n    closeDeleteDialogBtn = new WFComponent(\"#close-delete-dialog-btn\");\n  } catch (error) {\n    console.warn(\n      \"Element #close-delete-dialog-btn not found. Skipping initialization of delete dialog closer.\"\n    );\n  }\n\n  // Attempt to retrieve and initialize the \"Final Delete\" button\n  let deleteStudentFinalBtn: WFComponent | null = null;\n  try {\n    deleteStudentFinalBtn = new WFComponent(\"#deleteStudentFinal\");\n  } catch (error) {\n    console.warn(\n      \"Element #deleteStudentFinal not found. Skipping initialization of final delete button.\"\n    );\n  }\n\n  // Attempt to retrieve and initialize the \"Delete Student Error\" component\n  let deleteStudentError: WFComponent | null = null;\n  try {\n    deleteStudentError = new WFComponent(\"#deleteStudentError\");\n  } catch (error) {\n    console.warn(\n      \"Element #deleteStudentError not found. Skipping initialization of delete student error display.\"\n    );\n  }\n\n  // Attempt to retrieve and initialize the \"Page Main\" component\n  let pageMain: WFComponent | null = null;\n  try {\n    pageMain = new WFComponent(\".page_main\");\n  } catch (error) {\n    console.warn(\n      \"Element with class .page_main not found. Skipping initialization of page main.\"\n    );\n  }\n\n  // Attempt to retrieve and initialize the loader animations\n  let requestingAnimation: WFComponent | null = null;\n  let deleteRequestingAnimation: WFComponent | null = null;\n  try {\n    requestingAnimation = new WFComponent(\"#requestingAnimation\");\n    deleteRequestingAnimation = new WFComponent(\"#deleteRequestingAnimation\");\n    // Initially hide the loader animations\n    requestingAnimation.setStyle({ display: \"none\" });\n    deleteRequestingAnimation.setStyle({ display: \"none\" });\n  } catch (error) {\n    console.warn(\n      \"Loader animation elements not found. Skipping initialization of loader animations.\"\n    );\n  }\n\n  /**\n   * Shows the delete confirmation dialog and updates the data-brand attribute.\n   */\n  const showDeleteDialog = () => {\n    if (deleteStudentDialogElement && pageMain) {\n      deleteStudentDialogElement.showModal(); // Display the dialog\n      pageMain.setAttribute(\"data-brand\", \"6\"); // Update data-brand to 6\n    } else {\n      console.warn(\n        \"Cannot show delete dialog because either deleteStudentDialogElement or pageMain is not available.\"\n      );\n    }\n  };\n\n  /**\n   * Hides the delete confirmation dialog and reverts the data-brand attribute.\n   */\n  const hideDeleteDialog = () => {\n    if (deleteStudentDialogElement && pageMain && deleteStudentError) {\n      deleteStudentDialogElement.close(); // Close the dialog\n      pageMain.setAttribute(\"data-brand\", \"2\"); // Revert data-brand to 2\n      deleteStudentError.setStyle({ display: \"none\" }); // Hide any previous error messages\n    } else {\n      console.warn(\n        \"Cannot hide delete dialog because either deleteStudentDialogElement, pageMain, or deleteStudentError is not available.\"\n      );\n    }\n  };\n\n  /**\n   * Handles the deletion of the student.\n   */\n  const handleDeleteStudent = async () => {\n    try {\n      // Fetch the current registrations for the student\n      const registrations = await fetchStudentRegistrations(studentId);\n\n      // Check if there are any current registrations\n      if (registrations.length > 0) {\n        alert(\n          \"You must remove this student from any current registrations before you may delete them.\"\n        );\n        return; // Exit the function early; do not proceed with deletion\n      }\n\n      // Hide previous error messages if available\n      if (deleteStudentError) {\n        deleteStudentError.setStyle({ display: \"none\" });\n      }\n\n      // Show the loader animation and disable the delete button if available\n      if (deleteRequestingAnimation && deleteStudentFinalBtn) {\n        deleteRequestingAnimation.setStyle({ display: \"flex\" });\n        deleteStudentFinalBtn.setAttribute(\"disabled\", \"true\");\n      }\n\n      // Send the DELETE request to the API\n      const response = await apiClient\n        .delete(`/profiles/student/${studentId}`)\n        .fetch();\n\n      // Hide the loader animation and re-enable the delete button if available\n      if (deleteRequestingAnimation && deleteStudentFinalBtn) {\n        deleteRequestingAnimation.setStyle({ display: \"none\" });\n        deleteStudentFinalBtn.removeAttribute(\"disabled\");\n      }\n\n      if (response && response.status === 200) {\n        // Successfully deleted the student\n        // Optionally, display a success message before redirecting\n        alert(\"Student has been successfully deleted.\");\n\n        // Redirect to the students list page or another appropriate page\n        window.location.href = \"/dashboard\"; // Adjust the URL as needed\n      } else {\n        // Handle unexpected successful responses\n        throw new Error(\"Unexpected response from the server.\");\n      }\n    } catch (error: any) {\n      console.error(\"Error deleting student:\", error);\n\n      // Hide the loader animation and re-enable the delete button if available\n      if (deleteRequestingAnimation && deleteStudentFinalBtn) {\n        deleteRequestingAnimation.setStyle({ display: \"none\" });\n        deleteStudentFinalBtn.removeAttribute(\"disabled\");\n      }\n\n      // Display the error message if the error component exists\n      if (deleteStudentError) {\n        deleteStudentError.setStyle({ display: \"flex\" });\n        try {\n          deleteStudentError\n            .getChildAsComponent(\".error-text\")\n            .setText(\n              error.message ||\n                \"An unexpected error occurred while deleting the student.\"\n            );\n        } catch (childError) {\n          console.warn(\n            \"Could not set text for .error-text within #deleteStudentError:\",\n            childError\n          );\n        }\n      }\n    }\n  };\n\n  // Event listener to open the delete dialog if the open button and dialog exist\n  if (openDeleteDialogBtn && deleteStudentDialogElement && pageMain) {\n    openDeleteDialogBtn.on(\"click\", showDeleteDialog);\n  } else {\n    console.warn(\n      \"Cannot attach click event to #openDeleteDialog because required elements are missing.\"\n    );\n  }\n\n  // Event listener to close the delete dialog if the close button and dialog exist\n  if (\n    closeDeleteDialogBtn &&\n    deleteStudentDialogElement &&\n    pageMain &&\n    deleteStudentError\n  ) {\n    closeDeleteDialogBtn.on(\"click\", hideDeleteDialog);\n  } else {\n    console.warn(\n      \"Cannot attach click event to #close-delete-dialog-btn because required elements are missing.\"\n    );\n  }\n\n  // Event listener for the final delete action if the delete button exists\n  if (deleteStudentFinalBtn) {\n    deleteStudentFinalBtn.on(\"click\", handleDeleteStudent);\n  } else {\n    console.warn(\n      \"Cannot attach click event to #deleteStudentFinal because the element is missing.\"\n    );\n  }\n}\n","// src/modules/pages/studentProfile/caregiverView.ts\n\nimport { WFComponent, WFFormComponent } from \"@xatom/core\";\n\n/**\n * Initializes the caregiver view by adjusting the DOM and form functionalities\n * based on the caregiver status of the current student.\n */\nexport const initializeCaregiverView = () => {\n  // Retrieve the current student data from localStorage\n  const studentData = localStorage.getItem(\"current_student\");\n  if (!studentData) {\n    console.error(\"No student data found in localStorage.\");\n    return;\n  }\n\n  let student: any;\n  try {\n    student = JSON.parse(studentData);\n  } catch (parseError) {\n    console.error(\"Error parsing student data from localStorage:\", parseError);\n    return;\n  }\n\n  // Check if the current user is a caregiver\n  if (student.caregiver === true) {\n    // List of DOM selectors to remove for caregivers\n    const selectorsToRemove = [\n      \"#openEditStudentDialog\",\n      \"#openDeleteDialog\",\n      \"#editEmergencySubmitButton\",\n      \"#editStudentDialog\",\n      \"#deleteStudentDialog\",\n    ];\n\n    // Iterate over each selector and remove the corresponding element from the DOM\n    selectorsToRemove.forEach((selector) => {\n      try {\n        const component = new WFComponent(selector);\n        component.remove();\n        console.log(`Removed element with selector: ${selector}`);\n      } catch (error) {\n        console.error(\n          `Failed to remove element with selector ${selector}:`,\n          error\n        );\n      }\n    });\n\n    // Disable the edit emergency contact form to prevent submission\n    try {\n      const editEmergencyForm = new WFFormComponent(\n        \"#editEmergencyContactForm\"\n      );\n      editEmergencyForm.disableForm();\n      console.log(\"Disabled #editEmergencyContactForm to prevent submissions.\");\n    } catch (error) {\n      console.error(\"Failed to disable #editEmergencyContactForm:\", error);\n    }\n  } else {\n    console.log(\"Current user is not a caregiver. No changes applied.\");\n  }\n};\n","// src/modules/pages/studentProfile/registrationBreadcrumbs.ts\n\nimport { WFComponent } from \"@xatom/core\";\n\n/**\n * Interface representing the structure of caregiver_breadcrumbs.\n */\ninterface CaregiverBreadcrumbs {\n  student_id: number;\n  student_name: string;\n  workshop_name: string;\n  workshop_id: string;\n  program_name: string;\n  program_id: string;\n  subscription_id: number;\n}\n\n/**\n * Initializes the event listeners for registration links to set caregiver_breadcrumbs in localStorage.\n */\nexport const initializeRegistrationBreadcrumbs = () => {\n  // Define the selector for registration links.\n  // Update this selector based on the actual structure of your registration links.\n  const registrationLinkSelector = \".registration-link\";\n\n  /**\n   * Event handler for registration link clicks.\n   * @param event - The click event.\n   */\n  const handleRegistrationClick = (event: Event) => {\n    // Prevent the default action if necessary.\n    // Uncomment the next line if you want to handle navigation manually.\n    // event.preventDefault();\n\n    const target = event.target as HTMLElement;\n\n    // Traverse up the DOM to find the registration link element if the click is on a child element.\n    const registrationLink = target.closest(\n      registrationLinkSelector\n    ) as HTMLElement | null;\n\n    if (!registrationLink) {\n      console.warn(\"Clicked element is not a registration link.\");\n      return;\n    }\n\n    // Extract data attributes from the registration link.\n    const studentId = parseInt(\n      registrationLink.getAttribute(\"data-student-id\") || \"0\",\n      10\n    );\n    const studentName =\n      registrationLink.getAttribute(\"data-student-name\") || \"\";\n    const workshopName =\n      registrationLink.getAttribute(\"data-workshop-name\") || \"\";\n    const workshopId = registrationLink.getAttribute(\"data-workshop-id\") || \"\";\n    const programName =\n      registrationLink.getAttribute(\"data-program-name\") || \"\";\n    const programId = registrationLink.getAttribute(\"data-program-id\") || \"\";\n    const subscriptionId = parseInt(\n      registrationLink.getAttribute(\"data-subscription-id\") || \"0\",\n      10\n    );\n\n    // Validate the extracted data.\n    if (\n      !studentId ||\n      !studentName ||\n      !programName ||\n      !programId ||\n      !subscriptionId\n    ) {\n      console.error(\n        \"Incomplete registration data. Cannot set caregiver_breadcrumbs.\"\n      );\n      return;\n    }\n\n    // Create the caregiver_breadcrumbs object.\n    const caregiverBreadcrumbs: CaregiverBreadcrumbs = {\n      student_id: studentId,\n      student_name: studentName,\n      workshop_name: workshopName,\n      workshop_id: workshopId,\n      program_name: programName,\n      program_id: programId,\n      subscription_id: subscriptionId,\n    };\n\n    // Store the object in localStorage.\n    try {\n      localStorage.setItem(\n        \"caregiver_breadcrumbs\",\n        JSON.stringify(caregiverBreadcrumbs)\n      );\n      console.log(\n        \"caregiver_breadcrumbs set in localStorage:\",\n        caregiverBreadcrumbs\n      );\n    } catch (error) {\n      console.error(\n        \"Failed to set caregiver_breadcrumbs in localStorage:\",\n        error\n      );\n    }\n  };\n\n  /**\n   * Attaches the event listener using event delegation.\n   */\n  const attachEventListener = () => {\n    // Attach the event listener to a common ancestor.\n    // Update the selector based on your DOM structure. Here, we use the document body.\n    const commonAncestor = document.body;\n\n    if (!commonAncestor) {\n      console.error(\"Common ancestor for event delegation not found.\");\n      return;\n    }\n\n    commonAncestor.addEventListener(\"click\", handleRegistrationClick);\n    console.log(\"Event listener for registration links attached.\");\n  };\n\n  // Initialize the event listeners.\n  attachEventListener();\n};\n","// src/pages/listStudentFiles.ts\n\nimport { WFDynamicList, WFComponent } from \"@xatom/core\";\nimport { apiClient } from \"../../../api/apiConfig\";\n\n// Define the FileItem interface based on the API response\ninterface FileItem {\n  id: number;\n  file_name: string;\n  file_url: string;\n  program_id?: string | null;\n  workshop_id?: string | null;\n  session_id?: string | null;\n  user_id: number;\n  created_at: number;\n}\n\n// Function to get the student_id from URL parameters\nfunction getStudentIdFromUrl(): string | null {\n  const urlParams = new URLSearchParams(window.location.search);\n  return urlParams.get(\"id\");\n}\n\n// Function to fetch files for a specific student\nexport async function fetchStudentFiles(\n  studentId: string\n): Promise<FileItem[]> {\n  try {\n    const getFiles = apiClient.get<FileItem[]>(\n      `/student_files/student/${studentId}`\n    );\n    const response = await getFiles.fetch();\n    return response;\n  } catch (error) {\n    console.error(\"Error fetching files for student:\", error);\n    throw error;\n  }\n}\n\n// Function to initialize and render the dynamic file list for a student\nexport async function initializeDynamicStudentFileList(\n  containerSelector: string\n) {\n  // Get the student ID from the URL\n  const studentId = getStudentIdFromUrl();\n  if (!studentId) {\n    console.error(\"No student ID provided in URL\");\n    return;\n  }\n\n  // Initialize a new instance of WFDynamicList for Files\n  const list = new WFDynamicList<FileItem>(containerSelector, {\n    rowSelector: \"#fileCard\", // Using ID selector for template\n    loaderSelector: \"#filesloading\", // Selector for the loader\n    emptySelector: \"#filesEmpty\", // Selector for the empty state\n  });\n\n  // Customize the rendering of the loader\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({\n      display: \"flex\",\n    });\n    return loaderElement;\n  });\n\n  // Customize the rendering of the empty state\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({\n      display: \"flex\",\n    });\n    return emptyElement;\n  });\n\n  // Customize the rendering of list items (File Cards)\n  list.rowRenderer(({ rowData, rowElement }) => {\n    const fileCard = new WFComponent(rowElement);\n\n    // Set the fileCard's href to file_url\n    fileCard.setAttribute(\"href\", rowData.file_url);\n\n    // Set the fileName to file_name\n    const fileName = fileCard.getChildAsComponent(\"#fileName\");\n    fileName.setText(rowData.file_name);\n\n    // Show the list item\n    rowElement.setStyle({\n      display: \"block\",\n    });\n\n    return rowElement;\n  });\n\n  // Load and display file data\n  try {\n    // Enable the loading state\n    list.changeLoadingStatus(true);\n\n    const files = await fetchStudentFiles(studentId);\n\n    // Sort files alphabetically by file_name\n    files.sort((a, b) => a.file_name.localeCompare(b.file_name));\n\n    // Set the data to be displayed in the dynamic list\n    list.setData(files);\n\n    // Disable the loading state\n    list.changeLoadingStatus(false);\n  } catch (error) {\n    console.error(\"Error loading files:\", error);\n\n    // If there's an error, set an empty array to trigger the empty state\n    list.setData([]);\n\n    // Disable the loading state\n    list.changeLoadingStatus(false);\n  }\n}\n"],"names":[],"version":3,"file":"studentProfile.660d4d19.js.map","sourceRoot":"../"}