{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GC4JA,EAAA,MAAA,CAAA,EAAA,uBAAA,IAAsB,GAwDtB,EAAA,MAAA,CAAA,EAAA,gCAAA,IAAsB,GAlNtB,IAAA,EAAA,EAAA,eACA,EAAA,EAAA,gBACA,EAAA,EAAA,0BACA,EAAA,EAAA,uDACA,EAAA,EAAA,kCAsJO,eAAe,EACpB,CAAiB,CACjB,CAAsB,CACtB,CAAA,EAEA,GAAI,CAEF,IAAM,EAAsC,CAC1C,QAAS,EACT,aAAc,CAChB,EAEI,GACF,CAAA,EAAY,WAAW,CAAG,CAD5B,EAKA,IAAM,EAAqB,AAAA,CAAA,EAAA,EAAA,SAAQ,AAAR,EAAU,GAAG,CACtC,CAAC,iCAAiC,EAAE,GAAc,OAAO,CAAC,CAC1D,CAAE,KAAM,CAAY,GAItB,OADiB,MAAM,EAAmB,KAAK,EAEjD,CAAE,MAAO,EAAY,CAEnB,QAAQ,KAAK,CAAC,yBAA0B,GAGxC,IA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","sources":["<anon>","src/modules/dashboard/registration/workshopDetails.ts","node_modules/.pnpm/@xatom+image@1.0.0_@xatom+core@1.0.12/node_modules/@xatom/image/dist/index.js","src/modules/dashboard/registration/components/cancelRegistrationDialog.ts","src/utils/formUtils.ts","src/utils/validationUtils.ts","src/modules/dashboard/registration/components/listWorkshopFiles.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"cxaZ0\":[function(require,module,exports) {\n// src/pages/workshopDetails.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n// Function to fetch workshop details from the API, including program and subscription params\nparcelHelpers.export(exports, \"fetchWorkshopDetails\", ()=>fetchWorkshopDetails);\n// Function to initialize and render the workshop details and sessions\nparcelHelpers.export(exports, \"initializeWorkshopDetailsPage\", ()=>initializeWorkshopDetailsPage);\nvar _core = require(\"@xatom/core\");\nvar _image = require(\"@xatom/image\");\nvar _apiConfig = require(\"../../../api/apiConfig\");\nvar _cancelRegistrationDialog = require(\"../registration/components/cancelRegistrationDialog\");\nvar _listWorkshopFiles = require(\"./components/listWorkshopFiles\");\nasync function fetchWorkshopDetails(programId, subscriptionId, workshopId // Made optional\n) {\n    try {\n        // Construct request data conditionally\n        const requestData = {\n            program: programId,\n            subscription: subscriptionId\n        };\n        if (workshopId) requestData.workshop_id = workshopId;\n        // Make the API request\n        const getWorkshopDetails = (0, _apiConfig.apiClient).get(`/dashboard/registration/workshop/${workshopId || \"none\"}`, {\n            data: requestData\n        });\n        const response = await getWorkshopDetails.fetch();\n        return response;\n    } catch (error) {\n        // Log the detailed error object for debugging\n        console.error(\"Detailed Error Object:\", error);\n        // Initialize a default error message\n        let errorMessage = \"An unexpected error occurred. Please try again.\";\n        // Extract the specific error message from the API response if available\n        if (error?.response?.data?.message) errorMessage = error.response.data.message;\n        else if (error.message) // Fallback to the generic error message\n        errorMessage = error.message;\n        // Display the error message in an alert box\n        alert(`Error: ${errorMessage}`);\n        // Navigate back to the previous page with a fallback\n        window.history.length > 1 ? window.history.back() : window.location.href = \"/dashboard/registrations\";\n        // Log the error for debugging purposes\n        console.error(\"Fetch Workshop Details Error:\", error);\n        // Optionally, return undefined to indicate failure\n        return undefined;\n    }\n}\nasync function initializeWorkshopDetailsPage() {\n    //initalize files list\n    (0, _listWorkshopFiles.initializeDynamicWorkshopFileList)(\"#filesList\");\n    // Utility function to parse URL parameters\n    const getUrlParams = ()=>{\n        const params = new URLSearchParams(window.location.search);\n        const workshopId = params.get(\"workshop\");\n        const programId = params.get(\"program\");\n        const subscriptionId = params.get(\"subscription\");\n        return {\n            workshopId,\n            programId,\n            subscriptionId\n        };\n    };\n    const { workshopId, programId, subscriptionId } = getUrlParams();\n    if (!programId || !subscriptionId) {\n        alert(\"Invalid access. Program ID or Subscription ID is missing.\");\n        window.history.back();\n        return;\n    }\n    try {\n        // Fetch workshop details with program and subscription params\n        const apiResponse = await fetchWorkshopDetails(programId, subscriptionId, workshopId // Optional parameter\n        );\n        // If fetchWorkshopDetails encounters an error, it handles it and navigates back,\n        // so the following code will not execute in that case.\n        if (!apiResponse) // In case fetchWorkshopDetails returns undefined due to an error\n        return;\n        const { workshop, subscription, program, sessions, invoices, caregiver } = apiResponse;\n        // Use program details if workshop details are not provided\n        const programDetails = program.items.find((p)=>p.id === subscription.program_id);\n        // Update workshop and program details on the page\n        if (workshop) updateWorkshopDetails(workshop, {\n            items: program.items\n        }, subscription);\n        else if (programDetails) updateWorkshopDetailsFromProgram(programDetails, subscription);\n        // Always update program breadcrumb regardless of workshop availability\n        if (programDetails) updateProgramBreadcrumb(programDetails);\n        updateSubscriptionDetails(subscription);\n        // Filter sessions to unique based on session_id\n        const uniqueSessions = getUniqueSessions(sessions);\n        // Initialize and render the sessions list using fetched data\n        initializeDynamicSessionList(\"#listRegistration\", uniqueSessions, subscription, caregiver // Pass the caregiver flag\n        );\n        // Initialize and render the invoices list using fetched data\n        initializePastInvoicesList(\".table_body\", invoices);\n        // Handle Breadcrumbs based on caregiver flag\n        handleBreadcrumbs(caregiver, subscription);\n        // Handle Caregiver-specific UI adjustments\n        if (caregiver) {\n            // Remove the Cancel Registration button\n            const cancelButton = document.querySelector(\"#openCancelDialog\");\n            if (cancelButton) cancelButton.remove();\n            // Remove any existing Cancel Registration Dialog if present\n            const cancelDialog = document.getElementById(\"cancelRegistrationDialog\");\n            if (cancelDialog) cancelDialog.remove();\n            // Remove the Payment Details section\n            const paymentDetails = document.querySelector(\".payment_details_wrap\");\n            if (paymentDetails) paymentDetails.remove();\n        } else // Initialize Cancel Registration Dialog component\n        new (0, _cancelRegistrationDialog.CancelRegistrationDialog)({\n            containerSelector: \".button_group\",\n            subscriptionId: subscription.id.toString(),\n            onCancelSuccess: ()=>{\n                // Redirect to registrations dashboard upon successful cancellation\n                window.location.href = \"/dashboard/registrations\";\n            }\n        });\n        // Trigger the success_trigger element\n        triggerSuccessEvent(\".success_trigger\");\n    } catch (error) {\n        // Since fetchWorkshopDetails already handles the error, this block can remain empty or be removed.\n        // If you prefer, you can log the error here.\n        console.error(\"initializeWorkshopDetailsPage Error:\", error);\n    }\n}\n// Function to handle Breadcrumbs based on caregiver flag\nfunction handleBreadcrumbs(caregiver, subscription) {\n    const userBreadcrumbList = document.getElementById(\"userBreadcrumbList\");\n    const caregiverBreadcrumbList = document.getElementById(\"caregiverBreadcrumbList\");\n    if (caregiver) {\n        if (userBreadcrumbList) userBreadcrumbList.style.display = \"none\";\n        if (caregiverBreadcrumbList) caregiverBreadcrumbList.style.display = \"flex\";\n        // Fetch caregiver_breadcrumbs from localStorage\n        const caregiverBreadcrumbs = localStorage.getItem(\"caregiver_breadcrumbs\");\n        if (caregiverBreadcrumbs) try {\n            const breadcrumbs = JSON.parse(caregiverBreadcrumbs);\n            // Update studentBreadcrumb link\n            const studentBreadcrumb = document.getElementById(\"studentBreadcrumb\");\n            if (studentBreadcrumb) {\n                const studentBreadcrumbComponent = new (0, _core.WFComponent)(studentBreadcrumb);\n                studentBreadcrumbComponent.setText(breadcrumbs.student_name);\n                // Append ?id={student_id} to the href\n                const currentHref = studentBreadcrumb.getAttribute(\"href\") || \"/dashboard/student/profile\";\n                const url = new URL(currentHref, window.location.origin);\n                url.searchParams.set(\"id\", breadcrumbs.student_id.toString());\n                studentBreadcrumbComponent.setAttribute(\"href\", url.toString());\n            }\n            // Update workshopBreadcrumbCaregiver text\n            const workshopBreadcrumbCaregiver = document.getElementById(\"workshopBreadcrumbCaregiver\");\n            if (workshopBreadcrumbCaregiver) {\n                const workshopBreadcrumbComponent = new (0, _core.WFComponent)(workshopBreadcrumbCaregiver);\n                const workshopName = breadcrumbs.workshop_name || breadcrumbs.program_name || \"N/A\";\n                workshopBreadcrumbComponent.setText(workshopName);\n            }\n        } catch (parseError) {\n            console.error(\"Error parsing caregiver_breadcrumbs from localStorage:\", parseError);\n        }\n        else console.warn(\"No caregiver_breadcrumbs found in localStorage.\");\n    } else {\n        if (userBreadcrumbList) userBreadcrumbList.style.display = \"flex\";\n        if (caregiverBreadcrumbList) caregiverBreadcrumbList.style.display = \"none\";\n    }\n}\n// Function to initialize and render the past invoices list using fetched data\nasync function initializePastInvoicesList(containerSelector, invoices) {\n    // Initialize a new instance of WFDynamicList for Invoices\n    const list = new (0, _core.WFDynamicList)(containerSelector, {\n        rowSelector: \"#invoiceLine\"\n    });\n    // Customize the rendering of the loader\n    list.loaderRenderer((loaderElement)=>{\n        loaderElement.setStyle({\n            display: \"flex\"\n        });\n        return loaderElement;\n    });\n    // Customize the rendering of the empty state\n    list.emptyRenderer((emptyElement)=>{\n        emptyElement.setStyle({\n            display: \"flex\"\n        });\n        return emptyElement;\n    });\n    // Customize the rendering of list items (Invoice Rows)\n    list.rowRenderer(({ rowData, rowElement })=>{\n        const invoiceRow = new (0, _core.WFComponent)(rowElement);\n        // Set the invoice date\n        const invoiceDateComponent = invoiceRow.getChildAsComponent(\"#invoiceDate\");\n        if (invoiceDateComponent) {\n            const invoiceDate = new (0, _core.WFComponent)(invoiceDateComponent.getElement());\n            const formattedDate = new Date(rowData.created_at).toLocaleDateString();\n            invoiceDate.setText(formattedDate);\n        }\n        // Set the invoice amount\n        const invoiceAmountComponent = invoiceRow.getChildAsComponent(\"#invoiceAmount\");\n        if (invoiceAmountComponent) {\n            const invoiceAmount = new (0, _core.WFComponent)(invoiceAmountComponent.getElement());\n            invoiceAmount.setText(`$${rowData.amount_total}`);\n        }\n        // Set the receipt link\n        const receiptButtonComponent = invoiceRow.getChildAsComponent(\"#receiptButton\");\n        if (receiptButtonComponent) {\n            const receiptButton = new (0, _core.WFComponent)(receiptButtonComponent.getElement());\n            receiptButton.setAttribute(\"href\", rowData.reciept_url);\n        }\n        // Show the list item\n        rowElement.setStyle({\n            display: \"table-row\"\n        });\n        return rowElement;\n    });\n    // Load and display invoice data\n    try {\n        // Enable the loading state\n        list.changeLoadingStatus(true);\n        // Set the data to be displayed in the dynamic list\n        list.setData(invoices);\n        // Disable the loading state\n        list.changeLoadingStatus(false);\n    } catch (error) {\n        console.error(\"Error initializing past invoices list:\", error);\n        list.setData([]);\n        list.changeLoadingStatus(false);\n    }\n}\n// Function to update workshop and program details on the page using Workshop details\nfunction updateWorkshopDetails(workshop, programData, subscription) {\n    // Update Workshop Image\n    const workshopImageElement = document.getElementById(\"workshopImage\");\n    if (workshopImageElement) {\n        const workshopImage = new (0, _image.WFImage)(workshopImageElement);\n        if (workshop.fieldData[\"main-image\"].url) {\n            workshopImage.setImage(workshop.fieldData[\"main-image\"].url);\n            const imgElement = workshopImage.getElement();\n            imgElement.alt = workshop.fieldData[\"main-image\"].alt || \"Workshop Image\";\n        } else {\n            workshopImage.setImage(\"https://cdn.prod.website-files.com/plugins/Basic/assets/placeholder.60f9b1840c.svg\");\n            const imgElement = workshopImage.getElement();\n            imgElement.alt = \"Workshop Image\";\n        }\n    }\n    // Update Workshop Name\n    const workshopNameElement = document.getElementById(\"workshopName\");\n    if (workshopNameElement) {\n        const workshopName = new (0, _core.WFComponent)(workshopNameElement);\n        workshopName.setText(workshop.fieldData.name);\n    }\n    // Update workshop breadcrumb\n    const workshopBreadcrumbElement = document.getElementById(\"workshopBreadcrumb\");\n    if (workshopBreadcrumbElement) {\n        const workshopBreadcrumb = new (0, _core.WFComponent)(workshopBreadcrumbElement);\n        workshopBreadcrumb.setText(workshop.fieldData.name);\n    }\n    // Update program breadcrumb\n    updateProgramBreadcrumbFromItems(programData, subscription);\n    // Update Program Name with safe access and debug statements\n    const programNameElement = document.getElementById(\"programName\");\n    if (programNameElement) {\n        const programName = new (0, _core.WFComponent)(programNameElement);\n        if (workshop.fieldData && workshop.fieldData.name) programName.setText(workshop.fieldData.name);\n        else programName.setText(\"Program Name Not Available\");\n    }\n    // Update Workshop Short Description\n    const workshopShortDescriptionElement = document.getElementById(\"workshopShortDescription\");\n    if (workshopShortDescriptionElement) {\n        const workshopShortDescription = new (0, _core.WFComponent)(workshopShortDescriptionElement);\n        workshopShortDescription.setText(workshop.fieldData[\"short-description\"]);\n    }\n}\n// Function to update workshop and program details using Program details\nfunction updateWorkshopDetailsFromProgram(programDetails, subscription) {\n    // Update Program Image\n    const programImageElement = document.getElementById(\"workshopImage\");\n    if (programImageElement) {\n        const programImage = new (0, _image.WFImage)(programImageElement);\n        if (programDetails.fieldData[\"main-image\"].url) {\n            programImage.setImage(programDetails.fieldData[\"main-image\"].url);\n            const imgElement = programImage.getElement();\n            imgElement.alt = programDetails.fieldData[\"main-image\"].alt || \"Program Image\";\n        } else {\n            programImage.setImage(\"https://cdn.prod.website-files.com/plugins/Basic/assets/placeholder.60f9b1840c.svg\");\n            const imgElement = programImage.getElement();\n            imgElement.alt = \"Program Image\";\n        }\n    }\n    // Update Workshop Name with the Program Name\n    const workshopNameElement = document.getElementById(\"workshopName\");\n    if (workshopNameElement) {\n        const workshopName = new (0, _core.WFComponent)(workshopNameElement);\n        workshopName.setText(programDetails.fieldData.name);\n    }\n    // Update Program Name with Program Subheading\n    const programNameElement = document.getElementById(\"programName\");\n    if (programNameElement) {\n        const programName = new (0, _core.WFComponent)(programNameElement);\n        programName.setText(programDetails.fieldData.subheading);\n    }\n    // Update workshop breadcrumb with the Program Name\n    const workshopBreadcrumbElement = document.getElementById(\"workshopBreadcrumb\");\n    if (workshopBreadcrumbElement) {\n        const workshopBreadcrumb = new (0, _core.WFComponent)(workshopBreadcrumbElement);\n        workshopBreadcrumb.setText(programDetails.fieldData.name);\n    }\n}\n// Function to update the program breadcrumb element (ensure it's always set)\nfunction updateProgramBreadcrumb(programDetails) {\n    const programBreadcrumbElement = document.getElementById(\"programBreadcrumb\");\n    if (programBreadcrumbElement) {\n        const programBreadcrumb = new (0, _core.WFComponent)(programBreadcrumbElement);\n        programBreadcrumb.setText(programDetails.fieldData.name);\n        // Update the href attribute to append the program param to the current link\n        const currentHref = programBreadcrumbElement.getAttribute(\"href\") || \"#\";\n        const url = new URL(currentHref, window.location.origin);\n        url.searchParams.set(\"program\", programDetails.id);\n        programBreadcrumb.setAttribute(\"href\", url.toString());\n    }\n}\n// Helper function to update program breadcrumb from program items\nfunction updateProgramBreadcrumbFromItems(programData, subscription) {\n    const programBreadcrumbElement = document.getElementById(\"programBreadcrumb\");\n    if (programBreadcrumbElement) {\n        const programBreadcrumb = new (0, _core.WFComponent)(programBreadcrumbElement);\n        const matchedProgram = programData.items.find((program)=>program.id === subscription.program_id);\n        if (matchedProgram) {\n            // Set the breadcrumb text to the program name\n            programBreadcrumb.setText(matchedProgram.fieldData.name);\n            // Update the href attribute to append the program param to the current link\n            const currentHref = programBreadcrumbElement.getAttribute(\"href\") || \"#\";\n            const url = new URL(currentHref, window.location.origin);\n            url.searchParams.set(\"program\", matchedProgram.id);\n            programBreadcrumb.setAttribute(\"href\", url.toString());\n        }\n    }\n}\n// Function to update subscription details on the page\nfunction updateSubscriptionDetails(subscription) {\n    // Update Subscription Type\n    const subscriptionTypeElement = document.getElementById(\"subscription_type\");\n    if (subscriptionTypeElement) {\n        const subscriptionType = new (0, _core.WFComponent)(subscriptionTypeElement);\n        subscriptionType.setText(subscription.subscription_type);\n    }\n    // Update Next Invoice Date\n    const nextInvoiceDateElement = document.getElementById(\"nextInvoiceDate\");\n    if (nextInvoiceDateElement) {\n        const nextInvoiceDate = new (0, _core.WFComponent)(nextInvoiceDateElement);\n        const nextChargeDateStr = subscription.next_charge_date;\n        if (nextChargeDateStr) {\n            // Create a new Date object\n            const date = new Date(nextChargeDateStr + \"T00:00:00Z\");\n            // Check if the date is valid\n            if (!isNaN(date.getTime())) {\n                const formattedDate = date.toLocaleDateString(\"en-US\", {\n                    timeZone: \"UTC\"\n                });\n                nextInvoiceDate.setText(formattedDate);\n            } else nextInvoiceDate.setText(\"Upon Student Approval\");\n        } else nextInvoiceDate.setText(\"Upon Student Approval\");\n    }\n    // Update Next Invoice Amount\n    const nextInvoiceAmountElement = document.getElementById(\"nextInvoiceAmount\");\n    if (nextInvoiceAmountElement) {\n        const nextInvoiceAmount = new (0, _core.WFComponent)(nextInvoiceAmountElement);\n        const amount = subscription.next_charge_amount;\n        if (amount === 0 || amount === null || amount === undefined) {\n            // Hide the parent .bento_box.is-dashboard.is-payment-detail element\n            const parentElement = nextInvoiceAmountElement.closest(\".bento_box.is-dashboard.is-payment-detail\");\n            if (parentElement instanceof HTMLElement) parentElement.style.display = \"none\";\n        } else nextInvoiceAmount.setText(`$${amount}`);\n    }\n    // Update FinAid Coupon\n    const couponElement = document.getElementById(\"finAidCoupon\");\n    if (couponElement) {\n        const coupon = new (0, _core.WFComponent)(couponElement);\n        if (subscription.coupon && subscription.coupon !== \"None\") {\n            // Remove 'FINAID' from the beginning and add '% discount Applied'\n            const couponText = subscription.coupon.replace(/^FINAID/, \"\").trim() + \"% Discount\";\n            coupon.setText(couponText);\n        } else coupon.setText(\"None\");\n    }\n    // Display or hide finAidDisclaimer based on coupon\n    const finAidDisclaimer = document.getElementById(\"finAidDisclaimer\");\n    if (finAidDisclaimer) {\n        if (subscription.coupon) finAidDisclaimer.style.display = \"block\";\n        else finAidDisclaimer.style.display = \"none\";\n    }\n}\n// Function to filter unique sessions based on session_id\nfunction getUniqueSessions(sessions) {\n    const uniqueMap = {};\n    sessions.forEach((session)=>{\n        if (!uniqueMap[session.session_id]) uniqueMap[session.session_id] = session;\n    });\n    return Object.values(uniqueMap);\n}\n// Function to initialize and render the dynamic sessions list\nasync function initializeDynamicSessionList(containerSelector, sessions, subscription, caregiver // Add caregiver flag as parameter\n) {\n    // Initialize a new instance of WFDynamicList for Sessions\n    const list = new (0, _core.WFDynamicList)(containerSelector, {\n        rowSelector: \"#listRegistrationCard\",\n        loaderSelector: \"#listRegistrationloading\",\n        emptySelector: \"#listRegistrationEmpty\"\n    });\n    // Customize the rendering of the loader\n    list.loaderRenderer((loaderElement)=>{\n        loaderElement.setStyle({\n            display: \"flex\"\n        });\n        return loaderElement;\n    });\n    // Customize the rendering of the empty state\n    list.emptyRenderer((emptyElement)=>{\n        emptyElement.setStyle({\n            display: \"flex\"\n        });\n        return emptyElement;\n    });\n    // Customize the rendering of list items (Session Cards)\n    list.rowRenderer(({ rowData, rowElement })=>{\n        const sessionCard = new (0, _core.WFComponent)(rowElement);\n        // Set the session day\n        const sessionDayComponent = sessionCard.getChildAsComponent(\"#cardSessionDay\");\n        if (sessionDayComponent) {\n            const sessionDay = new (0, _core.WFComponent)(sessionDayComponent.getElement());\n            sessionDay.setText(rowData.weekday);\n        }\n        // Set the session time block\n        const sessionTimeBlockComponent = sessionCard.getChildAsComponent(\"#cardSessionTimeBlock\");\n        if (sessionTimeBlockComponent) {\n            const sessionTimeBlock = new (0, _core.WFComponent)(sessionTimeBlockComponent.getElement());\n            sessionTimeBlock.setText(rowData.time_block);\n        }\n        // Set the session location\n        const sessionLocationComponent = sessionCard.getChildAsComponent(\"#cardSessionLocation\");\n        if (sessionLocationComponent) {\n            const sessionLocation = new (0, _core.WFComponent)(sessionLocationComponent.getElement());\n            sessionLocation.setText(rowData.location);\n        }\n        // Set the link with program, workshop, and subscription parameters\n        const sessionCardElement = sessionCard.getElement();\n        const currentHref = sessionCardElement.getAttribute(\"href\") || \"#\";\n        // Parse existing URL to avoid malformed URLs\n        const url = new URL(currentHref, window.location.origin);\n        // Append or set query parameters using subscription and session details\n        url.searchParams.set(\"program\", subscription.program_id);\n        url.searchParams.set(\"workshop\", subscription.workshop_id);\n        url.searchParams.set(\"session\", rowData.session_id);\n        url.searchParams.set(\"subscription\", subscription.id.toString());\n        // Update the href attribute with the correct parameters\n        sessionCardElement.setAttribute(\"href\", url.toString());\n        // If the user is a caregiver, update the caregiver_breadcrumbs on session selection\n        if (caregiver) sessionCardElement.addEventListener(\"click\", ()=>{\n            const caregiverBreadcrumbs = localStorage.getItem(\"caregiver_breadcrumbs\");\n            if (caregiverBreadcrumbs) try {\n                const breadcrumbs = JSON.parse(caregiverBreadcrumbs);\n                // Update with session details\n                breadcrumbs.session_id = rowData.session_id;\n                breadcrumbs.session_weekday = rowData.weekday;\n                breadcrumbs.session_time_block = rowData.time_block;\n                // Save back to localStorage\n                localStorage.setItem(\"caregiver_breadcrumbs\", JSON.stringify(breadcrumbs));\n            } catch (e) {\n                console.error(\"Error updating caregiver_breadcrumbs:\", e);\n            }\n            else console.warn(\"No caregiver_breadcrumbs found in localStorage.\");\n        });\n        // Show the list item\n        rowElement.setStyle({\n            display: \"block\"\n        });\n        return rowElement;\n    });\n    // Load and display session data\n    try {\n        // Enable the loading state\n        list.changeLoadingStatus(true);\n        // Set the data to be displayed in the dynamic list\n        list.setData(sessions);\n        // Disable the loading state\n        list.changeLoadingStatus(false);\n    } catch (error) {\n        console.error(\"Error initializing dynamic session list:\", error);\n        list.setData([]);\n        list.changeLoadingStatus(false);\n    }\n}\n// Function to trigger a click on the success_trigger element\nfunction triggerSuccessEvent(selector) {\n    const successTrigger = document.querySelector(selector);\n    if (successTrigger instanceof HTMLElement) successTrigger.click();\n}\n\n},{\"@xatom/core\":\"65YBq\",\"@xatom/image\":\"bavwf\",\"../../../api/apiConfig\":\"dUmIV\",\"../registration/components/cancelRegistrationDialog\":\"9XIwa\",\"./components/listWorkshopFiles\":\"jnww1\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"bavwf\":[function(require,module,exports) {\nvar t = require(\"d023971cccd819e3\");\nvar e, r, s, i, o, n, u = {};\ne = u, r = \"WFImage\", s = ()=>c, Object.defineProperty(e, r, {\n    get: s,\n    set: i,\n    enumerable: !0,\n    configurable: !0\n});\nclass c extends t.WFComponent {\n    constructor(t){\n        super(t);\n    }\n    getImageConfig() {\n        return this._config;\n    }\n    getSrc() {\n        return this.getAttribute(\"src\");\n    }\n    getSizes() {\n        return this.getAttribute(\"sizes\");\n    }\n    getSrcSet() {\n        return this.getAttribute(\"srcset\");\n    }\n    getLoading() {\n        return this.getAttribute(\"loading\");\n    }\n    onLoad(t) {\n        return this.on(\"load\", t), ()=>{\n            this.off(\"load\", t);\n        };\n    }\n    onLoadError(t) {\n        return this.on(\"error\", t), ()=>{\n            this.off(\"error\", t);\n        };\n    }\n    setImage(t) {\n        if (\"string\" == typeof t) this.setAttribute(\"src\", t), this.removeAttribute(\"srcset\"), this.removeAttribute(\"sizes\");\n        else {\n            if (this.setAttribute(\"src\", t.src), \"object\" == typeof t && t.srcSet && t.srcSet.length && t.sizes && t.sizes.length) {\n                const e = t.srcSet.map((t)=>`${t.url} ${t.size}`).join(\", \");\n                this.setAttribute(\"srcset\", e);\n            } else this.removeAttribute(\"srcset\"), this.removeAttribute(\"sizes\");\n            t.loading && this.setAttribute(\"loading\", t.loading);\n        }\n    }\n}\no = module.exports, n = u, Object.keys(n).forEach(function(t) {\n    \"default\" === t || \"__esModule\" === t || o.hasOwnProperty(t) || Object.defineProperty(o, t, {\n        enumerable: !0,\n        get: function() {\n            return n[t];\n        }\n    });\n});\n\n},{\"d023971cccd819e3\":\"65YBq\"}],\"9XIwa\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"CancelRegistrationDialog\", ()=>CancelRegistrationDialog);\nvar _core = require(\"@xatom/core\");\nvar _apiConfig = require(\"../../../../api/apiConfig\");\nvar _formUtils = require(\"../../../../utils/formUtils\");\nvar _validationUtils = require(\"../../../../utils/validationUtils\");\nclass CancelRegistrationDialog {\n    constructor(options){\n        const { containerSelector, subscriptionId, onCancelSuccess } = options;\n        // Initialize WFComponents\n        this.container = new (0, _core.WFComponent)(containerSelector);\n        this.subscriptionId = subscriptionId;\n        this.cancelForm = new (0, _core.WFFormComponent)(\"#cancelSubscriptionForm\");\n        this.dialog = new (0, _core.WFComponent)(\"#inviteCaregiverDialog\");\n        this.pageMain = new (0, _core.WFComponent)(\".page_main\"); // Get the main page container\n        // Initialize the dialog component\n        this.initialize(onCancelSuccess);\n    }\n    initialize(onCancelSuccess) {\n        if (!this.container.getElement()) {\n            console.error(\"Container element not found for CancelRegistrationDialog\");\n            return;\n        }\n        // Attach click event to the \"Cancel Registration\" button\n        const openCancelDialogBtn = new (0, _core.WFComponent)(\"#openCancelDialog\");\n        if (openCancelDialogBtn.getElement()) openCancelDialogBtn.on(\"click\", ()=>{\n            console.log(\"Open Cancel Registration button clicked\");\n            this.openDialog();\n        });\n        else console.error(\"Open Cancel Registration button not found\");\n        // Attach click event to close button\n        const closeDialogBtn = new (0, _core.WFComponent)(\"#close-dialog-btn\");\n        if (closeDialogBtn.getElement()) closeDialogBtn.on(\"click\", ()=>{\n            console.log(\"Close dialog button clicked\");\n            this.closeDialog();\n        });\n        else console.error(\"Close dialog button not found\");\n        // Setup form submission interception and validation\n        this.setupFormSubmission(onCancelSuccess);\n        this.setupFormValidation();\n    }\n    openDialog() {\n        if (this.dialog.getElement() && this.pageMain.getElement()) {\n            console.log(\"Opening dialog\");\n            const dialogElement = this.dialog.getElement();\n            dialogElement.showModal(); // Using `showModal()` to make sure it behaves as a dialog\n            // Update page_main data-brand attribute to \"6\" when dialog opens\n            console.log(\"Setting page_main data-brand attribute to 6\");\n            this.pageMain.setAttribute(\"data-brand\", \"6\");\n        } else console.error(\"Dialog or page_main element not found\");\n    }\n    closeDialog() {\n        if (this.dialog.getElement() && this.pageMain.getElement()) {\n            console.log(\"Closing dialog\");\n            const dialogElement = this.dialog.getElement();\n            dialogElement.close(); // Using `close()` to properly close the dialog\n            // Reset page_main data-brand attribute to \"2\" when dialog closes\n            console.log(\"Resetting page_main data-brand attribute to 2\");\n            this.pageMain.setAttribute(\"data-brand\", \"2\");\n        } else console.error(\"Dialog or page_main element not found\");\n    }\n    setupFormSubmission(onCancelSuccess) {\n        this.cancelForm.onFormSubmit(async (formData, event)=>{\n            event.preventDefault(); // Prevent form default submission\n            event.stopPropagation(); // Stop any other event listeners on the form\n            console.log(\"Form submission intercepted\");\n            const reason = formData.cancelled_because;\n            if (!(0, _validationUtils.validateNotEmpty)(reason)) {\n                const errorComponent = new (0, _core.WFComponent)(\"#cancelledReasonError\");\n                (0, _formUtils.toggleError)(errorComponent, \"Reason for cancelling is required.\", true);\n                return;\n            }\n            try {\n                // Show loading animation\n                this.setLoadingState(true);\n                // Make DELETE request to API to cancel subscription\n                console.log(\"Submitting cancellation to API for subscription ID:\", this.subscriptionId);\n                const response = await (0, _apiConfig.apiClient).delete(`/subscriptions/${this.subscriptionId}/cancel`, {\n                    data: {\n                        reason: reason\n                    }\n                }).fetch();\n                // Extract relevant status from the response data\n                if (response && response.status === \"Cancelled\") {\n                    console.log(\"Cancellation successful\");\n                    // Clear any previous error messages\n                    const errorComponent = new (0, _core.WFComponent)(\"#cancelledReasonError\");\n                    (0, _formUtils.toggleError)(errorComponent, \"\", false); // Explicitly hide error on success\n                    // Close dialog and call the success callback\n                    this.closeDialog();\n                    onCancelSuccess();\n                } else // Handle unexpected success response format\n                throw new Error(`Unexpected response format or status: ${response.status}`);\n            } catch (error) {\n                console.error(\"Error cancelling registration: \", error);\n                this.showErrorMessage(\"Oops! Something went wrong while submitting the form.\");\n            } finally{\n                // Hide loading animation\n                this.setLoadingState(false);\n            }\n        });\n    }\n    setupFormValidation() {\n        const reasonInput = new (0, _core.WFComponent)(\"#cancelledReason\");\n        const reasonErrorComponent = new (0, _core.WFComponent)(\"#cancelledReasonError\");\n        if (!reasonInput.getElement() || !reasonErrorComponent.getElement()) {\n            console.error(\"Reason input or error component not found for validation\");\n            return;\n        }\n        const validateReason = (0, _formUtils.createValidationFunction)(reasonInput, (input)=>(0, _validationUtils.validateNotEmpty)(input), \"Reason for cancelling is required.\");\n        (0, _formUtils.setupValidation)(reasonInput, reasonErrorComponent, validateReason);\n    }\n    setLoadingState(isLoading) {\n        const loadingAnimation = new (0, _core.WFComponent)(\"#cancelRegistrationRequesting\");\n        const submitButton = new (0, _core.WFComponent)(\"#cancelRegistration\");\n        if (loadingAnimation.getElement() && submitButton.getElement()) {\n            if (isLoading) {\n                loadingAnimation.setStyle({\n                    display: \"block\"\n                });\n                submitButton.setAttribute(\"disabled\", \"true\");\n            } else {\n                loadingAnimation.setStyle({\n                    display: \"none\"\n                });\n                submitButton.removeAttribute(\"disabled\");\n            }\n        } else console.error(\"Loading animation or submit button not found for setting loading state\");\n    }\n    showErrorMessage(message) {\n        const errorElement = new (0, _core.WFComponent)(\"#submitInviteCaregiverError\");\n        if (errorElement.getElement()) {\n            errorElement.setText(message);\n            errorElement.setStyle({\n                display: \"flex\"\n            });\n        } else console.error(\"Error element not found for showing error message\");\n    }\n}\n\n},{\"@xatom/core\":\"65YBq\",\"../../../../api/apiConfig\":\"dUmIV\",\"../../../../utils/formUtils\":\"gepHz\",\"../../../../utils/validationUtils\":\"gu2z7\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"gepHz\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"toggleError\", ()=>toggleError);\nparcelHelpers.export(exports, \"setupValidation\", ()=>setupValidation);\nparcelHelpers.export(exports, \"createValidationFunction\", ()=>createValidationFunction);\nparcelHelpers.export(exports, \"createCheckboxValidationFunction\", ()=>createCheckboxValidationFunction);\nparcelHelpers.export(exports, \"setupCheckboxValidation\", ()=>setupCheckboxValidation);\nparcelHelpers.export(exports, \"validateSelectedSessions\", ()=>validateSelectedSessions);\n/**\n * Updates the user's profile picture URL in the authentication system.\n * @param {string} imageUrl - The URL of the uploaded image.\n */ parcelHelpers.export(exports, \"setProfilePicUrl\", ()=>setProfilePicUrl);\n/**\n * Handles file upload and displays the uploaded image.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */ /**\n * Handles file upload and displays the uploaded image.\n * Only JPEG files less than 2 MB can be uploaded.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */ parcelHelpers.export(exports, \"setupFileUpload\", ()=>setupFileUpload);\nparcelHelpers.export(exports, \"formatPhoneNumber\", ()=>formatPhoneNumber);\nvar _core = require(\"@xatom/core\");\nvar _image = require(\"@xatom/image\");\nvar _apiConfig = require(\"../api/apiConfig\");\nvar _authConfig = require(\"../auth/authConfig\");\nfunction toggleError(errorMessageComponent, message, show) {\n    errorMessageComponent.updateTextViaAttrVar({\n        text: show ? message : \"\"\n    });\n    errorMessageComponent.setStyle({\n        display: show ? \"flex\" : \"none\"\n    });\n}\nfunction setupValidation(inputComponent, errorComponent, validate, requestErrorComponent // Optional component to clear on input change\n) {\n    const validateAndUpdate = ()=>{\n        const errorMessage = validate();\n        toggleError(errorComponent, errorMessage, !!errorMessage);\n        if (requestErrorComponent && errorMessage === \"\") // Clear request error message when the user is correcting the input\n        toggleError(requestErrorComponent, \"\", false);\n    };\n    // Attach event listeners for real-time validation\n    inputComponent.on(\"input\", validateAndUpdate);\n    inputComponent.on(\"blur\", validateAndUpdate);\n    inputComponent.on(\"change\", validateAndUpdate);\n}\nfunction createValidationFunction(inputComponent, validationFn, errorMessage) {\n    return ()=>{\n        const inputElement = inputComponent.getElement();\n        const isValid = validationFn(inputElement.value);\n        return isValid ? \"\" : errorMessage;\n    };\n}\nfunction createCheckboxValidationFunction(checkboxComponent, errorMessage) {\n    return ()=>{\n        const checkbox = checkboxComponent.getElement();\n        return checkbox.checked ? \"\" : errorMessage;\n    };\n}\nfunction setupCheckboxValidation(checkboxComponent, checkboxErrorComponent, errorMessage) {\n    const validate = createCheckboxValidationFunction(checkboxComponent, errorMessage);\n    setupValidation(checkboxComponent, checkboxErrorComponent, validate);\n}\nfunction validateSelectedSessions(selectedSessions, errorMessageComponent, errorMessage) {\n    const isValid = selectedSessions.length > 0 && selectedSessions.some((session)=>session.studentIds.length > 0);\n    if (!isValid) toggleError(errorMessageComponent, errorMessage, true);\n    else toggleError(errorMessageComponent, \"\", false);\n    return isValid;\n}\nfunction setProfilePicUrl(imageUrl) {\n    const user = (0, _authConfig.userAuth).getUser();\n    if (user && user.profile) {\n        // Ensure the profile_picture object exists\n        user.profile.profile_pic = user.profile.profile_pic || {\n            url: \"\"\n        };\n        // Set the profile picture URL\n        user.profile.profile_pic.url = imageUrl;\n        (0, _authConfig.userAuth).setUser(user);\n        localStorage.setItem(\"auth_user\", JSON.stringify(user));\n    }\n}\nfunction setupFileUpload(fileInput, fileInputError, fileInputSuccess, uploadEndpoint) {\n    const profilePictureImage = new (0, _image.WFImage)(\"#profilePictureImage\");\n    const uploadAnimation = new (0, _core.WFComponent)(\"#uploadAnimation\");\n    const overlay = new (0, _core.WFComponent)(\".drop-zone\");\n    let dragCounter = 0;\n    return new Promise((resolve)=>{\n        const handleFile = (file)=>{\n            // Validate file type and size\n            const validTypes = [\n                \"image/jpeg\",\n                \"image/jpg\"\n            ];\n            const maxSizeInBytes = 2097152; // 2 MB\n            if (!validTypes.includes(file.type) && !/\\.(jpg|jpeg)$/i.test(file.name)) {\n                const errorMessage = \"Only JPEG images are allowed.\";\n                toggleError(fileInputError, errorMessage, true);\n                // Reset file input value\n                fileInput.getElement().value = \"\";\n                return;\n            }\n            if (file.size > maxSizeInBytes) {\n                const errorMessage = \"File size must be less than 2 MB.\";\n                toggleError(fileInputError, errorMessage, true);\n                // Reset file input value\n                fileInput.getElement().value = \"\";\n                return;\n            }\n            // Show upload animation immediately\n            uploadAnimation.setStyle({\n                display: \"flex\"\n            });\n            // Hide error and success messages\n            fileInputError.setStyle({\n                display: \"none\"\n            });\n            fileInputSuccess.setStyle({\n                display: \"none\"\n            });\n            const reader = new FileReader();\n            // Display preview image as soon as the file is loaded into memory\n            reader.onload = (event)=>{\n                // Set the preview image for the profile picture\n                const result = event.target?.result;\n                profilePictureImage.setImage(result);\n                // Hide overlay once the image is set\n                overlay.setStyle({\n                    display: \"none\"\n                });\n            };\n            reader.readAsDataURL(file);\n            const formData = new FormData();\n            formData.append(\"profile_picture\", file);\n            const existingStudent = localStorage.getItem(\"current_student\");\n            if (existingStudent) {\n                const student = JSON.parse(existingStudent);\n                formData.append(\"student_profile_id\", student.id.toString());\n            }\n            // Send the file to the server\n            const postRequest = (0, _apiConfig.apiClient).post(uploadEndpoint, {\n                data: formData\n            });\n            postRequest.onData((response)=>{\n                if (response.status === \"success\") {\n                    const imageUrl = response.url.profile_pic.url;\n                    // Update the profile picture URL in the user session and local storage\n                    setProfilePicUrl(imageUrl);\n                    // Update the image for other parts of the UI as well\n                    profilePictureImage.setImage(imageUrl);\n                    // Store the URL in local storage\n                    localStorage.setItem(\"image_upload\", imageUrl);\n                    // Show success message and hide upload animation\n                    fileInputSuccess.setStyle({\n                        display: \"flex\"\n                    });\n                    uploadAnimation.setStyle({\n                        display: \"none\"\n                    });\n                    // Resolve with the uploaded image URL\n                    resolve(imageUrl);\n                } else {\n                    const errorMessage = \"Failed to upload profile picture.\";\n                    toggleError(fileInputError, errorMessage, true);\n                    uploadAnimation.setStyle({\n                        display: \"none\"\n                    });\n                    overlay.setStyle({\n                        display: \"none\"\n                    });\n                    dragCounter = 0;\n                    // Reset file input value\n                    fileInput.getElement().value = \"\";\n                }\n            });\n            postRequest.onError((error)=>{\n                let errorMessage = \"An error occurred during image upload.\";\n                if (error.response && error.response.data) errorMessage = error.response.data.message || errorMessage;\n                else if (error.message) errorMessage = error.message;\n                // Show error message and hide upload animation\n                toggleError(fileInputError, errorMessage, true);\n                uploadAnimation.setStyle({\n                    display: \"none\"\n                });\n                overlay.setStyle({\n                    display: \"none\"\n                });\n                dragCounter = 0;\n                // Reset file input value\n                fileInput.getElement().value = \"\";\n            });\n            // Make the API call\n            postRequest.fetch();\n        };\n        // Event listener for file input changes\n        fileInput.on(\"change\", ()=>{\n            const file = fileInput.getElement().files?.[0];\n            if (file) handleFile(file);\n        });\n        // Event listeners for drag-and-drop\n        const dragZoneElement = document.body;\n        dragZoneElement.addEventListener(\"dragenter\", (event)=>{\n            event.preventDefault();\n            dragCounter++;\n            if (dragCounter === 1) overlay.setStyle({\n                display: \"flex\"\n            });\n        });\n        dragZoneElement.addEventListener(\"dragleave\", ()=>{\n            dragCounter--;\n            if (dragCounter <= 0) {\n                overlay.setStyle({\n                    display: \"none\"\n                });\n                dragCounter = 0;\n            }\n        });\n        dragZoneElement.addEventListener(\"dragover\", (event)=>{\n            event.preventDefault();\n        });\n        dragZoneElement.addEventListener(\"drop\", (event)=>{\n            event.preventDefault();\n            const files = event.dataTransfer?.files;\n            if (files?.length) handleFile(files[0]);\n            overlay.setStyle({\n                display: \"none\"\n            });\n            dragCounter = 0;\n        });\n    });\n}\nconst formatPhoneNumber = (value)=>{\n    const cleaned = value.replace(/\\D/g, \"\"); // Remove all non-digit characters\n    if (cleaned.length <= 3) return cleaned;\n    else if (cleaned.length <= 6) return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3)}`;\n    else if (cleaned.length <= 10) return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6)}`;\n    else // If more than 10 digits, truncate the extra digits\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6, 10)}`;\n};\n\n},{\"@xatom/core\":\"65YBq\",\"@xatom/image\":\"bavwf\",\"../api/apiConfig\":\"dUmIV\",\"../auth/authConfig\":\"dHwPR\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"gu2z7\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"validateNotEmpty\", ()=>validateNotEmpty);\nparcelHelpers.export(exports, \"validateEmail\", ()=>validateEmail);\nparcelHelpers.export(exports, \"validateEmailOptional\", ()=>validateEmailOptional);\nparcelHelpers.export(exports, \"validatePasswordRequirements\", ()=>validatePasswordRequirements);\nparcelHelpers.export(exports, \"validateCheckbox\", ()=>validateCheckbox);\nparcelHelpers.export(exports, \"validatePasswordsMatch\", ()=>validatePasswordsMatch);\nparcelHelpers.export(exports, \"validateSelectField\", ()=>validateSelectField);\nparcelHelpers.export(exports, \"validatePhoneNumber\", ()=>validatePhoneNumber);\nfunction validateNotEmpty(input) {\n    return input !== undefined && input.trim() !== \"\";\n}\nfunction validateEmail(input) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(input);\n}\nconst validateEmailOptional = (value)=>{\n    if (value.trim() === \"\") // Email is optional, so empty string is valid\n    return true;\n    // Validate the email format if not empty\n    return validateEmail(value);\n};\nfunction validatePasswordRequirements(password) {\n    const hasLowercase = /[a-z]/.test(password);\n    const hasUppercase = /[A-Z]/.test(password);\n    const hasDigit = /\\d/.test(password);\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n    const hasValidLength = password.length >= 8;\n    return hasLowercase && hasUppercase && hasDigit && hasSpecialChar && hasValidLength;\n}\nfunction validateCheckbox(checked) {\n    return checked;\n}\nfunction validatePasswordsMatch(originalPassword, confirmPassword) {\n    return originalPassword === confirmPassword;\n}\nfunction validateSelectField(input) {\n    return input !== undefined && input !== \"N/A\";\n}\nfunction validatePhoneNumber(input) {\n    const phoneRegex = /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/;\n    return phoneRegex.test(input);\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"jnww1\":[function(require,module,exports) {\n// src/pages/listStudentFiles.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n// Function to fetch files for a specific student\nparcelHelpers.export(exports, \"fetchWorkshopFiles\", ()=>fetchWorkshopFiles);\n// Function to initialize and render the dynamic file list for a student\nparcelHelpers.export(exports, \"initializeDynamicWorkshopFileList\", ()=>initializeDynamicWorkshopFileList);\nvar _core = require(\"@xatom/core\");\nvar _apiConfig = require(\"../../../../api/apiConfig\");\n// Function to get the student_id from URL parameters\nfunction getSubscriptionIdFromUrl() {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get(\"subscription\");\n}\nasync function fetchWorkshopFiles(subscriptionId) {\n    try {\n        const getFiles = (0, _apiConfig.apiClient).get(`/student_files/workshop/${subscriptionId}`);\n        const response = await getFiles.fetch();\n        return response;\n    } catch (error) {\n        console.error(\"Error fetching files for student:\", error);\n        throw error;\n    }\n}\nasync function initializeDynamicWorkshopFileList(containerSelector) {\n    // Get the student ID from the URL\n    const subscriptionId = getSubscriptionIdFromUrl();\n    if (!subscriptionId) {\n        console.error(\"No student ID provided in URL\");\n        return;\n    }\n    // Initialize a new instance of WFDynamicList for Files\n    const list = new (0, _core.WFDynamicList)(containerSelector, {\n        rowSelector: \"#fileCard\",\n        loaderSelector: \"#filesloading\",\n        emptySelector: \"#filesEmpty\"\n    });\n    // Customize the rendering of the loader\n    list.loaderRenderer((loaderElement)=>{\n        loaderElement.setStyle({\n            display: \"flex\"\n        });\n        return loaderElement;\n    });\n    // Customize the rendering of the empty state\n    list.emptyRenderer((emptyElement)=>{\n        emptyElement.setStyle({\n            display: \"flex\"\n        });\n        return emptyElement;\n    });\n    // Customize the rendering of list items (File Cards)\n    list.rowRenderer(({ rowData, rowElement })=>{\n        const fileCard = new (0, _core.WFComponent)(rowElement);\n        // Set the fileCard's href to file_url\n        fileCard.setAttribute(\"href\", rowData.file_url);\n        // Set the fileName to file_name\n        const fileName = fileCard.getChildAsComponent(\"#fileName\");\n        fileName.setText(rowData.file_name);\n        // Show the list item\n        rowElement.setStyle({\n            display: \"block\"\n        });\n        return rowElement;\n    });\n    // Load and display file data\n    try {\n        // Enable the loading state\n        list.changeLoadingStatus(true);\n        const files = await fetchWorkshopFiles(subscriptionId);\n        // Sort files alphabetically by file_name\n        files.sort((a, b)=>a.file_name.localeCompare(b.file_name));\n        // Set the data to be displayed in the dynamic list\n        list.setData(files);\n        // Disable the loading state\n        list.changeLoadingStatus(false);\n    } catch (error) {\n        console.error(\"Error loading files:\", error);\n        // If there's an error, set an empty array to trigger the empty state\n        list.setData([]);\n        // Disable the loading state\n        list.changeLoadingStatus(false);\n    }\n}\n\n},{\"@xatom/core\":\"65YBq\",\"../../../../api/apiConfig\":\"dUmIV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}]},[], null, \"parcelRequired346\")\n\n//# sourceMappingURL=workshopDetails.785d78be.js.map\n","// src/pages/workshopDetails.ts\n\nimport { WFDynamicList, WFComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../../../api/apiConfig\";\nimport { CancelRegistrationDialog } from \"../registration/components/cancelRegistrationDialog\";\nimport { initializeDynamicWorkshopFileList } from \"./components/listWorkshopFiles\";\n\n// Define the Session interface based on the API response\ninterface Session {\n  id: string;\n  created_at: number; // Unix timestamp in milliseconds\n  status: string; // e.g., 'Active'\n  subscription_type: string; // e.g., 'Annual'\n  program_name: string;\n  workshop_name: string;\n  weekday: string;\n  location: string;\n  time_block: string;\n  session_id: string;\n  price_id: string;\n  user_id: number;\n  subscription_id: number;\n  workshop_id: string;\n  student_profile_id: number;\n  cancellation_reason?: string; // Optional, based on API response\n}\n\n// Define the Workshop interface based on the API response\ninterface Workshop {\n  id: string;\n  cmsLocaleId: string;\n  lastPublished: string;\n  lastUpdated: string;\n  createdOn: string;\n  isArchived: boolean;\n  isDraft: boolean;\n  fieldData: {\n    \"short-description\": string;\n    \"age-range\": string;\n    name: string;\n    slug: string;\n    \"parent-program\": string;\n    \"main-image\": {\n      fileId: string;\n      url: string;\n      alt: string | null;\n    };\n    \"success-page-message\"?: string; // Optional, based on API response\n  };\n  program_name?: string; // Optional if needed\n}\n\n// Define the Invoice interface based on the API response\ninterface Invoice {\n  id: number;\n  created_at: number;\n  contact_id: number;\n  user_id: number;\n  customer_first_name: string;\n  customer_last_name: string;\n  customer_email: string;\n  customer_stripe_id: string;\n  checkout_session_id: string;\n  subscription_id: number;\n  stripe_invoice_id: string;\n  stripe_subscription_id: string;\n  amount_subtotal: number;\n  amount_total: number;\n  amount_discount: number;\n  category: string;\n  is_subscription: boolean;\n  reciept_url: string;\n}\n\n// Define the Program interface based on the API response\ninterface Program {\n  id: string;\n  cmsLocaleId: string;\n  lastPublished: string;\n  lastUpdated: string;\n  createdOn: string;\n  isArchived: boolean;\n  isDraft: boolean;\n  fieldData: {\n    subheading: string;\n    \"short-description\": string;\n    \"age-range\": string;\n    name: string;\n    slug: string;\n    \"parent-program\": string;\n    \"main-image\": {\n      fileId: string;\n      url: string;\n      alt: string | null;\n    };\n    \"2nd-semester-charge-date\"?: string; // Optional, based on API response\n    \"subscription-pause-date\"?: string; // Optional, based on API response\n  };\n}\n\n// Define the Subscription interface based on the API response\ninterface Subscription {\n  id: number;\n  created_at: number;\n  status: string;\n  subscription_type: string;\n  program_name: string;\n  workshop_name: string;\n  coupon?: string | null;\n  deposit_amount: number;\n  start_date: string;\n  next_charge_date: string;\n  next_charge_amount: number;\n  stripe_subscription_id: string;\n  user_id: number;\n  contact_id: number;\n  program_id: string;\n  workshop_id: string;\n  sale_id: number;\n  cancellation_reason?: string; // Optional, based on API response\n}\n\n// Define the structure of the API response\ninterface WorkshopApiResponse {\n  workshop: Workshop | null; // workshop can be null based on API response\n  subscription: Subscription;\n  sessions: Session[];\n  invoices: Invoice[];\n  program: { items: Program[] };\n  caregiver: boolean; // Changed from Caregiver to boolean\n}\n\n// Define the structure of the error response\ninterface ApiErrorResponse {\n  traceId: string;\n  code: string;\n  message: string;\n  payload: string;\n}\n\n// Define the CaregiverBreadcrumbs interface\ninterface CaregiverBreadcrumbs {\n  student_id: number;\n  student_name: string;\n  workshop_name: string;\n  workshop_id: string;\n  program_name: string;\n  program_id: string;\n  subscription_id: number;\n  session_id?: string; // Optional\n  session_weekday?: string; // Optional\n  session_time_block?: string; // Optional\n}\n\n// Function to fetch workshop details from the API, including program and subscription params\nexport async function fetchWorkshopDetails(\n  programId: string,\n  subscriptionId: string,\n  workshopId?: string // Made optional\n): Promise<WorkshopApiResponse | undefined> {\n  try {\n    // Construct request data conditionally\n    const requestData: Record<string, string> = {\n      program: programId,\n      subscription: subscriptionId,\n    };\n\n    if (workshopId) {\n      requestData.workshop_id = workshopId;\n    }\n\n    // Make the API request\n    const getWorkshopDetails = apiClient.get<WorkshopApiResponse>(\n      `/dashboard/registration/workshop/${workshopId || \"none\"}`, // Use \"none\" if no workshopId\n      { data: requestData }\n    );\n\n    const response = await getWorkshopDetails.fetch();\n    return response;\n  } catch (error: any) {\n    // Log the detailed error object for debugging\n    console.error(\"Detailed Error Object:\", error);\n\n    // Initialize a default error message\n    let errorMessage = \"An unexpected error occurred. Please try again.\";\n\n    // Extract the specific error message from the API response if available\n    if (error?.response?.data?.message) {\n      errorMessage = error.response.data.message;\n    } else if (error.message) {\n      // Fallback to the generic error message\n      errorMessage = error.message;\n    }\n\n    // Display the error message in an alert box\n    alert(`Error: ${errorMessage}`);\n\n    // Navigate back to the previous page with a fallback\n    window.history.length > 1\n      ? window.history.back()\n      : (window.location.href = \"/dashboard/registrations\");\n\n    // Log the error for debugging purposes\n    console.error(\"Fetch Workshop Details Error:\", error);\n\n    // Optionally, return undefined to indicate failure\n    return undefined;\n  }\n}\n\n// Function to initialize and render the workshop details and sessions\nexport async function initializeWorkshopDetailsPage() {\n  //initalize files list\n  initializeDynamicWorkshopFileList(\"#filesList\");\n\n  // Utility function to parse URL parameters\n  const getUrlParams = () => {\n    const params = new URLSearchParams(window.location.search);\n    const workshopId = params.get(\"workshop\");\n    const programId = params.get(\"program\");\n    const subscriptionId = params.get(\"subscription\");\n    return { workshopId, programId, subscriptionId };\n  };\n\n  const { workshopId, programId, subscriptionId } = getUrlParams();\n\n  if (!programId || !subscriptionId) {\n    alert(\"Invalid access. Program ID or Subscription ID is missing.\");\n    window.history.back();\n    return;\n  }\n\n  try {\n    // Fetch workshop details with program and subscription params\n    const apiResponse = await fetchWorkshopDetails(\n      programId,\n      subscriptionId,\n      workshopId // Optional parameter\n    );\n\n    // If fetchWorkshopDetails encounters an error, it handles it and navigates back,\n    // so the following code will not execute in that case.\n    if (!apiResponse) {\n      // In case fetchWorkshopDetails returns undefined due to an error\n      return;\n    }\n\n    const { workshop, subscription, program, sessions, invoices, caregiver } =\n      apiResponse;\n\n    // Use program details if workshop details are not provided\n    const programDetails = program.items.find(\n      (p) => p.id === subscription.program_id\n    );\n\n    // Update workshop and program details on the page\n    if (workshop) {\n      updateWorkshopDetails(workshop, { items: program.items }, subscription);\n    } else if (programDetails) {\n      updateWorkshopDetailsFromProgram(programDetails, subscription);\n    }\n\n    // Always update program breadcrumb regardless of workshop availability\n    if (programDetails) {\n      updateProgramBreadcrumb(programDetails);\n    }\n\n    updateSubscriptionDetails(subscription);\n\n    // Filter sessions to unique based on session_id\n    const uniqueSessions = getUniqueSessions(sessions);\n\n    // Initialize and render the sessions list using fetched data\n    initializeDynamicSessionList(\n      \"#listRegistration\",\n      uniqueSessions,\n      subscription,\n      caregiver // Pass the caregiver flag\n    );\n\n    // Initialize and render the invoices list using fetched data\n    initializePastInvoicesList(\".table_body\", invoices);\n\n    // Handle Breadcrumbs based on caregiver flag\n    handleBreadcrumbs(caregiver, subscription);\n\n    // Handle Caregiver-specific UI adjustments\n    if (caregiver) {\n      // Remove the Cancel Registration button\n      const cancelButton = document.querySelector(\"#openCancelDialog\");\n      if (cancelButton) {\n        cancelButton.remove();\n      }\n\n      // Remove any existing Cancel Registration Dialog if present\n      const cancelDialog = document.getElementById(\"cancelRegistrationDialog\");\n      if (cancelDialog) {\n        cancelDialog.remove();\n      }\n\n      // Remove the Payment Details section\n      const paymentDetails = document.querySelector(\".payment_details_wrap\");\n      if (paymentDetails) {\n        paymentDetails.remove();\n      }\n    } else {\n      // Initialize Cancel Registration Dialog component\n      new CancelRegistrationDialog({\n        containerSelector: \".button_group\",\n        subscriptionId: subscription.id.toString(),\n        onCancelSuccess: () => {\n          // Redirect to registrations dashboard upon successful cancellation\n          window.location.href = \"/dashboard/registrations\";\n        },\n      });\n    }\n\n    // Trigger the success_trigger element\n    triggerSuccessEvent(\".success_trigger\");\n  } catch (error) {\n    // Since fetchWorkshopDetails already handles the error, this block can remain empty or be removed.\n    // If you prefer, you can log the error here.\n    console.error(\"initializeWorkshopDetailsPage Error:\", error);\n  }\n}\n\n// Function to handle Breadcrumbs based on caregiver flag\nfunction handleBreadcrumbs(caregiver: boolean, subscription: Subscription) {\n  const userBreadcrumbList = document.getElementById(\"userBreadcrumbList\");\n  const caregiverBreadcrumbList = document.getElementById(\n    \"caregiverBreadcrumbList\"\n  );\n\n  if (caregiver) {\n    if (userBreadcrumbList) {\n      userBreadcrumbList.style.display = \"none\";\n    }\n    if (caregiverBreadcrumbList) {\n      caregiverBreadcrumbList.style.display = \"flex\";\n    }\n\n    // Fetch caregiver_breadcrumbs from localStorage\n    const caregiverBreadcrumbs = localStorage.getItem(\"caregiver_breadcrumbs\");\n    if (caregiverBreadcrumbs) {\n      try {\n        const breadcrumbs = JSON.parse(\n          caregiverBreadcrumbs\n        ) as CaregiverBreadcrumbs;\n\n        // Update studentBreadcrumb link\n        const studentBreadcrumb = document.getElementById(\"studentBreadcrumb\");\n        if (studentBreadcrumb) {\n          const studentBreadcrumbComponent = new WFComponent(studentBreadcrumb);\n          studentBreadcrumbComponent.setText(breadcrumbs.student_name);\n\n          // Append ?id={student_id} to the href\n          const currentHref =\n            studentBreadcrumb.getAttribute(\"href\") ||\n            \"/dashboard/student/profile\";\n          const url = new URL(currentHref, window.location.origin);\n          url.searchParams.set(\"id\", breadcrumbs.student_id.toString());\n          studentBreadcrumbComponent.setAttribute(\"href\", url.toString());\n        }\n\n        // Update workshopBreadcrumbCaregiver text\n        const workshopBreadcrumbCaregiver = document.getElementById(\n          \"workshopBreadcrumbCaregiver\"\n        );\n        if (workshopBreadcrumbCaregiver) {\n          const workshopBreadcrumbComponent = new WFComponent(\n            workshopBreadcrumbCaregiver\n          );\n          const workshopName =\n            breadcrumbs.workshop_name || breadcrumbs.program_name || \"N/A\";\n          workshopBreadcrumbComponent.setText(workshopName);\n        }\n      } catch (parseError) {\n        console.error(\n          \"Error parsing caregiver_breadcrumbs from localStorage:\",\n          parseError\n        );\n      }\n    } else {\n      console.warn(\"No caregiver_breadcrumbs found in localStorage.\");\n    }\n  } else {\n    if (userBreadcrumbList) {\n      userBreadcrumbList.style.display = \"flex\";\n    }\n    if (caregiverBreadcrumbList) {\n      caregiverBreadcrumbList.style.display = \"none\";\n    }\n  }\n}\n\n// Function to initialize and render the past invoices list using fetched data\nasync function initializePastInvoicesList(\n  containerSelector: string,\n  invoices: Invoice[]\n) {\n  // Initialize a new instance of WFDynamicList for Invoices\n  const list = new WFDynamicList<Invoice>(containerSelector, {\n    rowSelector: \"#invoiceLine\", // Using ID selector for table row template\n  });\n\n  // Customize the rendering of the loader\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({\n      display: \"flex\",\n    });\n    return loaderElement;\n  });\n\n  // Customize the rendering of the empty state\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({\n      display: \"flex\",\n    });\n    return emptyElement;\n  });\n\n  // Customize the rendering of list items (Invoice Rows)\n  list.rowRenderer(({ rowData, rowElement }) => {\n    const invoiceRow = new WFComponent(rowElement);\n\n    // Set the invoice date\n    const invoiceDateComponent = invoiceRow.getChildAsComponent(\"#invoiceDate\");\n    if (invoiceDateComponent) {\n      const invoiceDate = new WFComponent(invoiceDateComponent.getElement());\n      const formattedDate = new Date(rowData.created_at).toLocaleDateString();\n      invoiceDate.setText(formattedDate);\n    }\n\n    // Set the invoice amount\n    const invoiceAmountComponent =\n      invoiceRow.getChildAsComponent(\"#invoiceAmount\");\n    if (invoiceAmountComponent) {\n      const invoiceAmount = new WFComponent(\n        invoiceAmountComponent.getElement()\n      );\n      invoiceAmount.setText(`$${rowData.amount_total}`);\n    }\n\n    // Set the receipt link\n    const receiptButtonComponent =\n      invoiceRow.getChildAsComponent(\"#receiptButton\");\n    if (receiptButtonComponent) {\n      const receiptButton = new WFComponent(\n        receiptButtonComponent.getElement()\n      );\n      receiptButton.setAttribute(\"href\", rowData.reciept_url);\n    }\n\n    // Show the list item\n    rowElement.setStyle({\n      display: \"table-row\",\n    });\n\n    return rowElement;\n  });\n\n  // Load and display invoice data\n  try {\n    // Enable the loading state\n    list.changeLoadingStatus(true);\n\n    // Set the data to be displayed in the dynamic list\n    list.setData(invoices);\n\n    // Disable the loading state\n    list.changeLoadingStatus(false);\n  } catch (error) {\n    console.error(\"Error initializing past invoices list:\", error);\n    list.setData([]);\n    list.changeLoadingStatus(false);\n  }\n}\n\n// Function to update workshop and program details on the page using Workshop details\nfunction updateWorkshopDetails(\n  workshop: Workshop,\n  programData: { items: Program[] },\n  subscription: Subscription\n) {\n  // Update Workshop Image\n  const workshopImageElement = document.getElementById(\"workshopImage\");\n  if (workshopImageElement) {\n    const workshopImage = new WFImage(workshopImageElement);\n    if (workshop.fieldData[\"main-image\"].url) {\n      workshopImage.setImage(workshop.fieldData[\"main-image\"].url);\n      const imgElement = workshopImage.getElement() as HTMLImageElement;\n      imgElement.alt = workshop.fieldData[\"main-image\"].alt || \"Workshop Image\";\n    } else {\n      workshopImage.setImage(\n        \"https://cdn.prod.website-files.com/plugins/Basic/assets/placeholder.60f9b1840c.svg\"\n      );\n      const imgElement = workshopImage.getElement() as HTMLImageElement;\n      imgElement.alt = \"Workshop Image\";\n    }\n  }\n\n  // Update Workshop Name\n  const workshopNameElement = document.getElementById(\"workshopName\");\n  if (workshopNameElement) {\n    const workshopName = new WFComponent(workshopNameElement);\n    workshopName.setText(workshop.fieldData.name);\n  }\n\n  // Update workshop breadcrumb\n  const workshopBreadcrumbElement =\n    document.getElementById(\"workshopBreadcrumb\");\n  if (workshopBreadcrumbElement) {\n    const workshopBreadcrumb = new WFComponent(workshopBreadcrumbElement);\n    workshopBreadcrumb.setText(workshop.fieldData.name);\n  }\n\n  // Update program breadcrumb\n  updateProgramBreadcrumbFromItems(programData, subscription);\n\n  // Update Program Name with safe access and debug statements\n  const programNameElement = document.getElementById(\"programName\");\n  if (programNameElement) {\n    const programName = new WFComponent(programNameElement);\n    if (workshop.fieldData && workshop.fieldData.name) {\n      programName.setText(workshop.fieldData.name);\n    } else {\n      programName.setText(\"Program Name Not Available\");\n    }\n  }\n\n  // Update Workshop Short Description\n  const workshopShortDescriptionElement = document.getElementById(\n    \"workshopShortDescription\"\n  );\n  if (workshopShortDescriptionElement) {\n    const workshopShortDescription = new WFComponent(\n      workshopShortDescriptionElement\n    );\n    workshopShortDescription.setText(workshop.fieldData[\"short-description\"]);\n  }\n}\n\n// Function to update workshop and program details using Program details\nfunction updateWorkshopDetailsFromProgram(\n  programDetails: Program,\n  subscription: Subscription\n) {\n  // Update Program Image\n  const programImageElement = document.getElementById(\"workshopImage\");\n  if (programImageElement) {\n    const programImage = new WFImage(programImageElement);\n    if (programDetails.fieldData[\"main-image\"].url) {\n      programImage.setImage(programDetails.fieldData[\"main-image\"].url);\n      const imgElement = programImage.getElement() as HTMLImageElement;\n      imgElement.alt =\n        programDetails.fieldData[\"main-image\"].alt || \"Program Image\";\n    } else {\n      programImage.setImage(\n        \"https://cdn.prod.website-files.com/plugins/Basic/assets/placeholder.60f9b1840c.svg\"\n      );\n      const imgElement = programImage.getElement() as HTMLImageElement;\n      imgElement.alt = \"Program Image\";\n    }\n  }\n\n  // Update Workshop Name with the Program Name\n  const workshopNameElement = document.getElementById(\"workshopName\");\n  if (workshopNameElement) {\n    const workshopName = new WFComponent(workshopNameElement);\n    workshopName.setText(programDetails.fieldData.name);\n  }\n\n  // Update Program Name with Program Subheading\n  const programNameElement = document.getElementById(\"programName\");\n  if (programNameElement) {\n    const programName = new WFComponent(programNameElement);\n    programName.setText(programDetails.fieldData.subheading);\n  }\n\n  // Update workshop breadcrumb with the Program Name\n  const workshopBreadcrumbElement =\n    document.getElementById(\"workshopBreadcrumb\");\n  if (workshopBreadcrumbElement) {\n    const workshopBreadcrumb = new WFComponent(workshopBreadcrumbElement);\n    workshopBreadcrumb.setText(programDetails.fieldData.name);\n  }\n}\n\n// Function to update the program breadcrumb element (ensure it's always set)\nfunction updateProgramBreadcrumb(programDetails: Program) {\n  const programBreadcrumbElement = document.getElementById(\"programBreadcrumb\");\n  if (programBreadcrumbElement) {\n    const programBreadcrumb = new WFComponent(programBreadcrumbElement);\n    programBreadcrumb.setText(programDetails.fieldData.name);\n\n    // Update the href attribute to append the program param to the current link\n    const currentHref = programBreadcrumbElement.getAttribute(\"href\") || \"#\";\n    const url = new URL(currentHref, window.location.origin);\n    url.searchParams.set(\"program\", programDetails.id);\n    programBreadcrumb.setAttribute(\"href\", url.toString());\n  }\n}\n\n// Helper function to update program breadcrumb from program items\nfunction updateProgramBreadcrumbFromItems(\n  programData: { items: Program[] },\n  subscription: Subscription\n) {\n  const programBreadcrumbElement = document.getElementById(\"programBreadcrumb\");\n  if (programBreadcrumbElement) {\n    const programBreadcrumb = new WFComponent(programBreadcrumbElement);\n    const matchedProgram = programData.items.find(\n      (program) => program.id === subscription.program_id\n    );\n    if (matchedProgram) {\n      // Set the breadcrumb text to the program name\n      programBreadcrumb.setText(matchedProgram.fieldData.name);\n\n      // Update the href attribute to append the program param to the current link\n      const currentHref = programBreadcrumbElement.getAttribute(\"href\") || \"#\";\n      const url = new URL(currentHref, window.location.origin);\n      url.searchParams.set(\"program\", matchedProgram.id);\n      programBreadcrumb.setAttribute(\"href\", url.toString());\n    }\n  }\n}\n\n// Function to update subscription details on the page\nfunction updateSubscriptionDetails(subscription: Subscription) {\n  // Update Subscription Type\n  const subscriptionTypeElement = document.getElementById(\"subscription_type\");\n  if (subscriptionTypeElement) {\n    const subscriptionType = new WFComponent(subscriptionTypeElement);\n    subscriptionType.setText(subscription.subscription_type);\n  }\n\n  // Update Next Invoice Date\n  const nextInvoiceDateElement = document.getElementById(\"nextInvoiceDate\");\n  if (nextInvoiceDateElement) {\n    const nextInvoiceDate = new WFComponent(nextInvoiceDateElement);\n\n    const nextChargeDateStr = subscription.next_charge_date;\n\n    if (nextChargeDateStr) {\n      // Create a new Date object\n      const date = new Date(nextChargeDateStr + \"T00:00:00Z\");\n      // Check if the date is valid\n      if (!isNaN(date.getTime())) {\n        const formattedDate = date.toLocaleDateString(\"en-US\", {\n          timeZone: \"UTC\",\n        });\n        nextInvoiceDate.setText(formattedDate);\n      } else {\n        nextInvoiceDate.setText(\"Upon Student Approval\");\n      }\n    } else {\n      nextInvoiceDate.setText(\"Upon Student Approval\");\n    }\n  }\n\n  // Update Next Invoice Amount\n  const nextInvoiceAmountElement = document.getElementById(\"nextInvoiceAmount\");\n  if (nextInvoiceAmountElement) {\n    const nextInvoiceAmount = new WFComponent(nextInvoiceAmountElement);\n    const amount = subscription.next_charge_amount;\n\n    if (amount === 0 || amount === null || amount === undefined) {\n      // Hide the parent .bento_box.is-dashboard.is-payment-detail element\n      const parentElement = nextInvoiceAmountElement.closest(\n        \".bento_box.is-dashboard.is-payment-detail\"\n      );\n      if (parentElement instanceof HTMLElement) {\n        parentElement.style.display = \"none\";\n      }\n    } else {\n      nextInvoiceAmount.setText(`$${amount}`);\n    }\n  }\n\n  // Update FinAid Coupon\n  const couponElement = document.getElementById(\"finAidCoupon\");\n  if (couponElement) {\n    const coupon = new WFComponent(couponElement);\n    if (subscription.coupon && subscription.coupon !== \"None\") {\n      // Remove 'FINAID' from the beginning and add '% discount Applied'\n      const couponText =\n        subscription.coupon.replace(/^FINAID/, \"\").trim() + \"% Discount\";\n      coupon.setText(couponText);\n    } else {\n      coupon.setText(\"None\");\n    }\n  }\n\n  // Display or hide finAidDisclaimer based on coupon\n  const finAidDisclaimer = document.getElementById(\"finAidDisclaimer\");\n  if (finAidDisclaimer) {\n    if (subscription.coupon) {\n      finAidDisclaimer.style.display = \"block\";\n    } else {\n      finAidDisclaimer.style.display = \"none\";\n    }\n  }\n}\n\n// Function to filter unique sessions based on session_id\nfunction getUniqueSessions(sessions: Session[]): Session[] {\n  const uniqueMap: { [key: string]: Session } = {};\n  sessions.forEach((session) => {\n    if (!uniqueMap[session.session_id]) {\n      uniqueMap[session.session_id] = session;\n    }\n  });\n  return Object.values(uniqueMap);\n}\n\n// Function to initialize and render the dynamic sessions list\nasync function initializeDynamicSessionList(\n  containerSelector: string,\n  sessions: Session[],\n  subscription: Subscription, // Add subscription details as parameter\n  caregiver: boolean // Add caregiver flag as parameter\n) {\n  // Initialize a new instance of WFDynamicList for Sessions\n  const list = new WFDynamicList<Session>(containerSelector, {\n    rowSelector: \"#listRegistrationCard\", // Using ID selector for template\n    loaderSelector: \"#listRegistrationloading\", // Selector for the loader\n    emptySelector: \"#listRegistrationEmpty\", // Selector for the empty state\n  });\n\n  // Customize the rendering of the loader\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({\n      display: \"flex\",\n    });\n    return loaderElement;\n  });\n\n  // Customize the rendering of the empty state\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({\n      display: \"flex\",\n    });\n    return emptyElement;\n  });\n\n  // Customize the rendering of list items (Session Cards)\n  list.rowRenderer(({ rowData, rowElement }) => {\n    const sessionCard = new WFComponent(rowElement);\n\n    // Set the session day\n    const sessionDayComponent =\n      sessionCard.getChildAsComponent(\"#cardSessionDay\");\n    if (sessionDayComponent) {\n      const sessionDay = new WFComponent(sessionDayComponent.getElement());\n      sessionDay.setText(rowData.weekday);\n    }\n\n    // Set the session time block\n    const sessionTimeBlockComponent = sessionCard.getChildAsComponent(\n      \"#cardSessionTimeBlock\"\n    );\n    if (sessionTimeBlockComponent) {\n      const sessionTimeBlock = new WFComponent(\n        sessionTimeBlockComponent.getElement()\n      );\n      sessionTimeBlock.setText(rowData.time_block);\n    }\n\n    // Set the session location\n    const sessionLocationComponent = sessionCard.getChildAsComponent(\n      \"#cardSessionLocation\"\n    );\n    if (sessionLocationComponent) {\n      const sessionLocation = new WFComponent(\n        sessionLocationComponent.getElement()\n      );\n      sessionLocation.setText(rowData.location);\n    }\n\n    // Set the link with program, workshop, and subscription parameters\n    const sessionCardElement = sessionCard.getElement() as HTMLAnchorElement;\n    const currentHref = sessionCardElement.getAttribute(\"href\") || \"#\";\n\n    // Parse existing URL to avoid malformed URLs\n    const url = new URL(currentHref, window.location.origin);\n\n    // Append or set query parameters using subscription and session details\n    url.searchParams.set(\"program\", subscription.program_id);\n    url.searchParams.set(\"workshop\", subscription.workshop_id);\n    url.searchParams.set(\"session\", rowData.session_id);\n    url.searchParams.set(\"subscription\", subscription.id.toString());\n\n    // Update the href attribute with the correct parameters\n    sessionCardElement.setAttribute(\"href\", url.toString());\n\n    // If the user is a caregiver, update the caregiver_breadcrumbs on session selection\n    if (caregiver) {\n      sessionCardElement.addEventListener(\"click\", () => {\n        const caregiverBreadcrumbs = localStorage.getItem(\n          \"caregiver_breadcrumbs\"\n        );\n        if (caregiverBreadcrumbs) {\n          try {\n            const breadcrumbs = JSON.parse(\n              caregiverBreadcrumbs\n            ) as CaregiverBreadcrumbs;\n\n            // Update with session details\n            breadcrumbs.session_id = rowData.session_id;\n            breadcrumbs.session_weekday = rowData.weekday;\n            breadcrumbs.session_time_block = rowData.time_block;\n\n            // Save back to localStorage\n            localStorage.setItem(\n              \"caregiver_breadcrumbs\",\n              JSON.stringify(breadcrumbs)\n            );\n          } catch (e) {\n            console.error(\"Error updating caregiver_breadcrumbs:\", e);\n          }\n        } else {\n          console.warn(\"No caregiver_breadcrumbs found in localStorage.\");\n        }\n      });\n    }\n\n    // Show the list item\n    rowElement.setStyle({\n      display: \"block\",\n    });\n\n    return rowElement;\n  });\n\n  // Load and display session data\n  try {\n    // Enable the loading state\n    list.changeLoadingStatus(true);\n\n    // Set the data to be displayed in the dynamic list\n    list.setData(sessions);\n\n    // Disable the loading state\n    list.changeLoadingStatus(false);\n  } catch (error) {\n    console.error(\"Error initializing dynamic session list:\", error);\n    list.setData([]);\n    list.changeLoadingStatus(false);\n  }\n}\n\n// Function to trigger a click on the success_trigger element\nfunction triggerSuccessEvent(selector: string) {\n  const successTrigger = document.querySelector(selector);\n  if (successTrigger instanceof HTMLElement) {\n    successTrigger.click();\n  }\n}\n","var t=require(\"@xatom/core\");var e,r,s,i,o,n,u={};e=u,r=\"WFImage\",s=()=>c,Object.defineProperty(e,r,{get:s,set:i,enumerable:!0,configurable:!0});class c extends t.WFComponent{constructor(t){super(t)}getImageConfig(){return this._config}getSrc(){return this.getAttribute(\"src\")}getSizes(){return this.getAttribute(\"sizes\")}getSrcSet(){return this.getAttribute(\"srcset\")}getLoading(){return this.getAttribute(\"loading\")}onLoad(t){return this.on(\"load\",t),()=>{this.off(\"load\",t)}}onLoadError(t){return this.on(\"error\",t),()=>{this.off(\"error\",t)}}setImage(t){if(\"string\"==typeof t)this.setAttribute(\"src\",t),this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");else{if(this.setAttribute(\"src\",t.src),\"object\"==typeof t&&t.srcSet&&t.srcSet.length&&t.sizes&&t.sizes.length){const e=t.srcSet.map((t=>`${t.url} ${t.size}`)).join(\", \");this.setAttribute(\"srcset\",e)}else this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");t.loading&&this.setAttribute(\"loading\",t.loading)}}}o=module.exports,n=u,Object.keys(n).forEach((function(t){\"default\"===t||\"__esModule\"===t||o.hasOwnProperty(t)||Object.defineProperty(o,t,{enumerable:!0,get:function(){return n[t]}})}));","import { WFComponent, WFFormComponent } from \"@xatom/core\";\nimport { apiClient } from \"../../../../api/apiConfig\";\nimport {\n  toggleError,\n  setupValidation,\n  createValidationFunction,\n} from \"../../../../utils/formUtils\";\nimport { validateNotEmpty } from \"../../../../utils/validationUtils\";\n\n// CancelRegistrationDialog Component\ntype CancelRegistrationDialogOptions = {\n  containerSelector: string;\n  subscriptionId: string;\n  onCancelSuccess: () => void;\n};\n\nexport class CancelRegistrationDialog {\n  private container: WFComponent;\n  private subscriptionId: string;\n  private cancelForm: WFFormComponent;\n  private dialog: WFComponent;\n  private pageMain: WFComponent;\n\n  constructor(options: CancelRegistrationDialogOptions) {\n    const { containerSelector, subscriptionId, onCancelSuccess } = options;\n\n    // Initialize WFComponents\n    this.container = new WFComponent(containerSelector);\n    this.subscriptionId = subscriptionId;\n    this.cancelForm = new WFFormComponent(\"#cancelSubscriptionForm\");\n    this.dialog = new WFComponent(\"#inviteCaregiverDialog\");\n    this.pageMain = new WFComponent(\".page_main\"); // Get the main page container\n\n    // Initialize the dialog component\n    this.initialize(onCancelSuccess);\n  }\n\n  private initialize(onCancelSuccess: () => void) {\n    if (!this.container.getElement()) {\n      console.error(\"Container element not found for CancelRegistrationDialog\");\n      return;\n    }\n\n    // Attach click event to the \"Cancel Registration\" button\n    const openCancelDialogBtn = new WFComponent(\"#openCancelDialog\");\n    if (openCancelDialogBtn.getElement()) {\n      openCancelDialogBtn.on(\"click\", () => {\n        console.log(\"Open Cancel Registration button clicked\");\n        this.openDialog();\n      });\n    } else {\n      console.error(\"Open Cancel Registration button not found\");\n    }\n\n    // Attach click event to close button\n    const closeDialogBtn = new WFComponent(\"#close-dialog-btn\");\n    if (closeDialogBtn.getElement()) {\n      closeDialogBtn.on(\"click\", () => {\n        console.log(\"Close dialog button clicked\");\n        this.closeDialog();\n      });\n    } else {\n      console.error(\"Close dialog button not found\");\n    }\n\n    // Setup form submission interception and validation\n    this.setupFormSubmission(onCancelSuccess);\n    this.setupFormValidation();\n  }\n\n  private openDialog() {\n    if (this.dialog.getElement() && this.pageMain.getElement()) {\n      console.log(\"Opening dialog\");\n      const dialogElement = this.dialog.getElement() as HTMLDialogElement;\n      dialogElement.showModal(); // Using `showModal()` to make sure it behaves as a dialog\n\n      // Update page_main data-brand attribute to \"6\" when dialog opens\n      console.log(\"Setting page_main data-brand attribute to 6\");\n      this.pageMain.setAttribute(\"data-brand\", \"6\");\n    } else {\n      console.error(\"Dialog or page_main element not found\");\n    }\n  }\n\n  private closeDialog() {\n    if (this.dialog.getElement() && this.pageMain.getElement()) {\n      console.log(\"Closing dialog\");\n      const dialogElement = this.dialog.getElement() as HTMLDialogElement;\n      dialogElement.close(); // Using `close()` to properly close the dialog\n\n      // Reset page_main data-brand attribute to \"2\" when dialog closes\n      console.log(\"Resetting page_main data-brand attribute to 2\");\n      this.pageMain.setAttribute(\"data-brand\", \"2\");\n    } else {\n      console.error(\"Dialog or page_main element not found\");\n    }\n  }\n\n  private setupFormSubmission(onCancelSuccess: () => void) {\n    this.cancelForm.onFormSubmit(async (formData, event) => {\n      event.preventDefault(); // Prevent form default submission\n      event.stopPropagation(); // Stop any other event listeners on the form\n\n      console.log(\"Form submission intercepted\");\n\n      const reason = formData.cancelled_because as string;\n\n      if (!validateNotEmpty(reason)) {\n        const errorComponent = new WFComponent(\"#cancelledReasonError\");\n        toggleError(errorComponent, \"Reason for cancelling is required.\", true);\n        return;\n      }\n\n      try {\n        // Show loading animation\n        this.setLoadingState(true);\n\n        // Make DELETE request to API to cancel subscription\n        console.log(\n          \"Submitting cancellation to API for subscription ID:\",\n          this.subscriptionId\n        );\n\n        interface CancelResponse {\n          status: string;\n        }\n\n        const response = (await apiClient\n          .delete(`/subscriptions/${this.subscriptionId}/cancel`, {\n            data: {\n              reason: reason,\n            },\n          })\n          .fetch()) as CancelResponse;\n\n        // Extract relevant status from the response data\n        if (response && response.status === \"Cancelled\") {\n          console.log(\"Cancellation successful\");\n\n          // Clear any previous error messages\n          const errorComponent = new WFComponent(\"#cancelledReasonError\");\n          toggleError(errorComponent, \"\", false); // Explicitly hide error on success\n\n          // Close dialog and call the success callback\n          this.closeDialog();\n          onCancelSuccess();\n        } else {\n          // Handle unexpected success response format\n          throw new Error(\n            `Unexpected response format or status: ${response.status}`\n          );\n        }\n      } catch (error) {\n        console.error(\"Error cancelling registration: \", error);\n        this.showErrorMessage(\n          \"Oops! Something went wrong while submitting the form.\"\n        );\n      } finally {\n        // Hide loading animation\n        this.setLoadingState(false);\n      }\n    });\n  }\n\n  private setupFormValidation() {\n    const reasonInput = new WFComponent(\"#cancelledReason\");\n    const reasonErrorComponent = new WFComponent(\"#cancelledReasonError\");\n\n    if (!reasonInput.getElement() || !reasonErrorComponent.getElement()) {\n      console.error(\"Reason input or error component not found for validation\");\n      return;\n    }\n\n    const validateReason = createValidationFunction(\n      reasonInput,\n      (input) => validateNotEmpty(input),\n      \"Reason for cancelling is required.\"\n    );\n\n    setupValidation(reasonInput, reasonErrorComponent, validateReason);\n  }\n\n  private setLoadingState(isLoading: boolean) {\n    const loadingAnimation = new WFComponent(\"#cancelRegistrationRequesting\");\n    const submitButton = new WFComponent(\"#cancelRegistration\");\n\n    if (loadingAnimation.getElement() && submitButton.getElement()) {\n      if (isLoading) {\n        loadingAnimation.setStyle({ display: \"block\" });\n        submitButton.setAttribute(\"disabled\", \"true\");\n      } else {\n        loadingAnimation.setStyle({ display: \"none\" });\n        submitButton.removeAttribute(\"disabled\");\n      }\n    } else {\n      console.error(\n        \"Loading animation or submit button not found for setting loading state\"\n      );\n    }\n  }\n\n  private showErrorMessage(message: string) {\n    const errorElement = new WFComponent(\"#submitInviteCaregiverError\");\n    if (errorElement.getElement()) {\n      errorElement.setText(message);\n      errorElement.setStyle({ display: \"flex\" });\n    } else {\n      console.error(\"Error element not found for showing error message\");\n    }\n  }\n}\n","import { WFComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../api/apiConfig\";\nimport { userAuth } from \"../auth/authConfig\";\n\nexport function toggleError(\n  errorMessageComponent: WFComponent<any>,\n  message: string,\n  show: boolean\n): void {\n  errorMessageComponent.updateTextViaAttrVar({ text: show ? message : \"\" });\n  errorMessageComponent.setStyle({ display: show ? \"flex\" : \"none\" });\n}\n\nexport function setupValidation(\n  inputComponent: WFComponent,\n  errorComponent: WFComponent,\n  validate: () => string,\n  requestErrorComponent?: WFComponent // Optional component to clear on input change\n) {\n  const validateAndUpdate = () => {\n    const errorMessage = validate();\n    toggleError(errorComponent, errorMessage, !!errorMessage);\n    if (requestErrorComponent && errorMessage === \"\") {\n      // Clear request error message when the user is correcting the input\n      toggleError(requestErrorComponent, \"\", false);\n    }\n  };\n\n  // Attach event listeners for real-time validation\n  inputComponent.on(\"input\", validateAndUpdate);\n  inputComponent.on(\"blur\", validateAndUpdate);\n  inputComponent.on(\"change\", validateAndUpdate);\n}\n\nexport function createValidationFunction(\n  inputComponent: WFComponent,\n  validationFn: (input: string) => boolean,\n  errorMessage: string\n): () => string {\n  return () => {\n    const inputElement = inputComponent.getElement() as HTMLInputElement;\n    const isValid = validationFn(inputElement.value);\n    return isValid ? \"\" : errorMessage;\n  };\n}\n\nexport function createCheckboxValidationFunction(\n  checkboxComponent: WFComponent,\n  errorMessage: string\n): () => string {\n  return () => {\n    const checkbox = checkboxComponent.getElement() as HTMLInputElement;\n    return checkbox.checked ? \"\" : errorMessage;\n  };\n}\n\nexport function setupCheckboxValidation(\n  checkboxComponent: WFComponent,\n  checkboxErrorComponent: WFComponent,\n  errorMessage: string\n) {\n  const validate = createCheckboxValidationFunction(\n    checkboxComponent,\n    errorMessage\n  );\n  setupValidation(checkboxComponent, checkboxErrorComponent, validate);\n}\n\nexport function validateSelectedSessions(\n  selectedSessions: { sessionId: string; studentIds: string[] }[],\n  errorMessageComponent: WFComponent<any>,\n  errorMessage: string\n): boolean {\n  const isValid =\n    selectedSessions.length > 0 &&\n    selectedSessions.some((session) => session.studentIds.length > 0);\n\n  if (!isValid) {\n    toggleError(errorMessageComponent, errorMessage, true);\n  } else {\n    toggleError(errorMessageComponent, \"\", false);\n  }\n\n  return isValid;\n}\n\ntype fileUploadResponse = {\n  status: string;\n  url: {\n    profile_pic: {\n      url: string;\n    };\n  };\n};\n\n/**\n * Updates the user's profile picture URL in the authentication system.\n * @param {string} imageUrl - The URL of the uploaded image.\n */\nexport function setProfilePicUrl(imageUrl: string): void {\n  const user = userAuth.getUser();\n  if (user && user.profile) {\n    // Ensure the profile_picture object exists\n    user.profile.profile_pic = user.profile.profile_pic || { url: \"\" };\n\n    // Set the profile picture URL\n    user.profile.profile_pic.url = imageUrl;\n    userAuth.setUser(user);\n    localStorage.setItem(\"auth_user\", JSON.stringify(user));\n  }\n}\n\n/**\n * Handles file upload and displays the uploaded image.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */\n/**\n * Handles file upload and displays the uploaded image.\n * Only JPEG files less than 2 MB can be uploaded.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */\nexport function setupFileUpload(\n  fileInput: WFComponent,\n  fileInputError: WFComponent,\n  fileInputSuccess: WFComponent,\n  uploadEndpoint: string\n): Promise<string> {\n  const profilePictureImage = new WFImage(\"#profilePictureImage\");\n  const uploadAnimation = new WFComponent(\"#uploadAnimation\");\n\n  const overlay = new WFComponent(\".drop-zone\");\n  let dragCounter = 0;\n\n  return new Promise<string>((resolve) => {\n    const handleFile = (file: File) => {\n      // Validate file type and size\n      const validTypes = [\"image/jpeg\", \"image/jpg\"];\n      const maxSizeInBytes = 2 * 1024 * 1024; // 2 MB\n\n      if (\n        !validTypes.includes(file.type) &&\n        !/\\.(jpg|jpeg)$/i.test(file.name)\n      ) {\n        const errorMessage = \"Only JPEG images are allowed.\";\n        toggleError(fileInputError, errorMessage, true);\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n        return;\n      }\n\n      if (file.size > maxSizeInBytes) {\n        const errorMessage = \"File size must be less than 2 MB.\";\n        toggleError(fileInputError, errorMessage, true);\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n        return;\n      }\n\n      // Show upload animation immediately\n      uploadAnimation.setStyle({ display: \"flex\" });\n\n      // Hide error and success messages\n      fileInputError.setStyle({ display: \"none\" });\n      fileInputSuccess.setStyle({ display: \"none\" });\n\n      const reader = new FileReader();\n\n      // Display preview image as soon as the file is loaded into memory\n      reader.onload = (event) => {\n        // Set the preview image for the profile picture\n        const result = event.target?.result as string;\n        profilePictureImage.setImage(result);\n\n        // Hide overlay once the image is set\n        overlay.setStyle({ display: \"none\" });\n      };\n\n      reader.readAsDataURL(file);\n\n      const formData = new FormData();\n      formData.append(\"profile_picture\", file);\n\n      const existingStudent = localStorage.getItem(\"current_student\");\n      if (existingStudent) {\n        const student = JSON.parse(existingStudent);\n        formData.append(\"student_profile_id\", student.id.toString());\n      }\n\n      // Send the file to the server\n      const postRequest = apiClient.post<fileUploadResponse>(uploadEndpoint, {\n        data: formData,\n      });\n\n      postRequest.onData((response) => {\n        if (response.status === \"success\") {\n          const imageUrl = response.url.profile_pic.url;\n\n          // Update the profile picture URL in the user session and local storage\n          setProfilePicUrl(imageUrl);\n\n          // Update the image for other parts of the UI as well\n          profilePictureImage.setImage(imageUrl);\n\n          // Store the URL in local storage\n          localStorage.setItem(\"image_upload\", imageUrl);\n\n          // Show success message and hide upload animation\n          fileInputSuccess.setStyle({ display: \"flex\" });\n          uploadAnimation.setStyle({ display: \"none\" });\n\n          // Resolve with the uploaded image URL\n          resolve(imageUrl);\n        } else {\n          const errorMessage = \"Failed to upload profile picture.\";\n          toggleError(fileInputError, errorMessage, true);\n          uploadAnimation.setStyle({ display: \"none\" });\n          overlay.setStyle({ display: \"none\" });\n          dragCounter = 0;\n          // Reset file input value\n          (fileInput.getElement() as HTMLInputElement).value = \"\";\n        }\n      });\n\n      postRequest.onError((error) => {\n        let errorMessage = \"An error occurred during image upload.\";\n        if (error.response && error.response.data) {\n          errorMessage = error.response.data.message || errorMessage;\n        } else if (error.message) {\n          errorMessage = error.message;\n        }\n\n        // Show error message and hide upload animation\n        toggleError(fileInputError, errorMessage, true);\n        uploadAnimation.setStyle({ display: \"none\" });\n        overlay.setStyle({ display: \"none\" });\n        dragCounter = 0;\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n      });\n\n      // Make the API call\n      postRequest.fetch();\n    };\n\n    // Event listener for file input changes\n    fileInput.on(\"change\", () => {\n      const file = (fileInput.getElement() as HTMLInputElement).files?.[0];\n      if (file) {\n        handleFile(file);\n      }\n    });\n\n    // Event listeners for drag-and-drop\n    const dragZoneElement = document.body;\n    dragZoneElement.addEventListener(\"dragenter\", (event) => {\n      event.preventDefault();\n      dragCounter++;\n      if (dragCounter === 1) {\n        overlay.setStyle({ display: \"flex\" });\n      }\n    });\n\n    dragZoneElement.addEventListener(\"dragleave\", () => {\n      dragCounter--;\n      if (dragCounter <= 0) {\n        overlay.setStyle({ display: \"none\" });\n        dragCounter = 0;\n      }\n    });\n\n    dragZoneElement.addEventListener(\"dragover\", (event) => {\n      event.preventDefault();\n    });\n\n    dragZoneElement.addEventListener(\"drop\", (event) => {\n      event.preventDefault();\n\n      const files = event.dataTransfer?.files;\n      if (files?.length) {\n        handleFile(files[0]);\n      }\n\n      overlay.setStyle({ display: \"none\" });\n      dragCounter = 0;\n    });\n  });\n}\n\n// src/utils/formUtils.ts\n\n/**\n * Formats a phone number string to the format (xxx) xxx-xxxx.\n * If the input contains more than 10 digits, it truncates the extra digits.\n * If it contains fewer, it formats as much as possible.\n *\n * @param value - The raw phone number string.\n * @returns The formatted phone number string.\n */\nexport const formatPhoneNumber = (value: string): string => {\n  const cleaned = value.replace(/\\D/g, \"\"); // Remove all non-digit characters\n\n  if (cleaned.length <= 3) {\n    return cleaned;\n  } else if (cleaned.length <= 6) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3)}`;\n  } else if (cleaned.length <= 10) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(\n      6\n    )}`;\n  } else {\n    // If more than 10 digits, truncate the extra digits\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(\n      6,\n      10\n    )}`;\n  }\n};\n","import { WFComponent } from \"@xatom/core\";\nimport { toggleError } from \"./formUtils\";\n\nexport function validateNotEmpty(input: string | undefined): boolean {\n  return input !== undefined && input.trim() !== \"\";\n}\n\nexport function validateEmail(input: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(input);\n}\n\n/**\n * Validates that the email is either empty or correctly formatted.\n * @param value The email input value.\n * @returns True if valid, false otherwise.\n */\nexport const validateEmailOptional = (value: string): boolean => {\n  if (value.trim() === \"\") {\n    // Email is optional, so empty string is valid\n    return true;\n  }\n  // Validate the email format if not empty\n  return validateEmail(value);\n};\n\nexport function validatePasswordRequirements(password: string): boolean {\n  const hasLowercase = /[a-z]/.test(password);\n  const hasUppercase = /[A-Z]/.test(password);\n  const hasDigit = /\\d/.test(password);\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n  const hasValidLength = password.length >= 8;\n  return (\n    hasLowercase && hasUppercase && hasDigit && hasSpecialChar && hasValidLength\n  );\n}\n\nexport function validateCheckbox(checked: boolean): boolean {\n  return checked;\n}\n\nexport function validatePasswordsMatch(\n  originalPassword: string,\n  confirmPassword: string\n): boolean {\n  return originalPassword === confirmPassword;\n}\n\nexport function validateSelectField(input: string | undefined): boolean {\n  return input !== undefined && input !== \"N/A\";\n}\n\nexport function validatePhoneNumber(input: string): boolean {\n  const phoneRegex = /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/;\n  return phoneRegex.test(input);\n}\n","// src/pages/listStudentFiles.ts\n\nimport { WFDynamicList, WFComponent } from \"@xatom/core\";\nimport { apiClient } from \"../../../../api/apiConfig\";\n\n// Define the FileItem interface based on the API response\ninterface FileItem {\n  id: number;\n  file_name: string;\n  file_url: string;\n  program_id?: string | null;\n  workshop_id?: string | null;\n  session_id?: string | null;\n  user_id: number;\n  created_at: number;\n}\n\n// Function to get the student_id from URL parameters\nfunction getSubscriptionIdFromUrl(): string | null {\n  const urlParams = new URLSearchParams(window.location.search);\n  return urlParams.get(\"subscription\");\n}\n\n// Function to fetch files for a specific student\nexport async function fetchWorkshopFiles(\n  subscriptionId: string\n): Promise<FileItem[]> {\n  try {\n    const getFiles = apiClient.get<FileItem[]>(\n      `/student_files/workshop/${subscriptionId}`\n    );\n    const response = await getFiles.fetch();\n    return response;\n  } catch (error) {\n    console.error(\"Error fetching files for student:\", error);\n    throw error;\n  }\n}\n\n// Function to initialize and render the dynamic file list for a student\nexport async function initializeDynamicWorkshopFileList(\n  containerSelector: string\n) {\n  // Get the student ID from the URL\n  const subscriptionId = getSubscriptionIdFromUrl();\n  if (!subscriptionId) {\n    console.error(\"No student ID provided in URL\");\n    return;\n  }\n\n  // Initialize a new instance of WFDynamicList for Files\n  const list = new WFDynamicList<FileItem>(containerSelector, {\n    rowSelector: \"#fileCard\", // Using ID selector for template\n    loaderSelector: \"#filesloading\", // Selector for the loader\n    emptySelector: \"#filesEmpty\", // Selector for the empty state\n  });\n\n  // Customize the rendering of the loader\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({\n      display: \"flex\",\n    });\n    return loaderElement;\n  });\n\n  // Customize the rendering of the empty state\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({\n      display: \"flex\",\n    });\n    return emptyElement;\n  });\n\n  // Customize the rendering of list items (File Cards)\n  list.rowRenderer(({ rowData, rowElement }) => {\n    const fileCard = new WFComponent(rowElement);\n\n    // Set the fileCard's href to file_url\n    fileCard.setAttribute(\"href\", rowData.file_url);\n\n    // Set the fileName to file_name\n    const fileName = fileCard.getChildAsComponent(\"#fileName\");\n    fileName.setText(rowData.file_name);\n\n    // Show the list item\n    rowElement.setStyle({\n      display: \"block\",\n    });\n\n    return rowElement;\n  });\n\n  // Load and display file data\n  try {\n    // Enable the loading state\n    list.changeLoadingStatus(true);\n\n    const files = await fetchWorkshopFiles(subscriptionId);\n\n    // Sort files alphabetically by file_name\n    files.sort((a, b) => a.file_name.localeCompare(b.file_name));\n\n    // Set the data to be displayed in the dynamic list\n    list.setData(files);\n\n    // Disable the loading state\n    list.changeLoadingStatus(false);\n  } catch (error) {\n    console.error(\"Error loading files:\", error);\n\n    // If there's an error, set an empty array to trigger the empty state\n    list.setData([]);\n\n    // Disable the loading state\n    list.changeLoadingStatus(false);\n  }\n}\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","export","fetchWorkshopDetails","initializeWorkshopDetailsPage","_core","_image","_apiConfig","_cancelRegistrationDialog","_listWorkshopFiles","programId","subscriptionId","workshopId","requestData","program","subscription","workshop_id","getWorkshopDetails","apiClient","data","fetch","error","console","errorMessage","response","message","alert","history","back","location","href","initializeDynamicWorkshopFileList","getUrlParams","params","URLSearchParams","search","apiResponse","workshop","sessions","invoices","caregiver","programDetails","items","find","p","program_id","updateWorkshopDetails","programData","workshopImageElement","document","getElementById","workshopImage","WFImage","fieldData","url","setImage","imgElement","getElement","alt","workshopNameElement","workshopName","WFComponent","setText","workshopBreadcrumbElement","workshopBreadcrumb","updateProgramBreadcrumbFromItems","programBreadcrumbElement","programBreadcrumb","matchedProgram","URL","getAttribute","origin","searchParams","set","setAttribute","toString","programNameElement","programName","workshopShortDescriptionElement","workshopShortDescription","updateWorkshopDetailsFromProgram","programImageElement","programImage","subheading","updateProgramBreadcrumb","updateSubscriptionDetails","subscriptionTypeElement","subscriptionType","subscription_type","nextInvoiceDateElement","nextInvoiceDate","nextChargeDateStr","next_charge_date","date","Date","isNaN","getTime","formattedDate","toLocaleDateString","timeZone","nextInvoiceAmountElement","nextInvoiceAmount","amount","next_charge_amount","parentElement","closest","HTMLElement","style","display","couponElement","coupon","couponText","replace","trim","finAidDisclaimer","uniqueSessions","getUniqueSessions","uniqueMap","forEach","session","session_id","values","initializeDynamicSessionList","initializePastInvoicesList","handleBreadcrumbs","userBreadcrumbList","caregiverBreadcrumbList","caregiverBreadcrumbs","localStorage","getItem","breadcrumbs","JSON","parse","studentBreadcrumb","studentBreadcrumbComponent","student_name","currentHref","student_id","workshopBreadcrumbCaregiver","workshopBreadcrumbComponent","workshop_name","program_name","parseError","warn","cancelButton","querySelector","remove","cancelDialog","paymentDetails","CancelRegistrationDialog","containerSelector","onCancelSuccess","triggerSuccessEvent","selector","successTrigger","click","list","WFDynamicList","rowSelector","loaderRenderer","loaderElement","setStyle","emptyRenderer","emptyElement","rowRenderer","rowData","rowElement","invoiceRow","invoiceDateComponent","getChildAsComponent","invoiceDate","created_at","invoiceAmountComponent","invoiceAmount","amount_total","receiptButtonComponent","receiptButton","reciept_url","changeLoadingStatus","setData","loaderSelector","emptySelector","sessionCard","sessionDayComponent","sessionDay","weekday","sessionTimeBlockComponent","sessionTimeBlock","time_block","sessionLocationComponent","sessionLocation","sessionCardElement","addEventListener","session_weekday","session_time_block","setItem","stringify","e","o","t","u","c","enumerable","configurable","constructor","getImageConfig","_config","getSrc","getSizes","getSrcSet","getLoading","onLoad","on","off","onLoadError","removeAttribute","src","srcSet","sizes","map","size","join","loading","keys","hasOwnProperty","n","_formUtils","_validationUtils","options","container","cancelForm","WFFormComponent","dialog","pageMain","initialize","openCancelDialogBtn","log","openDialog","closeDialogBtn","closeDialog","setupFormSubmission","setupFormValidation","dialogElement","showModal","close","onFormSubmit","formData","event","preventDefault","stopPropagation","reason","cancelled_because","validateNotEmpty","errorComponent","toggleError","setLoadingState","delete","status","showErrorMessage","reasonInput","reasonErrorComponent","validateReason","createValidationFunction","input","setupValidation","isLoading","loadingAnimation","submitButton","errorElement","createCheckboxValidationFunction","setupCheckboxValidation","validateSelectedSessions","setProfilePicUrl","setupFileUpload","formatPhoneNumber","_authConfig","errorMessageComponent","show","updateTextViaAttrVar","text","inputComponent","validate","requestErrorComponent","validateAndUpdate","validationFn","isValid","inputElement","value","checkboxComponent","checkbox","checked","checkboxErrorComponent","selectedSessions","some","studentIds","imageUrl","user","userAuth","getUser","profile","profile_pic","setUser","fileInput","fileInputError","fileInputSuccess","uploadEndpoint","profilePictureImage","uploadAnimation","overlay","dragCounter","Promise","handleFile","file","validTypes","includes","type","test","reader","FileReader","onload","result","target","readAsDataURL","FormData","append","existingStudent","student","postRequest","post","onData","onError","files","dragZoneElement","body","dataTransfer","cleaned","slice","undefined","validateEmail","emailRegex","validateEmailOptional","validatePasswordRequirements","validateCheckbox","validatePasswordsMatch","validateSelectField","validatePhoneNumber","password","hasLowercase","hasUppercase","hasDigit","hasSpecialChar","hasValidLength","originalPassword","confirmPassword","phoneRegex","fetchWorkshopFiles","getFiles","urlParams","fileCard","file_url","fileName","file_name","sort","a","b","localeCompare"],"version":3,"file":"workshopDetails.785d78be.js.map"}