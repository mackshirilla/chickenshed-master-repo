{"mappings":"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","sources":["src/modules/success_page/registration_success.ts"],"sourcesContent":["// src/success_page/registration_success_index.ts\n\nimport { WFComponent } from \"@xatom/core\";\nimport { apiClient } from \"../../api/apiConfig\";\n\n// Utility functions for formatting values\nconst capitalize = (str: string) => str.charAt(0).toUpperCase() + str.slice(1);\nconst formatBoolean = (val: boolean) => capitalize(val.toString());\nconst formatCurrency = (val: number) =>\n  new Intl.NumberFormat(\"en-US\", { style: \"currency\", currency: \"USD\" }).format(val);\n\n// Trigger the hidden success animation/trigger element (Webflow interaction)\nconst triggerSuccess = () => {\n  const triggerEl = document.querySelector<HTMLElement>(\".success_trigger\");\n  if (triggerEl) triggerEl.click();\n};\n\n// Shape of the registration data returned by the API\ninterface RegistrationData {\n  id: number;\n  subscription_name: string;\n  status: string;\n  subscription_type: string;\n  update_subscription_type: string;\n  user_id: number;\n  contact_id: number;\n  current_finaid_id: number;\n  pending_students: boolean;\n  early_registration: boolean;\n  checkout_session_id: string;\n  last_invoice_id: number | null;\n  last_invoice_is_draft: boolean;\n  stripe_subscription_id: string | null;\n  coupon: string;\n  deposit_amount: number;\n  subscription_subtotal: number;\n  subscription_total: number;\n  subscription_amount_discount: number;\n  created_at: number;\n  cancellation_reason: string;\n  invoice_history: any[];\n  prorate_changes: boolean;\n  charge_proration: string;\n  free_trial_end: number | null;\n}\n\n// Set of field IDs that should display as currency\nconst currencyFields = new Set([\n  \"subtotal\",\n  \"depositPaid\",\n  \"AmountDiscount\",\n  \"subscriptionTotal\",\n  \"dueUponApproval\",\n]);\n\n// Update a field component with given value or hide it\nconst updateField = (\n  component: WFComponent,\n  rawValue: string | number | boolean | null | undefined\n) => {\n  const el = component.getElement() as HTMLElement;\n  // Reset display\n  el.style.display = \"\";\n  // Hide if null, empty, false, or zero-number\n  if (\n    rawValue == null ||\n    rawValue === \"\" ||\n    rawValue === false ||\n    (typeof rawValue === \"number\" && rawValue === 0)\n  ) {\n    el.style.display = \"none\";\n    return;\n  }\n\n  let display: string;\n  if (typeof rawValue === \"boolean\") {\n    display = formatBoolean(rawValue);\n  } else if (typeof rawValue === \"string\") {\n    display = capitalize(rawValue);\n  } else {\n    display = currencyFields.has(el.id)\n      ? formatCurrency(rawValue as number)\n      : rawValue.toString();\n  }\n\n  // Preserve label and bold the value\n  const label = el.textContent?.split(\":\")[0] || \"\";\n  el.innerHTML = `${label}: <strong>${display}</strong>`;\n};\n\n// Main handler for registration success\nexport const handleRegistrationSuccessIndex = async () => {\n  try {\n    const request = apiClient.get<{ data: RegistrationData }>(\n      \"/success_page/registration\"\n    );\n    request.onData((res) => {\n      const data = res.data;\n      const dueUponApproval = data.subscription_total - data.deposit_amount;\n      const aidPercent =\n        data.subscription_subtotal > 0 && data.subscription_amount_discount > 0\n          ? `${Math.round(\n              (data.subscription_amount_discount / data.subscription_subtotal) * 100\n            )}%`\n          : null;\n\n      const isActive = (data.status || \"\").toUpperCase() === \"ACTIVE\";\n\n      // Handle hiding of dueUponApproval element entirely if active\n      const dueEl = document.getElementById(\"dueUponApproval\");\n      if (dueEl) {\n        dueEl.style.display = isActive ? \"none\" : \"\";\n      }\n\n      // Map xatom components to their data keys\n      const fields: Array<{ id: string; value: any }> = [\n        { id: \"status\", value: data.status },\n        { id: \"billingCycle\", value: data.subscription_type },\n        { id: \"pendingStudents\", value: data.pending_students },\n        { id: \"financialAidRequested\", value: data.current_finaid_id > 0 },\n        { id: \"financialAidApplied\", value: aidPercent },\n        { id: \"subtotal\", value: data.subscription_subtotal },\n        { id: \"depositPaid\", value: data.deposit_amount },\n        { id: \"AmountDiscount\", value: data.subscription_amount_discount },\n        { id: \"subscriptionTotal\", value: data.subscription_total },\n        { id: \"dueUponApproval\", value: dueUponApproval },\n      ];\n\n      fields.forEach(({ id, value }) => {\n        // Skip updating dueUponApproval if it's hidden\n        if (id === \"dueUponApproval\" && isActive) return;\n        const el = document.getElementById(id);\n        if (!el) return;\n        updateField(new WFComponent(el), value);\n      });\n\n      // After populating all fields, trigger Webflow interaction\n      triggerSuccess();\n    });\n    request.onError((err) => console.error(\"API Error:\", err));\n    request.fetch();\n  } catch (err) {\n    console.error(\"Error loading registration success data:\", err);\n  }\n};\n\n// Initialize on DOM ready\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  handleRegistrationSuccessIndex();\n});\n"],"names":[],"version":3,"file":"registration_success.f19226f2.js.map","sourceRoot":"../"}