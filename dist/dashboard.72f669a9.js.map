{"mappings":"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","sources":["src/modules/pages/dashboard.ts","src/utils/formUtils.ts","node_modules/.pnpm/@xatom+image@1.0.0_@xatom+core@1.0.12/node_modules/@xatom/image/dist/index.js","src/utils/validationUtils.ts","src/utils/recaptchaUtils.ts"],"sourcesContent":["// src/pages/dashboard.ts\n\nimport { initializeDynamicStudentList } from \"../dashboard/listStudents\";\nimport { initializeDynamicAdditionalStudentList } from \"../dashboard/listAdditionalStudents\";\nimport { initializeDynamicCaregiverList } from \"../dashboard/listCaregivers\";\nimport { initializeDynamicCaregivingForList } from \"../dashboard/listCaregivingFor\";\nimport { WFComponent } from \"@xatom/core\";\nimport { userAuth } from \"../../auth/authConfig\";\n\nexport const dashboard = async () => {\n  console.log(\"Dashboard loaded\");\n  // Set first name from userAuth\n  const firstNameText = new WFComponent(\"#firstNameText\");\n  firstNameText.setText(userAuth.getUser().profile.first_name);\n\n  try {\n    console.log(\"Initializing student list\");\n    await initializeDynamicStudentList(\"#listStudentProfiles\");\n    await initializeDynamicAdditionalStudentList(\n      \"#listAdditionalStudentProfiles\"\n    );\n    await initializeDynamicCaregiverList(\"#caregiversList\");\n    await initializeDynamicCaregivingForList(\"#caregivingForList\");\n    console.log(\"Dynamic lists initialized successfully\");\n  } catch (error) {\n    console.error(\"Error initializing dynamic lists:\", error);\n  }\n};\n","import { WFComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../api/apiConfig\";\nimport { userAuth } from \"../auth/authConfig\";\n\nexport function toggleError(\n  errorMessageComponent: WFComponent<any>,\n  message: string,\n  show: boolean\n): void {\n  errorMessageComponent.updateTextViaAttrVar({ text: show ? message : \"\" });\n  errorMessageComponent.setStyle({ display: show ? \"flex\" : \"none\" });\n}\n\nexport function setupValidation(\n  inputComponent: WFComponent,\n  errorComponent: WFComponent,\n  validate: () => string,\n  requestErrorComponent?: WFComponent // Optional component to clear on input change\n) {\n  const validateAndUpdate = () => {\n    const errorMessage = validate();\n    toggleError(errorComponent, errorMessage, !!errorMessage);\n    if (requestErrorComponent && errorMessage === \"\") {\n      // Clear request error message when the user is correcting the input\n      toggleError(requestErrorComponent, \"\", false);\n    }\n  };\n\n  // Attach event listeners for real-time validation\n  inputComponent.on(\"input\", validateAndUpdate);\n  inputComponent.on(\"blur\", validateAndUpdate);\n  inputComponent.on(\"change\", validateAndUpdate);\n}\n\nexport function createValidationFunction(\n  inputComponent: WFComponent,\n  validationFn: (input: string) => boolean,\n  errorMessage: string\n): () => string {\n  return () => {\n    const inputElement = inputComponent.getElement() as HTMLInputElement;\n    const isValid = validationFn(inputElement.value);\n    return isValid ? \"\" : errorMessage;\n  };\n}\n\nexport function createCheckboxValidationFunction(\n  checkboxComponent: WFComponent,\n  errorMessage: string\n): () => string {\n  return () => {\n    const checkbox = checkboxComponent.getElement() as HTMLInputElement;\n    return checkbox.checked ? \"\" : errorMessage;\n  };\n}\n\nexport function setupCheckboxValidation(\n  checkboxComponent: WFComponent,\n  checkboxErrorComponent: WFComponent,\n  errorMessage: string\n) {\n  const validate = createCheckboxValidationFunction(\n    checkboxComponent,\n    errorMessage\n  );\n  setupValidation(checkboxComponent, checkboxErrorComponent, validate);\n}\n\nexport function validateSelectedSessions(\n  selectedSessions: { sessionId: string; studentIds: string[] }[],\n  errorMessageComponent: WFComponent<any>,\n  errorMessage: string\n): boolean {\n  const isValid =\n    selectedSessions.length > 0 &&\n    selectedSessions.some((session) => session.studentIds.length > 0);\n\n  if (!isValid) {\n    toggleError(errorMessageComponent, errorMessage, true);\n  } else {\n    toggleError(errorMessageComponent, \"\", false);\n  }\n\n  return isValid;\n}\n\ntype fileUploadResponse = {\n  status: string;\n  url: {\n    profile_pic: {\n      url: string;\n    };\n  };\n};\n\n/**\n * Updates the user's profile picture URL in the authentication system.\n * @param {string} imageUrl - The URL of the uploaded image.\n */\nexport function setProfilePicUrl(imageUrl: string): void {\n  const user = userAuth.getUser();\n  if (user && user.profile) {\n    // Ensure the profile_picture object exists\n    user.profile.profile_pic = user.profile.profile_pic || { url: \"\" };\n\n    // Set the profile picture URL\n    user.profile.profile_pic.url = imageUrl;\n    userAuth.setUser(user);\n    localStorage.setItem(\"auth_user\", JSON.stringify(user));\n  }\n}\n\n/**\n * Handles file upload and displays the uploaded image.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */\nexport function setupFileUpload(\n  fileInput: WFComponent,\n  fileInputError: WFComponent,\n  fileInputSuccess: WFComponent,\n  uploadEndpoint: string\n): Promise<string> {\n  const profilePictureImage = new WFImage(\"#profilePictureImage\");\n  const uploadAnimation = new WFComponent(\"#uploadAnimation\");\n\n  const overlay = new WFComponent(\".drop-zone\");\n  let dragCounter = 0;\n\n  return new Promise<string>((resolve, reject) => {\n    const handleFile = (file: File) => {\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        fileInputError.setStyle({ display: \"none\" });\n        fileInputSuccess.setStyle({ display: \"none\" });\n        uploadAnimation.setStyle({ display: \"flex\" });\n\n        const result = event.target?.result as string;\n        profilePictureImage.setImage(result);\n\n        overlay.setStyle({ display: \"none\" });\n      };\n\n      reader.readAsDataURL(file);\n\n      const formData = new FormData();\n      formData.append(\"profile_picture\", file);\n\n      const existingStudent = localStorage.getItem(\"current_student\");\n      if (existingStudent) {\n        const student = JSON.parse(existingStudent);\n        formData.append(\"student_profile_id\", student.id.toString());\n      }\n\n      const postRequest = apiClient.post<fileUploadResponse>(uploadEndpoint, {\n        data: formData,\n      });\n\n      postRequest.onData((response) => {\n        if (response.status === \"success\") {\n          const imageUrl = response.url.profile_pic.url;\n          setProfilePicUrl(imageUrl);\n\n          // Store the URL in local storage\n          localStorage.setItem(\"image_upload\", imageUrl);\n\n          fileInputSuccess.setStyle({ display: \"flex\" });\n          uploadAnimation.setStyle({ display: \"none\" });\n          resolve(imageUrl);\n        } else {\n          const errorMessage = \"Failed to upload profile picture.\";\n          toggleError(fileInputError, errorMessage, true);\n          reject(new Error(errorMessage));\n        }\n      });\n\n      postRequest.onError((error) => {\n        let errorMessage = \"An error occurred during image upload.\";\n        if (error.response && error.response.data) {\n          errorMessage = error.response.data.message || errorMessage;\n        } else if (error.message) {\n          errorMessage = error.message;\n        }\n\n        toggleError(fileInputError, errorMessage, true);\n        reject(new Error(errorMessage));\n      });\n\n      postRequest.fetch();\n    };\n\n    fileInput.on(\"change\", () => {\n      const file = (fileInput.getElement() as HTMLInputElement).files?.[0];\n      if (file) {\n        handleFile(file);\n      }\n    });\n\n    const dragZoneElement = document.body;\n    dragZoneElement.addEventListener(\"dragenter\", (event) => {\n      event.preventDefault();\n      dragCounter++;\n      if (dragCounter === 1) {\n        overlay.setStyle({ display: \"flex\" });\n      }\n    });\n\n    dragZoneElement.addEventListener(\"dragleave\", () => {\n      dragCounter--;\n      if (dragCounter <= 0) {\n        overlay.setStyle({ display: \"none\" });\n        dragCounter = 0;\n      }\n    });\n\n    dragZoneElement.addEventListener(\"dragover\", (event) => {\n      event.preventDefault();\n    });\n\n    dragZoneElement.addEventListener(\"drop\", (event) => {\n      event.preventDefault();\n\n      const files = event.dataTransfer?.files;\n      if (files?.length) {\n        handleFile(files[0]);\n      }\n\n      overlay.setStyle({ display: \"none\" });\n      dragCounter = 0;\n    });\n  });\n}\n","var t=require(\"@xatom/core\");var e,r,s,i,o,n,u={};e=u,r=\"WFImage\",s=()=>c,Object.defineProperty(e,r,{get:s,set:i,enumerable:!0,configurable:!0});class c extends t.WFComponent{constructor(t){super(t)}getImageConfig(){return this._config}getSrc(){return this.getAttribute(\"src\")}getSizes(){return this.getAttribute(\"sizes\")}getSrcSet(){return this.getAttribute(\"srcset\")}getLoading(){return this.getAttribute(\"loading\")}onLoad(t){return this.on(\"load\",t),()=>{this.off(\"load\",t)}}onLoadError(t){return this.on(\"error\",t),()=>{this.off(\"error\",t)}}setImage(t){if(\"string\"==typeof t)this.setAttribute(\"src\",t),this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");else{if(this.setAttribute(\"src\",t.src),\"object\"==typeof t&&t.srcSet&&t.srcSet.length&&t.sizes&&t.sizes.length){const e=t.srcSet.map((t=>`${t.url} ${t.size}`)).join(\", \");this.setAttribute(\"srcset\",e)}else this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");t.loading&&this.setAttribute(\"loading\",t.loading)}}}o=module.exports,n=u,Object.keys(n).forEach((function(t){\"default\"===t||\"__esModule\"===t||o.hasOwnProperty(t)||Object.defineProperty(o,t,{enumerable:!0,get:function(){return n[t]}})}));","import { WFComponent } from \"@xatom/core\";\nimport { toggleError } from \"./formUtils\";\n\nexport function validateNotEmpty(input: string | undefined): boolean {\n  return input !== undefined && input.trim() !== \"\";\n}\n\nexport function validateEmail(input: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(input);\n}\n\nexport function validatePasswordRequirements(password: string): boolean {\n  const hasLowercase = /[a-z]/.test(password);\n  const hasUppercase = /[A-Z]/.test(password);\n  const hasDigit = /\\d/.test(password);\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n  const hasValidLength = password.length >= 8;\n  return (\n    hasLowercase && hasUppercase && hasDigit && hasSpecialChar && hasValidLength\n  );\n}\n\nexport function validateCheckbox(checked: boolean): boolean {\n  return checked;\n}\n\nexport function validatePasswordsMatch(\n  originalPassword: string,\n  confirmPassword: string\n): boolean {\n  return originalPassword === confirmPassword;\n}\n\nexport function validateSelectField(input: string | undefined): boolean {\n  return input !== undefined && input !== \"N/A\";\n}\n\nexport function validatePhoneNumber(input: string): boolean {\n  const phoneRegex = /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/;\n  return phoneRegex.test(input);\n}\n","//../../utils/recaptchaUtils.ts\nimport { apiClient } from \"../api/apiConfig\";\n\n// Declaration for the global reCAPTCHA variable.\ndeclare const grecaptcha: any;\n\n/**\n * Asynchronously obtains a reCAPTCHA token for a specified action.\n * @param {string} action - The action name for which the reCAPTCHA token is requested.\n * @returns {Promise<string>} A promise that resolves with the reCAPTCHA token.\n */\nexport async function getRecaptchaToken(action: string): Promise<string> {\n  return new Promise<string>((resolve, reject) => {\n    // Ensure grecaptcha is ready and execute the token request.\n    grecaptcha.ready(() => {\n      grecaptcha\n        .execute(\"6Lekaa8pAAAAAN6qiq0LSP5Akckql4Blg6K5ToUq\", { action: action })\n        .then((token: string) => {\n          resolve(token); // Resolve with the obtained token.\n        }, reject); // Reject the promise if there is an error.\n    });\n  });\n}\n\n/**\n * Validates a reCAPTCHA token with the backend server.\n * @param {string} token - The reCAPTCHA token to validate.\n * @returns {Promise<any>} A promise that resolves with the validation response from the server.\n */\nexport async function validateRecaptchaToken(token: string): Promise<any> {\n  try {\n    // Send the reCAPTCHA token to the server for validation.\n    const response = await apiClient\n      .post(\"/recaptcha/validate\", {\n        data: { \"g-recaptcha-response\": token },\n      })\n      .fetch();\n\n    // Return the server's response directly assuming it's already in JSON format.\n    return response; // Assume response is the direct JSON body.\n  } catch (error) {\n    throw new Error(`ReCAPTCHA validation failed: ${error}`);\n  }\n}\n\n/**\n * Handles the full reCAPTCHA verification flow from obtaining the token to validating it.\n * @param {string} action - The action name for which the reCAPTCHA should be processed.\n * @returns {Promise<boolean>} A promise that resolves with true if the reCAPTCHA verification is successful.\n */\nexport async function handleRecaptcha(action: string): Promise<boolean> {\n  try {\n    const token = await getRecaptchaToken(action);\n    const validationResponse = await validateRecaptchaToken(token);\n    return validationResponse.status === \"success\";\n  } catch (error) {\n    console.error(\"ReCAPTCHA handling failed:\", error);\n    // If error has a response, log it for more context\n    if (error.response) {\n      console.error(\"Error response:\", error.response);\n    }\n    return false;\n  }\n}\n"],"names":[],"version":3,"file":"dashboard.72f669a9.js.map","sourceRoot":"../"}