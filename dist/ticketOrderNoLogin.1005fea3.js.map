{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kCAAkC;;;AAuGlC,2DAA2D;AAC3D,kDAAsB;AA6MtB,oEAAoE;AACpE,sEAAsB;AApTtB;AACA;AACA;AAoGO,eAAe,aAAa,IAAY;IAM7C,IAAI;QACF,MAAM,aAAa,CAAA,GAAA,oBAAS,AAAD,EAAE,GAAG,CAK7B,CAAC,qBAAqB,EAAE,mBAAmB,MAAM,CAAC;QACrD,MAAM,WAAW,MAAM,WAAW,KAAK;QACvC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO;IACT;AACF;AAEA,qEAAqE;AACrE,MAAM;IAUJ,YAAY,MAAc,EAAE,SAAiB,CAAE;QAC7C,MAAM,cAAc,SAAS,cAAc,CAAC;QAC5C,IAAI,CAAC,aACH,MAAM,IAAI,MAAM,CAAC,iBAAiB,EAAE,OAAO,YAAY,CAAC;QAG1D,yCAAyC;QACzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA,GAAA,iBAAW,AAAD,EAAE;QAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA,GAAA,cAAO,AAAD,EACrB,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,yBAAyB,UAAU;QAEnE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACpD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAClD;QAEF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAClD;QAEF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC;QAE9C,4DAA4D;QAC5D,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,SAAS,GAAG;QAEjB,2DAA2D;QAC3D,IAAI,CAAC,IAAI,CAAC,cAAc,EACtB,QAAQ,IAAI,CACV;QAGJ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAChB,QAAQ,IAAI,CACV;QAGJ,IAAI,CAAC,IAAI,CAAC,eAAe,EACvB,QAAQ,IAAI,CACV;QAGJ,IAAI,CAAC,IAAI,CAAC,eAAe,EACvB,QAAQ,IAAI,CACV;QAGJ,IAAI,CAAC,IAAI,CAAC,KAAK,EACb,QAAQ,IAAI,CACV;IAGN;IAEA,+CAA+C;IAC/C,SAAS,IAAY,EAAE;QACrB,QAAQ,GAAG,CAAC;QAEZ,qBAAqB;QACrB,IAAI,CAAC,aAAa,GAAG,KAAK,cAAc;QACxC,QAAQ,GAAG,CAAC,0BAA0B,IAAI,CAAC,aAAa;QAExD,sBAAsB;QACtB,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,eAAe;YAChD,QAAQ,GAAG,CAAC,uBAAuB,KAAK,eAAe;QACzD;QAEA,uBAAuB;QACvB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,gBAAgB;YAClD,QAAQ,GAAG,CAAC,wBAAwB,KAAK,gBAAgB;QAC3D;QAEA,uBAAuB;QACvB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,MAAM,gBAAgB,IAAI,KAAK,KAAK,qBAAqB,EAAE,cAAc,CAAC,EAAE,EAAE;gBAC5E,OAAO;gBACP,KAAK;gBACL,MAAM;gBACN,MAAM;gBACN,QAAQ;YACV;YACA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;YAC7B,QAAQ,GAAG,CAAC,wBAAwB;QACtC;QAEA,sBAAsB;QACtB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,QAAQ;YAC5C,QAAQ,GAAG,CAAC,wBAAwB,KAAK,QAAQ;QACnD;QAEA,kCAAkC;QAClC,IAAI,KAAK,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE;YAClC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,OAAO,CAAC,GAAG;YACpC,MAAM,aAAa,IAAI,CAAC,KAAK,CAAC,UAAU;YACxC,WAAW,GAAG,GAAG,CAAC,EAAE,KAAK,eAAe,CAAC,UAAU,CAAC;YACpD,QAAQ,GAAG,CAAC;QACd;QAEA,qEAAqE;QACrE,IAAI,CAAC,qBAAqB;IAC5B;IAEA,yEAAyE;IACjE,wBAAwB;QAC9B,2EAA2E;QAC3E,MAAM,yBAAyB,IAAI,CAAC,IAAI,CAAC,UAAU;QAEnD,IAAI,CAAC,wBAAwB;YAC3B,QAAQ,IAAI,CAAC;YACb;QACF;QAEA,MAAM,cAAc,uBAAuB,YAAY,CAAC,WAAW;QACnE,QAAQ,GAAG,CAAC,+BAA+B;QAE3C,IAAI;YACF,IAAI,aAAa,OAAO,CAAC,gBAAgB;gBACvC,8EAA8E;gBAC9E,MAAM,MAAM,IAAI,IAAI,aAAa,OAAO,QAAQ,CAAC,MAAM;gBACvD,IAAI,YAAY,CAAC,GAAG,CAAC,eAAe,IAAI,CAAC,aAAa;gBACtD,IAAI,YAAY,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,SAAS;gBAC5C,uBAAuB,YAAY,CAAC,QAAQ,IAAI,QAAQ;gBACxD,QAAQ,GAAG,CACT,oEACA,IAAI,QAAQ;YAEhB,OAAO;gBACL,mEAAmE;gBACnE,MAAM,UAAU,CAAC,mBAAmB,EAAE,mBAAmB,IAAI,CAAC,SAAS,EAAE,CAAC;gBAC1E,uBAAuB,YAAY,CAAC,QAAQ;gBAC5C,QAAQ,GAAG,CACT,yDACA;gBAGF,6DAA6D;gBAC7D,uBAAuB,KAAK,CAAC,aAAa,GAAG,QAAQ,yBAAyB;gBAC9E,uBAAuB,KAAK,CAAC,OAAO,GAAG,OAAO,mCAAmC;gBACjF,uBAAuB,KAAK,CAAC,MAAM,GAAG,eAAe,8CAA8C;gBACnG,uBAAuB,KAAK,GAAG,6BAA6B,cAAc;YAC5E;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,qCAAqC;YACnD,MAAM;QACR;IACF;IAEA,oCAAoC;IACpC,OAAO;QACL,MAAM,cAAc,IAAI,CAAC,IAAI,CAAC,UAAU;QACxC,IAAI,uBAAuB,aAAa;YACtC,YAAY,KAAK,CAAC,OAAO,GAAG;YAC5B,QAAQ,GAAG,CAAC;QACd;IACF;AACF;AAEA,2CAA2C;AAC3C,MAAM,eAAe;IACnB,MAAM,SAAS,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM;IACzD,MAAM,OAAO,OAAO,GAAG,CAAC;IACxB,OAAO;QAAE;IAAK;AAChB;AAEA,oCAAoC;AACpC,MAAM,sBAAsB,CAAC;IAC3B,MAAM,iBAAiB,SAAS,aAAa,CAAC;IAC9C,IAAI,0BAA0B,aAC5B,eAAe,KAAK;AAExB;AAGO,eAAe;IACpB,2CAA2C;IAC3C,MAAM,EAAE,IAAI,EAAE,GAAG;IACjB,IAAI,CAAC,MAAM;QACT,QAAQ,KAAK,CAAC;QACd,MAAM;QACN;IACF;IAEA,IAAI;QACF,uBAAuB;QACvB,MAAM,WAAW,MAAM,aAAa;QAEpC,IAAI,CAAC,UAAU;YACb,QAAQ,KAAK,CAAC;YACd,MAAM;YACN;QACF;QAEA,oBAAoB;QAEpB,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG;QAE9C,6CAA6C;QAC7C,MAAM,iBAAiB,IAAI,CAAA,GAAA,iBAAW,AAAD,EAAE;QACvC,eAAe,OAAO,CAAC,MAAM,eAAe;QAE5C,MAAM,kBAAkB,IAAI,CAAA,GAAA,iBAAW,AAAD,EAAE;QACxC,gBAAgB,OAAO,CAAC,MAAM,gBAAgB;QAE9C,MAAM,sBAAsB,IAAI,CAAA,GAAA,iBAAW,AAAD,EAAE;QAC5C,oBAAoB,OAAO,CAAC,MAAM,QAAQ;QAE1C,+CAA+C;QAC/C,MAAM,kBAAkB,IAAI,CAAA,GAAA,iBAAW,AAAD,EAAE;QACxC,MAAM,OAAO,IAAI,KAAK,MAAM,qBAAqB;QACjD,gBAAgB,OAAO,CACrB,KAAK,kBAAkB,CAAC,EAAE,EAAE;YAC1B,OAAO;YACP,KAAK;YACL,MAAM;QACR;QAGF,MAAM,kBAAkB,IAAI,CAAA,GAAA,iBAAW,AAAD,EAAE;QACxC,gBAAgB,OAAO,CACrB,KAAK,kBAAkB,CAAC,EAAE,EAAE;YAAE,MAAM;YAAW,QAAQ;QAAU;QAGnE,uBAAuB;QACvB,MAAM,yBAAyB,IAAI,CAAA,GAAA,iBAAW,AAAD,EAAE;QAC/C,uBAAuB,UAAU,GAAG,SAAS,GAC3C,YAAY,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY;QAE7D,qEAAqE;QACrE,MAAM,gBAAgB,SAAS,aAAa,CAC1C;QAEF,MAAM,gBAAgB,SAAS,aAAa,CAC1C;QAEF,MAAM,gBAAgB,SAAS,aAAa,CAC1C;QAGF,IAAI,eAAe;YACjB,cAAc,KAAK,CAAC,KAAK,GAAG;YAC5B,cAAc,KAAK,CAAC,MAAM,GAAG;YAC7B,cAAc,KAAK,CAAC,OAAO,GAAG;YAC9B,cAAc,KAAK,CAAC,MAAM,GAAG;QAC/B;QAEA,IAAI,eACF,cAAc,KAAK,CAAC,MAAM,GAAG;QAG/B,IAAI,eAAe;YACjB,cAAc,KAAK,CAAC,KAAK,GAAG;YAC5B,cAAc,KAAK,CAAC,MAAM,GAAG;YAC7B,cAAc,KAAK,CAAC,MAAM,GAAG;QAC/B;QAEA,sBAAsB;QACtB,MAAM,8BAA8B,IAAI,CAAA,GAAA,iBAAW,AAAD,EAChD;QAEF,4BAA4B,OAAO,CACjC,YAAY,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB,IACpE;QAGJ,kCAAkC;QAClC,MAAM,0BAA0B,IAAI,CAAA,GAAA,iBAAW,AAAD,EAAE;QAChD,MAAM,2BAA2B,IAAI,CAAA,GAAA,iBAAW,AAAD,EAC7C;QAEF,IAAI,MAAM,mBAAmB,EAAE;YAC7B,wBAAwB,QAAQ,CAAC;gBAAE,SAAS;YAAQ;YACpD,yBAAyB,QAAQ,CAAC;gBAAE,SAAS;YAAO;QACtD,OAAO;YACL,wBAAwB,QAAQ,CAAC;gBAAE,SAAS;YAAO;YACnD,yBAAyB,QAAQ,CAAC;gBAAE,SAAS;YAAQ;QACvD;QAEA,MAAM,oBAAoB,IAAI,CAAA,GAAA,iBAAW,AAAD,EAAE;QAC1C,kBAAkB,OAAO,CAAC,MAAM,kBAAkB,IAAI;QAEtD,8BAA8B;QAC9B,MAAM,cAAc,IAAI,CAAA,GAAA,iBAAW,AAAD,EAAE;QACpC,MAAM,oBAAoB,IAAI,KAAK,KAAK,UAAU;QAClD,YAAY,OAAO,CACjB,kBAAkB,kBAAkB,CAAC,EAAE,EAAE;YACvC,OAAO;YACP,KAAK;YACL,MAAM;QACR;QAGF,MAAM,gBAAgB,IAAI,CAAA,GAAA,iBAAW,AAAD,EAAE;QACtC,cAAc,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC;QAExD,MAAM,gBAAgB,IAAI,CAAA,GAAA,iBAAW,AAAD,EAAE;QACtC,cAAc,UAAU,GAAG,YAAY,CAAC,QAAQ,KAAK,WAAW;QAEhE,4CAA4C;QAC5C,MAAM,aAAa,IAAI,CAAA,GAAA,mBAAa,AAAD,EAAU,eAAe;YAC1D,aAAa;QACf;QAEA,qBAAqB;QACrB,QAAQ,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,EAAE,GAAG,EAAE,EAAE;QAElC,uDAAuD;QACvD,WAAW,WAAW,CAAC,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE;YAC7C,MAAM,aAAa,IAAI,CAAA,GAAA,iBAAW,AAAD,EAAE;YAEnC,wBAAwB;YACxB,MAAM,cAAc,IAAI,CAAA,GAAA,cAAO,AAAD,EAC5B,WAAW,mBAAmB,CAAC,cAAc,UAAU;YAEzD,YAAY,QAAQ,CAAC,QAAQ,OAAO,CAAC,GAAG;YAExC,0BAA0B;YAC1B,MAAM,uBAAuB,WAAW,mBAAmB,CACzD;YAEF,qBAAqB,OAAO,CAAC,QAAQ,eAAe;YAEpD,2BAA2B;YAC3B,MAAM,wBAAwB,WAAW,mBAAmB,CAC1D;YAEF,sBAAsB,OAAO,CAAC,QAAQ,gBAAgB;YAEtD,2BAA2B;YAC3B,MAAM,wBAAwB,WAAW,mBAAmB,CAC1D;YAEF,MAAM,aAAa,IAAI,KAAK,QAAQ,qBAAqB;YACzD,sBAAsB,OAAO,CAC3B,CAAC,EAAE,WAAW,kBAAkB,CAAC,EAAE,EAAE;gBACnC,OAAO;gBACP,KAAK;gBACL,MAAM;YACR,GAAG,IAAI,EAAE,WAAW,kBAAkB,CAAC,EAAE,EAAE;gBACzC,MAAM;gBACN,QAAQ;YACV,GAAG,CAAC;YAGN,sBAAsB;YACtB,MAAM,aAAa,WAAW,mBAAmB,CAAC;YAClD,WAAW,OAAO,CAAC,QAAQ,gBAAgB;YAE3C,6BAA6B;YAC7B,MAAM,oBAAoB,WAAW,mBAAmB,CACtD;YAEF,kBAAkB,OAAO,CAAC,QAAQ,kBAAkB;YAEpD,OAAO;QACT;QAEA,2CAA2C;QAC3C,WAAW,OAAO,CAAC;QAEnB,0CAA0C;QAC1C,MAAM,qBAAqB,IAAI,CAAA,GAAA,iBAAW,AAAD,EAAE;QAC3C,mBAAmB,EAAE,CAAC,SAAS;YAC7B,MAAM,oBAAoB,SAAS,aAAa,CAC9C;YAGF,IAAI,mBAAmB;gBACrB,qDAAqD;gBACrD,MAAM,cAAc,OAAO,IAAI,CAAC,IAAI,UAAU;gBAC9C,IAAI,aAAa;oBACf,gDAAgD;oBAChD,MAAM,cAAc,MAAM,IAAI,CAAC,SAAS,WAAW,EAChD,GAAG,CAAC,CAAC;wBACJ,IAAI;4BACF,OAAO,WAAW,IAAI,GAClB,CAAC,6BAA6B,EAAE,WAAW,IAAI,CAAC,EAAE,CAAC,GACnD;wBACN,EAAE,OAAO,GAAG;4BACV,QAAQ,KAAK,CAAC,+BAA+B;4BAC7C,OAAO;wBACT;oBACF,GACC,IAAI,CAAC;oBAER,wFAAwF;oBACxF,MAAM,iBACJ,AAAC,SAAS,aAAa,CAAC,oBACpB,aAAa;oBACnB,MAAM,kBACJ,AAAC,SAAS,aAAa,CAAC,qBACpB,aAAa;oBACnB,MAAM,kBACJ,AAAC,SAAS,aAAa,CAAC,qBACpB,aAAa;oBACnB,MAAM,kBACJ,AAAC,SAAS,aAAa,CAAC,qBACpB,aAAa;oBAEnB,+CAA+C;oBAC/C,YAAY,QAAQ,CAAC,KAAK,CAAC,CAAC;;;;gBAItB,EAAE,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAkDR,EAAE,eAAe;6BACV,EAAE,gBAAgB;qBAC1B,EAAE,gBAAgB,IAAI,EAAE,gBAAgB;;gBAE7C,EAAE,kBAAkB,SAAS,CAAC;;;UAGpC,CAAC;oBAED,YAAY,QAAQ,CAAC,KAAK;oBAC1B,YAAY,KAAK;gBACnB;YACF;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yCAAyC;QACvD,MAAM;IACR;AACF;;;AChmBA,IAAI,IAAE,QAAQ;AAAe,IAAI,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAE,CAAC;AAAE,IAAE,GAAE,IAAE,WAAU,IAAE,IAAI,GAAE,OAAO,cAAc,CAAC,GAAE,GAAE;IAAC,KAAI;IAAE,KAAI;IAAE,YAAW,CAAC;IAAE,cAAa,CAAC;AAAC;AAAG,MAAM,UAAU,EAAE,WAAW;IAAC,YAAY,CAAC,CAAC;QAAC,KAAK,CAAC;IAAE;IAAC,iBAAgB;QAAC,OAAO,IAAI,CAAC,OAAO;IAAA;IAAC,SAAQ;QAAC,OAAO,IAAI,CAAC,YAAY,CAAC;IAAM;IAAC,WAAU;QAAC,OAAO,IAAI,CAAC,YAAY,CAAC;IAAQ;IAAC,YAAW;QAAC,OAAO,IAAI,CAAC,YAAY,CAAC;IAAS;IAAC,aAAY;QAAC,OAAO,IAAI,CAAC,YAAY,CAAC;IAAU;IAAC,OAAO,CAAC,EAAC;QAAC,OAAO,IAAI,CAAC,EAAE,CAAC,QAAO,IAAG;YAAK,IAAI,CAAC,GAAG,CAAC,QAAO;QAAE;IAAC;IAAC,YAAY,CAAC,EAAC;QAAC,OAAO,IAAI,CAAC,EAAE,CAAC,SAAQ,IAAG;YAAK,IAAI,CAAC,GAAG,CAAC,SAAQ;QAAE;IAAC;IAAC,SAAS,CAAC,EAAC;QAAC,IAAG,YAAU,OAAO,GAAE,IAAI,CAAC,YAAY,CAAC,OAAM,IAAG,IAAI,CAAC,eAAe,CAAC,WAAU,IAAI,CAAC,eAAe,CAAC;aAAa;YAAC,IAAG,IAAI,CAAC,YAAY,CAAC,OAAM,EAAE,GAAG,GAAE,YAAU,OAAO,KAAG,EAAE,MAAM,IAAE,EAAE,MAAM,CAAC,MAAM,IAAE,EAAE,KAAK,IAAE,EAAE,KAAK,CAAC,MAAM,EAAC;gBAAC,MAAM,IAAE,EAAE,MAAM,CAAC,GAAG,CAAE,CAAA,IAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAG,IAAI,CAAC;gBAAM,IAAI,CAAC,YAAY,CAAC,UAAS;YAAE,OAAM,IAAI,CAAC,eAAe,CAAC,WAAU,IAAI,CAAC,eAAe,CAAC;YAAS,EAAE,OAAO,IAAE,IAAI,CAAC,YAAY,CAAC,WAAU,EAAE,OAAO;QAAC;IAAC;AAAC;AAAC,IAAE,OAAO,OAAO,EAAC,IAAE,GAAE,OAAO,IAAI,CAAC,GAAG,OAAO,CAAE,SAAS,CAAC;IAAE,cAAY,KAAG,iBAAe,KAAG,EAAE,cAAc,CAAC,MAAI,OAAO,cAAc,CAAC,GAAE,GAAE;QAAC,YAAW,CAAC;QAAE,KAAI;YAAW,OAAO,CAAC,CAAC,EAAE;QAAA;IAAC;AAAE","sources":["src/modules/pages/ticketOrderNoLogin.ts","node_modules/.pnpm/@xatom+image@1.0.0_@xatom+core@1.0.12/node_modules/@xatom/image/dist/index.js"],"sourcesContent":["// src/pages/ticketOrderNoLogin.ts\n\nimport { WFComponent, WFDynamicList } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../../api/apiConfig\";\nimport { navigate } from \"@xatom/core\"; // Ensure navigate is imported for potential redirection\n\n// Define the Ticket interface based on the API response\ninterface Ticket {\n  id: number;\n  status: string;\n  production_name: string;\n  performance_name: string;\n  performance_date_time: number;\n  customer_first_name: string;\n  customer_last_name: string;\n  customer_email: string;\n  ticket_tier_name: string;\n  seating_assignment: string;\n  checked_in: boolean;\n  checked_in_time?: string | null;\n  ticket_order_id: number;\n  user_id: number;\n  contact_id: number;\n  ticket_tier_id: string;\n  performance_id: string;\n  tickets_available_id: string;\n  created_at: number;\n  quantity: number;\n  qr_code: {\n    url: string;\n  };\n}\n\n// Define the Ticket Order interface\ninterface TicketOrder {\n  id: number;\n  status: string;\n  production_name: string;\n  performance_name: string;\n  location: string;\n  performance_date_time: number;\n  customer_first_name: string;\n  customer_last_name: string;\n  customer_email: string;\n  custom_question_answer: string;\n  assistance_required: boolean;\n  assistance_message: string;\n  checked_in: boolean;\n  checked_in_time?: string | null;\n  user_id: number;\n  contact_id: number;\n  performance_id: string;\n  created_at: number;\n  sale_id: number;\n  image_url: string;\n}\n\n// Define the Sale interface\ninterface Sale {\n  id: number;\n  created_at: number;\n  contact_id: number;\n  user_id: number;\n  customer_first_name: string;\n  customer_last_name: string;\n  customer_email: string;\n  amount_total: number;\n  reciept_url: string;\n}\n\n// Define the Performance interface\ninterface Performance {\n  performance: {\n    response: {\n      result: {\n        fieldData: {\n          \"short-description\": string;\n        };\n      };\n    };\n  };\n  production: {\n    response: {\n      result: {\n        fieldData: {\n          name: string;\n          \"short-description\": string;\n        };\n      };\n    };\n  };\n  location: {\n    response: {\n      result: {\n        fieldData: {\n          \"map-embed\": string;\n        };\n      };\n    };\n  };\n}\n\n// Function to fetch ticket details from the API using uuid\nexport async function fetchTickets(uuid: string): Promise<{\n  tickets: Ticket[];\n  order: TicketOrder;\n  sale: Sale;\n  performance: Performance;\n} | null> {\n  try {\n    const getTickets = apiClient.get<{\n      tickets: Ticket[];\n      order: TicketOrder;\n      sale: Sale;\n      performance: Performance;\n    }>(`/tickets/get_tickets/${encodeURIComponent(uuid)}`);\n    const response = await getTickets.fetch();\n    return response;\n  } catch (error) {\n    console.error(\"Error fetching tickets:\", error);\n    return null;\n  }\n}\n\n// Define the TicketOrderCard component to manage the ticket card DOM\nclass TicketCard {\n  private card: WFComponent;\n  private image: WFImage;\n  private productionName: WFComponent;\n  private performanceName: WFComponent;\n  private performanceDate: WFComponent;\n  private performanceId: string; // Track performance ID\n  private quantity: WFComponent; // Track ticket quantity\n  private orderUuid: string; // Track order UUID\n\n  constructor(cardId: string, orderUuid: string) {\n    const cardElement = document.getElementById(cardId);\n    if (!cardElement) {\n      throw new Error(`Element with id '${cardId}' not found.`);\n    }\n\n    // Initialize card and its child elements\n    this.card = new WFComponent(cardElement);\n    this.image = new WFImage(\n      this.card.getChildAsComponent(\"#cardPerformanceImage\").getElement()\n    );\n    this.productionName = this.card.getChildAsComponent(\"#cardProductionName\");\n    this.performanceName = this.card.getChildAsComponent(\n      \"#cardPerformanceName\"\n    );\n    this.performanceDate = this.card.getChildAsComponent(\n      \"#cardPerformanceDate\"\n    );\n    this.quantity = this.card.getChildAsComponent(\"#quantity\");\n\n    // Initialize performanceId and orderUuid to an empty string\n    this.performanceId = \"\";\n    this.orderUuid = orderUuid;\n\n    // Log warnings if any essential child elements are missing\n    if (!this.productionName) {\n      console.warn(\n        \"Element with id 'cardProductionName' not found within the ticket card.\"\n      );\n    }\n    if (!this.quantity) {\n      console.warn(\n        \"Element with id 'quantity' not found within the ticket card.\"\n      );\n    }\n    if (!this.performanceName) {\n      console.warn(\n        \"Element with id 'cardPerformanceName' not found within the ticket card.\"\n      );\n    }\n    if (!this.performanceDate) {\n      console.warn(\n        \"Element with id 'cardPerformanceDate' not found within the ticket card.\"\n      );\n    }\n    if (!this.image) {\n      console.warn(\n        \"Element with id 'cardPerformanceImage' not found within the ticket card.\"\n      );\n    }\n  }\n\n  // Method to populate the ticket card with data\n  populate(data: Ticket) {\n    console.log(\"Populating ticket card with data.\");\n\n    // Set Performance ID\n    this.performanceId = data.performance_id;\n    console.log(\"Performance ID set to:\", this.performanceId);\n\n    // Set Production Name\n    if (this.productionName) {\n      this.productionName.setText(data.production_name);\n      console.log(\"Set productionName:\", data.production_name);\n    }\n\n    // Set Performance Name\n    if (this.performanceName) {\n      this.performanceName.setText(data.performance_name);\n      console.log(\"Set performanceName:\", data.performance_name);\n    }\n\n    // Set Performance Date\n    if (this.performanceDate) {\n      const formattedDate = new Date(data.performance_date_time).toLocaleString([], {\n        month: \"2-digit\",\n        day: \"2-digit\",\n        year: \"2-digit\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      });\n      this.performanceDate.setText(formattedDate);\n      console.log(\"Set performanceDate:\", formattedDate);\n    }\n\n    // Set Ticket Quantity\n    if (this.quantity) {\n      this.quantity.setText(data.quantity.toString());\n      console.log(\"Set ticket quantity:\", data.quantity);\n    }\n\n    // Set Performance Image (QR Code)\n    if (data.qr_code.url && this.image) {\n      this.image.setImage(data.qr_code.url);\n      const imgElement = this.image.getElement() as HTMLImageElement;\n      imgElement.alt = `${data.production_name} - QR Code`;\n      console.log(\"Set performance QR code URL and alt text.\");\n    }\n\n    // Add the `performance` or `uuid` parameter to the ticket order link\n    this.updateTicketOrderLink();\n  }\n\n  // Method to update the ticket order link with the appropriate parameters\n  private updateTicketOrderLink() {\n    // Since #ticketOrderCard is the link element, manipulate its href directly\n    const ticketOrderLinkElement = this.card.getElement() as HTMLAnchorElement;\n\n    if (!ticketOrderLinkElement) {\n      console.warn(\"ticketOrderCard element is not an anchor element.\");\n      return;\n    }\n\n    const currentHref = ticketOrderLinkElement.getAttribute(\"href\") || \"#\";\n    console.log(\"Current href before update:\", currentHref);\n\n    try {\n      if (localStorage.getItem(\"auth_config\")) {\n        // User is authenticated, proceed with adding performance and order parameters\n        const url = new URL(currentHref, window.location.origin);\n        url.searchParams.set(\"performance\", this.performanceId);\n        url.searchParams.set(\"order\", this.orderUuid);\n        ticketOrderLinkElement.setAttribute(\"href\", url.toString());\n        console.log(\n          \"Updated ticket order link with performance and order parameters:\",\n          url.toString()\n        );\n      } else {\n        // User is not authenticated, set href to /ticket-order?uuid={uuid}\n        const newHref = `/ticket-order?uuid=${encodeURIComponent(this.orderUuid)}`;\n        ticketOrderLinkElement.setAttribute(\"href\", newHref);\n        console.log(\n          \"Updated ticket order link to /ticket-order with uuid:\",\n          newHref\n        );\n\n        // Additionally, disable the link and make it non-interactive\n        ticketOrderLinkElement.style.pointerEvents = \"none\"; // Disable pointer events\n        ticketOrderLinkElement.style.opacity = \"0.5\"; // Visually indicate disabled state\n        ticketOrderLinkElement.style.cursor = \"not-allowed\"; // Change cursor to indicate non-interactivity\n        ticketOrderLinkElement.title = \"Please log in to proceed.\"; // Add tooltip\n      }\n    } catch (error) {\n      console.error(\"Error updating ticket order link:\", error);\n      alert(\"An error occurred while updating the ticket order link.\");\n    }\n  }\n\n  // Method to display the ticket card\n  show() {\n    const cardElement = this.card.getElement();\n    if (cardElement instanceof HTMLElement) {\n      cardElement.style.display = \"block\";\n      console.log(\"Displayed ticket card.\");\n    }\n  }\n}\n\n// Utility function to parse URL parameters\nconst getUrlParams = () => {\n  const params = new URLSearchParams(window.location.search);\n  const uuid = params.get(\"uuid\");\n  return { uuid };\n};\n\n// Function to trigger success event\nconst triggerSuccessEvent = (selector: string) => {\n  const successTrigger = document.querySelector(selector);\n  if (successTrigger instanceof HTMLElement) {\n    successTrigger.click();\n  }\n};\n\n// Main function to handle ticket order page for users without login\nexport async function initializeTicketOrderNoLoginPage() {\n  // Extract the uuid from the URL parameters\n  const { uuid } = getUrlParams();\n  if (!uuid) {\n    console.error(\"Invalid or missing uuid in URL\");\n    alert(\"Invalid or missing order UUID. Please check your link and try again.\");\n    return;\n  }\n\n  try {\n    // Fetch ticket details\n    const response = await fetchTickets(uuid);\n\n    if (!response) {\n      console.error(\"Failed to fetch ticket details\");\n      alert(\"Failed to retrieve ticket details. Please try again later.\");\n      return;\n    }\n\n    triggerSuccessEvent(\".success_trigger\");\n\n    const { tickets, order, sale, performance } = response;\n\n    // Set the production and performance details\n    const productionName = new WFComponent(\"#productionName\");\n    productionName.setText(order.production_name);\n\n    const performanceName = new WFComponent(\"#performanceName\");\n    performanceName.setText(order.performance_name);\n\n    const performanceLocation = new WFComponent(\"#performanceLocation\");\n    performanceLocation.setText(order.location);\n\n    // Set the performance time and date separately\n    const performanceDate = new WFComponent(\"#performanceDate\");\n    const date = new Date(order.performance_date_time);\n    performanceDate.setText(\n      date.toLocaleDateString([], {\n        month: \"2-digit\",\n        day: \"2-digit\",\n        year: \"2-digit\",\n      })\n    );\n\n    const performanceTime = new WFComponent(\"#performanceTime\");\n    performanceTime.setText(\n      date.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })\n    );\n\n    // Set the location map\n    const performanceLocationMap = new WFComponent(\"#performanceLocationMap\");\n    performanceLocationMap.getElement().innerHTML =\n      performance.location.response.result.fieldData[\"map-embed\"];\n\n    // Apply styling to make sure the map and its container fill properly\n    const figureElement = document.querySelector(\n      \"#performanceLocationMap figure\"\n    ) as HTMLElement;\n    const iframeElement = document.querySelector(\n      \"#performanceLocationMap iframe\"\n    ) as HTMLElement;\n    const firstChildDiv = document.querySelector(\n      \"#performanceLocationMap figure > div\"\n    ) as HTMLElement;\n\n    if (figureElement) {\n      figureElement.style.width = \"100%\";\n      figureElement.style.height = \"100%\";\n      figureElement.style.padding = \"0\";\n      figureElement.style.margin = \"0\";\n    }\n\n    if (firstChildDiv) {\n      firstChildDiv.style.height = \"100%\";\n    }\n\n    if (iframeElement) {\n      iframeElement.style.width = \"100%\";\n      iframeElement.style.height = \"100%\";\n      iframeElement.style.border = \"0\";\n    }\n\n    // Set the description\n    const performanceShortDescription = new WFComponent(\n      \"#performanceShortDescription\"\n    );\n    performanceShortDescription.setText(\n      performance.performance.response.result.fieldData[\"short-description\"] ||\n        \"Description not available.\"\n    );\n\n    // Set assistance requested status\n    const assistanceRequestedTrue = new WFComponent(\"#assistanceRequestedTrue\");\n    const assistanceRequestedFalse = new WFComponent(\n      \"#assistanceRequestedFalse\"\n    );\n    if (order.assistance_required) {\n      assistanceRequestedTrue.setStyle({ display: \"block\" });\n      assistanceRequestedFalse.setStyle({ display: \"none\" });\n    } else {\n      assistanceRequestedTrue.setStyle({ display: \"none\" });\n      assistanceRequestedFalse.setStyle({ display: \"block\" });\n    }\n\n    const assistanceMessage = new WFComponent(\"#assistanceMessage\");\n    assistanceMessage.setText(order.assistance_message || \"N/A\");\n\n    // Set the billing information\n    const invoiceDate = new WFComponent(\"#invoiceDate\");\n    const saleDateFormatted = new Date(sale.created_at);\n    invoiceDate.setText(\n      saleDateFormatted.toLocaleDateString([], {\n        month: \"2-digit\",\n        day: \"2-digit\",\n        year: \"2-digit\",\n      })\n    );\n\n    const invoiceAmount = new WFComponent(\"#invoiceAmount\");\n    invoiceAmount.setText(`$${sale.amount_total.toFixed(2)}`);\n\n    const receiptButton = new WFComponent(\"#receiptButton\");\n    receiptButton.getElement().setAttribute(\"href\", sale.reciept_url);\n\n    // Initialize and render the list of tickets\n    const ticketList = new WFDynamicList<Ticket>(\"#ticketList\", {\n      rowSelector: \"#ticketItem\",\n    });\n\n    // Sort tickets by ID\n    tickets.sort((a, b) => a.id - b.id);\n\n    // Customize the rendering of list items (Ticket Cards)\n    ticketList.rowRenderer(({ rowData, rowElement }) => {\n      const ticketCard = new WFComponent(rowElement);\n\n      // Set the QR code image\n      const qrCodeImage = new WFImage(\n        ticketCard.getChildAsComponent(\".ticket_qr\").getElement()\n      );\n      qrCodeImage.setImage(rowData.qr_code.url);\n\n      // Set the production name\n      const ticketProductionName = ticketCard.getChildAsComponent(\n        \"#ticketProductionName\"\n      );\n      ticketProductionName.setText(rowData.production_name);\n\n      // Set the performance name\n      const ticketPerformanceName = ticketCard.getChildAsComponent(\n        \"#ticketPerformanceName\"\n      );\n      ticketPerformanceName.setText(rowData.performance_name);\n\n      // Set the performance date\n      const ticketPerformanceDate = ticketCard.getChildAsComponent(\n        \"#ticketPerformanceDate\"\n      );\n      const ticketDate = new Date(rowData.performance_date_time);\n      ticketPerformanceDate.setText(\n        `${ticketDate.toLocaleDateString([], {\n          month: \"2-digit\",\n          day: \"2-digit\",\n          year: \"2-digit\",\n        })} at ${ticketDate.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n        })}`\n      );\n\n      // Set the ticket tier\n      const ticketTier = ticketCard.getChildAsComponent(\"#ticketTicketTier\");\n      ticketTier.setText(rowData.ticket_tier_name);\n\n      // Set the seating assignment\n      const seatingAssignment = ticketCard.getChildAsComponent(\n        \"#ticketSeatingAssignment\"\n      );\n      seatingAssignment.setText(rowData.seating_assignment);\n\n      return rowElement;\n    });\n\n    // Set the tickets data to the dynamic list\n    ticketList.setData(tickets);\n\n    // Add event listener for printing tickets\n    const printTicketsButton = new WFComponent(\"#printTickets\");\n    printTicketsButton.on(\"click\", () => {\n      const ticketListElement = document.querySelector(\n        \"#ticketList\"\n      ) as HTMLElement;\n\n      if (ticketListElement) {\n        // Open a new window with specified size for printing\n        const printWindow = window.open(\"\", \"_blank\", \"width=800,height=600\");\n        if (printWindow) {\n          // Get all stylesheets from the current document\n          const styleSheets = Array.from(document.styleSheets)\n            .map((styleSheet) => {\n              try {\n                return styleSheet.href\n                  ? `<link rel=\"stylesheet\" href=\"${styleSheet.href}\">`\n                  : \"\";\n              } catch (e) {\n                console.error(\"Error accessing stylesheet:\", e);\n                return \"\";\n              }\n            })\n            .join(\"\");\n\n          // Extract production name, performance name, and performance date/time for hero section\n          const productionName =\n            (document.querySelector(\"#productionName\") as HTMLElement)\n              ?.innerText || \"Production Name\";\n          const performanceName =\n            (document.querySelector(\"#performanceName\") as HTMLElement)\n              ?.innerText || \"Performance Name\";\n          const performanceDate =\n            (document.querySelector(\"#performanceDate\") as HTMLElement)\n              ?.innerText || \"Performance Date\";\n          const performanceTime =\n            (document.querySelector(\"#performanceTime\") as HTMLElement)\n              ?.innerText || \"Performance Time\";\n\n          // Create a printable HTML with styles included\n          printWindow.document.write(`\n            <html>\n              <head>\n                <title>Print Tickets</title>\n                ${styleSheets}\n                <style>\n                  /* Additional print-specific styling to handle layout and formatting */\n                  body {\n                    background-color: var(--theme--background);\n                    font-family: var(--text-main--font-family);\n                    color: #121331;\n                    font-size: var(--text-main--font-size);\n                    line-height: var(--text-main--line-height);\n                    letter-spacing: var(--text-main--letter-spacing);\n                    overscroll-behavior: none;\n                    font-weight: var(--text--font-weight);\n                    text-transform: var(--text--text-transform);\n                    padding: 1rem 3rem; \n                  }\n                  \n                  #ticketList {\n                    display: grid; /* Set display to grid */\n                    grid-template-columns: repeat(3, 1fr); /* Create 3 columns */\n                    gap: 20px; /* Add some spacing between the grid items */\n                    color: black; /* Set color to black for ticket list */\n                  }\n\n                  .ticket_wrap {\n                    page-break-inside: avoid; /* Avoid breaking ticket content across pages */\n                  }\n\n                  * {\n                    box-sizing: border-box;\n                  }\n\n                  .hero-section {\n                    text-align: center;\n                    margin-bottom: 2rem;\n                  }\n\n                  .hero-section h1 {\n                    margin: 0;\n                    font-size: 2rem;\n                    font-weight: bold;\n                  }\n\n                  .hero-section p {\n                    margin: 0.5rem 0;\n                    font-size: 1.25rem;\n                  }\n                </style>\n              </head>\n              <body>\n                <div class=\"hero-section\">\n                  <h1>${productionName}</h1>\n                  <p><strong>${performanceName}</strong></p>\n                  <p>${performanceDate} at ${performanceTime}</p>\n                </div>\n                ${ticketListElement.outerHTML}\n              </body>\n            </html>\n          `);\n\n          printWindow.document.close();\n          printWindow.print();\n        }\n      }\n    });\n  } catch (error) {\n    console.error(\"Error initializing ticket order page:\", error);\n    alert(\"An error occurred while loading your ticket order. Please try again later.\");\n  }\n}\n","var t=require(\"@xatom/core\");var e,r,s,i,o,n,u={};e=u,r=\"WFImage\",s=()=>c,Object.defineProperty(e,r,{get:s,set:i,enumerable:!0,configurable:!0});class c extends t.WFComponent{constructor(t){super(t)}getImageConfig(){return this._config}getSrc(){return this.getAttribute(\"src\")}getSizes(){return this.getAttribute(\"sizes\")}getSrcSet(){return this.getAttribute(\"srcset\")}getLoading(){return this.getAttribute(\"loading\")}onLoad(t){return this.on(\"load\",t),()=>{this.off(\"load\",t)}}onLoadError(t){return this.on(\"error\",t),()=>{this.off(\"error\",t)}}setImage(t){if(\"string\"==typeof t)this.setAttribute(\"src\",t),this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");else{if(this.setAttribute(\"src\",t.src),\"object\"==typeof t&&t.srcSet&&t.srcSet.length&&t.sizes&&t.sizes.length){const e=t.srcSet.map((t=>`${t.url} ${t.size}`)).join(\", \");this.setAttribute(\"srcset\",e)}else this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");t.loading&&this.setAttribute(\"loading\",t.loading)}}}o=module.exports,n=u,Object.keys(n).forEach((function(t){\"default\"===t||\"__esModule\"===t||o.hasOwnProperty(t)||Object.defineProperty(o,t,{enumerable:!0,get:function(){return n[t]}})}));"],"names":[],"version":3,"file":"ticketOrderNoLogin.1005fea3.js.map","sourceRoot":"../"}