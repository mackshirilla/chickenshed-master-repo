{"mappings":"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","sources":["src/modules/dashboard/listTicketOrders.ts","node_modules/.pnpm/@xatom+image@1.0.0_@xatom+core@1.0.12/node_modules/@xatom/image/dist/index.js"],"sourcesContent":["// src/pages/listTicketOrders.ts\n\nimport { WFDynamicList, WFComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../../api/apiConfig\";\n\n// Define the TicketOrder interface based on the API response\ninterface TicketOrder {\n  id: number;\n  status: string; // e.g., 'sold'\n  production_name: string;\n  performance_name: string;\n  location: string;\n  performance_date_time: number; // Unix timestamp in milliseconds\n  customer_first_name: string;\n  customer_last_name: string;\n  customer_email: string;\n  custom_question_answer?: string | null;\n  assistance_required: boolean;\n  assistance_message?: string | null;\n  checked_in: boolean;\n  checked_in_time?: string | null;\n  user_id: number;\n  contact_id: number;\n  performance_id: string;\n  created_at: number;\n  sale_id: number;\n  image_url: string;\n  quantity: number; // Added quantity field\n}\n\n// Function to fetch ticket orders from the API\nexport async function fetchTicketOrders(): Promise<TicketOrder[]> {\n  try {\n    const getTicketOrders = apiClient.get<TicketOrder[]>(\n      \"/dashboard/ticket_orders\" // Ensure this endpoint is correct\n    );\n    const response = await getTicketOrders.fetch();\n    return response;\n  } catch (error) {\n    console.error(\"Error fetching ticket orders:\", error);\n    throw error;\n  }\n}\n\n// Function to initialize and render the dynamic ticket order list\nexport async function initializeDynamicTicketOrderList(\n  containerSelector: string\n) {\n  // Initialize a new instance of WFDynamicList for Ticket Orders\n  const list = new WFDynamicList<TicketOrder>(containerSelector, {\n    rowSelector: \"#listTicketsCard\", // Using ID selector for template\n    loaderSelector: \"#listTicketsloading\", // Selector for the loader\n    emptySelector: \"#listTicketsEmpty\", // Selector for the empty state\n  });\n\n  // Customize the rendering of the loader\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({\n      display: \"flex\",\n    });\n    return loaderElement;\n  });\n\n  // Customize the rendering of the empty state\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({\n      display: \"flex\",\n    });\n    return emptyElement;\n  });\n\n  // Customize the rendering of list items (Ticket Cards)\n  list.rowRenderer(({ rowData, rowElement }) => {\n    const ticketCard = new WFComponent(rowElement);\n\n    // Set the performance image\n    const performanceImageComponent = ticketCard.getChildAsComponent(\n      \"#cardPerformanceImage\"\n    );\n    if (performanceImageComponent) {\n      const performanceImage = new WFImage(\n        performanceImageComponent.getElement()\n      );\n      if (rowData.image_url) {\n        performanceImage.setImage(rowData.image_url);\n      } else {\n        performanceImage.setImage(\n          \"https://cdn.prod.website-files.com/667f080f36260b9afbdc46b2/667f080f36260b9afbdc46be_placeholder.svg\"\n        );\n      }\n    }\n\n    // Set the production name\n    const productionName = ticketCard.getChildAsComponent(\n      \"#cardProductionName\"\n    );\n    if (productionName) {\n      productionName.setText(rowData.production_name);\n    }\n\n    // Set the performance name\n    const performanceName = ticketCard.getChildAsComponent(\n      \"#cardPerformanceName\"\n    );\n    if (performanceName) {\n      performanceName.setText(rowData.performance_name);\n    }\n\n    // Set the performance date\n    const performanceDate = ticketCard.getChildAsComponent(\n      \"#cardPerformanceDate\"\n    );\n    if (performanceDate) {\n      const date = new Date(rowData.performance_date_time);\n      performanceDate.setText(date.toLocaleString());\n    }\n\n    // Set the ticket quantity using the quantity value from the response\n    const ticketQuantity = ticketCard.getChildAsComponent(\"#quantity\");\n    if (ticketQuantity) {\n      ticketQuantity.setText(rowData.quantity.toString());\n    }\n\n    // Append the performance parameter to the existing href\n    const ticketCardElement = ticketCard.getElement() as HTMLAnchorElement;\n    const currentHref = ticketCardElement.getAttribute(\"href\") || \"#\";\n    const url = new URL(currentHref, window.location.origin);\n    url.searchParams.set(\"performance\", rowData.performance_id);\n    url.searchParams.set(\"order\", rowData.id.toString());\n    ticketCardElement.setAttribute(\"href\", url.toString());\n\n    // Show the list item\n    rowElement.setStyle({\n      display: \"block\",\n    });\n\n    return rowElement;\n  });\n\n  // Load and display ticket order data\n  try {\n    // Enable the loading state\n    list.changeLoadingStatus(true);\n\n    const ticketOrders = await fetchTicketOrders();\n\n    // Filter unique ticket orders by performance_id\n    const uniqueTicketOrdersMap = new Map<string, TicketOrder>();\n    ticketOrders.forEach((order) => {\n      if (!uniqueTicketOrdersMap.has(order.performance_id)) {\n        uniqueTicketOrdersMap.set(order.performance_id, order);\n      }\n    });\n    const uniqueTicketOrders = Array.from(uniqueTicketOrdersMap.values());\n\n    // Sort ticket orders by performance date and time in ascending order\n    uniqueTicketOrders.sort(\n      (a, b) => a.performance_date_time - b.performance_date_time\n    );\n\n    // Set the data to be displayed in the dynamic list\n    list.setData(uniqueTicketOrders);\n\n    // Disable the loading state\n    list.changeLoadingStatus(false);\n  } catch (error) {\n    console.error(\"Error loading ticket orders:\", error);\n\n    // If there's an error, set an empty array to trigger the empty state\n    list.setData([]);\n\n    // Disable the loading state\n    list.changeLoadingStatus(false);\n  }\n}\n","var t=require(\"@xatom/core\");var e,r,s,i,o,n,u={};e=u,r=\"WFImage\",s=()=>c,Object.defineProperty(e,r,{get:s,set:i,enumerable:!0,configurable:!0});class c extends t.WFComponent{constructor(t){super(t)}getImageConfig(){return this._config}getSrc(){return this.getAttribute(\"src\")}getSizes(){return this.getAttribute(\"sizes\")}getSrcSet(){return this.getAttribute(\"srcset\")}getLoading(){return this.getAttribute(\"loading\")}onLoad(t){return this.on(\"load\",t),()=>{this.off(\"load\",t)}}onLoadError(t){return this.on(\"error\",t),()=>{this.off(\"error\",t)}}setImage(t){if(\"string\"==typeof t)this.setAttribute(\"src\",t),this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");else{if(this.setAttribute(\"src\",t.src),\"object\"==typeof t&&t.srcSet&&t.srcSet.length&&t.sizes&&t.sizes.length){const e=t.srcSet.map((t=>`${t.url} ${t.size}`)).join(\", \");this.setAttribute(\"srcset\",e)}else this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");t.loading&&this.setAttribute(\"loading\",t.loading)}}}o=module.exports,n=u,Object.keys(n).forEach((function(t){\"default\"===t||\"__esModule\"===t||o.hasOwnProperty(t)||Object.defineProperty(o,t,{enumerable:!0,get:function(){return n[t]}})}));"],"names":[],"version":3,"file":"listTicketOrders.01a95512.js.map","sourceRoot":"../"}