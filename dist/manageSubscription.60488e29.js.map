{"mappings":"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","sources":["src/modules/manageSubscription/index.ts","src/modules/manageSubscription/state/manageSubscriptionState.ts","src/modules/manageSubscription/components/manageRegistrationTable.ts","src/modules/manageSubscription/components/manageSubscriptionLineItems.ts","src/modules/manageSubscription/components/manageSubscriptionSummary.ts","src/modules/manageSubscription/components/manageDepositLineItems.ts","src/modules/manageSubscription/components/manageAmountDue.ts","src/modules/manageSubscription/components/managePendingStudentsAlert.ts","src/modules/manageSubscription/components/manageTrialAlert.ts","src/modules/manageSubscription/components/manageSubscriptionDetails.ts","src/modules/manageSubscription/components/manageSubscriptionCancelDialog.ts"],"sourcesContent":["// src/manageSubscription/index.ts\n\nimport { apiClient } from \"../../api/apiConfig\";\nimport type { ManageSubscriptionResponse } from \"./types\";\nimport { WFFormComponent, WFComponent } from \"@xatom/core\";\nimport { loadState, saveState } from \"./state/manageSubscriptionState\";\nimport { initManageRegistrationTable } from \"./components/manageRegistrationTable\";\nimport { initManageLineItems } from \"./components/manageSubscriptionLineItems\";\nimport { updateSubscriptionSummary } from \"./components/manageSubscriptionSummary\";\nimport { initManageDepositItems } from \"./components/manageDepositLineItems\";\nimport { updateAmountDue } from \"./components/manageAmountDue\";\nimport { updatePendingStudentsAlert } from \"./components/managePendingStudentsAlert\";\nimport { updateTrialAlert } from \"./components/manageTrialAlert\";\nimport { manageSubscriptionDetails } from \"./components/manageSubscriptionDetails\";\nimport { CancelSubscriptionDialog } from \"./components/manageSubscriptionCancelDialog\";\n\nconst REG_TABLE_CONFIG = {\n  tableBodySelector: \"#subscription_items_list\",\n  templateRowSelector: \"#subscription_item\",\n  emptyStateSelector: \"#subscription_empty\",\n};\n\nexport async function manageSubscriptionPage(): Promise<void> {\n  // 1) Fetch & seed state\n  const data = await apiClient\n    .post<ManageSubscriptionResponse>(\"/subscriptions/manage-subscription\")\n    .fetch();\n    if (!data || !data.id) {\n      window.location.href = \"/dashboard\";\n      return;\n    }\n  const initialType = data.update_subscription_type || data.subscription_type;\n  saveState({\n    apiData: data,\n    registrationItems: data.registrations,\n    updateSubscriptionType: initialType,\n  });\n\n  // 2) Hide action buttons\n  document\n    .querySelector(\".update_button_wrap\")\n    ?.setAttribute(\"style\", \"display:none\");\n  document\n    .getElementById(\"resetRegistrations\")\n    ?.setAttribute(\"style\", \"display:none\");\n\n  // 3) Render registration table + hook removals\n  initManageRegistrationTable(data.registrations, REG_TABLE_CONFIG);\n  document\n    .getElementById(\"subscription_items_list\")\n    ?.addEventListener(\"click\", (e) => {\n      const btn = (e.target as HTMLElement).closest(\n        \".remove_registration_button\"\n      ) as HTMLButtonElement;\n      if (btn) handleRemove(btn);\n    });\n\n  // 4) Initial full render\n  renderAll();\n  // 4a) fire the hidden Lottie trigger now that we have a subscription\n  document\n    .querySelector<HTMLElement>(\".success_trigger\")\n    ?.click();\n\n  // 5) Dialog & form wiring for “Update Subscription”\n  const form = new WFFormComponent<{ removed_because: string }>(\n    \"#cancelSubscriptionForm\"\n  );\n  const dialogEl = document.querySelector<HTMLDialogElement>(\n    \"#removeStudentDialog\"\n  )!;\n  const pageMain = new WFComponent(\".page_main\");\n  const errorComp = new WFComponent(\"#submitUpdateError\");\n  const loaderComp = document.querySelector<HTMLElement>(\n    \"#submitUpdateLoading\"\n  )!;\n  const submitBtn = document.getElementById(\"submitUpdateBtn\")!;\n\n  document\n    .getElementById(\"submit_subscription_update\")\n    ?.addEventListener(\"click\", (e) => {\n      e.preventDefault();\n      errorComp.getElement().style.display = \"none\";\n      loaderComp.style.display = \"none\";\n      pageMain.setAttribute(\"data-brand\", \"6\");\n      dialogEl.showModal();\n    });\n\n  form.onFormSubmit(async (dataMap, ev) => {\n    ev.preventDefault();\n    errorComp.getElement().style.display = \"none\";\n\n    const reason = dataMap.removed_because.trim();\n    if (!reason) {\n      errorComp.setText(\"Please enter a reason for your changes.\");\n      errorComp.getElement().style.display = \"block\";\n      return;\n    }\n\n    loaderComp.style.display = \"block\";\n\n    try {\n      const state = loadState();\n      const originalIds = state.apiData!.registrations.map((r) => r.id);\n      const keptIds = state.registrationItems!.map((r) => r.id);\n      const toCancel = originalIds.filter((id) => !keptIds.includes(id));\n\n      await apiClient\n        .post(\"/subscriptions/update\", {\n          data: {\n            subscription_id: state.apiData!.id,\n            registration_item_ids: toCancel,\n            reason,\n          },\n        })\n        .fetch();\n\n      const fresh = await apiClient\n        .post<ManageSubscriptionResponse>(\n          \"/subscriptions/manage-subscription\"\n        )\n        .fetch();\n      saveState({\n        apiData: fresh,\n        registrationItems: fresh.registrations,\n      });\n      renderAll();\n\n      form.showSuccessState();\n      pageMain.setAttribute(\"data-brand\", \"4\");\n    } catch (err) {\n      console.error(\"Update failed:\", err);\n      form.showErrorState();\n    } finally {\n      loaderComp.style.display = \"none\";\n      submitBtn.removeAttribute(\"disabled\");\n    }\n  });\n\n  document\n    .getElementById(\"close-dialog-btn\")\n    ?.addEventListener(\"click\", () => {\n      dialogEl.close();\n      pageMain.setAttribute(\"data-brand\", \"2\");\n      form.showForm();\n      form.resetForm();\n      form.enableForm();\n    });\n\n  // Reset registrations\n  document\n    .getElementById(\"resetRegistrations\")\n    ?.addEventListener(\"click\", () => {\n      const orig = loadState().apiData!.registrations;\n      saveState({ registrationItems: orig });\n      renderAll();\n      document\n        .querySelector(\".update_button_wrap\")\n        ?.setAttribute(\"style\", \"display:none\");\n      document\n        .getElementById(\"resetRegistrations\")\n        ?.setAttribute(\"style\", \"display:none\");\n    });\n\n  // 6) Instantiate the cancellation dialog handler\n  new CancelSubscriptionDialog();\n}\n\nexport function renderAll(): void {\n  const s = loadState();\n  const sub = s.apiData!;\n  const items = s.registrationItems!;\n\n  initManageRegistrationTable(items, REG_TABLE_CONFIG);\n  initManageLineItems(sub, items, s.updateSubscriptionType!, {\n    listSelector: \"#subscription_line_items_list\",\n    wrapSelector: \"#subscription_line_items_wrap\",\n    emptySelector: \"#subscription_line_items_empty\",\n    templateSelector: \"#subscription_line_item\",\n  });\n  updateSubscriptionSummary();\n  initManageDepositItems(sub, items, {\n    containerSelector: \"#deposit_line_items_container\",\n    listSelector: \"#deposit_line_items_list\",\n    templateRowSelector: \"#deposit_item_template\",\n    totalSelector: \"#deposit_total\",\n  });\n  updateAmountDue();\n  updatePendingStudentsAlert(sub);\n  updateTrialAlert(sub);\n  manageSubscriptionDetails();\n}\n\n// expose renderAll globally so dialogs can call it\n;(window as any).renderAll = renderAll;\n\nfunction handleRemove(btn: HTMLButtonElement): void {\n  const row = btn.closest(\"tr\");\n  if (!row) return;\n  const st = loadState();\n  if (st.registrationItems.length <= 1) {\n    alert(\"You must keep at least one registration.\");\n    return;\n  }\n  row.remove();\n  const kept = st.registrationItems.filter(\n    (ri) =>\n      !(\n        ri.session_id.toString() ===\n          row.getAttribute(\"data-session-id\") &&\n        ri.student_profile.id.toString() ===\n          row.getAttribute(\"data-student-id\")\n      )\n  );\n  saveState({ registrationItems: kept });\n  renderAll();\n  document\n    .querySelector(\".update_button_wrap\")\n    ?.setAttribute(\"style\", \"display:block\");\n  document\n    .getElementById(\"resetRegistrations\")\n    ?.setAttribute(\"style\", \"display:block\");\n}\n","// src/manageSubscription/state/manageSubscriptionState.ts\n\nimport { ManageSubscriptionResponse, RegistrationItem } from \"../types\";\n\nexport interface ManageSubscriptionState {\n  /** The raw payload from the manage-subscription endpoint */\n  apiData?: ManageSubscriptionResponse;\n  /** Array of current registration items */\n  registrationItems: RegistrationItem[];\n  /** User-selected override for subscription type */\n  updateSubscriptionType?: string;\n}\n\nconst STORAGE_KEY = \"manageSubscriptionState\";\n\nlet state: ManageSubscriptionState = loadStateFromStorage() || {\n  apiData: undefined,\n  registrationItems: [],\n  updateSubscriptionType: undefined,\n};\n\nexport function loadState(): ManageSubscriptionState {\n  return state;\n}\n\nexport function saveState(newState: Partial<ManageSubscriptionState>): void {\n  state = { ...state, ...newState };\n  saveStateToStorage(state);\n}\n\nfunction loadStateFromStorage(): ManageSubscriptionState | null {\n  try {\n    const stored = localStorage.getItem(STORAGE_KEY);\n    return stored ? JSON.parse(stored) : null;\n  } catch (error) {\n    console.error(\"Error loading manage subscription state:\", error);\n    return null;\n  }\n}\n\nfunction saveStateToStorage(state: ManageSubscriptionState): void {\n  try {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(state));\n  } catch (error) {\n    console.error(\"Error saving manage subscription state:\", error);\n  }\n}\n","// src/manageSubscription/components/manageRegistrationTable.ts\n\nimport { WFComponent } from \"@xatom/core\";\nimport { RegistrationItem } from \"../types\";\n\nexport interface ManageTableConfig {\n  tableBodySelector: string;\n  templateRowSelector: string;\n  emptyStateSelector: string;\n}\n\n/**\n * Initializes the registration table for managing subscriptions.\n * Clones the template row for each item, populates text fields,\n * sets data-attributes, and handles empty state display.\n */\nexport function initManageRegistrationTable(\n  items: RegistrationItem[],\n  config: ManageTableConfig\n): void {\n  // Grab elements\n  const tableBodyComp = new WFComponent(config.tableBodySelector);\n  const tableBodyEl = tableBodyComp.getElement();\n\n  const templateRow = document.querySelector(\n    config.templateRowSelector\n  ) as HTMLElement;\n  const emptyRow = document.querySelector(\n    config.emptyStateSelector\n  ) as HTMLElement;\n\n  if (!templateRow) {\n    console.error(\"Template row not found:\", config.templateRowSelector);\n    return;\n  }\n  if (!emptyRow) {\n    console.error(\"Empty state row not found:\", config.emptyStateSelector);\n    return;\n  }\n\n  // Remove existing user rows (keep template and empty)\n  Array.from(tableBodyEl.querySelectorAll(\"tr\")).forEach(row => {\n    if (row === templateRow || row === emptyRow) return;\n    row.remove();\n  });\n\n  // Handle empty state\n  if (items.length === 0) {\n    emptyRow.style.display = \"table-row\";\n    return;\n  }\n  emptyRow.style.display = \"none\";\n\n  // Create a row per item\n  items.forEach(item => {\n    const newRow = templateRow.cloneNode(true) as HTMLElement;\n    newRow.removeAttribute(\"id\");\n    newRow.style.display = \"table-row\";\n\n    // Data attributes\n    newRow.setAttribute(\"data-program-id\", String(item.program_id));\n    newRow.setAttribute(\"data-workshop-id\", String(item.workshop_id));\n    newRow.setAttribute(\"data-session-id\", String(item.session_id));\n    newRow.setAttribute(\"data-student-id\", String(item.student_profile?.id || item.student_id));\n\n    // Populate text fields\n    const programText = newRow.querySelector(\"#item_program_name\");\n    if (programText) programText.textContent = item.program_details.name;\n\n    // Workshop may not exist, show dash if missing\n    const workshopText = newRow.querySelector(\"#item_workshop_name\");\n    const wsName = item.workshop_details?.Name || \"-\";\n    if (workshopText) workshopText.textContent = wsName;\n\n    // Session name\n    const sessionText = newRow.querySelector(\"#item_session_name\");\n    if (sessionText) sessionText.textContent = item.session_details.Name;\n\n    // Student full name\n    const studentText = newRow.querySelector(\"#item_student_name\");\n    if (studentText) {\n      studentText.textContent = `${item.student_profile.first_name} ${item.student_profile.last_name}`;\n    }\n\n    // Hide any select elements if present\n    Array.from(newRow.querySelectorAll(\"select\")).forEach(sel => {\n      (sel as HTMLElement).style.display = \"none\";\n    });\n\n    // Hide confirm/add buttons in management view\n    const confirmBtn = newRow.querySelector(\".add_registration_button\");\n    if (confirmBtn) (confirmBtn as HTMLElement).style.display = \"none\";\n\n    // Append to table body\n    tableBodyEl.appendChild(newRow);\n  });\n}","// src/manageSubscription/components/manageSubscriptionLineItems.ts\n\nimport { WFComponent } from \"@xatom/core\";\nimport { ManageSubscriptionResponse, RegistrationItem } from \"../types\";\n\nexport interface LineItemsConfig {\n  listSelector: string;         // e.g., \"#subscription_line_items_list\"\n  wrapSelector: string;         // e.g., \"#subscription_line_items_wrap\"\n  emptySelector: string;        // e.g., \"#subscription_line_items_empty\"\n  templateSelector: string;     // e.g., \"#subscription_line_item\"\n}\n\ninterface LineItem {\n  productName: string;\n  unitPrice: number;\n  quantity: number;\n  total: number;\n}\n\n/**\n * Renders subscription line items for the management page.\n * Groups and sums quantities, then displays items or shows empty state.\n */\nexport function initManageLineItems(\n  apiData: ManageSubscriptionResponse,\n  registrationItems: RegistrationItem[],\n  subscriptionType: string,\n  config: LineItemsConfig\n): void {\n  // Determine suffix and price field\n  const suffix = subscriptionType === \"year\"\n    ? \"/year\"\n    : subscriptionType === \"month\"\n      ? \"/month\"\n      : \"/semester\";\n\n  // Build raw items\n  const rawItems: LineItem[] = registrationItems.map(item => {\n    const session = item.session_details;\n    const tuition = session.tuition_product as any;\n    const priceStr = subscriptionType === \"year\"\n      ? tuition.Displayed_annual_price\n      : subscriptionType === \"month\"\n        ? tuition.Displayed_monthly_price\n        : tuition.Displayed_semester_price;\n    // parse \"$600 Per Semester\" → 600\n    const unit = parseFloat((priceStr || \"\").replace(/[^0-9\\.]/g, \"\")) || 0;\n    return {\n      productName: session.Name,\n      unitPrice: unit,\n      quantity: 1,\n      total: unit\n    };\n  });\n\n  // Group by productName\n  const groupedMap = new Map<string, LineItem>();\n  rawItems.forEach(item => {\n    const key = item.productName;\n    if (groupedMap.has(key)) {\n      const existing = groupedMap.get(key)!;\n      existing.quantity += item.quantity;\n      existing.total += item.total;\n    } else {\n      groupedMap.set(key, { ...item });\n    }\n  });\n  const finalItems = Array.from(groupedMap.values());\n\n  // Grab DOM elements\n  const wrapComp = new WFComponent(config.wrapSelector);\n  const wrapEl = wrapComp.getElement();\n  const emptyEl = document.querySelector(config.emptySelector) as HTMLElement;\n  const template = document.querySelector(config.templateSelector) as HTMLElement;\n  const listComp = new WFComponent(config.listSelector);\n  const listEl = listComp.getElement();\n\n  if (!template) {\n    console.error(\"Line-item template not found:\", config.templateSelector);\n    return;\n  }\n\n  // Clear previous items\n  Array.from(listEl.children).forEach(child => {\n    if ((child as HTMLElement).id !== template.id) {\n      listEl.removeChild(child);\n    }\n  });\n\n  // Handle empty state\n  if (finalItems.length === 0) {\n    wrapEl.style.display = \"none\";\n    if (emptyEl) emptyEl.style.display = \"flex\";\n    return;\n  }\n  wrapEl.style.display = \"flex\";\n  if (emptyEl) emptyEl.style.display = \"none\";\n\n  // Render each line item\n  finalItems.forEach(item => {\n    const row = template.cloneNode(true) as HTMLElement;\n    row.removeAttribute(\"id\");\n    row.style.display = \"flex\";\n    // fill fields\n    const prod = row.querySelector(\"#subscription_item_product\");\n    if (prod) prod.textContent = item.productName;\n    const unitEl = row.querySelector(\"#subscription_item_unit_amount\");\n    if (unitEl) unitEl.textContent = `$${item.unitPrice.toFixed(2)}`;\n    const qtyEl = row.querySelector(\"#subscription_item_quantity\");\n    if (qtyEl) qtyEl.textContent = String(item.quantity);\n    const totalEl = row.querySelector(\"#subscription_item_total\");\n    if (totalEl) totalEl.textContent = `$${item.total.toFixed(2)} ${suffix}`;\n\n    listEl.appendChild(row);\n  });\n}\n","// src/manageSubscription/components/manageSubscriptionSummary.ts\n\nimport { WFComponent } from \"@xatom/core\";\nimport { loadState } from \"../state/manageSubscriptionState\";\n\n/**\n * Recalculates and updates the subscription summary:\n * - Aggregates current subscription line-item totals\n * - Applies any discount (financial aid)\n * - Updates the UI elements for the subscription total and original amount, appending the billing period suffix\n */\nexport function updateSubscriptionSummary(): void {\n  // 1) Aggregate current line items from the DOM\n  const lineTotals = Array.from(\n    document.querySelectorAll(\"#subscription_line_items_list .line_item_total\")\n  ).map(el => {\n    const text = (el.textContent || \"\").replace(/[^0-9.]/g, \"\");\n    return parseFloat(text) || 0;\n  });\n  const subtotal = lineTotals.reduce((sum, amt) => sum + amt, 0);\n\n  // 2) Get discount percentage and billing period from state\n  const state = loadState();\n  const discountPercent = state.apiData?.financial_aid?.selected_discount || 0;\n  const periodType = state.updateSubscriptionType || state.apiData?.subscription_type || \"month\";\n  const suffix =\n    periodType === \"year\" ? \"/year\"\n    : periodType === \"semester\" ? \"/semester\"\n    : \"/month\";\n\n  // 3) Compute discounted total\n  const discountAmount = subtotal * (discountPercent / 100);\n  const totalAfterDiscount = subtotal - discountAmount;\n\n  // 4) Update UI elements\n  const totalEl = new WFComponent(\"#subscription_total\");\n  const origEl = new WFComponent(\"#subscription_original_amount\");\n  const pillEl = new WFComponent(\"#subscription_discount_pill\");\n  const appliedEl = new WFComponent(\"#subscription_discount_applied\");\n\n  if (discountPercent > 0) {\n    appliedEl.setText(`${discountPercent}%`);\n    pillEl.getElement().style.display = \"block\";\n    origEl.setText(`was $${subtotal.toFixed(2)} ${suffix}`);\n    origEl.getElement().style.display = \"block\";\n  } else {\n    pillEl.getElement().style.display = \"none\";\n    origEl.getElement().style.display = \"none\";\n  }\n\n  // Always update the subscription total display with suffix\n  totalEl.setText(`$${totalAfterDiscount.toFixed(2)} ${suffix}`);\n}\n","// src/manageSubscription/components/manageDepositLineItems.ts\n\nimport { WFComponent } from \"@xatom/core\";\nimport { RegistrationItem, ManageSubscriptionResponse } from \"../types\";\n\nexport interface DepositItemsConfig {\n  containerSelector: string;      // e.g., \"#deposit_line_items_container\"\n  listSelector: string;           // e.g., \"#deposit_line_items_list\"\n  templateRowSelector: string;    // e.g., \"#deposit_item_template\"\n  totalSelector: string;          // e.g., \"#deposit_total\"\n}\n\ninterface DepositLine {\n  productName: string;\n  unitPrice: number;\n  quantity: number;\n  total: number;\n}\n\n/**\n * Renders the deposit line items and total for items already paid.\n * Only shows if status === \"Deposit Paid\"; otherwise hides them entirely.\n */\nexport function initManageDepositItems(\n  subscription: ManageSubscriptionResponse,\n  registrationItems: RegistrationItem[],\n  config: DepositItemsConfig\n): void {\n  const containerComp = new WFComponent(config.containerSelector);\n  const containerEl = containerComp.getElement();\n  const listEl = document.querySelector(config.listSelector) as HTMLElement;\n  const templateRow = document.querySelector(\n    config.templateRowSelector\n  ) as HTMLElement;\n  const totalComp = new WFComponent(config.totalSelector);\n\n  // only show deposit items for Deposit Paid subscriptions\n  if (subscription.status !== \"Deposit Paid\") {\n    if (containerEl) containerEl.style.display = \"none\";\n    return;\n  }\n\n  if (!containerEl || !listEl || !templateRow) {\n    console.error(\"Deposit items: missing selectors\");\n    return;\n  }\n\n  // Gather deposit lines\n  const raw: DepositLine[] = [];\n  registrationItems.forEach(item => {\n    const dp = item.session_details.deposit_product as any;\n    const priceAmt = dp?.Single_sale_price_amount || 0;\n    if (priceAmt > 0) {\n      raw.push({\n        productName: dp.Product_name || item.session_details.Name,\n        unitPrice: priceAmt,\n        quantity: 1,\n        total: priceAmt,\n      });\n    }\n  });\n\n  // Group by productName\n  const grouped = new Map<string, DepositLine>();\n  raw.forEach(line => {\n    if (grouped.has(line.productName)) {\n      const existing = grouped.get(line.productName)!;\n      existing.quantity += line.quantity;\n      existing.total += line.total;\n    } else {\n      grouped.set(line.productName, { ...line });\n    }\n  });\n  const depositLines = Array.from(grouped.values());\n\n  // Clear old rows except template\n  Array.from(listEl.children).forEach(child => {\n    if (child === templateRow) return;\n    listEl.removeChild(child);\n  });\n\n  // No deposits? hide\n  const depositTotal = depositLines.reduce((sum, l) => sum + l.total, 0);\n  if (depositTotal <= 0) {\n    containerEl.style.display = \"none\";\n    return;\n  }\n  containerEl.style.display = \"flex\";\n\n  // Ensure template hidden\n  templateRow.style.display = \"none\";\n\n  // Render each deposit line\n  depositLines.forEach(line => {\n    const row = templateRow.cloneNode(true) as HTMLElement;\n    row.removeAttribute(\"id\");\n    row.style.display = \"flex\";\n    const prod = row.querySelector(\"#deposit_item_product\");\n    if (prod) prod.textContent = line.productName;\n    const unitEl = row.querySelector(\"#deposit_item_unit_amount\");\n    if (unitEl) unitEl.textContent = `$${line.unitPrice.toFixed(2)}`;\n    const qtyEl = row.querySelector(\"#deposit_item_quantity\");\n    if (qtyEl) qtyEl.textContent = String(line.quantity);\n    const totalEl = row.querySelector(\"#deposit_item_total\");\n    if (totalEl) totalEl.textContent = `$${line.total.toFixed(2)}`;\n    listEl.appendChild(row);\n  });\n\n  // Set total\n  totalComp.setText(`$${depositTotal.toFixed(2)}`);\n}\n","// src/manageSubscription/components/manageAmountDue.ts\n\nimport { WFComponent } from \"@xatom/core\";\nimport { loadState } from \"../state/manageSubscriptionState\";\nimport type { ManageSubscriptionResponse } from \"../types\";\n\n/**\n * Updates or hides the “Amount Due” container based on payment status,\n * dynamically recalculating from the rendered line items, deposits,\n * and any applied financial aid.\n *\n * - Only shows when status === \"Deposit Paid\".\n * - Label is always \"Amount Due Upon Approval\".\n * - amountDue = (sum of current subscription line‑item totals)\n *               − (sum of current deposit totals)\n *               − (financial aid discount on line items).\n */\nexport function updateAmountDue(): void {\n  const state = loadState();\n  const subscription: ManageSubscriptionResponse = state.apiData!;\n\n  const container = document.querySelector(\n    \"#amountDueContainer\"\n  ) as HTMLElement | null;\n  if (!container) {\n    console.error(\"#amountDueContainer not found\");\n    return;\n  }\n\n  // only show when deposit has been paid\n  if (subscription.status !== \"Deposit Paid\") {\n    container.style.display = \"none\";\n    return;\n  }\n  container.style.display = \"flex\";\n\n  // set static label\n  new WFComponent(\"#amountDueLable\").setText(\"Amount Due Upon Approval\");\n\n  // 1) sum up all current subscription line‑item totals in the DOM\n  const lineSum = Array.from(\n    document.querySelectorAll(\"#subscription_line_items_list .line_item_total\")\n  ).reduce((sum, el) => {\n    const num = parseFloat((el.textContent || \"\").replace(/[^0-9.]/g, \"\"));\n    return sum + (isNaN(num) ? 0 : num);\n  }, 0);\n\n  // 2) sum up all current deposit totals in the DOM\n  const depositSum = Array.from(\n    document.querySelectorAll(\"#deposit_line_items_list .line_item_total\")\n  ).reduce((sum, el) => {\n    const num = parseFloat((el.textContent || \"\").replace(/[^0-9.]/g, \"\"));\n    return sum + (isNaN(num) ? 0 : num);\n  }, 0);\n\n  // 3) compute financial aid discount\n  const discountPercent =\n    state.apiData?.financial_aid?.selected_discount ?? 0;\n  const discountAmount = (lineSum * discountPercent) / 100;\n\n  // 4) compute final due\n  const amountDue = Math.max(0, lineSum - depositSum - discountAmount);\n\n  // 5) render amount due\n  new WFComponent(\"#total_amount_due_next_invoice\").setText(\n    `$${amountDue.toFixed(2)}`\n  );\n}\n","// src/manageSubscription/components/managePendingStudentsAlert.ts\n\nimport { WFComponent } from \"@xatom/core\";\nimport { ManageSubscriptionResponse } from \"../types\";\n\n/**\n * Shows or hides the \"order under review\" alert box when a\n * subscription is Deposit Paid and student profiles are pending.\n */\nexport function updatePendingStudentsAlert(\n  subscription: ManageSubscriptionResponse\n): void {\n  const alertEl = new WFComponent(\"#alertBox\").getElement();\n\n  // Debugging\n  console.log(\n    \"[updatePendingStudentsAlert] status=\", subscription.status,\n    \"pending_students=\", subscription.pending_students\n  );\n  console.log(\"[updatePendingStudentsAlert] alertEl=\", alertEl);\n\n  if (\n    subscription.status === \"Deposit Paid\" &&\n    subscription.pending_students\n  ) {\n    // Reveal by removing inline override (or letting CSS handle default)\n    alertEl.style.display = \"flex\";\n\n  }else{\n    alertEl.style.display = \"none\";\n  \n  }\n}\n","// src/manageSubscription/components/manageTrialAlert.ts\n\nimport { WFComponent } from \"@xatom/core\";\nimport { ManageSubscriptionResponse } from \"../types\";\n\n/**\n * Toggles the \"trial scheduled\" alert box and injects dynamic text\n * based on subscription status and trial end date.\n */\nexport function updateTrialAlert(\n  subscription: ManageSubscriptionResponse\n): void {\n  const trialBoxEl = new WFComponent(\"#alertBoxTrial\").getElement() as HTMLElement;\n  const dateSpan = new WFComponent(\"#subscription_trial_end_date\").getElement() as HTMLElement;\n\n  const now = Date.now();\n  const trialEnd = subscription.free_trial_end || 0;\n\n  // Show if trialEnd is in the future or early registration is flagged\n  if ((trialEnd && trialEnd > now) || subscription.early_registration) {\n    // Format the trial end date\n    const formatted = new Date(trialEnd).toLocaleDateString(\"en-US\", {\n      month: \"long\",\n      day: \"numeric\",\n      year: \"numeric\",\n    });\n    dateSpan.textContent = formatted;\n\n    // Determine dynamic prefix and verb\n    const whenApproved = subscription.status === \"Deposit Paid\"\n      ? \"When approved your\"\n      : \"Your\";\n    const beginOrResume = subscription.status === \"Deposit Paid\"\n      ? \"begin\"\n      : \"resume\";\n\n    // Update the alert-title HTML\n    const titleEl = trialBoxEl.querySelector(\".alert-title\") as HTMLElement;\n    titleEl.innerHTML =\n      `${whenApproved} subscription is scheduled to ${beginOrResume} on ` +\n      `<span id=\"subscription_trial_end_date\">${formatted}</span>. ` +\n      `If you've paid a deposit, your initial invoice will commence on the same date.`;\n\n    // Reveal the alert box (removing any inline hide)\n    trialBoxEl.style.display = \"flex\";\n  } else {\n    // Hide the alert box\n    trialBoxEl.style.display = \"none\";\n  }\n}\n","import { WFComponent } from \"@xatom/core\";\nimport { loadState } from \"../state/manageSubscriptionState\";\nimport type { ManageSubscriptionResponse } from \"../types\";\n\n/**\n * Renders the basic subscription details section:\n *  - Status (with \"Trial\" shown as \"Scheduled\")\n *  - Billing cycle\n *  - Financial Aid Requested (True/hidden)\n *  - Financial Aid Applied (percentage/hidden)\n */\nexport function manageSubscriptionDetails(): void {\n  const state = loadState();\n  const subscription: ManageSubscriptionResponse = state.apiData!;\n\n  // --- Status ---\n  const statusText =\n    subscription.status.toLowerCase() === \"trial\"\n      ? \"Scheduled\"\n      : subscription.status;\n  new WFComponent(\"#status\").setText(statusText);\n\n  // --- Billing Cycle ---\n  const cycle = state.updateSubscriptionType || subscription.subscription_type;\n  new WFComponent(\"#subscriptionType\").setText(cycle);\n\n  // --- Financial Aid ---\n  const finAid = subscription.financial_aid;\n  const hasAid = finAid?.selected_discount != null && finAid.selected_discount > 0;\n\n  const reqWrap = document.querySelector(\n    \"#finAidRequestedWrap\"\n  ) as HTMLElement | null;\n  const reqEl = new WFComponent(\"#finAidRequested\");\n  const appliedWrap = document.querySelector(\n    \"#finAidAppliedWrap\"\n  ) as HTMLElement | null;\n  const appliedEl = new WFComponent(\"#finAidApplied\");\n\n  if (reqWrap && appliedWrap) {\n    if (hasAid) {\n      reqEl.setText(\"True\");\n      reqWrap.style.display = \"flex\";\n\n      appliedEl.setText(`${finAid!.selected_discount}%`);\n      appliedWrap.style.display = \"flex\";\n    } else {\n      reqWrap.style.display = \"none\";\n      appliedWrap.style.display = \"none\";\n    }\n  } else {\n    console.error(\"manageSubscriptionDetails: missing financial aid selectors\");\n  }\n}\n","import { WFComponent, WFFormComponent } from \"@xatom/core\";\nimport { apiClient } from \"../../../api/apiConfig\";\nimport { loadState, saveState } from \"../state/manageSubscriptionState\";\nimport type { ManageSubscriptionResponse } from \"../types\";\n\n/**\n * Handles the \"Cancel Subscription\" flow:\n * 1) Opens a dialog asking for a cancellation reason\n * 2) On form submit, sends subscription_id + reason to /subscriptions/cancel\n * 3) Upon success, shows a success message and sets the page_main data-brand to 4\n * 4) On dialog close, resets data-brand to 2\n * Hides the cancel button if the subscription is already cancelled\n */\nexport class CancelSubscriptionDialog {\n  private dialogComp = new WFComponent(\"#cancelSubscriptionDialog\");\n  private formComp = new WFFormComponent<{ removed_because: string }>(\n    \"#cancelFullSubscriptionForm\"\n  );\n  private openBtnComp = new WFComponent(\"#openCancelSubscription\");\n  private closeBtnComp = new WFComponent(\"#close-cancel-dialog-btn\");\n  private submitBtnComp = new WFComponent(\"#submitCancel\");\n  private loadingComp = new WFComponent(\"#submitCancelLoading\");\n  private reasonError = new WFComponent(\"#submitCancelError\");\n  private pageMainComp = new WFComponent(\".page_main\");\n\n  constructor() {\n    // Hide cancel button if subscription already cancelled\n    const state = loadState();\n    if (state.apiData?.status === \"Cancelled\") {\n      this.openBtnComp.getElement().style.display = \"none\";\n    }\n\n    this.attachListeners();\n  }\n\n  private attachListeners() {\n    // Intercept form submit\n    this.formComp.onFormSubmit(async (formData, ev) => {\n      ev.preventDefault();\n      this.reasonError.getElement().style.display = \"none\";\n      const reason = (formData.removed_because as string).trim();\n      if (!reason) {\n        this.reasonError.setText(\"Reason is required.\");\n        this.reasonError.getElement().style.display = \"block\";\n        return;\n      }\n      await this.submitCancel(reason);\n    });\n\n    // Open dialog\n    this.openBtnComp.on(\"click\", (e) => {\n      e.preventDefault();\n      this.reasonError.getElement().style.display = \"none\";\n      this.loadingComp.getElement().style.display = \"none\";\n      this.openDialog();\n    });\n\n    // Backdrop click → close\n    const dlgEl = this.dialogComp.getElement() as HTMLDialogElement;\n    dlgEl.addEventListener(\"click\", (e: MouseEvent) => {\n      if (e.target === dlgEl) this.closeDialog();\n    });\n\n    // X button\n    this.closeBtnComp.on(\"click\", () => this.closeDialog());\n  }\n\n  private openDialog() {\n    // switch to cancel-dialog brand\n    this.pageMainComp.setAttribute(\"data-brand\", \"6\");\n    (this.dialogComp.getElement() as HTMLDialogElement).showModal();\n  }\n\n  private closeDialog() {\n    (this.dialogComp.getElement() as HTMLDialogElement).close();\n    // reset to default\n    this.pageMainComp.setAttribute(\"data-brand\", \"2\");\n  }\n\n  private async submitCancel(reason: string) {\n    // show loader + disable\n    this.loadingComp.getElement().style.display = \"block\";\n    this.submitBtnComp.getElement().setAttribute(\"disabled\", \"true\");\n\n    try {\n      const st = loadState();\n      const response = await apiClient\n        .post<ManageSubscriptionResponse>(\"/subscriptions/cancel\", {\n          data: {\n            subscription_id: st.apiData!.id,\n            reason,\n          },\n        })\n        .fetch();\n\n      // filter out cancelled, waitlist, draft, pending statuses\n      const visibleRegs = (response.registrations || [])\n        .filter(r => {\n          const s = r.status.toUpperCase();\n          return s !== \"CANCELLED\" && s !== \"WAITLIST\" && s !== \"DRAFT\" && s !== \"PENDING\";\n        });\n\n      // update state with filtered registrations\n      saveState({\n        apiData: response,\n        registrationItems: visibleRegs\n      });\n\n      // re-render page items\n      ;(window as any).renderAll();\n\n      // show success and swap to success brand\n      this.formComp.showSuccessState();\n      this.pageMainComp.setAttribute(\"data-brand\", \"4\");\n    } catch (err) {\n      console.error(\"Cancel failed:\", err);\n      this.formComp.showErrorState();\n    } finally {\n      // hide loader + re-enable\n      this.loadingComp.getElement().style.display = \"none\";\n      this.submitBtnComp.getElement().removeAttribute(\"disabled\");\n    }\n  }\n}\n"],"names":[],"version":3,"file":"manageSubscription.60488e29.js.map","sourceRoot":"../"}