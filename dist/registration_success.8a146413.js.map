{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GC2Fa,EAAA,MAAA,CAAA,EAAA,iCAAA,IAAA,GAzFb,IAAA,EAAA,EAAA,eACA,EAAA,EAAA,uBAGA,IAAM,EAAa,AAAC,GAAgB,EAAI,MAAM,CAAC,GAAG,WAAW,GAAK,EAAI,KAAK,CAAC,GACtE,EAAgB,AAAC,GAAiB,EAAW,EAAI,QAAQ,IACzD,EAAiB,AAAC,GACtB,IAAI,KAAK,YAAY,CAAC,QAAS,CAAE,MAAO,WAAY,SAAU,KAAM,GAAG,MAAM,CAAC,GAG1E,EAAiB,KACrB,IAAM,EAAY,SAAS,aAAa,CAAc,oBAClD,GAAW,EAAU,KAAK,EAChC,EAgCM,EAAiB,IAAI,IAAI,CAC7B,WACA,cACA,iBACA,oBACA,kBACD,EAGK,EAAc,CAClB,EACA,SAgBI,EAdJ,IAAM,EAAK,EAAU,UAAU,GAI/B,GAFA,EAAG,KAAK,CAAC,OAAO,CAAG,GAGjB,AAAY,MAAZ,GACA,AAAa,KAAb,GACA,AAAa,CAAA,IAAb,GACC,AAAoB,UAApB,OAAO,GAAyB,AAAa,IAAb,EACjC,CACA,EAAG,KAAK,CAAC,OAAO,CAAG,OACnB,MACF,CAIE,EADE,AAAoB,WAApB,OAAO,EACC,EAAc,GACf,AAAoB,UAApB,OAAO,EACN,EAAW,GAEX,EAAe,GAAG,CAAC,EAAG,EAAE,EAC9B,EAAe,GACf,EAAS,QAAQ,GAIvB,IAAM,EAAQ,EAAG,WAAW,EAAE,MAAM,IAAI,CAAC,EAAE,EAAI,EAC/C,CAAA,EAAG,SAAS,CAAG,CAAC,EAAE,EAAM,UAAU,EAAE,EAAQ,SAAS,CAAC,AACxD,EAGa,EAAiC,UAC5C,GAAI,CACF,IAAM,EAAU,AAAA,CAAA,EAAA,EAAA,SAAS,AAAT,EAAU,GAAG,CAC3B,8BAEF,EAAQ,MAAM,CAAC,AAAC,IACd,IAAM,EAAO,EAAI,IAAI,CACf,EAAkB,EAAK,kBAAkB,CAAG,EAAK,cAAc,CAC/D,EACJ,EAAK,qBAAqB,CAAG,GAAK,EAAK,4BAA4B,CAAG,EAClE,CAAC,EAAE,KAAK,KAAK,CACX,EAAM,4BAA4B,CAAG,EAAK,qBAAqB,CAAI,KACnE,CAAC,CAAC,CACJ,KAEA,EAAY,AAAqC,WAArC,AAAA,CAAA,EAAK,MAAM,EAAI,EAAA,EAAI,WAAW,GAG1C,EAAQ,SAAS,cAAc,CAAC,mBAClC,GACF,CAAA,EAAM,KAAK,CAAC,OAAO,CAAG,EAAW,OAAS,EAD5C,EAkBA,AAbkD,CAChD,CAAE,GAAI,SAAU,MAAO,EAAK,MAAM,AAAC,EACnC,CAAE,GAAI,eAAgB,MAAO,EAAK,iBAAiB,AAAC,EACpD,CAAE,GAAI,kBAAmB,MAAO,EAAK,gBAAgB,AAAC,EACtD,CAAE,GAAI,wBAAyB,MAAO,EAAK,iBAAiB,CAAG,CAAE,EACjE,CAAE,GAAI,sBAAuB,MAAO,CAAW,EAC/C,CAAE,GAAI,WAAY,MAAO,EAAK,qBAAqB,AAAC,EACpD,CAAE,GAAI,cAAe,MAAO,EAAK,cAAc,AAAC,EAChD,CAAE,GAAI,iBAAkB,MAAO,EAAK,4BAA4B,AAAC,EACjE,CAAE,GAAI,oBAAqB,MAAO,EAAK,kBAAkB,AAAC,EAC1D,CAAE,GAAI,kBAAmB,MAAO,CAAgB,EACjD,CAEM,OAAO,CAAC,CAAC,CAAE,GAAA,CAAE,CAAE,MAAA,CAAK,CAAE,IAE3B,GAAI,AAAO,oBAAP,GAA4B,EAAU,OAC1C,IAAM,EAAK,SAAS,cAAc,CAAC,GAC9B,GACL,EAAY,IAAI,EAAA,WAAU,CAAE,GAAK,EACnC,GAGA,GACF,GACA,EAAQ,OAAO,CAAC,AAAC,GAAQ,QAAQ,KAAK,CAAC,aAAc,IACrD,EAAQ,KAAK,EACf,CAAE,MAAO,EAAK,CACZ,QAAQ,KAAK,CAAC,2CAA4C,EAC5D,CACF,EAGA,SAAS,gBAAgB,CAAC,mBAAoB,KAC5C,GACF,E,E,C,c,Q,sB,Q,iD,O,E,E,E,C,E","sources":["<anon>","src/modules/success_page/registration_success.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"ifnoH\":[function(require,module,exports) {\n// src/success_page/registration_success_index.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"handleRegistrationSuccessIndex\", ()=>handleRegistrationSuccessIndex);\nvar _core = require(\"@xatom/core\");\nvar _apiConfig = require(\"../../api/apiConfig\");\n// Utility functions for formatting values\nconst capitalize = (str)=>str.charAt(0).toUpperCase() + str.slice(1);\nconst formatBoolean = (val)=>capitalize(val.toString());\nconst formatCurrency = (val)=>new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\"\n    }).format(val);\n// Trigger the hidden success animation/trigger element (Webflow interaction)\nconst triggerSuccess = ()=>{\n    const triggerEl = document.querySelector(\".success_trigger\");\n    if (triggerEl) triggerEl.click();\n};\n// Set of field IDs that should display as currency\nconst currencyFields = new Set([\n    \"subtotal\",\n    \"depositPaid\",\n    \"AmountDiscount\",\n    \"subscriptionTotal\",\n    \"dueUponApproval\"\n]);\n// Update a field component with given value or hide it\nconst updateField = (component, rawValue)=>{\n    const el = component.getElement();\n    // Reset display\n    el.style.display = \"\";\n    // Hide if null, empty, false, or zero-number\n    if (rawValue == null || rawValue === \"\" || rawValue === false || typeof rawValue === \"number\" && rawValue === 0) {\n        el.style.display = \"none\";\n        return;\n    }\n    let display;\n    if (typeof rawValue === \"boolean\") display = formatBoolean(rawValue);\n    else if (typeof rawValue === \"string\") display = capitalize(rawValue);\n    else display = currencyFields.has(el.id) ? formatCurrency(rawValue) : rawValue.toString();\n    // Preserve label and bold the value\n    const label = el.textContent?.split(\":\")[0] || \"\";\n    el.innerHTML = `${label}: <strong>${display}</strong>`;\n};\nconst handleRegistrationSuccessIndex = async ()=>{\n    try {\n        const request = (0, _apiConfig.apiClient).get(\"/success_page/registration\");\n        request.onData((res)=>{\n            const data = res.data;\n            const dueUponApproval = data.subscription_total - data.deposit_amount;\n            const aidPercent = data.subscription_subtotal > 0 && data.subscription_amount_discount > 0 ? `${Math.round(data.subscription_amount_discount / data.subscription_subtotal * 100)}%` : null;\n            const isActive = (data.status || \"\").toUpperCase() === \"ACTIVE\";\n            // Handle hiding of dueUponApproval element entirely if active\n            const dueEl = document.getElementById(\"dueUponApproval\");\n            if (dueEl) dueEl.style.display = isActive ? \"none\" : \"\";\n            // Map xatom components to their data keys\n            const fields = [\n                {\n                    id: \"status\",\n                    value: data.status\n                },\n                {\n                    id: \"billingCycle\",\n                    value: data.subscription_type\n                },\n                {\n                    id: \"pendingStudents\",\n                    value: data.pending_students\n                },\n                {\n                    id: \"financialAidRequested\",\n                    value: data.current_finaid_id > 0\n                },\n                {\n                    id: \"financialAidApplied\",\n                    value: aidPercent\n                },\n                {\n                    id: \"subtotal\",\n                    value: data.subscription_subtotal\n                },\n                {\n                    id: \"depositPaid\",\n                    value: data.deposit_amount\n                },\n                {\n                    id: \"AmountDiscount\",\n                    value: data.subscription_amount_discount\n                },\n                {\n                    id: \"subscriptionTotal\",\n                    value: data.subscription_total\n                },\n                {\n                    id: \"dueUponApproval\",\n                    value: dueUponApproval\n                }\n            ];\n            fields.forEach(({ id, value })=>{\n                // Skip updating dueUponApproval if it's hidden\n                if (id === \"dueUponApproval\" && isActive) return;\n                const el = document.getElementById(id);\n                if (!el) return;\n                updateField(new (0, _core.WFComponent)(el), value);\n            });\n            // After populating all fields, trigger Webflow interaction\n            triggerSuccess();\n        });\n        request.onError((err)=>console.error(\"API Error:\", err));\n        request.fetch();\n    } catch (err) {\n        console.error(\"Error loading registration success data:\", err);\n    }\n};\n// Initialize on DOM ready\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    handleRegistrationSuccessIndex();\n});\n\n},{\"@xatom/core\":\"65YBq\",\"../../api/apiConfig\":\"dUmIV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}]},[], null, \"parcelRequired346\")\n\n//# sourceMappingURL=registration_success.8a146413.js.map\n","// src/success_page/registration_success_index.ts\n\nimport { WFComponent } from \"@xatom/core\";\nimport { apiClient } from \"../../api/apiConfig\";\n\n// Utility functions for formatting values\nconst capitalize = (str: string) => str.charAt(0).toUpperCase() + str.slice(1);\nconst formatBoolean = (val: boolean) => capitalize(val.toString());\nconst formatCurrency = (val: number) =>\n  new Intl.NumberFormat(\"en-US\", { style: \"currency\", currency: \"USD\" }).format(val);\n\n// Trigger the hidden success animation/trigger element (Webflow interaction)\nconst triggerSuccess = () => {\n  const triggerEl = document.querySelector<HTMLElement>(\".success_trigger\");\n  if (triggerEl) triggerEl.click();\n};\n\n// Shape of the registration data returned by the API\ninterface RegistrationData {\n  id: number;\n  subscription_name: string;\n  status: string;\n  subscription_type: string;\n  update_subscription_type: string;\n  user_id: number;\n  contact_id: number;\n  current_finaid_id: number;\n  pending_students: boolean;\n  early_registration: boolean;\n  checkout_session_id: string;\n  last_invoice_id: number | null;\n  last_invoice_is_draft: boolean;\n  stripe_subscription_id: string | null;\n  coupon: string;\n  deposit_amount: number;\n  subscription_subtotal: number;\n  subscription_total: number;\n  subscription_amount_discount: number;\n  created_at: number;\n  cancellation_reason: string;\n  invoice_history: any[];\n  prorate_changes: boolean;\n  charge_proration: string;\n  free_trial_end: number | null;\n}\n\n// Set of field IDs that should display as currency\nconst currencyFields = new Set([\n  \"subtotal\",\n  \"depositPaid\",\n  \"AmountDiscount\",\n  \"subscriptionTotal\",\n  \"dueUponApproval\",\n]);\n\n// Update a field component with given value or hide it\nconst updateField = (\n  component: WFComponent,\n  rawValue: string | number | boolean | null | undefined\n) => {\n  const el = component.getElement() as HTMLElement;\n  // Reset display\n  el.style.display = \"\";\n  // Hide if null, empty, false, or zero-number\n  if (\n    rawValue == null ||\n    rawValue === \"\" ||\n    rawValue === false ||\n    (typeof rawValue === \"number\" && rawValue === 0)\n  ) {\n    el.style.display = \"none\";\n    return;\n  }\n\n  let display: string;\n  if (typeof rawValue === \"boolean\") {\n    display = formatBoolean(rawValue);\n  } else if (typeof rawValue === \"string\") {\n    display = capitalize(rawValue);\n  } else {\n    display = currencyFields.has(el.id)\n      ? formatCurrency(rawValue as number)\n      : rawValue.toString();\n  }\n\n  // Preserve label and bold the value\n  const label = el.textContent?.split(\":\")[0] || \"\";\n  el.innerHTML = `${label}: <strong>${display}</strong>`;\n};\n\n// Main handler for registration success\nexport const handleRegistrationSuccessIndex = async () => {\n  try {\n    const request = apiClient.get<{ data: RegistrationData }>(\n      \"/success_page/registration\"\n    );\n    request.onData((res) => {\n      const data = res.data;\n      const dueUponApproval = data.subscription_total - data.deposit_amount;\n      const aidPercent =\n        data.subscription_subtotal > 0 && data.subscription_amount_discount > 0\n          ? `${Math.round(\n              (data.subscription_amount_discount / data.subscription_subtotal) * 100\n            )}%`\n          : null;\n\n      const isActive = (data.status || \"\").toUpperCase() === \"ACTIVE\";\n\n      // Handle hiding of dueUponApproval element entirely if active\n      const dueEl = document.getElementById(\"dueUponApproval\");\n      if (dueEl) {\n        dueEl.style.display = isActive ? \"none\" : \"\";\n      }\n\n      // Map xatom components to their data keys\n      const fields: Array<{ id: string; value: any }> = [\n        { id: \"status\", value: data.status },\n        { id: \"billingCycle\", value: data.subscription_type },\n        { id: \"pendingStudents\", value: data.pending_students },\n        { id: \"financialAidRequested\", value: data.current_finaid_id > 0 },\n        { id: \"financialAidApplied\", value: aidPercent },\n        { id: \"subtotal\", value: data.subscription_subtotal },\n        { id: \"depositPaid\", value: data.deposit_amount },\n        { id: \"AmountDiscount\", value: data.subscription_amount_discount },\n        { id: \"subscriptionTotal\", value: data.subscription_total },\n        { id: \"dueUponApproval\", value: dueUponApproval },\n      ];\n\n      fields.forEach(({ id, value }) => {\n        // Skip updating dueUponApproval if it's hidden\n        if (id === \"dueUponApproval\" && isActive) return;\n        const el = document.getElementById(id);\n        if (!el) return;\n        updateField(new WFComponent(el), value);\n      });\n\n      // After populating all fields, trigger Webflow interaction\n      triggerSuccess();\n    });\n    request.onError((err) => console.error(\"API Error:\", err));\n    request.fetch();\n  } catch (err) {\n    console.error(\"Error loading registration success data:\", err);\n  }\n};\n\n// Initialize on DOM ready\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  handleRegistrationSuccessIndex();\n});\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","export","handleRegistrationSuccessIndex","_core","_apiConfig","capitalize","str","charAt","toUpperCase","slice","formatBoolean","val","toString","formatCurrency","Intl","NumberFormat","style","currency","format","triggerSuccess","triggerEl","document","querySelector","click","currencyFields","Set","updateField","component","rawValue","display","el","getElement","has","label","textContent","split","innerHTML","request","apiClient","onData","data","dueUponApproval","subscription_total","deposit_amount","aidPercent","subscription_subtotal","subscription_amount_discount","Math","round","isActive","status","dueEl","getElementById","fields","value","subscription_type","pending_students","current_finaid_id","forEach","WFComponent","onError","console","error","fetch","addEventListener"],"version":3,"file":"registration_success.8a146413.js.map"}