{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCsEA,EAAA,MAAA,CAAA,EAAA,sBAAA,IAAsB,GAetB,EAAA,MAAA,CAAA,EAAA,+BAAA,IAAsB,GAnFtB,IAAA,EAAA,EAAA,eACA,EAAA,EAAA,gBACA,EAAA,EAAA,0BACA,EAAA,EAAA,iCAiEO,eAAe,EACpB,CAAiB,EAEjB,GAAI,CACF,IAAM,EAAoB,AAAA,CAAA,EAAA,EAAA,SAAS,AAAT,EAAU,GAAG,CACrC,CAAC,gCAAgC,EAAE,EAAU,CAAC,EAGhD,OADiB,MAAM,EAAkB,KAAK,EAEhD,CAAE,MAAO,EAAO,CACd,MAAM,CACR,CACF,CAGO,eAAe,IAEpB,MAAM,AAAA,CAAA,EAAA,EAAA,gCAA+B,AAA/B,EAAiC,cAQvC,GAAM,CAAE,UAAA,CAAS,CAAE,CAHV,CAAE,UADS,AADH,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM,EAChC,GAAG,CAAC,U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","sources":["<anon>","src/modules/dashboard/registration/programDetails.ts","node_modules/.pnpm/@xatom+image@1.0.0_@xatom+core@1.0.12/node_modules/@xatom/image/dist/index.js","src/modules/dashboard/registration/components/listProgramFiles.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"fLRRN\":[function(require,module,exports) {\n// src/pages/programDetails.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n// Function to fetch program details and subscriptions from the API\nparcelHelpers.export(exports, \"fetchProgramDetails\", ()=>fetchProgramDetails);\n// Function to initialize and render the program details and subscriptions\nparcelHelpers.export(exports, \"initializeProgramDetailsPage\", ()=>initializeProgramDetailsPage);\nvar _core = require(\"@xatom/core\");\nvar _image = require(\"@xatom/image\");\nvar _apiConfig = require(\"../../../api/apiConfig\");\nvar _listProgramFiles = require(\"./components/listProgramFiles\");\nasync function fetchProgramDetails(programId) {\n    try {\n        const getProgramDetails = (0, _apiConfig.apiClient).get(`/dashboard/registration/program/${programId}`);\n        const response = await getProgramDetails.fetch();\n        return response;\n    } catch (error) {\n        throw error;\n    }\n}\nasync function initializeProgramDetailsPage() {\n    // Initialize the dynamic program files list\n    await (0, _listProgramFiles.initializeDynamicProgramFileList)(\"#filesList\");\n    // Utility function to parse URL parameters\n    const getUrlParams = ()=>{\n        const params = new URLSearchParams(window.location.search);\n        const programId = params.get(\"program\");\n        return {\n            programId\n        };\n    };\n    const { programId } = getUrlParams();\n    if (!programId) {\n        displayError(\"Invalid access. Program ID is missing.\");\n        return;\n    }\n    try {\n        // Fetch program details and subscriptions\n        const apiResponse = await fetchProgramDetails(programId);\n        const { subscriptions, program } = apiResponse;\n        // Update program details on the page\n        updateProgramDetails(program);\n        // Initialize and render the subscriptions list using fetched data\n        await initializeDynamicSubscriptionList(\"#listRegistration\", subscriptions, program);\n        // Trigger the success_trigger element\n        triggerSuccessEvent(\".success_trigger\");\n    } catch (error) {\n        displayError(\"An error occurred while loading the program details.\");\n    }\n}\n// Function to update program details on the page\nfunction updateProgramDetails(program) {\n    // Update Program Image\n    const programImageElement = document.getElementById(\"programImage\");\n    if (programImageElement) {\n        const programImage = new (0, _image.WFImage)(programImageElement);\n        if (program.response.result.fieldData[\"main-image\"].url) {\n            programImage.setImage(program.response.result.fieldData[\"main-image\"].url);\n            const imgElement = programImage.getElement();\n            imgElement.alt = program.response.result.fieldData[\"main-image\"].alt || \"Program Image\";\n        } else {\n            programImage.setImage(\"https://cdn.prod.website-files.com/plugins/Basic/assets/placeholder.60f9b1840c.svg\");\n            const imgElement = programImage.getElement();\n            imgElement.alt = \"Program Image\";\n        }\n    }\n    // Update Program Name\n    const programNameElement = document.getElementById(\"programName\");\n    if (programNameElement) {\n        const programName = new (0, _core.WFComponent)(programNameElement);\n        programName.setText(program.response.result.fieldData.name);\n    }\n    // Update program breadcrumb\n    const programBreadcrumbElement = document.getElementById(\"programBreadcrumb\");\n    if (programBreadcrumbElement) {\n        const programBreadcrumb = new (0, _core.WFComponent)(programBreadcrumbElement);\n        programBreadcrumb.setText(program.response.result.fieldData.name);\n    }\n    // Update Program Subheading\n    const programSubheadingElement = document.getElementById(\"programSubheading\");\n    if (programSubheadingElement) {\n        const programSubheading = new (0, _core.WFComponent)(programSubheadingElement);\n        programSubheading.setText(program.response.result.fieldData.subheading);\n    }\n    // Update Program Short Description\n    const programShortDescriptionElement = document.getElementById(\"programShortDescription\");\n    if (programShortDescriptionElement) {\n        const programShortDescription = new (0, _core.WFComponent)(programShortDescriptionElement);\n        programShortDescription.setText(program.response.result.fieldData[\"short-description\"]);\n    }\n}\n// Function to display an error message on the page\nfunction displayError(message) {\n    const errorElement = document.getElementById(\"listRegistrationEmpty\");\n    if (errorElement) {\n        errorElement.innerHTML = `<div>${message}</div>`;\n        errorElement.style.display = \"flex\";\n    }\n}\n// Function to initialize and render the dynamic subscription list\nasync function initializeDynamicSubscriptionList(containerSelector, subscriptions, program) {\n    const list = new (0, _core.WFDynamicList)(containerSelector, {\n        rowSelector: \"#listRegistrationCard\",\n        loaderSelector: \"#listRegistrationloading\",\n        emptySelector: \"#listRegistrationEmpty\"\n    });\n    list.loaderRenderer((loaderElement)=>{\n        loaderElement.setStyle({\n            display: \"flex\"\n        });\n        return loaderElement;\n    });\n    list.emptyRenderer((emptyElement)=>{\n        emptyElement.setStyle({\n            display: \"flex\"\n        });\n        return emptyElement;\n    });\n    list.rowRenderer(({ rowData, rowElement })=>{\n        const registrationCard = new (0, _core.WFComponent)(rowElement);\n        // Set the program image using image_url or fallback to program image\n        const registrationImageComponent = registrationCard.getChildAsComponent(\"#cardRegistrationImage\");\n        if (registrationImageComponent) {\n            const registrationImage = new (0, _image.WFImage)(registrationImageComponent.getElement());\n            if (rowData.image_url) registrationImage.setImage(rowData.image_url);\n            else if (program.response.result.fieldData[\"main-image\"].url) registrationImage.setImage(program.response.result.fieldData[\"main-image\"].url);\n            else registrationImage.setImage(\"https://cdn.prod.website-files.com/66102236c16b61185de61fe3/66102236c16b61185de6204e_placeholder.svg\");\n        }\n        // Set the program name\n        const programNameComponent = registrationCard.getChildAsComponent(\"#cardProgramName\");\n        if (programNameComponent) programNameComponent.setText(rowData.program_name);\n        // Set the workshop name\n        const workshopNameComponent = registrationCard.getChildAsComponent(\"#cardWorkshopName\");\n        if (workshopNameComponent) workshopNameComponent.setText(rowData.workshop_name);\n        // Set the link with subscription and workshop parameters\n        const subscriptionCardElement = registrationCard.getElement();\n        const currentHref = subscriptionCardElement.getAttribute(\"href\") || \"#\";\n        const url = new URL(currentHref, window.location.origin);\n        url.searchParams.set(\"program\", rowData.program_id);\n        url.searchParams.set(\"workshop\", rowData.workshop_id);\n        url.searchParams.set(\"subscription\", rowData.id.toString());\n        subscriptionCardElement.setAttribute(\"href\", url.toString());\n        // Get the #cardActivePill and #cardDepositPill elements\n        const cardActivePill = registrationCard.getChildAsComponent(\"#cardActivePill\");\n        const cardDepositPill = registrationCard.getChildAsComponent(\"#cardDepositPill\");\n        // Hide both pills by default\n        cardActivePill.setStyle({\n            display: \"none\"\n        });\n        cardDepositPill.setStyle({\n            display: \"none\"\n        });\n        // Set display based on the status\n        if (rowData.status === \"Active\") cardActivePill.setStyle({\n            display: \"block\"\n        });\n        else if (rowData.status === \"Deposit Paid\") cardDepositPill.setStyle({\n            display: \"block\"\n        });\n        rowElement.setStyle({\n            display: \"block\"\n        });\n        return rowElement;\n    });\n    try {\n        list.setData(subscriptions);\n    } catch (error) {\n        list.setData([]);\n    }\n}\n// Function to trigger a click on the success_trigger element\nfunction triggerSuccessEvent(selector) {\n    const successTrigger = document.querySelector(selector);\n    if (successTrigger instanceof HTMLElement) successTrigger.click();\n}\n\n},{\"@xatom/core\":\"65YBq\",\"@xatom/image\":\"bavwf\",\"../../../api/apiConfig\":\"dUmIV\",\"./components/listProgramFiles\":\"8e4hp\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"bavwf\":[function(require,module,exports) {\nvar t = require(\"d023971cccd819e3\");\nvar e, r, s, i, o, n, u = {};\ne = u, r = \"WFImage\", s = ()=>c, Object.defineProperty(e, r, {\n    get: s,\n    set: i,\n    enumerable: !0,\n    configurable: !0\n});\nclass c extends t.WFComponent {\n    constructor(t){\n        super(t);\n    }\n    getImageConfig() {\n        return this._config;\n    }\n    getSrc() {\n        return this.getAttribute(\"src\");\n    }\n    getSizes() {\n        return this.getAttribute(\"sizes\");\n    }\n    getSrcSet() {\n        return this.getAttribute(\"srcset\");\n    }\n    getLoading() {\n        return this.getAttribute(\"loading\");\n    }\n    onLoad(t) {\n        return this.on(\"load\", t), ()=>{\n            this.off(\"load\", t);\n        };\n    }\n    onLoadError(t) {\n        return this.on(\"error\", t), ()=>{\n            this.off(\"error\", t);\n        };\n    }\n    setImage(t) {\n        if (\"string\" == typeof t) this.setAttribute(\"src\", t), this.removeAttribute(\"srcset\"), this.removeAttribute(\"sizes\");\n        else {\n            if (this.setAttribute(\"src\", t.src), \"object\" == typeof t && t.srcSet && t.srcSet.length && t.sizes && t.sizes.length) {\n                const e = t.srcSet.map((t)=>`${t.url} ${t.size}`).join(\", \");\n                this.setAttribute(\"srcset\", e);\n            } else this.removeAttribute(\"srcset\"), this.removeAttribute(\"sizes\");\n            t.loading && this.setAttribute(\"loading\", t.loading);\n        }\n    }\n}\no = module.exports, n = u, Object.keys(n).forEach(function(t) {\n    \"default\" === t || \"__esModule\" === t || o.hasOwnProperty(t) || Object.defineProperty(o, t, {\n        enumerable: !0,\n        get: function() {\n            return n[t];\n        }\n    });\n});\n\n},{\"d023971cccd819e3\":\"65YBq\"}],\"8e4hp\":[function(require,module,exports) {\n// src/pages/listStudentFiles.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n// Function to fetch files for a specific student\nparcelHelpers.export(exports, \"fetchProgramFiles\", ()=>fetchProgramFiles);\n// Function to initialize and render the dynamic file list for a student\nparcelHelpers.export(exports, \"initializeDynamicProgramFileList\", ()=>initializeDynamicProgramFileList);\nvar _core = require(\"@xatom/core\");\nvar _apiConfig = require(\"../../../../api/apiConfig\");\n// Function to get the student_id from URL parameters\nfunction getProgramIdFromUrl() {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get(\"program\");\n}\nasync function fetchProgramFiles(programId) {\n    try {\n        const getFiles = (0, _apiConfig.apiClient).get(`/student_files/program/${programId}`);\n        const response = await getFiles.fetch();\n        return response;\n    } catch (error) {\n        console.error(\"Error fetching files for student:\", error);\n        throw error;\n    }\n}\nasync function initializeDynamicProgramFileList(containerSelector) {\n    // Get the student ID from the URL\n    const programId = getProgramIdFromUrl();\n    if (!programId) {\n        console.error(\"No student ID provided in URL\");\n        return;\n    }\n    // Initialize a new instance of WFDynamicList for Files\n    const list = new (0, _core.WFDynamicList)(containerSelector, {\n        rowSelector: \"#fileCard\",\n        loaderSelector: \"#filesloading\",\n        emptySelector: \"#filesEmpty\"\n    });\n    // Customize the rendering of the loader\n    list.loaderRenderer((loaderElement)=>{\n        loaderElement.setStyle({\n            display: \"flex\"\n        });\n        return loaderElement;\n    });\n    // Customize the rendering of the empty state\n    list.emptyRenderer((emptyElement)=>{\n        emptyElement.setStyle({\n            display: \"flex\"\n        });\n        return emptyElement;\n    });\n    // Customize the rendering of list items (File Cards)\n    list.rowRenderer(({ rowData, rowElement })=>{\n        const fileCard = new (0, _core.WFComponent)(rowElement);\n        // Set the fileCard's href to file_url\n        fileCard.setAttribute(\"href\", rowData.file_url);\n        // Set the fileName to file_name\n        const fileName = fileCard.getChildAsComponent(\"#fileName\");\n        fileName.setText(rowData.file_name);\n        // Show the list item\n        rowElement.setStyle({\n            display: \"block\"\n        });\n        return rowElement;\n    });\n    // Load and display file data\n    try {\n        // Enable the loading state\n        list.changeLoadingStatus(true);\n        const files = await fetchProgramFiles(programId);\n        // Sort files alphabetically by file_name\n        files.sort((a, b)=>a.file_name.localeCompare(b.file_name));\n        // Set the data to be displayed in the dynamic list\n        list.setData(files);\n        // Disable the loading state\n        list.changeLoadingStatus(false);\n    } catch (error) {\n        console.error(\"Error loading files:\", error);\n        // If there's an error, set an empty array to trigger the empty state\n        list.setData([]);\n        // Disable the loading state\n        list.changeLoadingStatus(false);\n    }\n}\n\n},{\"@xatom/core\":\"65YBq\",\"../../../../api/apiConfig\":\"dUmIV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}]},[], null, \"parcelRequired346\")\n\n//# sourceMappingURL=programDetails.5a63dcc4.js.map\n","// src/pages/programDetails.ts\n\nimport { WFDynamicList, WFComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../../../api/apiConfig\";\nimport { initializeDynamicProgramFileList } from \"./components/listProgramFiles\";\n\n// Define the Subscription interface based on the API response\ninterface Subscription {\n  id: number;\n  created_at: number; // Unix timestamp in milliseconds\n  status: string; // e.g., 'Active', 'Cancelled', 'Deposit Paid', 'Pending'\n  subscription_type: string; // e.g., 'Annual', 'Monthly'\n  program_name: string;\n  workshop_name: string;\n  coupon?: string | null;\n  deposit_amount: number;\n  start_date: string; // ISO date string\n  next_charge_date?: string | null;\n  stripe_subscription_id?: string | null;\n  user_id: number;\n  program_id: string;\n  workshop_id: string;\n  sale_id: number;\n  image_url: string;\n}\n\n// Define the Program interface based on the API response\ninterface Program {\n  request: {\n    url: string;\n    method: string;\n    headers: string[];\n    params: any[];\n  };\n  response: {\n    headers: string[];\n    result: {\n      id: string;\n      cmsLocaleId: string;\n      lastPublished: string;\n      lastUpdated: string;\n      createdOn: string;\n      isArchived: boolean;\n      isDraft: boolean;\n      fieldData: {\n        subheading: string;\n        \"short-description\": string;\n        \"age-range\": string;\n        name: string;\n        slug: string;\n        \"parent-program\": string;\n        \"main-image\": {\n          fileId: string;\n          url: string;\n          alt: string | null;\n        };\n      };\n    };\n    status: number;\n  };\n}\n\n// Define the structure of the API response\ninterface ProgramApiResponse {\n  subscriptions: Subscription[];\n  program: Program;\n}\n\n// Function to fetch program details and subscriptions from the API\nexport async function fetchProgramDetails(\n  programId: string\n): Promise<ProgramApiResponse> {\n  try {\n    const getProgramDetails = apiClient.get<ProgramApiResponse>(\n      `/dashboard/registration/program/${programId}`\n    );\n    const response = await getProgramDetails.fetch();\n    return response;\n  } catch (error) {\n    throw error;\n  }\n}\n\n// Function to initialize and render the program details and subscriptions\nexport async function initializeProgramDetailsPage() {\n  // Initialize the dynamic program files list\n  await initializeDynamicProgramFileList(\"#filesList\");\n  // Utility function to parse URL parameters\n  const getUrlParams = () => {\n    const params = new URLSearchParams(window.location.search);\n    const programId = params.get(\"program\");\n    return { programId };\n  };\n\n  const { programId } = getUrlParams();\n\n  if (!programId) {\n    displayError(\"Invalid access. Program ID is missing.\");\n    return;\n  }\n\n  try {\n    // Fetch program details and subscriptions\n    const apiResponse = await fetchProgramDetails(programId);\n    const { subscriptions, program } = apiResponse;\n\n    // Update program details on the page\n    updateProgramDetails(program);\n\n    // Initialize and render the subscriptions list using fetched data\n    await initializeDynamicSubscriptionList(\n      \"#listRegistration\",\n      subscriptions,\n      program\n    );\n\n    // Trigger the success_trigger element\n    triggerSuccessEvent(\".success_trigger\");\n  } catch (error) {\n    displayError(\"An error occurred while loading the program details.\");\n  }\n}\n\n// Function to update program details on the page\nfunction updateProgramDetails(program: Program) {\n  // Update Program Image\n  const programImageElement = document.getElementById(\"programImage\");\n  if (programImageElement) {\n    const programImage = new WFImage(programImageElement);\n    if (program.response.result.fieldData[\"main-image\"].url) {\n      programImage.setImage(\n        program.response.result.fieldData[\"main-image\"].url\n      );\n      const imgElement = programImage.getElement() as HTMLImageElement;\n      imgElement.alt =\n        program.response.result.fieldData[\"main-image\"].alt || \"Program Image\";\n    } else {\n      programImage.setImage(\n        \"https://cdn.prod.website-files.com/plugins/Basic/assets/placeholder.60f9b1840c.svg\"\n      );\n      const imgElement = programImage.getElement() as HTMLImageElement;\n      imgElement.alt = \"Program Image\";\n    }\n  }\n\n  // Update Program Name\n  const programNameElement = document.getElementById(\"programName\");\n  if (programNameElement) {\n    const programName = new WFComponent(programNameElement);\n    programName.setText(program.response.result.fieldData.name);\n  }\n\n  // Update program breadcrumb\n  const programBreadcrumbElement = document.getElementById(\"programBreadcrumb\");\n  if (programBreadcrumbElement) {\n    const programBreadcrumb = new WFComponent(programBreadcrumbElement);\n    programBreadcrumb.setText(program.response.result.fieldData.name);\n  }\n\n  // Update Program Subheading\n  const programSubheadingElement = document.getElementById(\"programSubheading\");\n  if (programSubheadingElement) {\n    const programSubheading = new WFComponent(programSubheadingElement);\n    programSubheading.setText(program.response.result.fieldData.subheading);\n  }\n\n  // Update Program Short Description\n  const programShortDescriptionElement = document.getElementById(\n    \"programShortDescription\"\n  );\n  if (programShortDescriptionElement) {\n    const programShortDescription = new WFComponent(\n      programShortDescriptionElement\n    );\n    programShortDescription.setText(\n      program.response.result.fieldData[\"short-description\"]\n    );\n  }\n}\n\n// Function to display an error message on the page\nfunction displayError(message: string) {\n  const errorElement = document.getElementById(\"listRegistrationEmpty\");\n  if (errorElement) {\n    errorElement.innerHTML = `<div>${message}</div>`;\n    errorElement.style.display = \"flex\";\n  }\n}\n\n// Function to initialize and render the dynamic subscription list\nasync function initializeDynamicSubscriptionList(\n  containerSelector: string,\n  subscriptions: Subscription[],\n  program: Program\n) {\n  const list = new WFDynamicList<Subscription>(containerSelector, {\n    rowSelector: \"#listRegistrationCard\",\n    loaderSelector: \"#listRegistrationloading\",\n    emptySelector: \"#listRegistrationEmpty\",\n  });\n\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({\n      display: \"flex\",\n    });\n    return loaderElement;\n  });\n\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({\n      display: \"flex\",\n    });\n    return emptyElement;\n  });\n\n  list.rowRenderer(({ rowData, rowElement }) => {\n    const registrationCard = new WFComponent(rowElement);\n\n    // Set the program image using image_url or fallback to program image\n    const registrationImageComponent =\n      registrationCard.getChildAsComponent<HTMLImageElement>(\n        \"#cardRegistrationImage\"\n      );\n    if (registrationImageComponent) {\n      const registrationImage = new WFImage(\n        registrationImageComponent.getElement()\n      );\n\n      if (rowData.image_url) {\n        registrationImage.setImage(rowData.image_url);\n      } else if (program.response.result.fieldData[\"main-image\"].url) {\n        registrationImage.setImage(\n          program.response.result.fieldData[\"main-image\"].url\n        );\n      } else {\n        registrationImage.setImage(\n          \"https://cdn.prod.website-files.com/66102236c16b61185de61fe3/66102236c16b61185de6204e_placeholder.svg\"\n        );\n      }\n    }\n\n    // Set the program name\n    const programNameComponent =\n      registrationCard.getChildAsComponent(\"#cardProgramName\");\n    if (programNameComponent) {\n      programNameComponent.setText(rowData.program_name);\n    }\n\n    // Set the workshop name\n    const workshopNameComponent =\n      registrationCard.getChildAsComponent(\"#cardWorkshopName\");\n    if (workshopNameComponent) {\n      workshopNameComponent.setText(rowData.workshop_name);\n    }\n\n    // Set the link with subscription and workshop parameters\n    const subscriptionCardElement =\n      registrationCard.getElement() as HTMLAnchorElement;\n    const currentHref = subscriptionCardElement.getAttribute(\"href\") || \"#\";\n\n    const url = new URL(currentHref, window.location.origin);\n    url.searchParams.set(\"program\", rowData.program_id);\n    url.searchParams.set(\"workshop\", rowData.workshop_id);\n    url.searchParams.set(\"subscription\", rowData.id.toString());\n\n    subscriptionCardElement.setAttribute(\"href\", url.toString());\n\n    // Get the #cardActivePill and #cardDepositPill elements\n    const cardActivePill =\n      registrationCard.getChildAsComponent(\"#cardActivePill\");\n    const cardDepositPill =\n      registrationCard.getChildAsComponent(\"#cardDepositPill\");\n\n    // Hide both pills by default\n    cardActivePill.setStyle({ display: \"none\" });\n    cardDepositPill.setStyle({ display: \"none\" });\n\n    // Set display based on the status\n    if (rowData.status === \"Active\") {\n      cardActivePill.setStyle({ display: \"block\" });\n    } else if (rowData.status === \"Deposit Paid\") {\n      cardDepositPill.setStyle({ display: \"block\" });\n    }\n\n    rowElement.setStyle({\n      display: \"block\",\n    });\n\n    return rowElement;\n  });\n\n  try {\n    list.setData(subscriptions);\n  } catch (error) {\n    list.setData([]);\n  }\n}\n\n// Function to trigger a click on the success_trigger element\nfunction triggerSuccessEvent(selector: string) {\n  const successTrigger = document.querySelector(selector);\n  if (successTrigger instanceof HTMLElement) {\n    successTrigger.click();\n  }\n}\n","var t=require(\"@xatom/core\");var e,r,s,i,o,n,u={};e=u,r=\"WFImage\",s=()=>c,Object.defineProperty(e,r,{get:s,set:i,enumerable:!0,configurable:!0});class c extends t.WFComponent{constructor(t){super(t)}getImageConfig(){return this._config}getSrc(){return this.getAttribute(\"src\")}getSizes(){return this.getAttribute(\"sizes\")}getSrcSet(){return this.getAttribute(\"srcset\")}getLoading(){return this.getAttribute(\"loading\")}onLoad(t){return this.on(\"load\",t),()=>{this.off(\"load\",t)}}onLoadError(t){return this.on(\"error\",t),()=>{this.off(\"error\",t)}}setImage(t){if(\"string\"==typeof t)this.setAttribute(\"src\",t),this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");else{if(this.setAttribute(\"src\",t.src),\"object\"==typeof t&&t.srcSet&&t.srcSet.length&&t.sizes&&t.sizes.length){const e=t.srcSet.map((t=>`${t.url} ${t.size}`)).join(\", \");this.setAttribute(\"srcset\",e)}else this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");t.loading&&this.setAttribute(\"loading\",t.loading)}}}o=module.exports,n=u,Object.keys(n).forEach((function(t){\"default\"===t||\"__esModule\"===t||o.hasOwnProperty(t)||Object.defineProperty(o,t,{enumerable:!0,get:function(){return n[t]}})}));","// src/pages/listStudentFiles.ts\n\nimport { WFDynamicList, WFComponent } from \"@xatom/core\";\nimport { apiClient } from \"../../../../api/apiConfig\";\n\n// Define the FileItem interface based on the API response\ninterface FileItem {\n  id: number;\n  file_name: string;\n  file_url: string;\n  program_id?: string | null;\n  workshop_id?: string | null;\n  session_id?: string | null;\n  user_id: number;\n  created_at: number;\n}\n\n// Function to get the student_id from URL parameters\nfunction getProgramIdFromUrl(): string | null {\n  const urlParams = new URLSearchParams(window.location.search);\n  return urlParams.get(\"program\");\n}\n\n// Function to fetch files for a specific student\nexport async function fetchProgramFiles(\n  programId: string\n): Promise<FileItem[]> {\n  try {\n    const getFiles = apiClient.get<FileItem[]>(\n      `/student_files/program/${programId}`\n    );\n    const response = await getFiles.fetch();\n    return response;\n  } catch (error) {\n    console.error(\"Error fetching files for student:\", error);\n    throw error;\n  }\n}\n\n// Function to initialize and render the dynamic file list for a student\nexport async function initializeDynamicProgramFileList(\n  containerSelector: string\n) {\n  // Get the student ID from the URL\n  const programId = getProgramIdFromUrl();\n  if (!programId) {\n    console.error(\"No student ID provided in URL\");\n    return;\n  }\n\n  // Initialize a new instance of WFDynamicList for Files\n  const list = new WFDynamicList<FileItem>(containerSelector, {\n    rowSelector: \"#fileCard\", // Using ID selector for template\n    loaderSelector: \"#filesloading\", // Selector for the loader\n    emptySelector: \"#filesEmpty\", // Selector for the empty state\n  });\n\n  // Customize the rendering of the loader\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({\n      display: \"flex\",\n    });\n    return loaderElement;\n  });\n\n  // Customize the rendering of the empty state\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({\n      display: \"flex\",\n    });\n    return emptyElement;\n  });\n\n  // Customize the rendering of list items (File Cards)\n  list.rowRenderer(({ rowData, rowElement }) => {\n    const fileCard = new WFComponent(rowElement);\n\n    // Set the fileCard's href to file_url\n    fileCard.setAttribute(\"href\", rowData.file_url);\n\n    // Set the fileName to file_name\n    const fileName = fileCard.getChildAsComponent(\"#fileName\");\n    fileName.setText(rowData.file_name);\n\n    // Show the list item\n    rowElement.setStyle({\n      display: \"block\",\n    });\n\n    return rowElement;\n  });\n\n  // Load and display file data\n  try {\n    // Enable the loading state\n    list.changeLoadingStatus(true);\n\n    const files = await fetchProgramFiles(programId);\n\n    // Sort files alphabetically by file_name\n    files.sort((a, b) => a.file_name.localeCompare(b.file_name));\n\n    // Set the data to be displayed in the dynamic list\n    list.setData(files);\n\n    // Disable the loading state\n    list.changeLoadingStatus(false);\n  } catch (error) {\n    console.error(\"Error loading files:\", error);\n\n    // If there's an error, set an empty array to trigger the empty state\n    list.setData([]);\n\n    // Disable the loading state\n    list.changeLoadingStatus(false);\n  }\n}\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","export","fetchProgramDetails","initializeProgramDetailsPage","_core","_image","_apiConfig","_listProgramFiles","programId","getProgramDetails","apiClient","fetch","error","initializeDynamicProgramFileList","params","URLSearchParams","location","search","displayError","subscriptions","program","updateProgramDetails","programImageElement","document","getElementById","programImage","WFImage","response","result","fieldData","url","setImage","imgElement","getElement","alt","programNameElement","programName","WFComponent","setText","programBreadcrumbElement","programBreadcrumb","programSubheadingElement","programSubheading","subheading","programShortDescriptionElement","programShortDescription","initializeDynamicSubscriptionList","triggerSuccessEvent","selector","successTrigger","querySelector","HTMLElement","click","message","errorElement","innerHTML","style","display","containerSelector","list","WFDynamicList","rowSelector","loaderSelector","emptySelector","loaderRenderer","loaderElement","setStyle","emptyRenderer","emptyElement","rowRenderer","rowData","rowElement","registrationCard","registrationImageComponent","getChildAsComponent","registrationImage","image_url","programNameComponent","program_name","workshopNameComponent","workshop_name","subscriptionCardElement","URL","getAttribute","origin","searchParams","set","program_id","workshop_id","toString","setAttribute","cardActivePill","cardDepositPill","status","setData","o","t","u","c","enumerable","configurable","constructor","getImageConfig","_config","getSrc","getSizes","getSrcSet","getLoading","onLoad","on","off","onLoadError","removeAttribute","src","srcSet","sizes","e","map","size","join","loading","keys","forEach","hasOwnProperty","n","fetchProgramFiles","getFiles","console","urlParams","fileCard","file_url","fileName","file_name","changeLoadingStatus","files","sort","a","b","localeCompare"],"version":3,"file":"programDetails.5a63dcc4.js.map"}