{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GC8Ba,EAAA,MAAA,CAAA,EAAA,sBAAA,IAAA,GA7Bb,IAAA,EAAA,EAAA,iBACA,EAAA,EAAA,kBACA,EAAA,EAAA,kBAIA,EAAA,EAAA,qBACA,EAAA,EAAA,2BACA,EAAA,EAAA,4BACA,EAAA,EAAA,eACA,EAAA,EAAA,iBACA,EAAA,EAAA,kCAQA,EAAA,EAAA,8BACA,EAAA,EAAA,kCACA,EAAA,EAAA,6BACA,EAAA,EAAA,uBAOO,IAAM,EAAsB,UAEjC,OAAO,MAAM,CAAG,WAEd,aAAa,UAAU,CAAC,oBAC1B,EAEA,AAAA,CAAA,EAAA,EAAA,2BAA0B,AAA1B,IACA,AAAA,CAAA,EAAA,EAAA,aAAa,AAAb,EAAc,GACd,MAAM,AAAA,CAAA,EAAA,EAAA,qBAAoB,AAApB,IACN,MAAM,AAAA,CAAA,EAAA,EAAA,gBAAe,AAAf,IAGN,IAAM,EAAS,IAAI,EA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","sources":["<anon>","src/modules/registration/programRegistration.ts","src/modules/registration/programList.ts","src/api/programs.ts","src/modules/registration/state/selectedProgram.ts","src/modules/registration/workshopList.ts","src/api/workshops.ts","src/modules/registration/state/selectedWorkshop.ts","src/modules/registration/sessionsList.ts","src/api/sessions.ts","src/modules/registration/utils/updateUi.ts","src/api/students.ts","src/modules/registration/state/registrationState.ts","src/modules/registration/state/selectedSessions.ts","src/modules/registration/checkoutPreview.ts","src/modules/registration/components/alertBox.ts","src/modules/registration/components/primaryPaymentRadios.ts","src/modules/registration/components/lineItems.ts","src/modules/registration/components/updateTotalAmount.ts","src/modules/registration/utils/formatting.ts","src/modules/registration/components/updateSecondaryTotalAmount.ts","src/modules/registration/components/alertBoxEarly.ts","src/modules/registration/components/financialAid.ts","src/utils/formUtils.ts","node_modules/.pnpm/@xatom+image@1.0.0_@xatom+core@1.0.12/node_modules/@xatom/image/dist/index.js","src/utils/validationUtils.ts","node_modules/.pnpm/@xatom+slider@1.0.0_@xatom+core@1.0.12/node_modules/@xatom/slider/dist/index.js","src/modules/registration/components/sidebarIndicators.ts","src/modules/registration/components/dialogHandler.ts","src/modules/registration/components/urlParamNavigator.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"QiELz\":[function(require,module,exports) {\n// programRegistration.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"programRegistration\", ()=>programRegistration);\nvar _programList = require(\"./programList\");\nvar _workshopList = require(\"./workshopList\");\nvar _sessionsList = require(\"./sessionsList\");\nvar _checkoutPreview = require(\"./checkoutPreview\");\nvar _selectedProgram = require(\"./state/selectedProgram\");\nvar _selectedWorkshop = require(\"./state/selectedWorkshop\");\nvar _core = require(\"@xatom/core\");\nvar _slider = require(\"@xatom/slider\");\nvar _sidebarIndicators = require(\"./components/sidebarIndicators\");\nvar _dialogHandler = require(\"./components/dialogHandler\");\nvar _urlParamNavigator = require(\"./components/urlParamNavigator\");\nvar _registrationState = require(\"./state/registrationState\"); // Import the registration state\nvar _apiConfig = require(\"../../api/apiConfig\"); // Import API client for submission\nconst programRegistration = async ()=>{\n    // Clear local storage\n    window.onload = function() {\n        // Clear the value of registrationState from local storage\n        localStorage.removeItem(\"registrationState\");\n    };\n    // Initialize the first step of the registration form (Program Selection)\n    (0, _sidebarIndicators.initializeSidebarIndicators)();\n    (0, _sidebarIndicators.setActiveStep)(1);\n    await (0, _programList.initializeProgramList)();\n    await (0, _dialogHandler.checkForStudents)();\n    // Initialize the slider component\n    const slider = new (0, _slider.WFSlider)(\".multi-step_form_slider\");\n    setupNavigationHandlers(slider);\n    await (0, _urlParamNavigator.initializeStateFromUrlParams)(slider);\n};\n// Setup event listeners for navigation buttons using the slider\nconst setupNavigationHandlers = (slider)=>{\n    const submitStepOne = new (0, _core.WFComponent)(\"#submitStepOne\");\n    const submitStepOneError = new (0, _core.WFComponent)(\"#submitStepOneError\");\n    const stepOneRequestingAnimation = new (0, _core.WFComponent)(\"#stepOneRequestingAnimation\");\n    submitStepOne.on(\"click\", async (event)=>{\n        event.preventDefault(); // Prevent default form submission behavior\n        // Validate the selected program\n        const selectedProgram = (0, _selectedProgram.loadSelectedProgram)();\n        if (!selectedProgram.id) {\n            submitStepOneError.setText(\"Please select a program before proceeding.\");\n            submitStepOneError.setStyle({\n                display: \"block\"\n            });\n            return;\n        }\n        // Hide the error message if any\n        submitStepOneError.setStyle({\n            display: \"none\"\n        });\n        // Show the loading animation\n        stepOneRequestingAnimation.setStyle({\n            display: \"block\"\n        });\n        try {\n            // Proceed to the next step: Workshop Selection\n            await (0, _workshopList.initializeWorkshopList)(selectedProgram.id);\n            // Check if the workshop list is empty or not\n            const workshopListContainer = document.querySelector(\"#selectWorkshopList\");\n            const workshopItems = workshopListContainer?.querySelectorAll(\"#cardSelectWorkshop\") || [];\n            const isWorkshopListEmpty = workshopItems.length === 0;\n            if (isWorkshopListEmpty) {\n                // No workshops available, skip to Step 3\n                (0, _selectedWorkshop.resetSelectedWorkshop)();\n                // Initialize the session list with undefined workshopId\n                await (0, _sessionsList.initializeSessionList)(undefined, selectedProgram.id);\n                // Move to Step 3\n                slider.goNext(); // From Step 1 to Step 2\n                (0, _sidebarIndicators.markStepAsCompleted)(1);\n                (0, _sidebarIndicators.setActiveStep)(2);\n                slider.goNext(); // From Step 2 to Step 3\n                (0, _sidebarIndicators.markStepAsCompleted)(2);\n                (0, _sidebarIndicators.setActiveStep)(3);\n            } else {\n                // Workshops are available, proceed to Step 2 as usual\n                slider.goNext();\n                (0, _sidebarIndicators.markStepAsCompleted)(1);\n                (0, _sidebarIndicators.setActiveStep)(2);\n                (0, _selectedWorkshop.resetSelectedWorkshop)();\n            }\n        } catch (error) {\n            console.error(\"Error loading workshops:\", error);\n        } finally{\n            // Hide the loading animation\n            stepOneRequestingAnimation.setStyle({\n                display: \"none\"\n            });\n        }\n    });\n    const backStepTwo = new (0, _core.WFComponent)(\"#backStepTwo\");\n    backStepTwo.on(\"click\", ()=>{\n        // Move back to the first step\n        slider.goPrevious();\n        (0, _sidebarIndicators.unmarkStepAsCompleted)(1);\n        (0, _sidebarIndicators.unsetActiveStep)(2);\n        (0, _selectedWorkshop.resetSelectedWorkshop)();\n    });\n    const submitStepTwo = new (0, _core.WFComponent)(\"#submitStepTwo\");\n    const stepTwoRequestingAnimation = new (0, _core.WFComponent)(\"#stepTwoRequestingAnimation\");\n    const submitStepTwoError = new (0, _core.WFComponent)(\"#submitStepTwoError\");\n    submitStepTwo.on(\"click\", async (event)=>{\n        event.preventDefault();\n        // Get the selected workshop and program from the state\n        const selectedWorkshop = (0, _selectedWorkshop.loadSelectedWorkshop)();\n        const selectedProgram = (0, _selectedProgram.loadSelectedProgram)();\n        // Check if the workshop list is empty or not\n        const workshopListContainer = document.querySelector(\"#selectWorkshopList\");\n        const workshopItems = workshopListContainer?.querySelectorAll(\"#cardSelectWorkshop\") || [];\n        const isWorkshopListEmpty = workshopItems.length === 0;\n        if (!isWorkshopListEmpty && !selectedWorkshop.id) {\n            submitStepTwoError.setText(\"Please select a workshop before proceeding.\");\n            submitStepTwoError.setStyle({\n                display: \"block\"\n            });\n            return;\n        }\n        // Hide the error message if any\n        submitStepTwoError.setStyle({\n            display: \"none\"\n        });\n        // Show the loading animation\n        stepTwoRequestingAnimation.setStyle({\n            display: \"block\"\n        });\n        try {\n            // Initialize the session list\n            await (0, _sessionsList.initializeSessionList)(selectedWorkshop.id, selectedProgram.id);\n            // Move to the next slide\n            slider.goNext();\n            (0, _sidebarIndicators.markStepAsCompleted)(2);\n            (0, _sidebarIndicators.setActiveStep)(3);\n        } catch (error) {\n            console.error(\"Error loading sessions:\", error);\n        } finally{\n            // Hide the loading animation\n            stepTwoRequestingAnimation.setStyle({\n                display: \"none\"\n            });\n        }\n    });\n    const backStepThree = new (0, _core.WFComponent)(\"#backStepThree\");\n    backStepThree.on(\"click\", ()=>{\n        // Move back to the workshop selection step\n        slider.goPrevious();\n        (0, _sidebarIndicators.unmarkStepAsCompleted)(2);\n        (0, _sidebarIndicators.unsetActiveStep)(3);\n    });\n    const submitStepThree = new (0, _core.WFComponent)(\"#submitStepThree\");\n    const stepThreeRequestingAnimation = new (0, _core.WFComponent)(\"#stepThreeRequestingAnimation\");\n    const submitStepThreeError = new (0, _core.WFComponent)(\"#submitStepThreeError\");\n    submitStepThree.on(\"click\", async (event)=>{\n        event.preventDefault();\n        // Show the loading animation\n        stepThreeRequestingAnimation.setStyle({\n            display: \"block\"\n        });\n        try {\n            // Validate and submit sessions\n            const success = await (0, _sessionsList.validateAndSubmitSessions)();\n            if (success) {\n                // Initialize checkout preview and move to the next slide\n                await (0, _checkoutPreview.initializeCheckoutPreview)();\n                slider.goNext();\n                (0, _sidebarIndicators.markStepAsCompleted)(3);\n                (0, _sidebarIndicators.setActiveStep)(4);\n            } else {\n                submitStepThreeError.setText(\"Please select sessions and students before proceeding.\");\n                submitStepThreeError.setStyle({\n                    display: \"block\"\n                });\n            }\n        } catch (error) {\n            console.error(\"Error during session submission:\", error);\n            submitStepThreeError.setText(\"An error occurred. Please try again.\");\n            submitStepThreeError.setStyle({\n                display: \"block\"\n            });\n        } finally{\n            // Hide the loading animation\n            stepThreeRequestingAnimation.setStyle({\n                display: \"none\"\n            });\n        }\n    });\n    const backStepFour = new (0, _core.WFComponent)(\"#backStepFour\");\n    backStepFour.on(\"click\", ()=>{\n        // Move back to the session selection step\n        slider.goPrevious();\n        (0, _sidebarIndicators.unmarkStepAsCompleted)(3);\n        (0, _sidebarIndicators.unsetActiveStep)(4);\n    });\n    const submitStepFour = new (0, _core.WFComponent)(\"#submitStepFour\");\n    const stepFourRequestingAnimation = new (0, _core.WFComponent)(\"#stepFourRequestingAnimation\");\n    const submitStepFourError = new (0, _core.WFComponent)(\"#submitStepFourError\");\n    submitStepFour.on(\"click\", async (event)=>{\n        event.preventDefault();\n        // Show the loading animation\n        stepFourRequestingAnimation.setStyle({\n            display: \"block\"\n        });\n        try {\n            // Load the current registration state\n            const registrationState = (0, _registrationState.loadState)();\n            // Submit the registration state to the /session_registrations/begin_checkout endpoint\n            const response = await (0, _apiConfig.apiClient).post(\"/session_registrations/begin_checkout\", {\n                data: registrationState\n            }).fetch();\n            // Handle the response (e.g., redirect to the payment page or show a success message)\n            console.log(\"Registration checkout response:\", response);\n            // Mark Step 4 as completed\n            (0, _sidebarIndicators.markStepAsCompleted)(4);\n            // Redirect based on the response: prioritize `setup_url` if it exists, otherwise use `checkout_url`\n            if (response.setup_url) window.location.href = response.setup_url;\n            else window.location.href = response.checkout_url;\n        } catch (error) {\n            console.error(\"Error during registration checkout:\", error);\n            submitStepFourError.setText(\"An error occurred during registration checkout. Please try again.\");\n            submitStepFourError.setStyle({\n                display: \"block\"\n            });\n        } finally{\n            // Hide the loading animation\n            stepFourRequestingAnimation.setStyle({\n                display: \"none\"\n            });\n        }\n    });\n};\n\n},{\"./programList\":\"9PvQg\",\"./workshopList\":\"caQhI\",\"./sessionsList\":\"8yBQ3\",\"./checkoutPreview\":\"1avQb\",\"./state/selectedProgram\":\"9SM9a\",\"./state/selectedWorkshop\":\"1ahaO\",\"@xatom/core\":\"65YBq\",\"@xatom/slider\":\"ejxGx\",\"./components/sidebarIndicators\":\"9yhwg\",\"./components/dialogHandler\":\"euoMA\",\"./components/urlParamNavigator\":\"fW1lZ\",\"./state/registrationState\":\"2Pbtv\",\"../../api/apiConfig\":\"dUmIV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"9PvQg\":[function(require,module,exports) {\n// Assuming the code is from a file like src/registration/initializeProgramList.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeProgramList\", ()=>initializeProgramList);\nvar _programs = require(\"../../api/programs\");\nvar _selectedProgram = require(\"./state/selectedProgram\");\nvar _core = require(\"@xatom/core\");\nlet initialTemplateState = null;\nconst initializeProgramList = async ()=>{\n    const containerSelector = \"#selectProgramList\";\n    const container = document.querySelector(containerSelector);\n    if (!container) {\n        console.error(\"Program list container not found\");\n        return;\n    }\n    // Save the initial state of the container template\n    if (!initialTemplateState) initialTemplateState = container.cloneNode(true);\n    else {\n        // Reset container to the initial state\n        container.innerHTML = \"\";\n        container.appendChild(initialTemplateState.cloneNode(true));\n    }\n    const list = new (0, _core.WFDynamicList)(containerSelector, {\n        rowSelector: \"#cardSelectProgram\",\n        loaderSelector: \"#programListLoading\",\n        emptySelector: \"#programListEmpty\"\n    });\n    list.loaderRenderer((loaderElement)=>{\n        loaderElement.setStyle({\n            display: \"flex\"\n        });\n        return loaderElement;\n    });\n    list.emptyRenderer((emptyElement)=>{\n        emptyElement.setStyle({\n            display: \"flex\"\n        });\n        return emptyElement;\n    });\n    try {\n        const programs = await (0, _programs.fetchPrograms)();\n        list.rowRenderer(({ rowData, rowElement, index })=>{\n            const programCard = new (0, _core.WFComponent)(rowElement);\n            const programTitle = programCard.getChildAsComponent(\"#cardProgramTitle\");\n            const programDescription = programCard.getChildAsComponent(\"#cardProgramDescription\");\n            const programAges = programCard.getChildAsComponent(\"#cardProgramAges\");\n            const programImage = programCard.getChildAsComponent(\"#cardProgramImage\");\n            const programInput = programCard.getChildAsComponent(\".input_card_input\");\n            // Generate a unique ID for each radio button\n            const inputId = `programInput-${index}`;\n            programInput.setAttribute(\"id\", inputId);\n            programInput.setAttribute(\"name\", \"program\"); // Group radio buttons\n            programInput.setAttribute(\"value\", rowData.id);\n            // Associate the label with the radio button\n            const programLabel = programCard.getChildAsComponent(\"label\");\n            programLabel.setAttribute(\"for\", inputId);\n            // Updated property access to match the response object\n            programTitle.setText(rowData.fieldData[\"name\"]);\n            programDescription.setText(rowData.fieldData[\"short-description\"]);\n            programAges.setText(rowData.fieldData[\"age-range\"]);\n            programImage.setAttribute(\"src\", rowData.fieldData[\"main-image\"].url);\n            // Get the #registrationTrue element inside the row\n            const registrationTrueElement = programCard.getChildAsComponent(\"#registrationTrue\");\n            // Set display and input disabled state based on the 'registered' property\n            if (rowData.registered === true) {\n                registrationTrueElement.setStyle({\n                    display: \"flex\"\n                });\n                programInput.setAttribute(\"disabled\", \"true\");\n            } else {\n                registrationTrueElement.setStyle({\n                    display: \"none\"\n                });\n                programInput.removeAttribute(\"disabled\");\n            }\n            programInput.on(\"change\", ()=>{\n                (0, _selectedProgram.saveSelectedProgram)({\n                    id: rowData.id,\n                    name: rowData.fieldData[\"name\"],\n                    imageUrl: rowData.fieldData[\"main-image\"].url,\n                    ageRange: rowData.fieldData[\"age-range\"]\n                });\n            });\n            rowElement.setStyle({\n                display: \"flex\"\n            });\n            return rowElement;\n        });\n        list.setData(programs);\n    } catch (error) {\n        console.error(\"Error loading programs:\", error);\n        list.setData([]);\n    }\n};\n\n},{\"../../api/programs\":\"emoCP\",\"./state/selectedProgram\":\"9SM9a\",\"@xatom/core\":\"65YBq\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"emoCP\":[function(require,module,exports) {\n// api/programs.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"fetchPrograms\", ()=>fetchPrograms);\nparcelHelpers.export(exports, \"fetchProgramById\", ()=>fetchProgramById);\nvar _apiConfig = require(\"./apiConfig\");\nconst fetchPrograms = async ()=>{\n    try {\n        const response = await (0, _apiConfig.apiClient).get(\"/registration/programs\").fetch();\n        return response.programs;\n    } catch (error) {\n        console.error(\"Error fetching programs:\", error);\n        throw error;\n    }\n};\nconst fetchProgramById = async (programId)=>{\n    try {\n        const programs = await fetchPrograms();\n        return programs.find((program)=>program.id === programId) || null;\n    } catch (error) {\n        console.error(`Error fetching program with ID ${programId}:`, error);\n        return null;\n    }\n};\n\n},{\"./apiConfig\":\"dUmIV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"9SM9a\":[function(require,module,exports) {\n// state/selectedProgram.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"loadSelectedProgram\", ()=>loadSelectedProgram);\nparcelHelpers.export(exports, \"saveSelectedProgram\", ()=>saveSelectedProgram);\nconst loadSelectedProgram = ()=>{\n    const state = JSON.parse(localStorage.getItem(\"registrationState\") || \"{}\");\n    return {\n        id: state.selectedProgramId || null,\n        name: state.selectedProgramName || null,\n        imageUrl: state.selectedProgramImageUrl || null,\n        ageRange: state.selectedProgramAgeRange || null\n    };\n};\nconst saveSelectedProgram = (program)=>{\n    const state = JSON.parse(localStorage.getItem(\"registrationState\") || \"{}\");\n    state.selectedProgramId = program.id;\n    state.selectedProgramName = program.name;\n    state.selectedProgramImageUrl = program.imageUrl;\n    state.selectedProgramAgeRange = program.ageRange;\n    console.log(\"Saving selected program to state:\", state); // Debug log\n    localStorage.setItem(\"registrationState\", JSON.stringify(state));\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"caQhI\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeWorkshopList\", ()=>initializeWorkshopList);\nvar _workshops = require(\"../../api/workshops\");\nvar _selectedWorkshop = require(\"./state/selectedWorkshop\");\nvar _core = require(\"@xatom/core\");\nlet initialTemplateState = null;\nconst initializeWorkshopList = async (programId)=>{\n    const containerSelector = \"#selectWorkshopList\";\n    const container = document.querySelector(containerSelector);\n    if (!container) {\n        console.error(\"Workshop list container not found\");\n        return;\n    }\n    if (!initialTemplateState) initialTemplateState = container.cloneNode(true);\n    else {\n        container.innerHTML = \"\";\n        container.appendChild(initialTemplateState.cloneNode(true));\n    }\n    const list = new (0, _core.WFDynamicList)(containerSelector, {\n        rowSelector: \"#cardSelectWorkshop\",\n        loaderSelector: \"#workshopListLoading\",\n        emptySelector: \"#workshopListEmpty\"\n    });\n    list.loaderRenderer((loaderElement)=>{\n        loaderElement.setStyle({\n            display: \"flex\"\n        });\n        return loaderElement;\n    });\n    list.emptyRenderer((emptyElement)=>{\n        emptyElement.setStyle({\n            display: \"flex\"\n        });\n        return emptyElement;\n    });\n    try {\n        const workshops = await (0, _workshops.fetchWorkshops)(programId);\n        // Ensure workshops is always an array and sort it alphabetically by name\n        const workshopArray = (Array.isArray(workshops) ? workshops : []).sort((a, b)=>a.fieldData.name.localeCompare(b.fieldData.name));\n        list.rowRenderer(({ rowData, rowElement, index })=>{\n            const workshopCard = new (0, _core.WFComponent)(rowElement);\n            const workshopTitle = workshopCard.getChildAsComponent(\"#cardWorkshopTitle\");\n            const workshopDescription = workshopCard.getChildAsComponent(\"#cardWorkshopDescription\");\n            const workshopAges = workshopCard.getChildAsComponent(\"#cardWorkshopAges\");\n            const workshopImage = workshopCard.getChildAsComponent(\"#cardWorkshopImage\");\n            const workshopInput = workshopCard.getChildAsComponent(\".input_card_input\");\n            const inputId = `workshopInput-${index}`;\n            workshopInput.setAttribute(\"id\", inputId);\n            workshopInput.setAttribute(\"name\", \"workshop\");\n            workshopInput.setAttribute(\"value\", rowData.id);\n            const workshopLabel = workshopCard.getChildAsComponent(\"label\");\n            workshopLabel.setAttribute(\"for\", inputId);\n            // Updated property access to match the response object\n            workshopTitle.setText(rowData.fieldData[\"name\"]);\n            workshopDescription.setText(rowData.fieldData[\"short-description\"]);\n            workshopAges.setText(rowData.fieldData[\"age-range\"]);\n            workshopImage.setAttribute(\"src\", rowData.fieldData[\"main-image\"].url);\n            // Get the #registrationTrue element inside the row\n            const registrationTrueElement = workshopCard.getChildAsComponent(\"#registrationTrue\");\n            // Set display and input disabled state based on the 'registered' property\n            if (rowData.registered === true) {\n                registrationTrueElement.setStyle({\n                    display: \"flex\"\n                });\n                workshopInput.setAttribute(\"disabled\", \"true\");\n            } else {\n                registrationTrueElement.setStyle({\n                    display: \"none\"\n                });\n                workshopInput.removeAttribute(\"disabled\");\n            }\n            workshopInput.on(\"change\", ()=>{\n                (0, _selectedWorkshop.saveSelectedWorkshop)({\n                    id: rowData.id,\n                    name: rowData.fieldData[\"name\"],\n                    imageUrl: rowData.fieldData[\"main-image\"].url,\n                    ageRange: rowData.fieldData[\"age-range\"]\n                });\n            });\n            rowElement.setStyle({\n                display: \"flex\"\n            });\n            return rowElement;\n        });\n        list.setData(workshopArray);\n    } catch (error) {\n        console.error(\"Error loading workshops:\", error);\n        list.setData([]); // Handle case where no workshops are available or an error occurred\n    }\n};\n\n},{\"../../api/workshops\":\"6oDbq\",\"./state/selectedWorkshop\":\"1ahaO\",\"@xatom/core\":\"65YBq\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"6oDbq\":[function(require,module,exports) {\n// api/workshops.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"fetchWorkshops\", ()=>fetchWorkshops);\nparcelHelpers.export(exports, \"fetchWorkshopById\", ()=>fetchWorkshopById);\nvar _apiConfig = require(\"./apiConfig\");\nconst fetchWorkshops = async (programId)=>{\n    try {\n        const response = await (0, _apiConfig.apiClient).get(`/registration/workshops?program_id=${programId}`).fetch();\n        return response.workshops;\n    } catch (error) {\n        console.error(\"Error fetching workshops:\", error);\n        throw error;\n    }\n};\nconst fetchWorkshopById = async (workshopId)=>{\n    try {\n        // Assuming there's a similar endpoint to fetch a single workshop by ID\n        const response = await (0, _apiConfig.apiClient).get(`/registration/workshops/${workshopId}`).fetch();\n        return response.workshop || null;\n    } catch (error) {\n        console.error(`Error fetching workshop with ID ${workshopId}:`, error);\n        return null;\n    }\n};\n\n},{\"./apiConfig\":\"dUmIV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"1ahaO\":[function(require,module,exports) {\n// state/selectedWorkshop.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"loadSelectedWorkshop\", ()=>loadSelectedWorkshop);\nparcelHelpers.export(exports, \"saveSelectedWorkshop\", ()=>saveSelectedWorkshop);\nparcelHelpers.export(exports, \"resetSelectedWorkshop\", ()=>resetSelectedWorkshop);\nconst loadSelectedWorkshop = ()=>{\n    const state = JSON.parse(localStorage.getItem(\"registrationState\") || \"{}\");\n    return {\n        id: state.selectedWorkshopId || null,\n        name: state.selectedWorkshopName || null,\n        imageUrl: state.selectedWorkshopImageUrl || null,\n        ageRange: state.selectedWorkshopAgeRange || null\n    };\n};\nconst saveSelectedWorkshop = (workshop)=>{\n    const state = JSON.parse(localStorage.getItem(\"registrationState\") || \"{}\");\n    state.selectedWorkshopId = workshop.id;\n    state.selectedWorkshopName = workshop.name;\n    state.selectedWorkshopImageUrl = workshop.imageUrl;\n    state.selectedWorkshopAgeRange = workshop.ageRange;\n    console.log(\"Saving selected workshop to state:\", state); // Debug log\n    localStorage.setItem(\"registrationState\", JSON.stringify(state));\n};\nconst resetSelectedWorkshop = ()=>{\n    const state = JSON.parse(localStorage.getItem(\"registrationState\") || \"{}\");\n    delete state.selectedWorkshopId;\n    delete state.selectedWorkshopName;\n    delete state.selectedWorkshopImageUrl;\n    delete state.selectedWorkshopAgeRange;\n    console.log(\"Resetting selected workshop in state:\", state); // Debug log\n    localStorage.setItem(\"registrationState\", JSON.stringify(state));\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"8yBQ3\":[function(require,module,exports) {\n// components/sessionsList.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeSessionList\", ()=>initializeSessionList);\nparcelHelpers.export(exports, \"validateAndSubmitSessions\", ()=>validateAndSubmitSessions);\nvar _sessions = require(\"../../api/sessions\");\nvar _updateUi = require(\"./utils/updateUi\");\nvar _students = require(\"../../api/students\");\nvar _selectedSessions = require(\"./state/selectedSessions\");\nvar _registrationState = require(\"./state/registrationState\");\nvar _core = require(\"@xatom/core\");\nlet initialTemplateState = null;\nlet sessionData = [];\nconst initializeSessionList = async (workshopId, programId)=>{\n    const containerSelector = \"#selectSessionList\";\n    const container = document.querySelector(containerSelector);\n    if (!container) {\n        console.error(\"Session list container not found\");\n        return;\n    }\n    (0, _selectedSessions.resetSelectedSessions)();\n    if (!initialTemplateState) initialTemplateState = container.cloneNode(true);\n    else {\n        container.innerHTML = \"\";\n        container.appendChild(initialTemplateState.cloneNode(true));\n    }\n    const list = new (0, _core.WFDynamicList)(containerSelector, {\n        rowSelector: \"#sessionSelectWrap\",\n        loaderSelector: \"#sessionListLoading\",\n        emptySelector: \"#sessionListEmpty\"\n    });\n    list.loaderRenderer((loaderElement)=>{\n        loaderElement.setStyle({\n            display: \"flex\"\n        });\n        return loaderElement;\n    });\n    list.emptyRenderer((emptyElement)=>{\n        emptyElement.setStyle({\n            display: \"flex\"\n        });\n        return emptyElement;\n    });\n    // Correct usage with destructuring to get 'students'\n    let studentProfiles = [];\n    try {\n        const { students } = await (0, _students.fetchStudentProfiles)(); // Destructure to get 'students'\n        studentProfiles = students; // Assign the students array to studentProfiles\n    } catch (error) {\n        console.error(\"Error fetching student profiles:\", error);\n    }\n    list.rowRenderer(({ rowData, rowElement, index })=>{\n        const sessionCard = new (0, _core.WFComponent)(rowElement);\n        const sessionWeekday = sessionCard.getChildAsComponent(\"#cardSessionWeekday\");\n        const sessionTime = sessionCard.getChildAsComponent(\"#cardSessionTime\");\n        const sessionLocation = sessionCard.getChildAsComponent(\"#cardSessionLocation\");\n        const sessionPrice = sessionCard.getChildAsComponent(\"#cardSessionPrice\");\n        const sessionInput = sessionCard.getChildAsComponent(\"#cardSessionInput\");\n        const studentsList = sessionCard.getChildAsComponent(\"#selectStudentsList\");\n        const hiddenFieldWrap = sessionCard.getChildAsComponent(\".hidden_form_field-wrap\");\n        const inputId = `sessionInput-${index}`;\n        sessionInput.setAttribute(\"id\", inputId);\n        sessionInput.setAttribute(\"value\", rowData.id);\n        const label = sessionCard.getChildAsComponent(\"label\");\n        label.setAttribute(\"for\", inputId);\n        sessionWeekday.setText(rowData.fieldData.weekday);\n        sessionTime.setText(rowData.fieldData[\"time-block\"]);\n        sessionLocation.setText(rowData.fieldData.location);\n        const initialPrice = updateSessionPrice(sessionPrice, rowData);\n        studentsList.removeAllChildren();\n        studentProfiles.forEach((student)=>{\n            const studentId = student.id;\n            const uniqueStudentId = `${inputId}-student-${studentId}`;\n            const studentPill = new (0, _core.WFComponent)(document.createElement(\"label\"));\n            studentPill.addCssClass(\"pill-item\");\n            studentPill.setAttribute(\"for\", uniqueStudentId);\n            const studentCheckbox = new (0, _core.WFComponent)(document.createElement(\"input\"));\n            studentCheckbox.setAttribute(\"type\", \"checkbox\");\n            studentCheckbox.addCssClass(\"pill-checkbox\");\n            studentCheckbox.setAttribute(\"id\", uniqueStudentId);\n            studentCheckbox.setAttribute(\"name\", \"selectedStudents\");\n            studentCheckbox.setAttribute(\"value\", studentId.toString());\n            const studentName = new (0, _core.WFComponent)(document.createElement(\"span\"));\n            studentName.addCssClass(\"pill-label\");\n            studentName.addCssClass(\"has-icon\");\n            studentName.setText(`${student.first_name} ${student.last_name}`);\n            const pillIcon = new (0, _core.WFComponent)(document.createElement(\"div\"));\n            pillIcon.addCssClass(\"pill-icon\");\n            pillIcon.addCssClass(\"w-embed\");\n            pillIcon.setHTML(`<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"currentColor\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path><path d=\"M9 16.2l-3.5-3.5c-.39-.39-1.01-.39-1.4 0-.39.39-.39 1.01 0 1.4l4.19 4.19c.39.39 1.02.39 1.41 0L20.3 7.7c.39-.39.39-1.01 0-1.4-.39-.39-1.01-.39-1.4 0L9 16.2z\"></path></svg>`);\n            studentPill.appendChild(studentCheckbox);\n            studentPill.appendChild(studentName);\n            studentPill.appendChild(pillIcon);\n            studentsList.appendChild(studentPill);\n            studentCheckbox.on(\"change\", ()=>{\n                const studentCheckboxElement = studentCheckbox.getElement();\n                const studentIdInt = parseInt(studentCheckboxElement.value);\n                const sessionChangedEvent = new CustomEvent(\"sessionChanged\", {\n                    detail: {\n                        sessionId: rowData.id,\n                        studentId: studentIdInt,\n                        checked: studentCheckboxElement.checked,\n                        initialPriceSelection: initialPrice\n                    }\n                });\n                document.dispatchEvent(sessionChangedEvent);\n                (0, _selectedSessions.updateSelectedSessions)(rowData.id, studentIdInt, studentCheckboxElement.checked);\n            });\n        });\n        sessionInput.on(\"change\", ()=>{\n            const inputElement = sessionInput.getElement();\n            if (inputElement.checked) hiddenFieldWrap.setStyle({\n                display: \"flex\"\n            });\n            else {\n                hiddenFieldWrap.setStyle({\n                    display: \"none\"\n                });\n                const studentCheckboxes = studentsList.getChildAsComponents(\".pill-checkbox\");\n                studentCheckboxes.forEach((checkbox)=>{\n                    const studentCheckboxElement = checkbox.getElement();\n                    studentCheckboxElement.checked = false;\n                    const studentIdInt = parseInt(studentCheckboxElement.value);\n                    const sessionChangedEvent = new CustomEvent(\"sessionChanged\", {\n                        detail: {\n                            sessionId: rowData.id,\n                            studentId: studentIdInt,\n                            checked: false,\n                            initialPriceSelection: initialPrice\n                        }\n                    });\n                    document.dispatchEvent(sessionChangedEvent);\n                    (0, _selectedSessions.updateSelectedSessions)(rowData.id, studentIdInt, false);\n                });\n            }\n        });\n        rowElement.setStyle({\n            display: \"flex\"\n        });\n        return rowElement;\n    });\n    try {\n        list.changeLoadingStatus(true);\n        const sessions = await (0, _sessions.fetchSessions)(workshopId, programId);\n        if (Array.isArray(sessions) && sessions.length > 0) {\n            sessionData = sessions;\n            list.setData(sessions);\n            // Set default pricing option to 'Annual' if not already set\n            let registrationState = (0, _registrationState.loadState)();\n            if (!registrationState.selectedPricingOption) {\n                registrationState.selectedPricingOption = \"Annual\";\n                (0, _registrationState.saveState)(registrationState);\n            }\n            updateAllSessionPrices();\n        } else list.setData([]);\n        list.changeLoadingStatus(false);\n    } catch (error) {\n        console.error(\"Error loading sessions:\", error);\n        list.setData([]);\n        list.changeLoadingStatus(false);\n    }\n    document.querySelector(\"#updatePriceAnnual\")?.addEventListener(\"change\", ()=>{\n        (0, _registrationState.logPricingOption)(\"Annual\");\n        updateAllSessionPrices();\n    });\n    document.querySelector(\"#updatePriceMonthly\")?.addEventListener(\"change\", ()=>{\n        (0, _registrationState.logPricingOption)(\"Monthly\");\n        updateAllSessionPrices();\n    });\n    document.querySelector(\"#updatePriceSemester\")?.addEventListener(\"change\", ()=>{\n        (0, _registrationState.logPricingOption)(\"Pay-Per-Semester\");\n        updateAllSessionPrices();\n    });\n    document.querySelector(\"#updatePriceDeposit\")?.addEventListener(\"change\", ()=>{\n        (0, _registrationState.logPricingOption)(\"Deposit\");\n        updateAllSessionPrices();\n    });\n    initializeFilterSelect();\n    (0, _updateUi.updateSelectedItemUI)(); // Ensure selected item UI is updated initially\n};\n// Update the selected item UI\n/*const updateSelectedItemUI = () => {\n  const selectedProgram = loadSelectedProgram();\n  const selectedWorkshop = loadSelectedWorkshop();\n\n  const selectedProgramTitle = new WFComponent(\"#selectedProgramTitle\");\n  const selectedWorkshopTitle = new WFComponent(\"#selectedWorkshopTitle\");\n  const selectedAgeRange = new WFComponent(\"#selectedAgeRange\");\n  const selectedImage = new WFComponent(\"#selectedImage\");\n\n  if (selectedProgram.id) {\n    selectedProgramTitle.setText(selectedProgram.name);\n\n    if (selectedWorkshop.id) {\n      selectedWorkshopTitle.setText(selectedWorkshop.name);\n      selectedWorkshopTitle.setStyle({ display: \"block\" });\n      selectedAgeRange.setText(selectedWorkshop.ageRange); // Use workshop age range\n\n      // Use the workshop image if available, otherwise use the program image\n      const imageUrl = selectedWorkshop.imageUrl || selectedProgram.imageUrl;\n      selectedImage.setAttribute(\"src\", imageUrl);\n    } else {\n      selectedWorkshopTitle.setStyle({ display: \"none\" });\n      selectedAgeRange.setText(selectedProgram.ageRange); // Use program age range if no workshop selected\n      selectedImage.setAttribute(\"src\", selectedProgram.imageUrl);\n    }\n  }\n};*/ (0, _updateUi.updateSelectedItemUI)();\nconst updateSessionPrice = (sessionPrice, rowData)=>{\n    const registrationState = JSON.parse(localStorage.getItem(\"registrationState\") || \"{}\");\n    const selectedPricingOption = registrationState.selectedPricingOption || \"Annual\";\n    let price;\n    switch(selectedPricingOption){\n        case \"Annual\":\n            price = rowData.fieldData[\"displayed-annual-price\"];\n            break;\n        case \"Monthly\":\n            price = rowData.fieldData[\"displayed-monthly-price\"];\n            break;\n        case \"Pay-Per-Semester\":\n            price = rowData.fieldData[\"displayed-one-off-price\"];\n            break;\n        case \"Deposit\":\n            price = rowData.fieldData[\"displayed-deposit-price\"];\n            break;\n        default:\n            price = \"\"; // Or any default value you choose\n    }\n    sessionPrice.setText(price);\n    return price;\n};\nconst updateAllSessionPrices = ()=>{\n    const sessionCards = document.querySelectorAll(\"#sessionSelectWrap\");\n    sessionCards.forEach((sessionCard)=>{\n        const sessionPriceElement = sessionCard.querySelector(\"#cardSessionPrice\");\n        const sessionPrice = new (0, _core.WFComponent)(sessionPriceElement);\n        const sessionInputElement = sessionCard.querySelector(\".session-input\");\n        const sessionId = sessionInputElement.value;\n        const rowData = sessionData.find((session)=>session.id === sessionId);\n        if (sessionPrice && rowData) updateSessionPrice(sessionPrice, rowData);\n    });\n};\nconst initializeFilterSelect = ()=>{\n    const selectElement = document.getElementById(\"singleSelectInput\");\n    if (selectElement) selectElement.addEventListener(\"change\", (event)=>{\n        const selectedValue = event.target.value;\n        filterSessionsByLocation(selectedValue);\n    });\n};\nconst filterSessionsByLocation = (location)=>{\n    const sessionCards = document.querySelectorAll(\"#sessionSelectWrap\");\n    sessionCards.forEach((sessionCard)=>{\n        const sessionLocationElement = sessionCard.querySelector(\"#cardSessionLocation\");\n        const sessionLocation = sessionLocationElement?.textContent || \"\";\n        if (location === \"N/A\" || sessionLocation === location) sessionCard.style.display = \"flex\";\n        else sessionCard.style.display = \"none\";\n    });\n};\nconst validateAndSubmitSessions = ()=>{\n    const registrationState = JSON.parse(localStorage.getItem(\"registrationState\") || \"{}\");\n    const submitStepThreeError = new (0, _core.WFComponent)(\"#submitStepThreeError\");\n    // Ensure that at least one session is selected\n    if (!registrationState.selectedSessions || registrationState.selectedSessions.length === 0) {\n        submitStepThreeError.setText(\"Please select at least one session.\");\n        submitStepThreeError.setStyle({\n            display: \"block\"\n        });\n        return false;\n    }\n    // Ensure each selected session has associated students\n    for (const session of registrationState.selectedSessions)if (!session.studentIds || session.studentIds.length === 0) {\n        submitStepThreeError.setText(\"Please select at least one student for each session.\");\n        submitStepThreeError.setStyle({\n            display: \"block\"\n        });\n        return false;\n    }\n    // Hide the error message if validation passes\n    submitStepThreeError.setStyle({\n        display: \"none\"\n    });\n    // If validation passes, save state or submit data to the server\n    (0, _registrationState.saveState)(registrationState);\n    return true;\n};\n\n},{\"../../api/sessions\":\"gSiEx\",\"./utils/updateUi\":\"f5R2n\",\"../../api/students\":\"9PiOd\",\"./state/selectedSessions\":\"9QhCf\",\"./state/registrationState\":\"2Pbtv\",\"@xatom/core\":\"65YBq\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"gSiEx\":[function(require,module,exports) {\n// api/sessions.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"fetchSessions\", ()=>fetchSessions);\nvar _apiConfig = require(\"./apiConfig\");\nconst fetchSessions = async (workshopId, programId)=>{\n    try {\n        const response = await (0, _apiConfig.apiClient).get(`/registration/sessions?workshop_id=${workshopId}&program_id=${programId}`).fetch();\n        return response.sessions || [];\n    } catch (error) {\n        console.error(\"Error fetching sessions:\", error);\n        throw error;\n    }\n};\n\n},{\"./apiConfig\":\"dUmIV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"f5R2n\":[function(require,module,exports) {\n// updateUI.js\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"updateSelectedItemUI\", ()=>updateSelectedItemUI);\nvar _selectedProgram = require(\"../state/selectedProgram\");\nvar _selectedWorkshop = require(\"../state/selectedWorkshop\");\nvar _core = require(\"@xatom/core\");\nconst updateSelectedItemUI = ()=>{\n    const selectedProgram = (0, _selectedProgram.loadSelectedProgram)();\n    const selectedWorkshop = (0, _selectedWorkshop.loadSelectedWorkshop)();\n    // Original UI elements\n    const selectedProgramTitle = new (0, _core.WFComponent)(\"#selectedProgramTitle\");\n    const selectedWorkshopTitle = new (0, _core.WFComponent)(\"#selectedWorkshopTitle\");\n    const selectedAgeRange = new (0, _core.WFComponent)(\"#selectedAgeRange\");\n    const selectedImage = new (0, _core.WFComponent)(\"#selectedImage\");\n    // Final UI elements\n    const selectedProgramTitleFinal = new (0, _core.WFComponent)(\"#selectedProgramTitleFinal\");\n    const selectedWorkshopTitleFinal = new (0, _core.WFComponent)(\"#selectedWorkshopTitleFinal\");\n    const selectedAgeRangeFinal = new (0, _core.WFComponent)(\"#selectedAgeRangeFinal\");\n    const selectedImageFinal = new (0, _core.WFComponent)(\"#selectedImageFinal\");\n    // Function to set UI elements based on the selected data\n    const setUIElements = (programTitle, workshopTitle, ageRange, image)=>{\n        programTitle.setText(selectedProgram.name);\n        if (selectedWorkshop.id) {\n            workshopTitle.setText(selectedWorkshop.name);\n            workshopTitle.setStyle({\n                display: \"block\"\n            });\n            ageRange.setText(selectedWorkshop.ageRange);\n            const imageUrl = selectedWorkshop.imageUrl || selectedProgram.imageUrl;\n            image.setAttribute(\"src\", imageUrl);\n        } else {\n            workshopTitle.setStyle({\n                display: \"none\"\n            });\n            ageRange.setText(selectedProgram.ageRange);\n            image.setAttribute(\"src\", selectedProgram.imageUrl);\n        }\n    };\n    // Update original UI elements\n    if (selectedProgram.id) setUIElements(selectedProgramTitle, selectedWorkshopTitle, selectedAgeRange, selectedImage);\n    // Update final UI elements\n    if (selectedProgram.id) setUIElements(selectedProgramTitleFinal, selectedWorkshopTitleFinal, selectedAgeRangeFinal, selectedImageFinal);\n};\n\n},{\"../state/selectedProgram\":\"9SM9a\",\"../state/selectedWorkshop\":\"1ahaO\",\"@xatom/core\":\"65YBq\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"9PiOd\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"fetchStudentProfiles\", ()=>fetchStudentProfiles);\nvar _apiConfig = require(\"./apiConfig\");\nvar _registrationState = require(\"../modules/registration/state/registrationState\");\nconst fetchStudentProfiles = async ()=>{\n    try {\n        const response = await (0, _apiConfig.apiClient).get(\"/profiles/student_profiles\").fetch();\n        if (response.students) {\n            // Filter students with status \"Pending\"\n            const pendingStudents = response.students.filter((student)=>student.Status === \"Pending\");\n            const pendingStudentNames = pendingStudents.map((student)=>`${student.first_name} ${student.last_name}`);\n            // Log names of pending students (for debugging purposes)\n            console.log(\"Pending Students:\", pendingStudentNames);\n            // Update registrationState with pending students\n            (0, _registrationState.saveState)({\n                pendingStudents: pendingStudentNames\n            });\n            // Check if there are no students and indicate that the dialog should be shown\n            return {\n                students: response.students,\n                showDialog: response.students.length === 0\n            };\n        } else {\n            console.error(\"No students property in response\");\n            return {\n                students: [],\n                showDialog: true\n            };\n        }\n    } catch (error) {\n        console.error(\"Error fetching student profiles:\", error);\n        return {\n            students: [],\n            showDialog: true\n        };\n    }\n};\n\n},{\"./apiConfig\":\"dUmIV\",\"../modules/registration/state/registrationState\":\"2Pbtv\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"2Pbtv\":[function(require,module,exports) {\n// state/registrationState.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"loadState\", ()=>loadState);\nparcelHelpers.export(exports, \"saveState\", ()=>saveState);\nparcelHelpers.export(exports, \"logPricingOption\", ()=>logPricingOption);\nparcelHelpers.export(exports, \"getPendingStudents\", ()=>getPendingStudents);\nconst loadState = ()=>{\n    const savedState = localStorage.getItem(\"registrationState\");\n    if (savedState) return JSON.parse(savedState);\n    return {};\n};\nconst saveState = (state)=>{\n    const currentState = loadState();\n    const newState = {\n        ...currentState,\n        ...state\n    };\n    localStorage.setItem(\"registrationState\", JSON.stringify(newState));\n};\nconst logPricingOption = (pricingOption)=>{\n    saveState({\n        selectedPricingOption: pricingOption\n    });\n};\nconst getPendingStudents = ()=>{\n    const state = loadState();\n    return state.pendingStudents || [];\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"9QhCf\":[function(require,module,exports) {\n// state/selectedSessions.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"loadSelectedSession\", ()=>loadSelectedSession);\nparcelHelpers.export(exports, \"saveSelectedSession\", ()=>saveSelectedSession);\nparcelHelpers.export(exports, \"resetSelectedSessions\", ()=>resetSelectedSessions);\nparcelHelpers.export(exports, \"updateSelectedSessions\", ()=>updateSelectedSessions);\nconst loadSelectedSession = ()=>{\n    const state = JSON.parse(localStorage.getItem(\"registrationState\") || \"{}\");\n    return state.selectedSession || null;\n};\nconst saveSelectedSession = (session)=>{\n    const state = JSON.parse(localStorage.getItem(\"registrationState\") || \"{}\");\n    state.selectedSession = session;\n    localStorage.setItem(\"registrationState\", JSON.stringify(state));\n};\nconst resetSelectedSessions = ()=>{\n    const registrationState = JSON.parse(localStorage.getItem(\"registrationState\") || \"{}\");\n    registrationState.selectedSessions = [];\n    localStorage.setItem(\"registrationState\", JSON.stringify(registrationState));\n};\nconst updateSelectedSessions = (sessionId, studentId, checked)=>{\n    const registrationState = JSON.parse(localStorage.getItem(\"registrationState\") || \"{}\");\n    if (!registrationState.selectedSessions) registrationState.selectedSessions = [];\n    let session = registrationState.selectedSessions.find((s)=>s.sessionId === sessionId);\n    if (checked) {\n        if (!session) {\n            session = {\n                sessionId: sessionId,\n                studentIds: [\n                    studentId\n                ]\n            };\n            registrationState.selectedSessions.push(session);\n        } else if (!session.studentIds.includes(studentId)) session.studentIds.push(studentId);\n    } else if (session) {\n        session.studentIds = session.studentIds.filter((id)=>id !== studentId);\n        if (session.studentIds.length === 0) registrationState.selectedSessions = registrationState.selectedSessions.filter((s)=>s.sessionId !== sessionId);\n    }\n    localStorage.setItem(\"registrationState\", JSON.stringify(registrationState));\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"1avQb\":[function(require,module,exports) {\n// components/registration/checkoutPreview.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeCheckoutPreview\", ()=>initializeCheckoutPreview);\nvar _updateUi = require(\"./utils/updateUi\");\nvar _apiConfig = require(\"../../api/apiConfig\");\nvar _registrationState = require(\"./state/registrationState\");\nvar _alertBox = require(\"./components/alertBox\");\nvar _primaryPaymentRadios = require(\"./components/primaryPaymentRadios\");\nvar _lineItems = require(\"./components/lineItems\");\nvar _updateTotalAmount = require(\"./components/updateTotalAmount\");\nvar _financialAid = require(\"./components/financialAid\"); // Import financial aid initialization\nvar _alertBoxEarly = require(\"./components/alertBoxEarly\"); // Import the new alertBoxEarly\nconst initializeCheckoutPreview = async ()=>{\n    try {\n        const registrationState = (0, _registrationState.loadState)();\n        const response = await (0, _apiConfig.apiClient).post(\"/registration/checkout-preview\", {\n            data: registrationState\n        }).fetch();\n        console.log(\"Checkout Preview Data:\", response);\n        (0, _updateUi.updateSelectedItemUI)();\n        (0, _alertBox.initializeAlertBox)();\n        const { selectedPricingOption, early_registration, start_date } = response;\n        // Extract line items data only\n        const lineItemsOnly = {\n            annual_line_items: response.annual_line_items,\n            monthly_line_items: response.monthly_line_items,\n            semester_line_items: response.semester_line_items,\n            deposit_line_items: response.deposit_line_items\n        };\n        // **Always** save 'early_registration' and 'start_date' to state\n        (0, _registrationState.saveState)({\n            checkoutPreview: response,\n            selectedPricingOption,\n            early_registration,\n            start_date: response.start_date\n        });\n        (0, _primaryPaymentRadios.initializePrimaryPaymentRadios)(selectedPricingOption);\n        (0, _financialAid.initializeFinancialAid)(); // Initialize financial aid components\n        // Determine if deposit should be displayed\n        const hasPendingStudents = registrationState.pendingStudents?.length > 0;\n        const shouldShowDeposit = early_registration && selectedPricingOption === \"Monthly\" || hasPendingStudents;\n        console.log(`shouldShowDeposit: ${shouldShowDeposit}`);\n        if (shouldShowDeposit) {\n            // Display deposit line items\n            const depositLineItems = response.deposit_line_items;\n            console.log(\"Initial deposit line items:\", depositLineItems);\n            (0, _lineItems.renderLineItems)(depositLineItems, true); // Pass a flag to indicate deposit items\n            // Update total amounts accordingly\n            (0, _updateTotalAmount.updateTotalAmount)(true, selectedPricingOption);\n            console.log(\"Initial deposit line items rendered.\");\n        } else {\n            // Render primary line items\n            const primaryLineItems = (0, _lineItems.getLineItemsForSelectedOption)(selectedPricingOption, lineItemsOnly);\n            (0, _lineItems.renderLineItems)(primaryLineItems);\n            (0, _updateTotalAmount.updateTotalAmount)(false, selectedPricingOption);\n            console.log(\"Initial primary line items rendered.\");\n        }\n        // **Initialize the new early registration alert box**\n        (0, _alertBoxEarly.initializeAlertBoxEarly)();\n    } catch (error) {\n        console.error(\"Error fetching checkout preview data:\", error);\n    }\n};\n\n},{\"./utils/updateUi\":\"f5R2n\",\"../../api/apiConfig\":\"dUmIV\",\"./state/registrationState\":\"2Pbtv\",\"./components/alertBox\":\"bIj2D\",\"./components/primaryPaymentRadios\":\"c4bfd\",\"./components/lineItems\":\"hN0Ua\",\"./components/updateTotalAmount\":\"l9HwZ\",\"./components/financialAid\":\"dDV9Y\",\"./components/alertBoxEarly\":\"8h0nb\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"bIj2D\":[function(require,module,exports) {\n// components/registration/initializeAlertBox.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeAlertBox\", ()=>initializeAlertBox);\nvar _registrationState = require(\"../state/registrationState\");\nconst initializeAlertBox = ()=>{\n    const alertBox = document.querySelector(\"#alertBox\");\n    const alertPendingStudentList = document.querySelector(\"#alertPendingStudentList\");\n    if (!alertBox || !alertPendingStudentList) {\n        console.error(\"Alert box elements not found\");\n        return;\n    }\n    const pendingStudents = (0, _registrationState.getPendingStudents)();\n    if (pendingStudents.length > 0) {\n        alertBox.style.display = \"flex\";\n        alertPendingStudentList.innerHTML = pendingStudents.map((student)=>`<li>${student}</li>`).join(\"\");\n    } else alertBox.style.display = \"none\";\n};\n\n},{\"../state/registrationState\":\"2Pbtv\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"c4bfd\":[function(require,module,exports) {\n// components/registration/components/primaryPaymentRadios.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializePrimaryPaymentRadios\", ()=>initializePrimaryPaymentRadios);\nvar _core = require(\"@xatom/core\");\nvar _registrationState = require(\"../state/registrationState\");\nvar _lineItems = require(\"./lineItems\");\nvar _updateTotalAmount = require(\"./updateTotalAmount\");\nvar _alertBoxEarly = require(\"./alertBoxEarly\"); // Import the new alertBoxEarly\nconst initializePrimaryPaymentRadios = (selectedPricingOption)=>{\n    const paymentPlans = [\n        {\n            key: \"Annual\",\n            id: \"annualPlan\",\n            wrapId: \"annualRadioWrap\"\n        },\n        {\n            key: \"Monthly\",\n            id: \"monthlyPlan\",\n            wrapId: \"monthlyRadioWrap\"\n        },\n        {\n            key: \"Pay-Per-Semester\",\n            id: \"semesterPlan\",\n            wrapId: \"semesterRadioWrap\"\n        }\n    ];\n    // Initialize the radio buttons based on the selected option\n    paymentPlans.forEach((plan)=>{\n        const planElement = new (0, _core.WFComponent)(`#${plan.id}`).getElement();\n        const planWrapElement = new (0, _core.WFComponent)(`#${plan.wrapId}`).getElement();\n        if (plan.key === selectedPricingOption) {\n            planElement.checked = true;\n            planWrapElement.classList.remove(\"is-disabled\");\n            planElement.disabled = false;\n        } else {\n            planWrapElement.classList.remove(\"is-disabled\");\n            planElement.disabled = false;\n        }\n    });\n    // Attach event listeners to each payment option\n    paymentPlans.forEach((plan)=>{\n        const input = new (0, _core.WFComponent)(`#${plan.id}`).getElement();\n        input.addEventListener(\"change\", (event)=>{\n            const target = event.target;\n            if (target.checked) {\n                // Save the selected pricing option to state\n                (0, _registrationState.saveState)({\n                    selectedPricingOption: target.value\n                });\n                // Load the current registration state\n                const registrationState = (0, _registrationState.loadState)();\n                // Debugging: Log the current state\n                console.log(\"Current Registration State:\", registrationState);\n                // Extract the necessary line items from the state\n                const lineItemsOnly = {\n                    annual_line_items: registrationState.checkoutPreview?.annual_line_items ?? [],\n                    monthly_line_items: registrationState.checkoutPreview?.monthly_line_items ?? [],\n                    semester_line_items: registrationState.checkoutPreview?.semester_line_items ?? []\n                };\n                // Determine if deposit conditions are met\n                const shouldShowDeposit = registrationState.early_registration && target.value === \"Monthly\" || registrationState.pendingStudents?.length > 0;\n                // Debugging: Log the value of shouldShowDeposit\n                console.log(`shouldShowDeposit: ${shouldShowDeposit}`);\n                if (shouldShowDeposit) {\n                    // **Only** render deposit line items\n                    const depositLineItems = registrationState.checkoutPreview?.deposit_line_items ?? [];\n                    // **Ensure** that deposit line items are available\n                    if (depositLineItems.length > 0) {\n                        console.log(\"Rendering Deposit Line Items:\", depositLineItems);\n                        (0, _lineItems.renderLineItems)(depositLineItems, true); // Pass a flag to indicate deposit items\n                        // Update total amounts accordingly\n                        (0, _updateTotalAmount.updateTotalAmount)(true, target.value);\n                        console.log(`Deposit line items rendered for ${target.value}`);\n                    } else {\n                        console.warn(\"Deposit line items are empty or undefined.\");\n                        // Fallback: Render primary line items if deposit line items are unavailable\n                        const primaryLineItems = (0, _lineItems.getLineItemsForSelectedOption)(target.value, lineItemsOnly);\n                        (0, _lineItems.renderLineItems)(primaryLineItems);\n                        (0, _updateTotalAmount.updateTotalAmount)(false, target.value);\n                        console.log(`Primary line items rendered for ${target.value} due to missing deposit items.`);\n                    }\n                } else {\n                    // **Only** render primary line items\n                    const primaryLineItems = (0, _lineItems.getLineItemsForSelectedOption)(target.value, lineItemsOnly);\n                    (0, _lineItems.renderLineItems)(primaryLineItems);\n                    (0, _updateTotalAmount.updateTotalAmount)(false, target.value);\n                    console.log(`Primary line items rendered for ${target.value}`);\n                }\n                console.log(`Primary pricing option selected: ${target.value}`);\n                // **Initialize alertBoxEarly after changing pricing option**\n                (0, _alertBoxEarly.initializeAlertBoxEarly)();\n            }\n        });\n    });\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../state/registrationState\":\"2Pbtv\",\"./lineItems\":\"hN0Ua\",\"./updateTotalAmount\":\"l9HwZ\",\"./alertBoxEarly\":\"8h0nb\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"hN0Ua\":[function(require,module,exports) {\n// lineItems.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"renderLineItems\", ()=>renderLineItems);\nparcelHelpers.export(exports, \"getLineItemsForSelectedOption\", ()=>getLineItemsForSelectedOption);\nvar _core = require(\"@xatom/core\");\nconst renderLineItems = (lineItems, isDeposit = false)=>{\n    const lineItemList = new (0, _core.WFComponent)(\"#lineItemList\");\n    lineItemList.removeAllChildren(); // Clear previous line items\n    console.log(`Rendering ${isDeposit ? \"Deposit\" : \"Primary\"} Line Items:`, lineItems);\n    lineItems.forEach((item)=>{\n        const lineItemRow = document.createElement(\"tr\");\n        lineItemRow.className = \"table_row\" + (isDeposit ? \" deposit_row\" : \"\");\n        const productNameCell = document.createElement(\"td\");\n        productNameCell.className = \"table_cell\";\n        productNameCell.textContent = item.product_name;\n        lineItemRow.appendChild(productNameCell);\n        const unitAmountCell = document.createElement(\"td\");\n        unitAmountCell.className = \"table_cell\";\n        unitAmountCell.textContent = `$${item.unit_amount}`;\n        lineItemRow.appendChild(unitAmountCell);\n        const quantityCell = document.createElement(\"td\");\n        quantityCell.className = \"table_cell\";\n        quantityCell.textContent = `${item.quantity}`;\n        lineItemRow.appendChild(quantityCell);\n        const totalAmountCell = document.createElement(\"td\");\n        totalAmountCell.className = \"table_cell\";\n        totalAmountCell.textContent = `$${item.total_amount}`;\n        lineItemRow.appendChild(totalAmountCell);\n        lineItemList.getElement().appendChild(lineItemRow);\n    });\n    // If deposit line items are rendered, apply specific styles or classes if needed\n    if (isDeposit) {\n        // Example: Highlight deposit line items\n        lineItemList.getElement().classList.add(\"has-deposit\");\n        console.log(\"Deposit line items have been added.\");\n    } else {\n        lineItemList.getElement().classList.remove(\"has-deposit\");\n        console.log(\"Primary line items have been added.\");\n    }\n};\nconst getLineItemsForSelectedOption = (selectedPricingOption, lineItemsData)=>{\n    switch(selectedPricingOption){\n        case \"Annual\":\n            return lineItemsData.annual_line_items;\n        case \"Monthly\":\n            return lineItemsData.monthly_line_items;\n        case \"Pay-Per-Semester\":\n            return lineItemsData.semester_line_items;\n        // Removed \"Deposit\" case\n        default:\n            console.warn(\"Unknown pricing option:\", selectedPricingOption);\n            return [];\n    }\n};\n\n},{\"@xatom/core\":\"65YBq\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"l9HwZ\":[function(require,module,exports) {\n// updateTotalAmount.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"updateTotalAmount\", ()=>updateTotalAmount);\nvar _core = require(\"@xatom/core\");\nvar _registrationState = require(\"../state/registrationState\");\nvar _formatting = require(\"../utils/formatting\");\nvar _updateSecondaryTotalAmount = require(\"./updateSecondaryTotalAmount\");\nconst updateTotalAmount = (includeDeposit = false, selectedPricingOption)=>{\n    const state = (0, _registrationState.loadState)();\n    const totalAmountElement = new (0, _core.WFComponent)(\"#primaryTotalAmount\");\n    const primaryOriginalAmountElement = new (0, _core.WFComponent)(\"#primaryOriginalAmount\");\n    const primaryDiscountPill = new (0, _core.WFComponent)(\"#primaryDiscountPill\");\n    const primaryDiscountNumber = new (0, _core.WFComponent)(\"#primaryDiscountNumber\");\n    // Elements for secondary total\n    const secondaryAmountWrap = new (0, _core.WFComponent)(\"#secondaryAmountWrap\");\n    const secondaryTotalAmountElement = new (0, _core.WFComponent)(\"#secondaryTotalAmount\");\n    const secondaryOriginalAmountElement = new (0, _core.WFComponent)(\"#secondaryOriginalAmount\");\n    const secondaryDiscountPill = new (0, _core.WFComponent)(\"#secondaryDiscountPill\");\n    const secondaryDiscountNumber = new (0, _core.WFComponent)(\"#secondaryDiscountNumber\");\n    console.log(`updateTotalAmount called with includeDeposit=${includeDeposit} and selectedPricingOption=${selectedPricingOption}`);\n    let primaryTotal;\n    let primaryOriginal;\n    let primaryAmountType = \"\"; // e.g., \"Per Year\"\n    const pricingOption = selectedPricingOption || state.selectedPricingOption;\n    switch(pricingOption){\n        case \"Annual\":\n            primaryOriginal = state.checkoutPreview?.annual_amount_due;\n            primaryAmountType = \"Per Year\";\n            break;\n        case \"Monthly\":\n            primaryOriginal = state.checkoutPreview?.monthly_amount_due;\n            primaryAmountType = \"Per Month\";\n            break;\n        case \"Pay-Per-Semester\":\n            primaryOriginal = state.checkoutPreview?.semester_amount_due;\n            primaryAmountType = \"Per Semester\";\n            break;\n        default:\n            console.warn(\"Unknown pricing option:\", pricingOption);\n    }\n    if (!includeDeposit) {\n        // No deposit; apply discounts to primary total if applicable\n        if (state.selected_discount) {\n            const discountValue = parseFloat(state.selected_discount);\n            primaryTotal = primaryOriginal ? primaryOriginal * (1 - discountValue / 100) : 0;\n            primaryDiscountPill.setStyle({\n                display: \"block\"\n            });\n            primaryDiscountNumber.setText(`${discountValue}%`);\n            primaryOriginalAmountElement.setText(`was ${(0, _formatting.formatCurrency)(primaryOriginal)} ${primaryAmountType}`);\n            primaryOriginalAmountElement.setStyle({\n                display: \"block\"\n            });\n            console.log(\"Applied discount to primary total.\");\n        } else {\n            primaryTotal = primaryOriginal;\n            primaryDiscountPill.setStyle({\n                display: \"none\"\n            });\n            primaryOriginalAmountElement.setStyle({\n                display: \"none\"\n            });\n            primaryDiscountNumber.setText(\"\");\n            console.log(\"No discount applied to primary total.\");\n        }\n        if (primaryTotal !== undefined) totalAmountElement.setText(`${(0, _formatting.formatCurrency)(primaryTotal)} ${primaryAmountType}`);\n        else totalAmountElement.setText(`$0.00 ${primaryAmountType}`);\n        // Hide secondary total elements if previously shown\n        secondaryAmountWrap.setStyle({\n            display: \"none\"\n        });\n        console.log(\"SecondaryAmountWrap hidden.\");\n        // Clear secondary totals\n        secondaryTotalAmountElement.setText(`$0.00 ${primaryAmountType}`);\n        secondaryOriginalAmountElement.setStyle({\n            display: \"none\"\n        });\n        secondaryDiscountPill.setStyle({\n            display: \"none\"\n        });\n        secondaryDiscountNumber.setText(\"\");\n    } else {\n        // Deposit is included; primary total reflects deposit total, secondary total reflects main payment option\n        const depositAmount = state.checkoutPreview?.deposit_amount_due;\n        if (depositAmount !== undefined) totalAmountElement.setText(`${(0, _formatting.formatCurrency)(depositAmount)} Total`);\n        else totalAmountElement.setText(`$0.00 Total`);\n        // Calculate and display secondary total with discount if applicable\n        (0, _updateSecondaryTotalAmount.updateSecondaryTotalAmount)();\n        // Show secondary total elements\n        secondaryAmountWrap.setStyle({\n            display: \"flex\",\n            flexDirection: \"column\"\n        });\n        console.log(\"SecondaryAmountWrap displayed as flex.\");\n        // Hide primary discount pill since discounts are applied to secondary total\n        primaryDiscountPill.setStyle({\n            display: \"none\"\n        });\n        primaryDiscountNumber.setText(\"\");\n        primaryOriginalAmountElement.setStyle({\n            display: \"none\"\n        });\n        console.log(\"Primary discount pill hidden.\");\n    }\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../state/registrationState\":\"2Pbtv\",\"../utils/formatting\":\"fevto\",\"./updateSecondaryTotalAmount\":\"kQasf\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"fevto\":[function(require,module,exports) {\n// utils/formatting.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"formatCurrency\", ()=>formatCurrency);\nconst formatCurrency = (amount)=>{\n    // Convert to a number if the amount is a string\n    const numericAmount = typeof amount === \"string\" ? parseFloat(amount) : amount;\n    // Ensure the conversion worked and format the number\n    if (!isNaN(numericAmount)) return numericAmount.toLocaleString(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\"\n    });\n    return \"$0.00\"; // Default value in case of error\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"kQasf\":[function(require,module,exports) {\n// updateSecondaryTotalAmount.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"updateSecondaryTotalAmount\", ()=>updateSecondaryTotalAmount);\nvar _core = require(\"@xatom/core\");\nvar _registrationState = require(\"../state/registrationState\");\nvar _formatting = require(\"../utils/formatting\");\nconst updateSecondaryTotalAmount = ()=>{\n    const state = (0, _registrationState.loadState)();\n    const secondaryTotalAmountElement = new (0, _core.WFComponent)(\"#secondaryTotalAmount\");\n    const secondaryOriginalAmountElement = new (0, _core.WFComponent)(\"#secondaryOriginalAmount\");\n    const secondaryDiscountPill = new (0, _core.WFComponent)(\"#secondaryDiscountPill\");\n    const secondaryDiscountNumber = new (0, _core.WFComponent)(\"#secondaryDiscountNumber\");\n    const selectedPricingOption = state.selectedPricingOption;\n    let secondaryOriginalAmount;\n    let secondaryAmountType = \"\";\n    switch(selectedPricingOption){\n        case \"Annual\":\n            secondaryOriginalAmount = state.checkoutPreview?.annual_amount_due;\n            secondaryAmountType = \"Per Year\";\n            break;\n        case \"Monthly\":\n            secondaryOriginalAmount = state.checkoutPreview?.monthly_amount_due;\n            secondaryAmountType = \"Per Month\";\n            break;\n        case \"Pay-Per-Semester\":\n            secondaryOriginalAmount = state.checkoutPreview?.semester_amount_due;\n            secondaryAmountType = \"Per Semester\";\n            break;\n        default:\n            console.warn(\"Unknown pricing option:\", selectedPricingOption);\n    }\n    if (state.selected_discount && secondaryOriginalAmount !== undefined) {\n        const discountValue = parseFloat(state.selected_discount);\n        const discountedTotal = secondaryOriginalAmount * (1 - discountValue / 100);\n        secondaryDiscountPill.setStyle({\n            display: \"block\"\n        });\n        secondaryDiscountNumber.setText(`${discountValue}%`);\n        secondaryOriginalAmountElement.setText(`was ${(0, _formatting.formatCurrency)(secondaryOriginalAmount)} ${secondaryAmountType}`);\n        secondaryOriginalAmountElement.setStyle({\n            display: \"block\"\n        });\n        secondaryTotalAmountElement.setText(`${(0, _formatting.formatCurrency)(discountedTotal)} ${secondaryAmountType}`);\n        console.log(\"Applied discount to secondary total.\");\n    } else {\n        // No discount applied\n        if (secondaryOriginalAmount !== undefined) secondaryTotalAmountElement.setText(`${(0, _formatting.formatCurrency)(secondaryOriginalAmount)} ${secondaryAmountType}`);\n        else secondaryTotalAmountElement.setText(`$0.00 ${secondaryAmountType}`);\n        secondaryDiscountPill.setStyle({\n            display: \"none\"\n        });\n        secondaryOriginalAmountElement.setStyle({\n            display: \"none\"\n        });\n        secondaryDiscountNumber.setText(\"\");\n        console.log(\"No discount applied to secondary total.\");\n    }\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../state/registrationState\":\"2Pbtv\",\"../utils/formatting\":\"fevto\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"8h0nb\":[function(require,module,exports) {\n// components/registration/alertBoxEarly.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeAlertBoxEarly\", ()=>initializeAlertBoxEarly);\nvar _registrationState = require(\"../state/registrationState\");\nconst initializeAlertBoxEarly = ()=>{\n    const alertBoxEarly = document.querySelector(\"#alertBoxEarly\");\n    const startDateSpan = document.querySelector(\"#startDate\");\n    if (!alertBoxEarly || !startDateSpan) {\n        console.error(\"Early Alert Box elements not found\");\n        return;\n    }\n    const state = (0, _registrationState.loadState)();\n    const { selectedPricingOption, early_registration, checkoutPreview } = state;\n    // Check if selectedPricingOption is \"Monthly\" and early_registration is true\n    if (selectedPricingOption === \"Monthly\" && early_registration && checkoutPreview && checkoutPreview.start_date) {\n        // Parse the start_date as UTC\n        const startDate = new Date(checkoutPreview.start_date);\n        // Format the date in UTC to avoid timezone shifts\n        const formatter = new Intl.DateTimeFormat(undefined, {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\",\n            timeZone: \"UTC\"\n        });\n        const formattedDate = formatter.format(startDate);\n        // Update the startDate span\n        startDateSpan.textContent = formattedDate;\n        // Display the alert box\n        alertBoxEarly.style.display = \"flex\";\n        console.log(\"Early registration alert box displayed with start date:\", formattedDate);\n    } else {\n        // Hide the alert box if conditions are not met\n        alertBoxEarly.style.display = \"none\";\n        console.log(\"Early registration alert box hidden\");\n    }\n};\n\n},{\"../state/registrationState\":\"2Pbtv\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"dDV9Y\":[function(require,module,exports) {\n// financialAid.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeFinancialAid\", ()=>initializeFinancialAid);\nvar _core = require(\"@xatom/core\");\nvar _registrationState = require(\"../state/registrationState\");\nvar _updateTotalAmount = require(\"./updateTotalAmount\");\nvar _formUtils = require(\"../../../utils/formUtils\");\nvar _validationUtils = require(\"../../../utils/validationUtils\");\nconst initializeFinancialAid = ()=>{\n    const financialAidCheckbox = new (0, _core.WFComponent)(\"#requestFinAid\");\n    const financialAidDialog = new (0, _core.WFComponent)(\"#finaidForm\");\n    // Show dialog when checkbox is checked\n    financialAidCheckbox.on(\"change\", ()=>{\n        const checkboxElement = financialAidCheckbox.getElement();\n        const state = (0, _registrationState.loadState)(); // Load the state here\n        if (checkboxElement.checked) financialAidDialog.getElement().showModal();\n        else {\n            // Reset financial aid-related state\n            (0, _registrationState.saveState)({\n                fin_aid_requested: false,\n                selected_discount: undefined\n            });\n            // Determine if deposit is included\n            const includeDeposit = state.pendingStudents?.length > 0 || state.early_registration && state.selectedPricingOption === \"Monthly\";\n            // Update totals accordingly\n            (0, _updateTotalAmount.updateTotalAmount)(includeDeposit, state.selectedPricingOption);\n        }\n    });\n    // Close dialog event to uncheck checkbox if no discount is applied\n    financialAidDialog.getElement()?.addEventListener(\"close\", ()=>{\n        const state = (0, _registrationState.loadState)();\n        if (!state.selected_discount) financialAidCheckbox.getElement().checked = false;\n    });\n    // Form validation\n    setupFinancialAidFormValidation();\n    // Handle form submission\n    const submitButton = new (0, _core.WFComponent)(\"#submitfinancialAid\");\n    submitButton.on(\"click\", ()=>{\n        if (validateFinancialAidForm()) {\n            saveFinancialAidData();\n            showSuccessState();\n        }\n    });\n    // Attach close dialog function to close button and outside click\n    attachCloseDialogHandler(financialAidDialog);\n    // Format currency in real-time as the user types\n    const annualIncomeInput = new (0, _core.WFComponent)(\"#annualIncome\");\n    const monthlyExpenseInput = new (0, _core.WFComponent)(\"#monthlyExpense\");\n    const formatAndSetInputValue = (component)=>{\n        const inputElement = component.getElement();\n        let value = inputElement.value.replace(/[^\\d.-]/g, \"\"); // Remove non-numeric characters except for digits, dots, and dashes\n        // Save the cursor position before formatting\n        let cursorPosition = inputElement.selectionStart || 0;\n        // Calculate the number of commas before formatting\n        const commaCountBefore = (inputElement.value.slice(0, cursorPosition).match(/,/g) || []).length;\n        // Handle the case where the user might enter multiple decimal points\n        if (value.includes(\".\")) {\n            const [integerPart, decimalPart] = value.split(\".\");\n            value = `${integerPart}.${decimalPart.slice(0, 2)}`;\n        }\n        // Format the number\n        const formattedValue = formatNumber(value);\n        inputElement.value = formattedValue;\n        // Calculate the number of commas after formatting\n        const commaCountAfter = (inputElement.value.slice(0, cursorPosition).match(/,/g) || []).length;\n        // Adjust cursor position based on the difference in comma count\n        cursorPosition += commaCountAfter - commaCountBefore;\n        // Ensure cursor position does not exceed the input length\n        if (cursorPosition > formattedValue.length) cursorPosition = formattedValue.length;\n        // Set the cursor position back to the calculated position\n        inputElement.setSelectionRange(cursorPosition, cursorPosition);\n    };\n    const formatNumber = (value)=>{\n        const number = parseFloat(value.replace(/,/g, \"\"));\n        if (isNaN(number)) return value;\n        return number.toLocaleString(\"en-US\", {\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0\n        });\n    };\n    annualIncomeInput.on(\"input\", ()=>formatAndSetInputValue(annualIncomeInput));\n    monthlyExpenseInput.on(\"input\", ()=>formatAndSetInputValue(monthlyExpenseInput));\n};\n// Function to close the financial aid dialog\nconst closeFinancialAidDialog = (dialog)=>{\n    dialog.getElement().close();\n};\n// Function to attach close dialog handler\nconst attachCloseDialogHandler = (dialog)=>{\n    const closeButton = new (0, _core.WFComponent)(\"#close-dialog-btn\");\n    closeButton.on(\"click\", ()=>closeFinancialAidDialog(dialog));\n    dialog.getElement()?.addEventListener(\"click\", (event)=>{\n        const rect = dialog.getElement().getBoundingClientRect();\n        if (event.clientX < rect.left || event.clientX > rect.right || event.clientY < rect.top || event.clientY > rect.bottom) closeFinancialAidDialog(dialog);\n    });\n};\n// Function to validate the financial aid form\nconst setupFinancialAidFormValidation = ()=>{\n    const relationshipInput = new (0, _core.WFComponent)(\"#finaidRelationship\");\n    const relationshipError = new (0, _core.WFComponent)(\"#finaidRelationshipError\");\n    const previousParticipantInputs = document.getElementsByName(\"previous_participant\");\n    const previousParticipantError = new (0, _core.WFComponent)(\"#previousParticipantError\");\n    const annualIncomeInput = new (0, _core.WFComponent)(\"#annualIncome\");\n    const annualIncomeError = new (0, _core.WFComponent)(\"#annualIncomeError\");\n    const monthlyExpenseInput = new (0, _core.WFComponent)(\"#monthlyExpense\");\n    const monthlyExpenseError = new (0, _core.WFComponent)(\"#monthlyExpenseError\");\n    (0, _formUtils.setupValidation)(relationshipInput, relationshipError, ()=>(0, _validationUtils.validateSelectField)(getComponentValue(relationshipInput)) ? \"\" : \"Please select a relationship.\");\n    (0, _formUtils.setupValidation)(annualIncomeInput, annualIncomeError, ()=>(0, _validationUtils.validateNotEmpty)(getComponentValue(annualIncomeInput)) ? \"\" : \"Please enter your annual household income.\");\n    (0, _formUtils.setupValidation)(monthlyExpenseInput, monthlyExpenseError, ()=>(0, _validationUtils.validateNotEmpty)(getComponentValue(monthlyExpenseInput)) ? \"\" : \"Please enter your monthly expenditure.\");\n    Array.from(previousParticipantInputs).forEach((input)=>{\n        (0, _formUtils.setupValidation)(new (0, _core.WFComponent)(input), previousParticipantError, ()=>{\n            const selected = Array.from(previousParticipantInputs).some((radio)=>radio.checked);\n            return selected ? \"\" : \"Please select an option.\";\n        });\n    });\n};\n// Function to validate the financial aid form on submit\nconst validateFinancialAidForm = ()=>{\n    const relationshipInput = new (0, _core.WFComponent)(\"#finaidRelationship\");\n    const annualIncomeInput = new (0, _core.WFComponent)(\"#annualIncome\");\n    const monthlyExpenseInput = new (0, _core.WFComponent)(\"#monthlyExpense\");\n    const previousParticipantInputs = document.getElementsByName(\"previous_participant\");\n    const isRelationshipValid = (0, _validationUtils.validateSelectField)(getComponentValue(relationshipInput));\n    (0, _formUtils.toggleError)(new (0, _core.WFComponent)(\"#finaidRelationshipError\"), \"Please select a relationship.\", !isRelationshipValid);\n    const isAnnualIncomeValid = (0, _validationUtils.validateNotEmpty)(getComponentValue(annualIncomeInput));\n    (0, _formUtils.toggleError)(new (0, _core.WFComponent)(\"#annualIncomeError\"), \"Please enter your annual household income.\", !isAnnualIncomeValid);\n    const isMonthlyExpenseValid = (0, _validationUtils.validateNotEmpty)(getComponentValue(monthlyExpenseInput));\n    (0, _formUtils.toggleError)(new (0, _core.WFComponent)(\"#monthlyExpenseError\"), \"Please enter your monthly expenditure.\", !isMonthlyExpenseValid);\n    const isPreviousParticipantValid = Array.from(previousParticipantInputs).some((radio)=>radio.checked);\n    (0, _formUtils.toggleError)(new (0, _core.WFComponent)(\"#previousParticipantError\"), \"Please select an option.\", !isPreviousParticipantValid);\n    return isRelationshipValid && isAnnualIncomeValid && isMonthlyExpenseValid && isPreviousParticipantValid;\n};\n// Function to save financial aid data to state\nconst saveFinancialAidData = ()=>{\n    const relationshipComponent = new (0, _core.WFComponent)(\"#finaidRelationship\");\n    const relationshipElement = relationshipComponent.getElement();\n    const relationship = relationshipElement.value;\n    const annualIncomeComponent = new (0, _core.WFComponent)(\"#annualIncome\");\n    const annualIncomeElement = annualIncomeComponent.getElement();\n    const annualIncome = annualIncomeElement.value;\n    const monthlyExpenseComponent = new (0, _core.WFComponent)(\"#monthlyExpense\");\n    const monthlyExpenseElement = monthlyExpenseComponent.getElement();\n    const monthlyExpense = monthlyExpenseElement.value;\n    const previousParticipantInput = document.querySelector(\"input[name='previous_participant']:checked\");\n    const previousParticipant = previousParticipantInput ? previousParticipantInput.value : \"\";\n    (0, _registrationState.saveState)({\n        fin_aid_requested: true,\n        selected_discount: \"\",\n        financialAidData: {\n            relationship,\n            annualIncome,\n            monthlyExpense,\n            previousParticipant\n        }\n    });\n    console.log(\"Financial aid data saved:\", {\n        relationship,\n        annualIncome,\n        monthlyExpense,\n        previousParticipant\n    });\n};\n// Function to display success state and discount selection\nconst showSuccessState = ()=>{\n    const successMessage = new (0, _core.WFComponent)(\".success-message\");\n    const form = new (0, _core.WFComponent)(\"#wf-form-Finaid-Form\");\n    form.setStyle({\n        display: \"none\"\n    });\n    successMessage.setStyle({\n        display: \"block\"\n    });\n    const applyDiscountButton = new (0, _core.WFComponent)(\"#applyDiscount\");\n    const backFinAidButton = new (0, _core.WFComponent)(\"#backFinAid\");\n    const financialAidDialog = new (0, _core.WFComponent)(\"#finaidForm\");\n    applyDiscountButton.on(\"click\", ()=>{\n        const selectedDiscount = document.querySelector(\"input[name='discountValue']:checked\");\n        if (selectedDiscount) {\n            const discountValue = selectedDiscount.value;\n            const state = (0, _registrationState.loadState)();\n            (0, _registrationState.saveState)({\n                selected_discount: discountValue\n            });\n            (0, _registrationState.saveState)({\n                fin_aid_requested: true\n            });\n            // Determine if deposit is included\n            const includeDeposit = state.pendingStudents?.length > 0 || state.early_registration && state.selectedPricingOption === \"Monthly\";\n            (0, _updateTotalAmount.updateTotalAmount)(includeDeposit, state.selectedPricingOption);\n            console.log(`Discount applied: ${discountValue}%`);\n            // Close the dialog\n            closeFinancialAidDialog(financialAidDialog);\n        } else console.warn(\"No discount selected.\");\n    });\n    backFinAidButton.on(\"click\", ()=>{\n        successMessage.setStyle({\n            display: \"none\"\n        });\n        form.setStyle({\n            display: \"flex\"\n        });\n    });\n};\n// Helper function to get the value of a component\nconst getComponentValue = (component)=>{\n    const element = component.getElement();\n    return element.value;\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../state/registrationState\":\"2Pbtv\",\"./updateTotalAmount\":\"l9HwZ\",\"../../../utils/formUtils\":\"gepHz\",\"../../../utils/validationUtils\":\"gu2z7\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"gepHz\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"toggleError\", ()=>toggleError);\nparcelHelpers.export(exports, \"setupValidation\", ()=>setupValidation);\nparcelHelpers.export(exports, \"createValidationFunction\", ()=>createValidationFunction);\nparcelHelpers.export(exports, \"createCheckboxValidationFunction\", ()=>createCheckboxValidationFunction);\nparcelHelpers.export(exports, \"setupCheckboxValidation\", ()=>setupCheckboxValidation);\nparcelHelpers.export(exports, \"validateSelectedSessions\", ()=>validateSelectedSessions);\n/**\n * Updates the user's profile picture URL in the authentication system.\n * @param {string} imageUrl - The URL of the uploaded image.\n */ parcelHelpers.export(exports, \"setProfilePicUrl\", ()=>setProfilePicUrl);\n/**\n * Handles file upload and displays the uploaded image.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */ /**\n * Handles file upload and displays the uploaded image.\n * Only JPEG files less than 2 MB can be uploaded.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */ parcelHelpers.export(exports, \"setupFileUpload\", ()=>setupFileUpload);\nparcelHelpers.export(exports, \"formatPhoneNumber\", ()=>formatPhoneNumber);\nvar _core = require(\"@xatom/core\");\nvar _image = require(\"@xatom/image\");\nvar _apiConfig = require(\"../api/apiConfig\");\nvar _authConfig = require(\"../auth/authConfig\");\nfunction toggleError(errorMessageComponent, message, show) {\n    errorMessageComponent.updateTextViaAttrVar({\n        text: show ? message : \"\"\n    });\n    errorMessageComponent.setStyle({\n        display: show ? \"flex\" : \"none\"\n    });\n}\nfunction setupValidation(inputComponent, errorComponent, validate, requestErrorComponent // Optional component to clear on input change\n) {\n    const validateAndUpdate = ()=>{\n        const errorMessage = validate();\n        toggleError(errorComponent, errorMessage, !!errorMessage);\n        if (requestErrorComponent && errorMessage === \"\") // Clear request error message when the user is correcting the input\n        toggleError(requestErrorComponent, \"\", false);\n    };\n    // Attach event listeners for real-time validation\n    inputComponent.on(\"input\", validateAndUpdate);\n    inputComponent.on(\"blur\", validateAndUpdate);\n    inputComponent.on(\"change\", validateAndUpdate);\n}\nfunction createValidationFunction(inputComponent, validationFn, errorMessage) {\n    return ()=>{\n        const inputElement = inputComponent.getElement();\n        const isValid = validationFn(inputElement.value);\n        return isValid ? \"\" : errorMessage;\n    };\n}\nfunction createCheckboxValidationFunction(checkboxComponent, errorMessage) {\n    return ()=>{\n        const checkbox = checkboxComponent.getElement();\n        return checkbox.checked ? \"\" : errorMessage;\n    };\n}\nfunction setupCheckboxValidation(checkboxComponent, checkboxErrorComponent, errorMessage) {\n    const validate = createCheckboxValidationFunction(checkboxComponent, errorMessage);\n    setupValidation(checkboxComponent, checkboxErrorComponent, validate);\n}\nfunction validateSelectedSessions(selectedSessions, errorMessageComponent, errorMessage) {\n    const isValid = selectedSessions.length > 0 && selectedSessions.some((session)=>session.studentIds.length > 0);\n    if (!isValid) toggleError(errorMessageComponent, errorMessage, true);\n    else toggleError(errorMessageComponent, \"\", false);\n    return isValid;\n}\nfunction setProfilePicUrl(imageUrl) {\n    const user = (0, _authConfig.userAuth).getUser();\n    if (user && user.profile) {\n        // Ensure the profile_picture object exists\n        user.profile.profile_pic = user.profile.profile_pic || {\n            url: \"\"\n        };\n        // Set the profile picture URL\n        user.profile.profile_pic.url = imageUrl;\n        (0, _authConfig.userAuth).setUser(user);\n        localStorage.setItem(\"auth_user\", JSON.stringify(user));\n    }\n}\nfunction setupFileUpload(fileInput, fileInputError, fileInputSuccess, uploadEndpoint) {\n    const profilePictureImage = new (0, _image.WFImage)(\"#profilePictureImage\");\n    const uploadAnimation = new (0, _core.WFComponent)(\"#uploadAnimation\");\n    const overlay = new (0, _core.WFComponent)(\".drop-zone\");\n    let dragCounter = 0;\n    return new Promise((resolve)=>{\n        const handleFile = (file)=>{\n            // Validate file type and size\n            const validTypes = [\n                \"image/jpeg\",\n                \"image/jpg\"\n            ];\n            const maxSizeInBytes = 2097152; // 2 MB\n            if (!validTypes.includes(file.type) && !/\\.(jpg|jpeg)$/i.test(file.name)) {\n                const errorMessage = \"Only JPEG images are allowed.\";\n                toggleError(fileInputError, errorMessage, true);\n                // Reset file input value\n                fileInput.getElement().value = \"\";\n                return;\n            }\n            if (file.size > maxSizeInBytes) {\n                const errorMessage = \"File size must be less than 2 MB.\";\n                toggleError(fileInputError, errorMessage, true);\n                // Reset file input value\n                fileInput.getElement().value = \"\";\n                return;\n            }\n            // Show upload animation immediately\n            uploadAnimation.setStyle({\n                display: \"flex\"\n            });\n            // Hide error and success messages\n            fileInputError.setStyle({\n                display: \"none\"\n            });\n            fileInputSuccess.setStyle({\n                display: \"none\"\n            });\n            const reader = new FileReader();\n            // Display preview image as soon as the file is loaded into memory\n            reader.onload = (event)=>{\n                // Set the preview image for the profile picture\n                const result = event.target?.result;\n                profilePictureImage.setImage(result);\n                // Hide overlay once the image is set\n                overlay.setStyle({\n                    display: \"none\"\n                });\n            };\n            reader.readAsDataURL(file);\n            const formData = new FormData();\n            formData.append(\"profile_picture\", file);\n            const existingStudent = localStorage.getItem(\"current_student\");\n            if (existingStudent) {\n                const student = JSON.parse(existingStudent);\n                formData.append(\"student_profile_id\", student.id.toString());\n            }\n            // Send the file to the server\n            const postRequest = (0, _apiConfig.apiClient).post(uploadEndpoint, {\n                data: formData\n            });\n            postRequest.onData((response)=>{\n                if (response.status === \"success\") {\n                    const imageUrl = response.url.profile_pic.url;\n                    // Update the profile picture URL in the user session and local storage\n                    setProfilePicUrl(imageUrl);\n                    // Update the image for other parts of the UI as well\n                    profilePictureImage.setImage(imageUrl);\n                    // Store the URL in local storage\n                    localStorage.setItem(\"image_upload\", imageUrl);\n                    // Show success message and hide upload animation\n                    fileInputSuccess.setStyle({\n                        display: \"flex\"\n                    });\n                    uploadAnimation.setStyle({\n                        display: \"none\"\n                    });\n                    // Resolve with the uploaded image URL\n                    resolve(imageUrl);\n                } else {\n                    const errorMessage = \"Failed to upload profile picture.\";\n                    toggleError(fileInputError, errorMessage, true);\n                    uploadAnimation.setStyle({\n                        display: \"none\"\n                    });\n                    overlay.setStyle({\n                        display: \"none\"\n                    });\n                    dragCounter = 0;\n                    // Reset file input value\n                    fileInput.getElement().value = \"\";\n                }\n            });\n            postRequest.onError((error)=>{\n                let errorMessage = \"An error occurred during image upload.\";\n                if (error.response && error.response.data) errorMessage = error.response.data.message || errorMessage;\n                else if (error.message) errorMessage = error.message;\n                // Show error message and hide upload animation\n                toggleError(fileInputError, errorMessage, true);\n                uploadAnimation.setStyle({\n                    display: \"none\"\n                });\n                overlay.setStyle({\n                    display: \"none\"\n                });\n                dragCounter = 0;\n                // Reset file input value\n                fileInput.getElement().value = \"\";\n            });\n            // Make the API call\n            postRequest.fetch();\n        };\n        // Event listener for file input changes\n        fileInput.on(\"change\", ()=>{\n            const file = fileInput.getElement().files?.[0];\n            if (file) handleFile(file);\n        });\n        // Event listeners for drag-and-drop\n        const dragZoneElement = document.body;\n        dragZoneElement.addEventListener(\"dragenter\", (event)=>{\n            event.preventDefault();\n            dragCounter++;\n            if (dragCounter === 1) overlay.setStyle({\n                display: \"flex\"\n            });\n        });\n        dragZoneElement.addEventListener(\"dragleave\", ()=>{\n            dragCounter--;\n            if (dragCounter <= 0) {\n                overlay.setStyle({\n                    display: \"none\"\n                });\n                dragCounter = 0;\n            }\n        });\n        dragZoneElement.addEventListener(\"dragover\", (event)=>{\n            event.preventDefault();\n        });\n        dragZoneElement.addEventListener(\"drop\", (event)=>{\n            event.preventDefault();\n            const files = event.dataTransfer?.files;\n            if (files?.length) handleFile(files[0]);\n            overlay.setStyle({\n                display: \"none\"\n            });\n            dragCounter = 0;\n        });\n    });\n}\nconst formatPhoneNumber = (value)=>{\n    const cleaned = value.replace(/\\D/g, \"\"); // Remove all non-digit characters\n    if (cleaned.length <= 3) return cleaned;\n    else if (cleaned.length <= 6) return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3)}`;\n    else if (cleaned.length <= 10) return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6)}`;\n    else // If more than 10 digits, truncate the extra digits\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6, 10)}`;\n};\n\n},{\"@xatom/core\":\"65YBq\",\"@xatom/image\":\"bavwf\",\"../api/apiConfig\":\"dUmIV\",\"../auth/authConfig\":\"dHwPR\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"bavwf\":[function(require,module,exports) {\nvar t = require(\"d023971cccd819e3\");\nvar e, r, s, i, o, n, u = {};\ne = u, r = \"WFImage\", s = ()=>c, Object.defineProperty(e, r, {\n    get: s,\n    set: i,\n    enumerable: !0,\n    configurable: !0\n});\nclass c extends t.WFComponent {\n    constructor(t){\n        super(t);\n    }\n    getImageConfig() {\n        return this._config;\n    }\n    getSrc() {\n        return this.getAttribute(\"src\");\n    }\n    getSizes() {\n        return this.getAttribute(\"sizes\");\n    }\n    getSrcSet() {\n        return this.getAttribute(\"srcset\");\n    }\n    getLoading() {\n        return this.getAttribute(\"loading\");\n    }\n    onLoad(t) {\n        return this.on(\"load\", t), ()=>{\n            this.off(\"load\", t);\n        };\n    }\n    onLoadError(t) {\n        return this.on(\"error\", t), ()=>{\n            this.off(\"error\", t);\n        };\n    }\n    setImage(t) {\n        if (\"string\" == typeof t) this.setAttribute(\"src\", t), this.removeAttribute(\"srcset\"), this.removeAttribute(\"sizes\");\n        else {\n            if (this.setAttribute(\"src\", t.src), \"object\" == typeof t && t.srcSet && t.srcSet.length && t.sizes && t.sizes.length) {\n                const e = t.srcSet.map((t)=>`${t.url} ${t.size}`).join(\", \");\n                this.setAttribute(\"srcset\", e);\n            } else this.removeAttribute(\"srcset\"), this.removeAttribute(\"sizes\");\n            t.loading && this.setAttribute(\"loading\", t.loading);\n        }\n    }\n}\no = module.exports, n = u, Object.keys(n).forEach(function(t) {\n    \"default\" === t || \"__esModule\" === t || o.hasOwnProperty(t) || Object.defineProperty(o, t, {\n        enumerable: !0,\n        get: function() {\n            return n[t];\n        }\n    });\n});\n\n},{\"d023971cccd819e3\":\"65YBq\"}],\"gu2z7\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"validateNotEmpty\", ()=>validateNotEmpty);\nparcelHelpers.export(exports, \"validateEmail\", ()=>validateEmail);\nparcelHelpers.export(exports, \"validateEmailOptional\", ()=>validateEmailOptional);\nparcelHelpers.export(exports, \"validatePasswordRequirements\", ()=>validatePasswordRequirements);\nparcelHelpers.export(exports, \"validateCheckbox\", ()=>validateCheckbox);\nparcelHelpers.export(exports, \"validatePasswordsMatch\", ()=>validatePasswordsMatch);\nparcelHelpers.export(exports, \"validateSelectField\", ()=>validateSelectField);\nparcelHelpers.export(exports, \"validatePhoneNumber\", ()=>validatePhoneNumber);\nparcelHelpers.export(exports, \"validatePhoneNumberOptional\", ()=>validatePhoneNumberOptional);\nfunction validateNotEmpty(input) {\n    return input !== undefined && input.trim() !== \"\";\n}\nfunction validateEmail(input) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(input);\n}\nconst validateEmailOptional = (value)=>{\n    if (value.trim() === \"\") // Email is optional, so empty string is valid\n    return true;\n    // Validate the email format if not empty\n    return validateEmail(value);\n};\nfunction validatePasswordRequirements(password) {\n    const hasLowercase = /[a-z]/.test(password);\n    const hasUppercase = /[A-Z]/.test(password);\n    const hasDigit = /\\d/.test(password);\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n    const hasValidLength = password.length >= 8;\n    return hasLowercase && hasUppercase && hasDigit && hasSpecialChar && hasValidLength;\n}\nfunction validateCheckbox(checked) {\n    return checked;\n}\nfunction validatePasswordsMatch(originalPassword, confirmPassword) {\n    return originalPassword === confirmPassword;\n}\nfunction validateSelectField(input) {\n    return input !== undefined && input !== \"N/A\";\n}\nfunction validatePhoneNumber(input) {\n    const phoneRegex = /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/;\n    return phoneRegex.test(input);\n}\nconst validatePhoneNumberOptional = (value)=>{\n    if (value.trim() === \"\") // Phone number is optional, so empty string is valid\n    return true;\n    // Validate the phone number format if not empty\n    return validatePhoneNumber(value);\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"ejxGx\":[function(require,module,exports) {\nvar e = require(\"1a87f3bc23b90fa3\"), s = require(\"37b5fd8189a9f4c7\");\nvar t, i, r, l, d = {};\nt = d, i = \"WFSlider\", r = ()=>o, Object.defineProperty(t, i, {\n    get: r,\n    set: l,\n    enumerable: !0,\n    configurable: !0\n});\nconst n = window.jQuery;\nclass o extends e.WFComponent {\n    _sliderConfig = {};\n    _slides = [];\n    _defaultSwipeDisabled = !1;\n    _index = 0;\n    _listeners = new Map;\n    constructor(e){\n        super(e), this.init();\n    }\n    init() {\n        this._defaultSwipeDisabled = \"true\" === this.getAttribute(\"data-disable-swipe\"), this._sliderConfig = n(this.getElement()).data()[\".wSlider\"], this._slides = Array.from(this._sliderConfig.slides).map((s)=>new e.WFComponent(s)), this._mask = new e.WFComponent(this._sliderConfig.mask[0]), this._nav = new e.WFComponent(this._sliderConfig.nav[0]), this._left = new e.WFComponent(this._sliderConfig.left[0]), this._right = new e.WFComponent(this._sliderConfig.right[0]), function(e, s) {\n            if (!document.styleSheets) return;\n            if (0 == document.getElementsByTagName(\"head\").length) return;\n            let t, i;\n            if (document.styleSheets.length > 0) {\n                for(var r = 0, l = document.styleSheets.length; r < l; r++)if (!document.styleSheets[r].disabled) {\n                    var d = document.styleSheets[r].media;\n                    if (i = typeof d, \"string\" === i ? \"\" !== d && -1 === d.indexOf(\"screen\") || (t = document.styleSheets[r]) : \"object\" == i && (\"\" !== d.mediaText && -1 === d.mediaText.indexOf(\"screen\") || (t = document.styleSheets[r])), void 0 !== t) break;\n                }\n            }\n            if (void 0 === t) {\n                var n = document.createElement(\"style\");\n                for(n.type = \"text/css\", document.getElementsByTagName(\"head\")[0].appendChild(n), r = 0; r < document.styleSheets.length; r++)document.styleSheets[r].disabled || (t = document.styleSheets[r]);\n                i = typeof t.media;\n            }\n            if (\"string\" === i) {\n                for(r = 0, l = t.rules.length; r < l; r++)if (t.rules[r].selectorText && t.rules[r].selectorText.toLowerCase() == e.toLowerCase()) return void (t.rules[r].style.cssText = s);\n                t.addRule(e, s);\n            } else if (\"object\" === i) {\n                var o = t.cssRules ? t.cssRules.length : 0;\n                for(r = 0; r < o; r++)if (t.cssRules[r].selectorText && t.cssRules[r].selectorText.toLowerCase() == e.toLowerCase()) return void (t.cssRules[r].style.cssText = s);\n                t.insertRule(e + \"{\" + s + \"}\", o);\n            }\n        }(\".xa-slider-disable\", \"display:none !important;\");\n        const s = this;\n        Object.defineProperty(s._sliderConfig, \"index\", {\n            set: function(e) {\n                s._index = e, s._triggerOnChange();\n            },\n            get: function() {\n                return s._index;\n            }\n        }), this.refereshSlides();\n    }\n    reloadWFSlider() {\n        window.Webflow.require(\"slider\").destroy(), window.Webflow.require(\"slider\").redraw(), window.Webflow.require(\"slider\").ready();\n    }\n    refereshSlides() {\n        this._mask.getChildAsComponents(\".w-slide\").forEach((e)=>e.remove()), this._slides.reverse().forEach((e)=>{\n            this._mask.getElement().prepend(e.getElement());\n        }), this._slides.reverse(), this.reloadWFSlider();\n    }\n    getActiveSlide() {\n        return this._slides[this._index];\n    }\n    getAllSlides() {\n        return [\n            ...this._slides\n        ];\n    }\n    getSlideByIndex(e) {\n        return this._slides[e];\n    }\n    getActiveSlideIndex() {\n        return this._index;\n    }\n    getPreviousSlideIndex() {\n        return this._sliderConfig.previous;\n    }\n    goNext() {\n        this._sliderConfig.right.click();\n    }\n    goPrevious() {\n        this._sliderConfig.left.click();\n    }\n    goToIndex(e) {\n        e >= 0 && e < this._slides.length && (console.log(e), n(this._sliderConfig.nav.children()[e]).click());\n    }\n    addSlide(s, t = {}) {\n        const i = t.index, r = t.cssClass, l = (0, e.createComponent)(\"div\");\n        l.addCssClass(\"w-slide\"), r && l.addCssClass(r), l.appendChild(s);\n        const d = \"number\" != typeof i ? -1 : i, n = this._slides;\n        d >= 0 && d <= n.length ? n.splice(i, 0, l) : n.push(l), this._slides = [\n            ...n\n        ], this.refereshSlides();\n    }\n    removeSlide(e) {\n        const s = [\n            ...this._slides\n        ];\n        e >= 0 && e < s.length && s.splice(e, 1), this._slides = [\n            ...s\n        ], console.log(this._slides), this.refereshSlides();\n    }\n    getSlideNav() {\n        return this._nav;\n    }\n    setSlideNavigationState(e) {\n        e ? (this._left.removeCssClass(\"xa-slider-disable\"), this._right.removeCssClass(\"xa-slider-disable\"), this._nav.removeCssClass(\"xa-slider-disable\"), this.setAttribute(\"data-disable-swipe\", this._defaultSwipeDisabled ? \"true\" : \"false\")) : (this._left.addCssClass(\"xa-slider-disable\"), this._right.addCssClass(\"xa-slider-disable\"), this._nav.addCssClass(\"xa-slider-disable\"), this.setAttribute(\"data-disable-swipe\", \"true\")), this.reloadWFSlider();\n    }\n    onSlideChange(e) {\n        const t = (0, s.v4)();\n        return this._listeners.set(t, e), ()=>{\n            this._listeners.delete(t);\n        };\n    }\n    _triggerOnChange() {\n        Array.from(this._listeners.values()).forEach((e)=>{\n            e(this._index, this._sliderConfig.previous);\n        });\n    }\n    getConfig() {\n        return this._sliderConfig;\n    }\n}\nvar a, h;\na = module.exports, h = d, Object.keys(h).forEach(function(e) {\n    \"default\" === e || \"__esModule\" === e || a.hasOwnProperty(e) || Object.defineProperty(a, e, {\n        enumerable: !0,\n        get: function() {\n            return h[e];\n        }\n    });\n});\n\n},{\"1a87f3bc23b90fa3\":\"65YBq\",\"37b5fd8189a9f4c7\":\"faiuA\"}],\"9yhwg\":[function(require,module,exports) {\n// sidebarIndicators.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeSidebarIndicators\", ()=>initializeSidebarIndicators);\nparcelHelpers.export(exports, \"setActiveStep\", ()=>setActiveStep);\nparcelHelpers.export(exports, \"unsetActiveStep\", ()=>unsetActiveStep);\nparcelHelpers.export(exports, \"markStepAsCompleted\", ()=>markStepAsCompleted);\nparcelHelpers.export(exports, \"unmarkStepAsCompleted\", ()=>unmarkStepAsCompleted);\nvar _core = require(\"@xatom/core\");\nvar _authConfig = require(\"../../../auth/authConfig\");\nconst initializeSidebarIndicators = ()=>{\n    const steps = [\n        {\n            id: \"sidebarStepOne\",\n            index: 1\n        },\n        {\n            id: \"sidebarStepTwo\",\n            index: 2\n        },\n        {\n            id: \"sidebarStepThree\",\n            index: 3\n        },\n        {\n            id: \"sidebarStepFour\",\n            index: 4\n        },\n        {\n            id: \"sidebarStepFive\",\n            index: 5\n        }\n    ];\n    // Set sidebar first name from userAuth\n    const firstNameText = new (0, _core.WFComponent)(\"#firstNameText\");\n    const user = (0, _authConfig.userAuth).getUser();\n    if (user && user.profile && user.profile.first_name) firstNameText.setText(user.profile.first_name);\n    else firstNameText.setText(\"Friend\");\n    steps.forEach((step)=>{\n        const stepComponent = new (0, _core.WFComponent)(`#${step.id}`);\n        let isCompleted = false; // Track the completed state\n        stepComponent.on(\"click\", ()=>{\n            if (isCompleted) isCompleted = false;\n            else isCompleted = true;\n        });\n    });\n};\nconst setActiveStep = (stepNumber)=>{\n    const stepId = getStepId(stepNumber);\n    const stepComponent = new (0, _core.WFComponent)(`#${stepId}`);\n    stepComponent.addCssClass(\"is-active\");\n};\nconst unsetActiveStep = (stepNumber)=>{\n    const stepId = getStepId(stepNumber);\n    const stepComponent = new (0, _core.WFComponent)(`#${stepId}`);\n    stepComponent.removeCssClass(\"is-active\");\n};\nconst markStepAsCompleted = (stepNumber)=>{\n    const stepId = getStepId(stepNumber);\n    const step = new (0, _core.WFComponent)(`#${stepId}`);\n    step.getElement().click(); // Programmatically trigger the click event to mark as complete\n};\nconst unmarkStepAsCompleted = (stepNumber)=>{\n    const stepId = getStepId(stepNumber);\n    const step = new (0, _core.WFComponent)(`#${stepId}`);\n    step.getElement().click(); // Programmatically trigger the click event to unmark as complete\n};\n// Helper function to get the ID string for a step\nconst getStepId = (stepNumber)=>{\n    const stepMap = {\n        1: \"sidebarStepOne\",\n        2: \"sidebarStepTwo\",\n        3: \"sidebarStepThree\",\n        4: \"sidebarStepFour\",\n        5: \"sidebarStepFive\"\n    };\n    return stepMap[stepNumber] || `sidebarStep${stepNumber}`;\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../../../auth/authConfig\":\"dHwPR\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"euoMA\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"displayActionRequiredDialog\", ()=>displayActionRequiredDialog);\nparcelHelpers.export(exports, \"checkForStudents\", ()=>checkForStudents);\nvar _core = require(\"@xatom/core\");\nvar _students = require(\"../../../api/students\");\nconst displayActionRequiredDialog = ()=>{\n    const actionRequiredDialog = new (0, _core.WFComponent)(\"#actionRequiredDialog\");\n    const alertDialogAnimationTrigger = new (0, _core.WFComponent)(\"#alertDialogAnimationTrigger\");\n    const pageMainElement = document.querySelector(\".page_main\");\n    // Show the dialog\n    actionRequiredDialog.getElement().showModal();\n    // Trigger any necessary animations\n    alertDialogAnimationTrigger.getElement().click();\n    // Set the data-brand attribute of .page_main to 5\n    if (pageMainElement) pageMainElement.setAttribute(\"data-brand\", \"5\");\n    // Prevent closing the dialog\n    actionRequiredDialog.getElement().addEventListener(\"cancel\", (event)=>{\n        event.preventDefault();\n    });\n    actionRequiredDialog.getElement().addEventListener(\"close\", (event)=>{\n        event.preventDefault();\n    });\n    // Prevent closing the dialog with the escape key\n    const preventEscapeClose = (event)=>{\n        if (event.key === \"Escape\") event.preventDefault();\n    };\n    document.addEventListener(\"keydown\", preventEscapeClose);\n};\nconst checkForStudents = async ()=>{\n    try {\n        const { students, showDialog } = await (0, _students.fetchStudentProfiles)();\n        if (showDialog) displayActionRequiredDialog();\n    // Handle students data as needed\n    // For example, save to state, display, etc.\n    } catch (error) {\n        console.error(\"Error during registration initialization:\", error);\n    }\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../../../api/students\":\"9PiOd\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"fW1lZ\":[function(require,module,exports) {\n// src/navigation/urlParamNavigator.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeStateFromUrlParams\", ()=>initializeStateFromUrlParams);\nvar _selectedWorkshop = require(\"../state/selectedWorkshop\");\nvar _programList = require(\"../../registration/programList\");\nvar _workshopList = require(\"../../registration/workshopList\");\nvar _sessionsList = require(\"../../registration/sessionsList\");\nvar _sidebarIndicators = require(\"../../registration/components/sidebarIndicators\");\nvar _core = require(\"@xatom/core\"); // Import WFComponent\nvar _apiConfig = require(\"../../../api/apiConfig\"); // Import apiClient\n// **Import the initializeAlertBoxEarly function**\nvar _alertBoxEarly = require(\"../../registration/components/alertBoxEarly\");\n// Function to parse URL parameters\nconst getUrlParams = ()=>{\n    const params = new URLSearchParams(window.location.search);\n    const programId = params.get(\"program\");\n    const workshopId = params.get(\"workshop\");\n    const cancelId = params.get(\"cancel\"); // Extract 'cancel' parameter\n    return {\n        programId,\n        workshopId,\n        cancelId\n    };\n};\nconst initializeStateFromUrlParams = async (slider)=>{\n    const { programId, workshopId, cancelId } = getUrlParams();\n    (0, _sidebarIndicators.initializeSidebarIndicators)(); // Initialize sidebar indicators\n    const loadingWall = new (0, _core.WFComponent)(\".loading_wall\");\n    const animationDuration = 500; // Duration in milliseconds matching the CSS transition time\n    // Check if any relevant URL parameters are present\n    if (programId || workshopId || cancelId) {\n        // Show the loading wall\n        loadingWall.setStyle({\n            display: \"flex\"\n        });\n        try {\n            // Handle cancellation if 'cancel' parameter is present\n            if (cancelId) {\n                // Create the DELETE request using AxiosClient\n                const deleteSubscription = (0, _apiConfig.apiClient).delete(`/subscriptions/${cancelId}`);\n                // Set up listeners for the DELETE request\n                await new Promise((resolve, reject)=>{\n                    deleteSubscription.onData(()=>{\n                        console.log(`Subscription ${cancelId} canceled successfully`);\n                        // Optional: Remove 'cancel' parameter from the URL to prevent repeated cancellations\n                        const params = new URLSearchParams(window.location.search);\n                        params.delete(\"cancel\");\n                        const newUrl = `${window.location.pathname}${params.toString() ? `?${params.toString()}` : \"\"}`;\n                        window.history.replaceState({}, document.title, newUrl);\n                        resolve(); // Resolve the promise on successful deletion\n                    });\n                    deleteSubscription.onError((error)=>{\n                        console.error(`Failed to cancel subscription ${cancelId}:`, error);\n                        // Optional: Display an error message to the user here\n                        reject(error); // Reject the promise on error\n                    });\n                    // Initiate the DELETE request\n                    deleteSubscription.fetch();\n                });\n            }\n            // Initialize the program list\n            await (0, _programList.initializeProgramList)();\n            if (programId) {\n                // Select the program based on the URL parameter\n                const programComponent = document.querySelector(`input[value=\"${programId}\"]`);\n                if (programComponent) {\n                    programComponent.checked = true;\n                    programComponent.dispatchEvent(new Event(\"change\"));\n                    (0, _sidebarIndicators.markStepAsCompleted)(1);\n                    (0, _sidebarIndicators.setActiveStep)(2);\n                    // Initialize the workshop list for the selected program\n                    await (0, _workshopList.initializeWorkshopList)(programId);\n                    if (workshopId && workshopId === \"none\") {\n                        // Skip workshop selection and navigate to session list initialization\n                        (0, _selectedWorkshop.resetSelectedWorkshop)();\n                        (0, _sidebarIndicators.markStepAsCompleted)(2);\n                        (0, _sidebarIndicators.setActiveStep)(3);\n                        await (0, _sessionsList.initializeSessionList)(null, programId);\n                        slider.goToIndex(2); // Navigate to the session selection slide\n                    } else if (workshopId) {\n                        // Select the workshop based on the URL parameter\n                        const workshopComponent = document.querySelector(`input[value=\"${workshopId}\"]`);\n                        if (workshopComponent) {\n                            workshopComponent.checked = true;\n                            workshopComponent.dispatchEvent(new Event(\"change\"));\n                            (0, _sidebarIndicators.markStepAsCompleted)(2);\n                            (0, _sidebarIndicators.setActiveStep)(3);\n                            // Initialize the session list for the selected workshop\n                            await (0, _sessionsList.initializeSessionList)(workshopId, programId);\n                            slider.goToIndex(2); // Navigate to the session selection slide\n                        } else {\n                            console.error(`Workshop with ID ${workshopId} not found`);\n                            slider.goToIndex(1); // Navigate to the workshop selection slide\n                        }\n                    } else {\n                        (0, _selectedWorkshop.resetSelectedWorkshop)();\n                        slider.goToIndex(1); // Navigate to the workshop selection slide\n                    }\n                } else {\n                    console.error(`Program with ID ${programId} not found`);\n                    slider.goToIndex(0); // Navigate to the program selection slide\n                }\n            } else slider.goToIndex(0); // Navigate to the first slide if no program selected\n        } catch (error) {\n            console.error(\"Error initializing state from URL parameters:\", error);\n            slider.goToIndex(0); // Navigate to the program selection slide on error\n        } finally{\n            // Hide the loading wall after completing all initializations\n            loadingWall.addCssClass(\"hidden\");\n            setTimeout(()=>loadingWall.setStyle({\n                    display: \"none\"\n                }), animationDuration);\n            // **Initialize the early registration alert box**\n            (0, _alertBoxEarly.initializeAlertBoxEarly)();\n        }\n    }\n};\n\n},{\"../state/selectedWorkshop\":\"1ahaO\",\"../../registration/programList\":\"9PvQg\",\"../../registration/workshopList\":\"caQhI\",\"../../registration/sessionsList\":\"8yBQ3\",\"../../registration/components/sidebarIndicators\":\"9yhwg\",\"@xatom/core\":\"65YBq\",\"../../../api/apiConfig\":\"dUmIV\",\"../../registration/components/alertBoxEarly\":\"8h0nb\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}]},[], null, \"parcelRequired346\")\n\n//# sourceMappingURL=programRegistration.3cd8a827.js.map\n","// programRegistration.ts\nimport { initializeProgramList } from \"./programList\";\nimport { initializeWorkshopList } from \"./workshopList\";\nimport {\n  initializeSessionList,\n  validateAndSubmitSessions,\n} from \"./sessionsList\";\nimport { initializeCheckoutPreview } from \"./checkoutPreview\";\nimport { loadSelectedProgram } from \"./state/selectedProgram\";\nimport { loadSelectedWorkshop } from \"./state/selectedWorkshop\";\nimport { WFComponent } from \"@xatom/core\";\nimport { WFSlider } from \"@xatom/slider\";\nimport {\n  initializeSidebarIndicators,\n  setActiveStep,\n  markStepAsCompleted,\n  unmarkStepAsCompleted,\n  unsetActiveStep,\n} from \"./components/sidebarIndicators\";\nimport { resetSelectedWorkshop } from \"./state/selectedWorkshop\";\nimport { checkForStudents } from \"./components/dialogHandler\";\nimport { initializeStateFromUrlParams } from \"./components/urlParamNavigator\";\nimport { loadState } from \"./state/registrationState\"; // Import the registration state\nimport { apiClient } from \"../../api/apiConfig\"; // Import API client for submission\n\ninterface BeginCheckout {\n  checkout_url: string;\n  setup_url: string;\n}\n\nexport const programRegistration = async () => {\n  // Clear local storage\n  window.onload = function () {\n    // Clear the value of registrationState from local storage\n    localStorage.removeItem(\"registrationState\");\n  };\n  // Initialize the first step of the registration form (Program Selection)\n  initializeSidebarIndicators();\n  setActiveStep(1);\n  await initializeProgramList();\n  await checkForStudents();\n\n  // Initialize the slider component\n  const slider = new WFSlider(\".multi-step_form_slider\");\n  setupNavigationHandlers(slider);\n  await initializeStateFromUrlParams(slider);\n};\n\n// Setup event listeners for navigation buttons using the slider\nconst setupNavigationHandlers = (slider: WFSlider) => {\n  const submitStepOne = new WFComponent(\"#submitStepOne\");\n  const submitStepOneError = new WFComponent(\"#submitStepOneError\");\n  const stepOneRequestingAnimation = new WFComponent(\n    \"#stepOneRequestingAnimation\"\n  );\n\n  submitStepOne.on(\"click\", async (event) => {\n    event.preventDefault(); // Prevent default form submission behavior\n\n    // Validate the selected program\n    const selectedProgram = loadSelectedProgram();\n    if (!selectedProgram.id) {\n      submitStepOneError.setText(\"Please select a program before proceeding.\");\n      submitStepOneError.setStyle({ display: \"block\" });\n      return;\n    }\n\n    // Hide the error message if any\n    submitStepOneError.setStyle({ display: \"none\" });\n\n    // Show the loading animation\n    stepOneRequestingAnimation.setStyle({ display: \"block\" });\n\n    try {\n      // Proceed to the next step: Workshop Selection\n      await initializeWorkshopList(selectedProgram.id);\n\n      // Check if the workshop list is empty or not\n      const workshopListContainer = document.querySelector(\"#selectWorkshopList\");\n      const workshopItems =\n        workshopListContainer?.querySelectorAll(\"#cardSelectWorkshop\") || [];\n      const isWorkshopListEmpty = workshopItems.length === 0;\n\n      if (isWorkshopListEmpty) {\n        // No workshops available, skip to Step 3\n        resetSelectedWorkshop();\n\n        // Initialize the session list with undefined workshopId\n        await initializeSessionList(undefined, selectedProgram.id);\n\n        // Move to Step 3\n        slider.goNext(); // From Step 1 to Step 2\n        markStepAsCompleted(1);\n        setActiveStep(2);\n\n        slider.goNext(); // From Step 2 to Step 3\n        markStepAsCompleted(2);\n        setActiveStep(3);\n      } else {\n        // Workshops are available, proceed to Step 2 as usual\n        slider.goNext();\n        markStepAsCompleted(1);\n        setActiveStep(2);\n        resetSelectedWorkshop();\n      }\n    } catch (error) {\n      console.error(\"Error loading workshops:\", error);\n    } finally {\n      // Hide the loading animation\n      stepOneRequestingAnimation.setStyle({ display: \"none\" });\n    }\n  });\n\n  const backStepTwo = new WFComponent(\"#backStepTwo\");\n  backStepTwo.on(\"click\", () => {\n    // Move back to the first step\n    slider.goPrevious();\n    unmarkStepAsCompleted(1);\n    unsetActiveStep(2);\n    resetSelectedWorkshop();\n  });\n\n  const submitStepTwo = new WFComponent(\"#submitStepTwo\");\n  const stepTwoRequestingAnimation = new WFComponent(\n    \"#stepTwoRequestingAnimation\"\n  );\n  const submitStepTwoError = new WFComponent(\"#submitStepTwoError\");\n\n  submitStepTwo.on(\"click\", async (event) => {\n    event.preventDefault();\n\n    // Get the selected workshop and program from the state\n    const selectedWorkshop = loadSelectedWorkshop();\n    const selectedProgram = loadSelectedProgram();\n\n    // Check if the workshop list is empty or not\n    const workshopListContainer = document.querySelector(\"#selectWorkshopList\");\n    const workshopItems =\n      workshopListContainer?.querySelectorAll(\"#cardSelectWorkshop\") || [];\n    const isWorkshopListEmpty = workshopItems.length === 0;\n\n    if (!isWorkshopListEmpty && !selectedWorkshop.id) {\n      submitStepTwoError.setText(\"Please select a workshop before proceeding.\");\n      submitStepTwoError.setStyle({ display: \"block\" });\n      return;\n    }\n\n    // Hide the error message if any\n    submitStepTwoError.setStyle({ display: \"none\" });\n\n    // Show the loading animation\n    stepTwoRequestingAnimation.setStyle({ display: \"block\" });\n\n    try {\n      // Initialize the session list\n      await initializeSessionList(selectedWorkshop.id, selectedProgram.id);\n\n      // Move to the next slide\n      slider.goNext();\n      markStepAsCompleted(2);\n      setActiveStep(3);\n    } catch (error) {\n      console.error(\"Error loading sessions:\", error);\n    } finally {\n      // Hide the loading animation\n      stepTwoRequestingAnimation.setStyle({ display: \"none\" });\n    }\n  });\n\n  const backStepThree = new WFComponent(\"#backStepThree\");\n  backStepThree.on(\"click\", () => {\n    // Move back to the workshop selection step\n    slider.goPrevious();\n    unmarkStepAsCompleted(2);\n    unsetActiveStep(3);\n  });\n\n  const submitStepThree = new WFComponent(\"#submitStepThree\");\n  const stepThreeRequestingAnimation = new WFComponent(\n    \"#stepThreeRequestingAnimation\"\n  );\n  const submitStepThreeError = new WFComponent(\"#submitStepThreeError\");\n\n  submitStepThree.on(\"click\", async (event) => {\n    event.preventDefault();\n\n    // Show the loading animation\n    stepThreeRequestingAnimation.setStyle({ display: \"block\" });\n\n    try {\n      // Validate and submit sessions\n      const success = await validateAndSubmitSessions();\n      if (success) {\n        // Initialize checkout preview and move to the next slide\n        await initializeCheckoutPreview();\n        slider.goNext();\n        markStepAsCompleted(3);\n        setActiveStep(4);\n      } else {\n        submitStepThreeError.setText(\n          \"Please select sessions and students before proceeding.\"\n        );\n        submitStepThreeError.setStyle({ display: \"block\" });\n      }\n    } catch (error) {\n      console.error(\"Error during session submission:\", error);\n      submitStepThreeError.setText(\"An error occurred. Please try again.\");\n      submitStepThreeError.setStyle({ display: \"block\" });\n    } finally {\n      // Hide the loading animation\n      stepThreeRequestingAnimation.setStyle({ display: \"none\" });\n    }\n  });\n\n  const backStepFour = new WFComponent(\"#backStepFour\");\n  backStepFour.on(\"click\", () => {\n    // Move back to the session selection step\n    slider.goPrevious();\n    unmarkStepAsCompleted(3);\n    unsetActiveStep(4);\n  });\n\n  const submitStepFour = new WFComponent(\"#submitStepFour\");\n  const stepFourRequestingAnimation = new WFComponent(\n    \"#stepFourRequestingAnimation\"\n  );\n  const submitStepFourError = new WFComponent(\"#submitStepFourError\");\n\n  submitStepFour.on(\"click\", async (event) => {\n    event.preventDefault();\n\n    // Show the loading animation\n    stepFourRequestingAnimation.setStyle({ display: \"block\" });\n\n    try {\n      // Load the current registration state\n      const registrationState = loadState();\n\n      // Submit the registration state to the /session_registrations/begin_checkout endpoint\n      const response = await apiClient\n        .post<BeginCheckout>(\"/session_registrations/begin_checkout\", {\n          data: registrationState,\n        })\n        .fetch();\n\n      // Handle the response (e.g., redirect to the payment page or show a success message)\n      console.log(\"Registration checkout response:\", response);\n\n      // Mark Step 4 as completed\n      markStepAsCompleted(4);\n\n      // Redirect based on the response: prioritize `setup_url` if it exists, otherwise use `checkout_url`\n      if (response.setup_url) {\n        window.location.href = response.setup_url;\n      } else {\n        window.location.href = response.checkout_url;\n      }\n    } catch (error) {\n      console.error(\"Error during registration checkout:\", error);\n      submitStepFourError.setText(\n        \"An error occurred during registration checkout. Please try again.\"\n      );\n      submitStepFourError.setStyle({ display: \"block\" });\n    } finally {\n      // Hide the loading animation\n      stepFourRequestingAnimation.setStyle({ display: \"none\" });\n    }\n  });\n};","// Assuming the code is from a file like src/registration/initializeProgramList.ts\n\nimport { fetchPrograms, Program } from \"../../api/programs\";\nimport { saveSelectedProgram } from \"./state/selectedProgram\";\nimport { WFDynamicList, WFComponent } from \"@xatom/core\";\n\nlet initialTemplateState: HTMLElement | null = null;\n\nexport const initializeProgramList = async () => {\n  const containerSelector = \"#selectProgramList\";\n  const container = document.querySelector(containerSelector);\n  if (!container) {\n    console.error(\"Program list container not found\");\n    return;\n  }\n\n  // Save the initial state of the container template\n  if (!initialTemplateState) {\n    initialTemplateState = container.cloneNode(true) as HTMLElement;\n  } else {\n    // Reset container to the initial state\n    container.innerHTML = \"\";\n    container.appendChild(initialTemplateState.cloneNode(true));\n  }\n\n  const list = new WFDynamicList<Program>(containerSelector, {\n    rowSelector: \"#cardSelectProgram\",\n    loaderSelector: \"#programListLoading\",\n    emptySelector: \"#programListEmpty\",\n  });\n\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({ display: \"flex\" });\n    return loaderElement;\n  });\n\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({ display: \"flex\" });\n    return emptyElement;\n  });\n\n  try {\n    const programs = await fetchPrograms();\n    list.rowRenderer(({ rowData, rowElement, index }) => {\n      const programCard = new WFComponent(rowElement);\n      const programTitle = programCard.getChildAsComponent(\"#cardProgramTitle\");\n      const programDescription = programCard.getChildAsComponent(\n        \"#cardProgramDescription\"\n      );\n      const programAges = programCard.getChildAsComponent(\"#cardProgramAges\");\n      const programImage =\n        programCard.getChildAsComponent<HTMLImageElement>(\"#cardProgramImage\");\n      const programInput =\n        programCard.getChildAsComponent<HTMLInputElement>(\".input_card_input\");\n\n      // Generate a unique ID for each radio button\n      const inputId = `programInput-${index}`;\n      programInput.setAttribute(\"id\", inputId);\n      programInput.setAttribute(\"name\", \"program\"); // Group radio buttons\n      programInput.setAttribute(\"value\", rowData.id);\n\n      // Associate the label with the radio button\n      const programLabel = programCard.getChildAsComponent(\"label\");\n      programLabel.setAttribute(\"for\", inputId);\n\n      // Updated property access to match the response object\n      programTitle.setText(rowData.fieldData[\"name\"]);\n      programDescription.setText(rowData.fieldData[\"short-description\"]);\n      programAges.setText(rowData.fieldData[\"age-range\"]);\n      programImage.setAttribute(\"src\", rowData.fieldData[\"main-image\"].url);\n\n      // Get the #registrationTrue element inside the row\n      const registrationTrueElement =\n        programCard.getChildAsComponent(\"#registrationTrue\");\n\n      // Set display and input disabled state based on the 'registered' property\n      if (rowData.registered === true) {\n        registrationTrueElement.setStyle({ display: \"flex\" });\n        programInput.setAttribute(\"disabled\", \"true\");\n      } else {\n        registrationTrueElement.setStyle({ display: \"none\" });\n        programInput.removeAttribute(\"disabled\");\n      }\n\n      programInput.on(\"change\", () => {\n        saveSelectedProgram({\n          id: rowData.id,\n          name: rowData.fieldData[\"name\"],\n          imageUrl: rowData.fieldData[\"main-image\"].url,\n          ageRange: rowData.fieldData[\"age-range\"],\n        });\n      });\n\n      rowElement.setStyle({ display: \"flex\" });\n      return rowElement;\n    });\n\n    list.setData(programs);\n  } catch (error) {\n    console.error(\"Error loading programs:\", error);\n    list.setData([]);\n  }\n};\n","// api/programs.ts\nimport { apiClient } from \"./apiConfig\";\n\nexport interface Program {\n  id: string;\n  fieldData: {\n    name: string;\n    shortDescription: string;\n    ageRange: string;\n    mainImage: {\n      url: string;\n      alt: string | null;\n    };\n  };\n  registered?: boolean;\n}\n\ninterface ProgramApiResponse {\n  programs: Program[];\n}\n\n// Function to fetch programs from the server\nexport const fetchPrograms = async (): Promise<Program[]> => {\n  try {\n    const response = await apiClient\n      .get<ProgramApiResponse>(\"/registration/programs\")\n      .fetch();\n    return response.programs;\n  } catch (error) {\n    console.error(\"Error fetching programs:\", error);\n    throw error;\n  }\n};\n\n// Function to fetch program details by ID\nexport const fetchProgramById = async (\n  programId: string\n): Promise<Program | null> => {\n  try {\n    const programs = await fetchPrograms();\n    return programs.find((program) => program.id === programId) || null;\n  } catch (error) {\n    console.error(`Error fetching program with ID ${programId}:`, error);\n    return null;\n  }\n};\n","// state/selectedProgram.ts\n\nexport const loadSelectedProgram = () => {\n  const state = JSON.parse(localStorage.getItem(\"registrationState\") || \"{}\");\n  return {\n    id: state.selectedProgramId || null,\n    name: state.selectedProgramName || null,\n    imageUrl: state.selectedProgramImageUrl || null,\n    ageRange: state.selectedProgramAgeRange || null,\n  };\n};\n\nexport const saveSelectedProgram = (program: {\n  id: string;\n  name: string;\n  imageUrl: string;\n  ageRange: string;\n}) => {\n  const state = JSON.parse(localStorage.getItem(\"registrationState\") || \"{}\");\n  state.selectedProgramId = program.id;\n  state.selectedProgramName = program.name;\n  state.selectedProgramImageUrl = program.imageUrl;\n  state.selectedProgramAgeRange = program.ageRange;\n\n  console.log(\"Saving selected program to state:\", state); // Debug log\n\n  localStorage.setItem(\"registrationState\", JSON.stringify(state));\n};\n","import { fetchWorkshops, Workshop } from \"../../api/workshops\";\nimport { saveSelectedWorkshop } from \"./state/selectedWorkshop\";\nimport { WFDynamicList, WFComponent } from \"@xatom/core\";\n\nlet initialTemplateState: HTMLElement | null = null;\n\nexport const initializeWorkshopList = async (programId: string) => {\n  const containerSelector = \"#selectWorkshopList\";\n  const container = document.querySelector(containerSelector);\n  if (!container) {\n    console.error(\"Workshop list container not found\");\n    return;\n  }\n\n  if (!initialTemplateState) {\n    initialTemplateState = container.cloneNode(true) as HTMLElement;\n  } else {\n    container.innerHTML = \"\";\n    container.appendChild(initialTemplateState.cloneNode(true));\n  }\n\n  const list = new WFDynamicList<Workshop>(containerSelector, {\n    rowSelector: \"#cardSelectWorkshop\",\n    loaderSelector: \"#workshopListLoading\",\n    emptySelector: \"#workshopListEmpty\",\n  });\n\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({\n      display: \"flex\",\n    });\n    return loaderElement;\n  });\n\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({\n      display: \"flex\",\n    });\n    return emptyElement;\n  });\n\n  try {\n    const workshops = await fetchWorkshops(programId);\n\n    // Ensure workshops is always an array and sort it alphabetically by name\n    const workshopArray = (Array.isArray(workshops) ? workshops : []).sort(\n      (a, b) => a.fieldData.name.localeCompare(b.fieldData.name)\n    );\n\n    list.rowRenderer(({ rowData, rowElement, index }) => {\n      const workshopCard = new WFComponent(rowElement);\n      const workshopTitle =\n        workshopCard.getChildAsComponent(\"#cardWorkshopTitle\");\n      const workshopDescription = workshopCard.getChildAsComponent(\n        \"#cardWorkshopDescription\"\n      );\n      const workshopAges =\n        workshopCard.getChildAsComponent(\"#cardWorkshopAges\");\n      const workshopImage =\n        workshopCard.getChildAsComponent<HTMLImageElement>(\n          \"#cardWorkshopImage\"\n        );\n      const workshopInput =\n        workshopCard.getChildAsComponent<HTMLInputElement>(\".input_card_input\");\n\n      const inputId = `workshopInput-${index}`;\n      workshopInput.setAttribute(\"id\", inputId);\n      workshopInput.setAttribute(\"name\", \"workshop\");\n      workshopInput.setAttribute(\"value\", rowData.id);\n\n      const workshopLabel = workshopCard.getChildAsComponent(\"label\");\n      workshopLabel.setAttribute(\"for\", inputId);\n\n      // Updated property access to match the response object\n      workshopTitle.setText(rowData.fieldData[\"name\"]);\n      workshopDescription.setText(rowData.fieldData[\"short-description\"]);\n      workshopAges.setText(rowData.fieldData[\"age-range\"]);\n      workshopImage.setAttribute(\"src\", rowData.fieldData[\"main-image\"].url);\n\n      // Get the #registrationTrue element inside the row\n      const registrationTrueElement =\n        workshopCard.getChildAsComponent(\"#registrationTrue\");\n\n      // Set display and input disabled state based on the 'registered' property\n      if (rowData.registered === true) {\n        registrationTrueElement.setStyle({ display: \"flex\" });\n        workshopInput.setAttribute(\"disabled\", \"true\");\n      } else {\n        registrationTrueElement.setStyle({ display: \"none\" });\n        workshopInput.removeAttribute(\"disabled\");\n      }\n\n      workshopInput.on(\"change\", () => {\n        saveSelectedWorkshop({\n          id: rowData.id,\n          name: rowData.fieldData[\"name\"],\n          imageUrl: rowData.fieldData[\"main-image\"].url,\n          ageRange: rowData.fieldData[\"age-range\"],\n        });\n      });\n\n      rowElement.setStyle({ display: \"flex\" });\n      return rowElement;\n    });\n\n    list.setData(workshopArray);\n  } catch (error) {\n    console.error(\"Error loading workshops:\", error);\n    list.setData([]); // Handle case where no workshops are available or an error occurred\n  }\n};","// api/workshops.ts\nimport { apiClient } from \"./apiConfig\";\n\n/**\n * Workshop Interface\n * Defines the structure of a Workshop object as returned by the fetchWorkshops API.\n */\nexport interface Workshop {\n  id: string;\n  fieldData: {\n    name: string;\n    shortDescription: string; // Must match the API response\n    ageRange: string;         // Must match the API response\n    mainImage: {\n      url: string;\n      alt?: string | null;     // Optional property, can be null as per API response\n    };\n  };\n  registered?: boolean;        // Made optional to align with API definition\n}\n\n\ninterface WorkshopApiResponse {\n  workshops: Workshop[];\n}\n\n// Function to fetch workshops for a given program from the server\nexport const fetchWorkshops = async (\n  programId: string\n): Promise<Workshop[]> => {\n  try {\n    const response = await apiClient\n      .get<WorkshopApiResponse>(\n        `/registration/workshops?program_id=${programId}`\n      )\n      .fetch();\n    return response.workshops;\n  } catch (error) {\n    console.error(\"Error fetching workshops:\", error);\n    throw error;\n  }\n};\n\n// Function to fetch workshop details by ID\nexport const fetchWorkshopById = async (\n  workshopId: string\n): Promise<Workshop | null> => {\n  try {\n    // Assuming there's a similar endpoint to fetch a single workshop by ID\n    const response = await apiClient\n      .get<{ workshop: Workshop }>(`/registration/workshops/${workshopId}`)\n      .fetch();\n    return response.workshop || null;\n  } catch (error) {\n    console.error(`Error fetching workshop with ID ${workshopId}:`, error);\n    return null;\n  }\n};","// state/selectedWorkshop.ts\n\nexport const loadSelectedWorkshop = () => {\n  const state = JSON.parse(localStorage.getItem(\"registrationState\") || \"{}\");\n  return {\n    id: state.selectedWorkshopId || null,\n    name: state.selectedWorkshopName || null,\n    imageUrl: state.selectedWorkshopImageUrl || null,\n    ageRange: state.selectedWorkshopAgeRange || null,\n  };\n};\n\nexport const saveSelectedWorkshop = (workshop: {\n  id: string;\n  name: string;\n  imageUrl: string;\n  ageRange: string;\n}) => {\n  const state = JSON.parse(localStorage.getItem(\"registrationState\") || \"{}\");\n  state.selectedWorkshopId = workshop.id;\n  state.selectedWorkshopName = workshop.name;\n  state.selectedWorkshopImageUrl = workshop.imageUrl;\n  state.selectedWorkshopAgeRange = workshop.ageRange;\n\n  console.log(\"Saving selected workshop to state:\", state); // Debug log\n\n  localStorage.setItem(\"registrationState\", JSON.stringify(state));\n};\n\nexport const resetSelectedWorkshop = () => {\n  const state = JSON.parse(localStorage.getItem(\"registrationState\") || \"{}\");\n  delete state.selectedWorkshopId;\n  delete state.selectedWorkshopName;\n  delete state.selectedWorkshopImageUrl;\n  delete state.selectedWorkshopAgeRange;\n\n  console.log(\"Resetting selected workshop in state:\", state); // Debug log\n\n  localStorage.setItem(\"registrationState\", JSON.stringify(state));\n};\n","// components/sessionsList.ts\n\nimport { fetchSessions, Session } from \"../../api/sessions\";\nimport { updateSelectedItemUI } from \"./utils/updateUi\";\nimport { fetchStudentProfiles, StudentProfile } from \"../../api/students\";\nimport {\n  saveSelectedSession,\n  resetSelectedSessions,\n  updateSelectedSessions,\n} from \"./state/selectedSessions\";\nimport {\n  logPricingOption,\n  loadState,\n  saveState,\n} from \"./state/registrationState\";\nimport { loadSelectedProgram } from \"./state/selectedProgram\";\nimport { loadSelectedWorkshop } from \"./state/selectedWorkshop\";\nimport { WFDynamicList, WFComponent } from \"@xatom/core\";\n\nlet initialTemplateState: HTMLElement | null = null;\nlet sessionData: Session[] = [];\n\nexport const initializeSessionList = async (\n  workshopId: string,\n  programId: string\n) => {\n  const containerSelector = \"#selectSessionList\";\n  const container = document.querySelector(containerSelector);\n  if (!container) {\n    console.error(\"Session list container not found\");\n    return;\n  }\n\n  resetSelectedSessions();\n\n  if (!initialTemplateState) {\n    initialTemplateState = container.cloneNode(true) as HTMLElement;\n  } else {\n    container.innerHTML = \"\";\n    container.appendChild(initialTemplateState.cloneNode(true));\n  }\n\n  const list = new WFDynamicList<Session>(containerSelector, {\n    rowSelector: \"#sessionSelectWrap\",\n    loaderSelector: \"#sessionListLoading\",\n    emptySelector: \"#sessionListEmpty\",\n  });\n\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({ display: \"flex\" });\n    return loaderElement;\n  });\n\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({ display: \"flex\" });\n    return emptyElement;\n  });\n\n  // Correct usage with destructuring to get 'students'\n  let studentProfiles: StudentProfile[] = [];\n  try {\n    const { students } = await fetchStudentProfiles(); // Destructure to get 'students'\n    studentProfiles = students; // Assign the students array to studentProfiles\n  } catch (error) {\n    console.error(\"Error fetching student profiles:\", error);\n  }\n\n  list.rowRenderer(({ rowData, rowElement, index }) => {\n    const sessionCard = new WFComponent(rowElement);\n    const sessionWeekday = sessionCard.getChildAsComponent(\n      \"#cardSessionWeekday\"\n    );\n    const sessionTime = sessionCard.getChildAsComponent(\"#cardSessionTime\");\n    const sessionLocation = sessionCard.getChildAsComponent(\n      \"#cardSessionLocation\"\n    );\n    const sessionPrice = sessionCard.getChildAsComponent(\"#cardSessionPrice\");\n    const sessionInput =\n      sessionCard.getChildAsComponent<HTMLInputElement>(\"#cardSessionInput\");\n    const studentsList = sessionCard.getChildAsComponent(\"#selectStudentsList\");\n    const hiddenFieldWrap = sessionCard.getChildAsComponent(\n      \".hidden_form_field-wrap\"\n    );\n\n    const inputId = `sessionInput-${index}`;\n    sessionInput.setAttribute(\"id\", inputId);\n    sessionInput.setAttribute(\"value\", rowData.id);\n\n    const label = sessionCard.getChildAsComponent(\"label\");\n    label.setAttribute(\"for\", inputId);\n\n    sessionWeekday.setText(rowData.fieldData.weekday);\n    sessionTime.setText(rowData.fieldData[\"time-block\"]);\n    sessionLocation.setText(rowData.fieldData.location);\n\n    const initialPrice = updateSessionPrice(sessionPrice, rowData);\n\n    studentsList.removeAllChildren();\n    studentProfiles.forEach((student) => {\n      const studentId = student.id;\n      const uniqueStudentId = `${inputId}-student-${studentId}`;\n      const studentPill = new WFComponent(document.createElement(\"label\"));\n      studentPill.addCssClass(\"pill-item\");\n      studentPill.setAttribute(\"for\", uniqueStudentId);\n\n      const studentCheckbox = new WFComponent(document.createElement(\"input\"));\n      studentCheckbox.setAttribute(\"type\", \"checkbox\");\n      studentCheckbox.addCssClass(\"pill-checkbox\");\n      studentCheckbox.setAttribute(\"id\", uniqueStudentId);\n      studentCheckbox.setAttribute(\"name\", \"selectedStudents\");\n      studentCheckbox.setAttribute(\"value\", studentId.toString());\n\n      const studentName = new WFComponent(document.createElement(\"span\"));\n      studentName.addCssClass(\"pill-label\");\n      studentName.addCssClass(\"has-icon\");\n      studentName.setText(`${student.first_name} ${student.last_name}`);\n\n      const pillIcon = new WFComponent(document.createElement(\"div\"));\n      pillIcon.addCssClass(\"pill-icon\");\n      pillIcon.addCssClass(\"w-embed\");\n      pillIcon.setHTML(\n        `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"currentColor\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"></path><path d=\"M9 16.2l-3.5-3.5c-.39-.39-1.01-.39-1.4 0-.39.39-.39 1.01 0 1.4l4.19 4.19c.39.39 1.02.39 1.41 0L20.3 7.7c.39-.39.39-1.01 0-1.4-.39-.39-1.01-.39-1.4 0L9 16.2z\"></path></svg>`\n      );\n\n      studentPill.appendChild(studentCheckbox);\n      studentPill.appendChild(studentName);\n      studentPill.appendChild(pillIcon);\n      studentsList.appendChild(studentPill);\n\n      studentCheckbox.on(\"change\", () => {\n        const studentCheckboxElement =\n          studentCheckbox.getElement() as HTMLInputElement;\n        const studentIdInt = parseInt(studentCheckboxElement.value);\n\n        const sessionChangedEvent = new CustomEvent(\"sessionChanged\", {\n          detail: {\n            sessionId: rowData.id,\n            studentId: studentIdInt,\n            checked: studentCheckboxElement.checked,\n            initialPriceSelection: initialPrice,\n          },\n        });\n        document.dispatchEvent(sessionChangedEvent);\n\n        updateSelectedSessions(\n          rowData.id,\n          studentIdInt,\n          studentCheckboxElement.checked\n        );\n      });\n    });\n\n    sessionInput.on(\"change\", () => {\n      const inputElement = sessionInput.getElement() as HTMLInputElement;\n      if (inputElement.checked) {\n        hiddenFieldWrap.setStyle({ display: \"flex\" });\n      } else {\n        hiddenFieldWrap.setStyle({ display: \"none\" });\n        const studentCheckboxes =\n          studentsList.getChildAsComponents<HTMLInputElement>(\".pill-checkbox\");\n        studentCheckboxes.forEach((checkbox) => {\n          const studentCheckboxElement =\n            checkbox.getElement() as HTMLInputElement;\n          studentCheckboxElement.checked = false;\n          const studentIdInt = parseInt(studentCheckboxElement.value);\n\n          const sessionChangedEvent = new CustomEvent(\"sessionChanged\", {\n            detail: {\n              sessionId: rowData.id,\n              studentId: studentIdInt,\n              checked: false,\n              initialPriceSelection: initialPrice,\n            },\n          });\n          document.dispatchEvent(sessionChangedEvent);\n\n          updateSelectedSessions(rowData.id, studentIdInt, false);\n        });\n      }\n    });\n\n    rowElement.setStyle({ display: \"flex\" });\n    return rowElement;\n  });\n\n  try {\n    list.changeLoadingStatus(true);\n    const sessions = await fetchSessions(workshopId, programId);\n\n    if (Array.isArray(sessions) && sessions.length > 0) {\n      sessionData = sessions;\n      list.setData(sessions);\n\n      // Set default pricing option to 'Annual' if not already set\n      let registrationState = loadState();\n      if (!registrationState.selectedPricingOption) {\n        registrationState.selectedPricingOption = \"Annual\";\n        saveState(registrationState);\n      }\n      updateAllSessionPrices();\n    } else {\n      list.setData([]);\n    }\n\n    list.changeLoadingStatus(false);\n  } catch (error) {\n    console.error(\"Error loading sessions:\", error);\n    list.setData([]);\n    list.changeLoadingStatus(false);\n  }\n\n  document\n    .querySelector(\"#updatePriceAnnual\")\n    ?.addEventListener(\"change\", () => {\n      logPricingOption(\"Annual\");\n      updateAllSessionPrices();\n    });\n\n  document\n    .querySelector(\"#updatePriceMonthly\")\n    ?.addEventListener(\"change\", () => {\n      logPricingOption(\"Monthly\");\n      updateAllSessionPrices();\n    });\n\n  document\n    .querySelector(\"#updatePriceSemester\")\n    ?.addEventListener(\"change\", () => {\n      logPricingOption(\"Pay-Per-Semester\");\n      updateAllSessionPrices();\n    });\n\n  document\n    .querySelector(\"#updatePriceDeposit\")\n    ?.addEventListener(\"change\", () => {\n      logPricingOption(\"Deposit\");\n      updateAllSessionPrices();\n    });\n\n  initializeFilterSelect();\n  updateSelectedItemUI(); // Ensure selected item UI is updated initially\n};\n\n// Update the selected item UI\n/*const updateSelectedItemUI = () => {\n  const selectedProgram = loadSelectedProgram();\n  const selectedWorkshop = loadSelectedWorkshop();\n\n  const selectedProgramTitle = new WFComponent(\"#selectedProgramTitle\");\n  const selectedWorkshopTitle = new WFComponent(\"#selectedWorkshopTitle\");\n  const selectedAgeRange = new WFComponent(\"#selectedAgeRange\");\n  const selectedImage = new WFComponent(\"#selectedImage\");\n\n  if (selectedProgram.id) {\n    selectedProgramTitle.setText(selectedProgram.name);\n\n    if (selectedWorkshop.id) {\n      selectedWorkshopTitle.setText(selectedWorkshop.name);\n      selectedWorkshopTitle.setStyle({ display: \"block\" });\n      selectedAgeRange.setText(selectedWorkshop.ageRange); // Use workshop age range\n\n      // Use the workshop image if available, otherwise use the program image\n      const imageUrl = selectedWorkshop.imageUrl || selectedProgram.imageUrl;\n      selectedImage.setAttribute(\"src\", imageUrl);\n    } else {\n      selectedWorkshopTitle.setStyle({ display: \"none\" });\n      selectedAgeRange.setText(selectedProgram.ageRange); // Use program age range if no workshop selected\n      selectedImage.setAttribute(\"src\", selectedProgram.imageUrl);\n    }\n  }\n};*/\n\nupdateSelectedItemUI();\n\nconst updateSessionPrice = (sessionPrice: WFComponent, rowData: Session) => {\n  const registrationState = JSON.parse(\n    localStorage.getItem(\"registrationState\") || \"{}\"\n  );\n  const selectedPricingOption =\n    registrationState.selectedPricingOption || \"Annual\";\n  let price: string;\n\n  switch (selectedPricingOption) {\n    case \"Annual\":\n      price = rowData.fieldData[\"displayed-annual-price\"];\n      break;\n    case \"Monthly\":\n      price = rowData.fieldData[\"displayed-monthly-price\"];\n      break;\n    case \"Pay-Per-Semester\":\n      price = rowData.fieldData[\"displayed-one-off-price\"];\n      break;\n    case \"Deposit\":\n      price = rowData.fieldData[\"displayed-deposit-price\"];\n      break;\n    default:\n      price = \"\"; // Or any default value you choose\n  }\n\n  sessionPrice.setText(price);\n  return price;\n};\n\nconst updateAllSessionPrices = () => {\n  const sessionCards = document.querySelectorAll(\"#sessionSelectWrap\");\n  sessionCards.forEach((sessionCard) => {\n    const sessionPriceElement = sessionCard.querySelector(\n      \"#cardSessionPrice\"\n    ) as HTMLElement;\n    const sessionPrice = new WFComponent(sessionPriceElement);\n    const sessionInputElement = sessionCard.querySelector(\n      \".session-input\"\n    ) as HTMLInputElement;\n    const sessionId = sessionInputElement.value;\n    const rowData = sessionData.find((session) => session.id === sessionId);\n    if (sessionPrice && rowData) {\n      updateSessionPrice(sessionPrice, rowData);\n    }\n  });\n};\n\nconst initializeFilterSelect = () => {\n  const selectElement = document.getElementById(\"singleSelectInput\");\n\n  if (selectElement) {\n    selectElement.addEventListener(\"change\", (event) => {\n      const selectedValue = (event.target as HTMLSelectElement).value;\n      filterSessionsByLocation(selectedValue);\n    });\n  }\n};\n\nconst filterSessionsByLocation = (location: string) => {\n  const sessionCards = document.querySelectorAll(\"#sessionSelectWrap\");\n\n  sessionCards.forEach((sessionCard) => {\n    const sessionLocationElement = sessionCard.querySelector(\n      \"#cardSessionLocation\"\n    ) as HTMLElement;\n    const sessionLocation = sessionLocationElement?.textContent || \"\";\n\n    if (location === \"N/A\" || sessionLocation === location) {\n      (sessionCard as HTMLElement).style.display = \"flex\";\n    } else {\n      (sessionCard as HTMLElement).style.display = \"none\";\n    }\n  });\n};\n\n// Function to validate and submit session selections\nexport const validateAndSubmitSessions = (): boolean => {\n  const registrationState = JSON.parse(\n    localStorage.getItem(\"registrationState\") || \"{}\"\n  );\n  const submitStepThreeError = new WFComponent(\"#submitStepThreeError\");\n\n  // Ensure that at least one session is selected\n  if (\n    !registrationState.selectedSessions ||\n    registrationState.selectedSessions.length === 0\n  ) {\n    submitStepThreeError.setText(\"Please select at least one session.\");\n    submitStepThreeError.setStyle({ display: \"block\" });\n    return false;\n  }\n\n  // Ensure each selected session has associated students\n  for (const session of registrationState.selectedSessions) {\n    if (!session.studentIds || session.studentIds.length === 0) {\n      submitStepThreeError.setText(\n        \"Please select at least one student for each session.\"\n      );\n      submitStepThreeError.setStyle({ display: \"block\" });\n      return false;\n    }\n  }\n\n  // Hide the error message if validation passes\n  submitStepThreeError.setStyle({ display: \"none\" });\n\n  // If validation passes, save state or submit data to the server\n  saveState(registrationState);\n\n  return true;\n};\n","// api/sessions.ts\nimport { apiClient } from \"./apiConfig\";\n\nexport interface Session {\n  id: string;\n  fieldData: {\n    weekday: string;\n    \"time-block\": string;\n    location: string;\n    \"displayed-annual-price\": string;\n    \"displayed-monthly-price\": string;\n    \"displayed-one-off-price\": string;\n    \"displayed-deposit-price\": string;\n  };\n}\n\ninterface SessionApiResponse {\n  sessions: Session[];\n}\n\n// Function to fetch sessions from the server\nexport const fetchSessions = async (\n  workshopId: string,\n  programId: string\n): Promise<Session[]> => {\n  try {\n    const response = await apiClient\n      .get<SessionApiResponse>(\n        `/registration/sessions?workshop_id=${workshopId}&program_id=${programId}`\n      )\n      .fetch();\n    return response.sessions || [];\n  } catch (error) {\n    console.error(\"Error fetching sessions:\", error);\n    throw error;\n  }\n};\n","// updateUI.js\nimport { loadSelectedProgram } from \"../state/selectedProgram\";\nimport { loadSelectedWorkshop } from \"../state/selectedWorkshop\";\nimport { WFComponent } from \"@xatom/core\";\n\nexport const updateSelectedItemUI = () => {\n  const selectedProgram = loadSelectedProgram();\n  const selectedWorkshop = loadSelectedWorkshop();\n\n  // Original UI elements\n  const selectedProgramTitle = new WFComponent(\"#selectedProgramTitle\");\n  const selectedWorkshopTitle = new WFComponent(\"#selectedWorkshopTitle\");\n  const selectedAgeRange = new WFComponent(\"#selectedAgeRange\");\n  const selectedImage = new WFComponent(\"#selectedImage\");\n\n  // Final UI elements\n  const selectedProgramTitleFinal = new WFComponent(\n    \"#selectedProgramTitleFinal\"\n  );\n  const selectedWorkshopTitleFinal = new WFComponent(\n    \"#selectedWorkshopTitleFinal\"\n  );\n  const selectedAgeRangeFinal = new WFComponent(\"#selectedAgeRangeFinal\");\n  const selectedImageFinal = new WFComponent(\"#selectedImageFinal\");\n\n  // Function to set UI elements based on the selected data\n  const setUIElements = (programTitle, workshopTitle, ageRange, image) => {\n    programTitle.setText(selectedProgram.name);\n\n    if (selectedWorkshop.id) {\n      workshopTitle.setText(selectedWorkshop.name);\n      workshopTitle.setStyle({ display: \"block\" });\n      ageRange.setText(selectedWorkshop.ageRange);\n      const imageUrl = selectedWorkshop.imageUrl || selectedProgram.imageUrl;\n      image.setAttribute(\"src\", imageUrl);\n    } else {\n      workshopTitle.setStyle({ display: \"none\" });\n      ageRange.setText(selectedProgram.ageRange);\n      image.setAttribute(\"src\", selectedProgram.imageUrl);\n    }\n  };\n\n  // Update original UI elements\n  if (selectedProgram.id) {\n    setUIElements(\n      selectedProgramTitle,\n      selectedWorkshopTitle,\n      selectedAgeRange,\n      selectedImage\n    );\n  }\n\n  // Update final UI elements\n  if (selectedProgram.id) {\n    setUIElements(\n      selectedProgramTitleFinal,\n      selectedWorkshopTitleFinal,\n      selectedAgeRangeFinal,\n      selectedImageFinal\n    );\n  }\n};\n","import { apiClient } from \"./apiConfig\";\nimport { saveState } from \"../modules/registration/state/registrationState\";\n\nexport interface StudentProfile {\n  id: number;\n  first_name: string;\n  last_name: string;\n  Status: string;\n}\n\ninterface StudentProfileApiResponse {\n  students: StudentProfile[];\n}\n\ninterface FetchStudentProfilesResult {\n  students: StudentProfile[];\n  showDialog: boolean;\n}\n\n// Function to fetch student profiles from the server\nexport const fetchStudentProfiles =\n  async (): Promise<FetchStudentProfilesResult> => {\n    try {\n      const response = await apiClient\n        .get<StudentProfileApiResponse>(\"/profiles/student_profiles\")\n        .fetch();\n      if (response.students) {\n        // Filter students with status \"Pending\"\n        const pendingStudents = response.students.filter(\n          (student) => student.Status === \"Pending\"\n        );\n        const pendingStudentNames = pendingStudents.map(\n          (student) => `${student.first_name} ${student.last_name}`\n        );\n\n        // Log names of pending students (for debugging purposes)\n        console.log(\"Pending Students:\", pendingStudentNames);\n\n        // Update registrationState with pending students\n        saveState({ pendingStudents: pendingStudentNames });\n\n        // Check if there are no students and indicate that the dialog should be shown\n        return {\n          students: response.students,\n          showDialog: response.students.length === 0,\n        };\n      } else {\n        console.error(\"No students property in response\");\n        return { students: [], showDialog: true };\n      }\n    } catch (error) {\n      console.error(\"Error fetching student profiles:\", error);\n      return { students: [], showDialog: true };\n    }\n  };\n","// state/registrationState.ts\nimport { CheckoutPreviewResponse } from \"../checkoutPreview\"; // Ensure this import exists\n\nexport interface RegistrationState {\n  selectedProgramId?: string;\n  selectedProgramName?: string;\n  selectedProgramImageUrl?: string;\n  selectedProgramAgeRange?: string;\n  selectedWorkshopId?: string;\n  selectedWorkshopName?: string;\n  selectedWorkshopAgeRange?: string;\n  selectedWorkshopImageUrl?: string;\n  selectedPricingOption?: string;\n  // Removed secondaryPricingOption\n  selectedSessions?: { sessionId: string; studentIds: number[] }[];\n  pendingStudents?: string[];\n  fin_aid_requested?: boolean;\n  selected_discount?: string;\n  checkoutPreview?: CheckoutPreviewResponse;\n  financialAidData?: {\n    relationship: string;\n    annualIncome: string;\n    monthlyExpense: string;\n    previousParticipant: string;\n  };\n  early_registration?: boolean; // Added early_registration flag\n  start_date?: string; // Added start_date\n}\n\nexport const loadState = (): RegistrationState => {\n  const savedState = localStorage.getItem(\"registrationState\");\n  if (savedState) {\n    return JSON.parse(savedState);\n  }\n  return {};\n};\n\nexport const saveState = (state: Partial<RegistrationState>) => {\n  const currentState = loadState();\n  const newState = { ...currentState, ...state };\n  localStorage.setItem(\"registrationState\", JSON.stringify(newState));\n};\n\nexport const logPricingOption = (pricingOption: string) => {\n  saveState({ selectedPricingOption: pricingOption });\n};\n\n// Utility function to get pending students\nexport const getPendingStudents = (): string[] => {\n  const state = loadState();\n  return state.pendingStudents || [];\n};\n","// state/selectedSessions.ts\n\nexport const loadSelectedSession = () => {\n  const state = JSON.parse(localStorage.getItem(\"registrationState\") || \"{}\");\n  return state.selectedSession || null;\n};\n\nexport const saveSelectedSession = (session: {\n  id: string;\n  details: string;\n}) => {\n  const state = JSON.parse(localStorage.getItem(\"registrationState\") || \"{}\");\n  state.selectedSession = session;\n  localStorage.setItem(\"registrationState\", JSON.stringify(state));\n};\n\nexport const resetSelectedSessions = () => {\n  const registrationState = JSON.parse(\n    localStorage.getItem(\"registrationState\") || \"{}\"\n  );\n  registrationState.selectedSessions = [];\n  localStorage.setItem(\"registrationState\", JSON.stringify(registrationState));\n};\n\nexport const updateSelectedSessions = (\n  sessionId: string,\n  studentId: number,\n  checked: boolean\n) => {\n  const registrationState = JSON.parse(\n    localStorage.getItem(\"registrationState\") || \"{}\"\n  );\n\n  if (!registrationState.selectedSessions) {\n    registrationState.selectedSessions = [];\n  }\n\n  let session = registrationState.selectedSessions.find(\n    (s: any) => s.sessionId === sessionId\n  );\n\n  if (checked) {\n    if (!session) {\n      session = { sessionId: sessionId, studentIds: [studentId] };\n      registrationState.selectedSessions.push(session);\n    } else {\n      if (!session.studentIds.includes(studentId)) {\n        session.studentIds.push(studentId);\n      }\n    }\n  } else {\n    if (session) {\n      session.studentIds = session.studentIds.filter(\n        (id: number) => id !== studentId\n      );\n      if (session.studentIds.length === 0) {\n        registrationState.selectedSessions =\n          registrationState.selectedSessions.filter(\n            (s: any) => s.sessionId !== sessionId\n          );\n      }\n    }\n  }\n\n  localStorage.setItem(\"registrationState\", JSON.stringify(registrationState));\n};\n","// components/registration/checkoutPreview.ts\nimport { WFComponent } from \"@xatom/core\";\nimport { updateSelectedItemUI } from \"./utils/updateUi\";\nimport { apiClient } from \"../../api/apiConfig\";\nimport { loadState, saveState } from \"./state/registrationState\";\nimport { initializeAlertBox } from \"./components/alertBox\";\nimport { initializePrimaryPaymentRadios } from \"./components/primaryPaymentRadios\";\nimport {\n  renderLineItems,\n  getLineItemsForSelectedOption,\n} from \"./components/lineItems\";\nimport { updateTotalAmount } from \"./components/updateTotalAmount\";\nimport { initializeFinancialAid } from \"./components/financialAid\"; // Import financial aid initialization\nimport { initializeAlertBoxEarly } from \"./components/alertBoxEarly\"; // Import the new alertBoxEarly\n\nexport interface CheckoutPreviewResponse {\n  selectedPricingOption: string;\n  annual_line_items: LineItem[];\n  monthly_line_items: LineItem[];\n  semester_line_items: LineItem[];\n  deposit_line_items: LineItem[];\n  annual_amount_due: number;\n  monthly_amount_due: number;\n  semester_amount_due: number;\n  deposit_amount_due: number;\n  early_registration: boolean; // Added early_registration flag\n  start_date: string; // Added start_date field\n}\n\nexport interface LineItem {\n  price: string;\n  quantity: number;\n  unit_amount: number;\n  product_name: string;\n  total_amount: number;\n}\n\nexport const initializeCheckoutPreview = async () => {\n  try {\n    const registrationState = loadState();\n\n    const response = await apiClient\n      .post<CheckoutPreviewResponse>(\"/registration/checkout-preview\", {\n        data: registrationState,\n      })\n      .fetch();\n\n    console.log(\"Checkout Preview Data:\", response);\n\n    updateSelectedItemUI();\n    initializeAlertBox();\n\n    const { selectedPricingOption, early_registration, start_date } = response;\n\n    // Extract line items data only\n    const lineItemsOnly = {\n      annual_line_items: response.annual_line_items,\n      monthly_line_items: response.monthly_line_items,\n      semester_line_items: response.semester_line_items,\n      deposit_line_items: response.deposit_line_items,\n    };\n\n    // **Always** save 'early_registration' and 'start_date' to state\n    saveState({ \n      checkoutPreview: response, \n      selectedPricingOption, \n      early_registration,\n      start_date: response.start_date, // Ensure start_date is saved\n    });\n\n    initializePrimaryPaymentRadios(selectedPricingOption);\n    initializeFinancialAid(); // Initialize financial aid components\n\n    // Determine if deposit should be displayed\n    const hasPendingStudents = registrationState.pendingStudents?.length > 0;\n    const shouldShowDeposit =\n      (early_registration && selectedPricingOption === \"Monthly\") ||\n      hasPendingStudents;\n\n    console.log(`shouldShowDeposit: ${shouldShowDeposit}`);\n\n    if (shouldShowDeposit) {\n      // Display deposit line items\n      const depositLineItems = response.deposit_line_items;\n      console.log(\"Initial deposit line items:\", depositLineItems);\n      renderLineItems(depositLineItems, true); // Pass a flag to indicate deposit items\n      // Update total amounts accordingly\n      updateTotalAmount(true, selectedPricingOption);\n      console.log(\"Initial deposit line items rendered.\");\n    } else {\n      // Render primary line items\n      const primaryLineItems = getLineItemsForSelectedOption(\n        selectedPricingOption,\n        lineItemsOnly\n      );\n      renderLineItems(primaryLineItems);\n      updateTotalAmount(false, selectedPricingOption);\n      console.log(\"Initial primary line items rendered.\");\n    }\n\n    // **Initialize the new early registration alert box**\n    initializeAlertBoxEarly();\n  } catch (error) {\n    console.error(\"Error fetching checkout preview data:\", error);\n  }\n};\n","// components/registration/initializeAlertBox.ts\n\nimport { getPendingStudents } from \"../state/registrationState\";\n\n/**\n * Initializes the alert box, showing it if there are pending students.\n */\nexport const initializeAlertBox = () => {\n  const alertBox = document.querySelector(\"#alertBox\") as HTMLElement;\n  const alertPendingStudentList = document.querySelector(\n    \"#alertPendingStudentList\"\n  ) as HTMLElement;\n\n  if (!alertBox || !alertPendingStudentList) {\n    console.error(\"Alert box elements not found\");\n    return;\n  }\n\n  const pendingStudents = getPendingStudents();\n\n  if (pendingStudents.length > 0) {\n    alertBox.style.display = \"flex\";\n    alertPendingStudentList.innerHTML = pendingStudents\n      .map((student) => `<li>${student}</li>`)\n      .join(\"\");\n  } else {\n    alertBox.style.display = \"none\";\n  }\n};\n","// components/registration/components/primaryPaymentRadios.ts\n\nimport { WFComponent } from \"@xatom/core\";\nimport { loadState, saveState } from \"../state/registrationState\";\nimport { getLineItemsForSelectedOption, renderLineItems } from \"./lineItems\";\nimport { updateTotalAmount } from \"./updateTotalAmount\";\nimport { LineItem } from \"../checkoutPreview\";\nimport { initializeAlertBoxEarly } from \"./alertBoxEarly\"; // Import the new alertBoxEarly\n\nexport const initializePrimaryPaymentRadios = (\n  selectedPricingOption: string\n) => {\n  const paymentPlans = [\n    { key: \"Annual\", id: \"annualPlan\", wrapId: \"annualRadioWrap\" },\n    { key: \"Monthly\", id: \"monthlyPlan\", wrapId: \"monthlyRadioWrap\" },\n    {\n      key: \"Pay-Per-Semester\",\n      id: \"semesterPlan\",\n      wrapId: \"semesterRadioWrap\",\n    },\n    // Removed \"Deposit\" option\n  ];\n\n  // Initialize the radio buttons based on the selected option\n  paymentPlans.forEach((plan) => {\n    const planElement = new WFComponent(\n      `#${plan.id}`\n    ).getElement() as HTMLInputElement;\n    const planWrapElement = new WFComponent(\n      `#${plan.wrapId}`\n    ).getElement() as HTMLElement;\n\n    if (plan.key === selectedPricingOption) {\n      planElement.checked = true;\n      planWrapElement.classList.remove(\"is-disabled\");\n      planElement.disabled = false;\n    } else {\n      planWrapElement.classList.remove(\"is-disabled\");\n      planElement.disabled = false;\n    }\n  });\n\n  // Attach event listeners to each payment option\n  paymentPlans.forEach((plan) => {\n    const input = new WFComponent(\n      `#${plan.id}`\n    ).getElement() as HTMLInputElement;\n    input.addEventListener(\"change\", (event) => {\n      const target = event.target as HTMLInputElement;\n      if (target.checked) {\n        // Save the selected pricing option to state\n        saveState({ selectedPricingOption: target.value });\n\n        // Load the current registration state\n        const registrationState = loadState();\n        \n        // Debugging: Log the current state\n        console.log(\"Current Registration State:\", registrationState);\n\n        // Extract the necessary line items from the state\n        const lineItemsOnly = {\n          annual_line_items:\n            registrationState.checkoutPreview?.annual_line_items ?? [],\n          monthly_line_items:\n            registrationState.checkoutPreview?.monthly_line_items ?? [],\n          semester_line_items:\n            registrationState.checkoutPreview?.semester_line_items ?? [],\n          // Removed deposit_line_items\n        };\n\n        // Determine if deposit conditions are met\n        const shouldShowDeposit =\n          (registrationState.early_registration && target.value === \"Monthly\") ||\n          (registrationState.pendingStudents?.length > 0);\n\n        // Debugging: Log the value of shouldShowDeposit\n        console.log(`shouldShowDeposit: ${shouldShowDeposit}`);\n\n        if (shouldShowDeposit) {\n          // **Only** render deposit line items\n          const depositLineItems = registrationState.checkoutPreview?.deposit_line_items ?? [];\n          \n          // **Ensure** that deposit line items are available\n          if (depositLineItems.length > 0) {\n            console.log(\"Rendering Deposit Line Items:\", depositLineItems);\n            renderLineItems(depositLineItems, true); // Pass a flag to indicate deposit items\n            // Update total amounts accordingly\n            updateTotalAmount(true, target.value);\n            console.log(`Deposit line items rendered for ${target.value}`);\n          } else {\n            console.warn(\"Deposit line items are empty or undefined.\");\n            // Fallback: Render primary line items if deposit line items are unavailable\n            const primaryLineItems = getLineItemsForSelectedOption(\n              target.value,\n              lineItemsOnly\n            );\n            renderLineItems(primaryLineItems);\n            updateTotalAmount(false, target.value);\n            console.log(`Primary line items rendered for ${target.value} due to missing deposit items.`);\n          }\n        } else {\n          // **Only** render primary line items\n          const primaryLineItems = getLineItemsForSelectedOption(\n            target.value,\n            lineItemsOnly\n          );\n          renderLineItems(primaryLineItems);\n          updateTotalAmount(false, target.value);\n          console.log(`Primary line items rendered for ${target.value}`);\n        }\n\n        console.log(`Primary pricing option selected: ${target.value}`);\n\n        // **Initialize alertBoxEarly after changing pricing option**\n        initializeAlertBoxEarly();\n      }\n    });\n  });\n};\n","// lineItems.ts\nimport { WFComponent } from \"@xatom/core\";\nimport { LineItem } from \"../checkoutPreview\";\n\nexport const renderLineItems = (lineItems: LineItem[], isDeposit: boolean = false) => {\n  const lineItemList = new WFComponent(\"#lineItemList\");\n  lineItemList.removeAllChildren(); // Clear previous line items\n\n  console.log(`Rendering ${isDeposit ? \"Deposit\" : \"Primary\"} Line Items:`, lineItems);\n\n  lineItems.forEach((item) => {\n    const lineItemRow = document.createElement(\"tr\");\n    lineItemRow.className = \"table_row\" + (isDeposit ? \" deposit_row\" : \"\");\n\n    const productNameCell = document.createElement(\"td\");\n    productNameCell.className = \"table_cell\";\n    productNameCell.textContent = item.product_name;\n    lineItemRow.appendChild(productNameCell);\n\n    const unitAmountCell = document.createElement(\"td\");\n    unitAmountCell.className = \"table_cell\";\n    unitAmountCell.textContent = `$${item.unit_amount}`;\n    lineItemRow.appendChild(unitAmountCell);\n\n    const quantityCell = document.createElement(\"td\");\n    quantityCell.className = \"table_cell\";\n    quantityCell.textContent = `${item.quantity}`;\n    lineItemRow.appendChild(quantityCell);\n\n    const totalAmountCell = document.createElement(\"td\");\n    totalAmountCell.className = \"table_cell\";\n    totalAmountCell.textContent = `$${item.total_amount}`;\n    lineItemRow.appendChild(totalAmountCell);\n\n    lineItemList.getElement().appendChild(lineItemRow);\n  });\n\n  // If deposit line items are rendered, apply specific styles or classes if needed\n  if (isDeposit) {\n    // Example: Highlight deposit line items\n    lineItemList.getElement().classList.add(\"has-deposit\");\n    console.log(\"Deposit line items have been added.\");\n  } else {\n    lineItemList.getElement().classList.remove(\"has-deposit\");\n    console.log(\"Primary line items have been added.\");\n  }\n};\n\nexport const getLineItemsForSelectedOption = (\n  selectedPricingOption: string,\n  lineItemsData: Record<string, LineItem[]>\n): LineItem[] => {\n  switch (selectedPricingOption) {\n    case \"Annual\":\n      return lineItemsData.annual_line_items;\n    case \"Monthly\":\n      return lineItemsData.monthly_line_items;\n    case \"Pay-Per-Semester\":\n      return lineItemsData.semester_line_items;\n    // Removed \"Deposit\" case\n    default:\n      console.warn(\"Unknown pricing option:\", selectedPricingOption);\n      return [];\n  }\n};\n","// updateTotalAmount.ts\nimport { WFComponent } from \"@xatom/core\";\nimport { loadState } from \"../state/registrationState\";\nimport { formatCurrency } from \"../utils/formatting\";\nimport { updateSecondaryTotalAmount } from \"./updateSecondaryTotalAmount\";\n\nexport const updateTotalAmount = (\n  includeDeposit: boolean = false,\n  selectedPricingOption?: string\n) => {\n  const state = loadState();\n  const totalAmountElement = new WFComponent(\"#primaryTotalAmount\");\n  const primaryOriginalAmountElement = new WFComponent(\"#primaryOriginalAmount\");\n  const primaryDiscountPill = new WFComponent(\"#primaryDiscountPill\");\n  const primaryDiscountNumber = new WFComponent(\"#primaryDiscountNumber\");\n  \n  // Elements for secondary total\n  const secondaryAmountWrap = new WFComponent(\"#secondaryAmountWrap\");\n  const secondaryTotalAmountElement = new WFComponent(\"#secondaryTotalAmount\");\n  const secondaryOriginalAmountElement = new WFComponent(\"#secondaryOriginalAmount\");\n  const secondaryDiscountPill = new WFComponent(\"#secondaryDiscountPill\");\n  const secondaryDiscountNumber = new WFComponent(\"#secondaryDiscountNumber\");\n\n  console.log(`updateTotalAmount called with includeDeposit=${includeDeposit} and selectedPricingOption=${selectedPricingOption}`);\n\n  let primaryTotal: number | undefined;\n  let primaryOriginal: number | undefined;\n  let primaryAmountType: string = \"\"; // e.g., \"Per Year\"\n\n  const pricingOption = selectedPricingOption || state.selectedPricingOption;\n\n  switch (pricingOption) {\n    case \"Annual\":\n      primaryOriginal = state.checkoutPreview?.annual_amount_due;\n      primaryAmountType = \"Per Year\";\n      break;\n    case \"Monthly\":\n      primaryOriginal = state.checkoutPreview?.monthly_amount_due;\n      primaryAmountType = \"Per Month\";\n      break;\n    case \"Pay-Per-Semester\":\n      primaryOriginal = state.checkoutPreview?.semester_amount_due;\n      primaryAmountType = \"Per Semester\";\n      break;\n    default:\n      console.warn(\"Unknown pricing option:\", pricingOption);\n  }\n\n  if (!includeDeposit) {\n    // No deposit; apply discounts to primary total if applicable\n    if (state.selected_discount) {\n      const discountValue = parseFloat(state.selected_discount);\n      primaryTotal = primaryOriginal\n        ? primaryOriginal * (1 - discountValue / 100)\n        : 0;\n      primaryDiscountPill.setStyle({ display: \"block\" });\n      primaryDiscountNumber.setText(`${discountValue}%`);\n      primaryOriginalAmountElement.setText(\n        `was ${formatCurrency(primaryOriginal!)} ${primaryAmountType}`\n      );\n      primaryOriginalAmountElement.setStyle({ display: \"block\" });\n      console.log(\"Applied discount to primary total.\");\n    } else {\n      primaryTotal = primaryOriginal;\n      primaryDiscountPill.setStyle({ display: \"none\" });\n      primaryOriginalAmountElement.setStyle({ display: \"none\" });\n      primaryDiscountNumber.setText(\"\");\n      console.log(\"No discount applied to primary total.\");\n    }\n\n    if (primaryTotal !== undefined) {\n      totalAmountElement.setText(`${formatCurrency(primaryTotal)} ${primaryAmountType}`);\n    } else {\n      totalAmountElement.setText(`$0.00 ${primaryAmountType}`);\n    }\n\n    // Hide secondary total elements if previously shown\n    secondaryAmountWrap.setStyle({ display: \"none\" });\n    console.log(\"SecondaryAmountWrap hidden.\");\n    // Clear secondary totals\n    secondaryTotalAmountElement.setText(`$0.00 ${primaryAmountType}`);\n    secondaryOriginalAmountElement.setStyle({ display: \"none\" });\n    secondaryDiscountPill.setStyle({ display: \"none\" });\n    secondaryDiscountNumber.setText(\"\");\n  } else {\n    // Deposit is included; primary total reflects deposit total, secondary total reflects main payment option\n    const depositAmount = state.checkoutPreview?.deposit_amount_due;\n    if (depositAmount !== undefined) {\n      totalAmountElement.setText(`${formatCurrency(depositAmount)} Total`);\n    } else {\n      totalAmountElement.setText(`$0.00 Total`);\n    }\n\n    // Calculate and display secondary total with discount if applicable\n    updateSecondaryTotalAmount();\n\n    // Show secondary total elements\n    secondaryAmountWrap.setStyle({ display: \"flex\", flexDirection: \"column\" });\n    console.log(\"SecondaryAmountWrap displayed as flex.\");\n\n    // Hide primary discount pill since discounts are applied to secondary total\n    primaryDiscountPill.setStyle({ display: \"none\" });\n    primaryDiscountNumber.setText(\"\");\n    primaryOriginalAmountElement.setStyle({ display: \"none\" });\n    console.log(\"Primary discount pill hidden.\");\n  }\n};\n","// utils/formatting.ts\n\nexport const formatCurrency = (amount: number | string): string => {\n  // Convert to a number if the amount is a string\n  const numericAmount =\n    typeof amount === \"string\" ? parseFloat(amount) : amount;\n\n  // Ensure the conversion worked and format the number\n  if (!isNaN(numericAmount)) {\n    return numericAmount.toLocaleString(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\",\n    });\n  }\n\n  return \"$0.00\"; // Default value in case of error\n};\n","// updateSecondaryTotalAmount.ts\nimport { WFComponent } from \"@xatom/core\";\nimport { loadState } from \"../state/registrationState\";\nimport { formatCurrency } from \"../utils/formatting\";\n\nexport const updateSecondaryTotalAmount = () => {\n  const state = loadState();\n  const secondaryTotalAmountElement = new WFComponent(\"#secondaryTotalAmount\");\n  const secondaryOriginalAmountElement = new WFComponent(\"#secondaryOriginalAmount\");\n  const secondaryDiscountPill = new WFComponent(\"#secondaryDiscountPill\");\n  const secondaryDiscountNumber = new WFComponent(\"#secondaryDiscountNumber\");\n\n  const selectedPricingOption = state.selectedPricingOption;\n  let secondaryOriginalAmount: number | undefined;\n  let secondaryAmountType: string = \"\";\n\n  switch (selectedPricingOption) {\n    case \"Annual\":\n      secondaryOriginalAmount = state.checkoutPreview?.annual_amount_due;\n      secondaryAmountType = \"Per Year\";\n      break;\n    case \"Monthly\":\n      secondaryOriginalAmount = state.checkoutPreview?.monthly_amount_due;\n      secondaryAmountType = \"Per Month\";\n      break;\n    case \"Pay-Per-Semester\":\n      secondaryOriginalAmount = state.checkoutPreview?.semester_amount_due;\n      secondaryAmountType = \"Per Semester\";\n      break;\n    default:\n      console.warn(\"Unknown pricing option:\", selectedPricingOption);\n  }\n\n  if (state.selected_discount && secondaryOriginalAmount !== undefined) {\n    const discountValue = parseFloat(state.selected_discount);\n    const discountedTotal = secondaryOriginalAmount * (1 - discountValue / 100);\n    secondaryDiscountPill.setStyle({ display: \"block\" });\n    secondaryDiscountNumber.setText(`${discountValue}%`);\n    secondaryOriginalAmountElement.setText(\n      `was ${formatCurrency(secondaryOriginalAmount)} ${secondaryAmountType}`\n    );\n    secondaryOriginalAmountElement.setStyle({ display: \"block\" });\n    secondaryTotalAmountElement.setText(`${formatCurrency(discountedTotal)} ${secondaryAmountType}`);\n    console.log(\"Applied discount to secondary total.\");\n  } else {\n    // No discount applied\n    if (secondaryOriginalAmount !== undefined) {\n      secondaryTotalAmountElement.setText(`${formatCurrency(secondaryOriginalAmount)} ${secondaryAmountType}`);\n    } else {\n      secondaryTotalAmountElement.setText(`$0.00 ${secondaryAmountType}`);\n    }\n    secondaryDiscountPill.setStyle({ display: \"none\" });\n    secondaryOriginalAmountElement.setStyle({ display: \"none\" });\n    secondaryDiscountNumber.setText(\"\");\n    console.log(\"No discount applied to secondary total.\");\n  }\n};\n","// components/registration/alertBoxEarly.ts\n\nimport { loadState } from \"../state/registrationState\";\n\n/**\n * Initializes the early registration alert box.\n * Displays the alert if the selected pricing option is \"Monthly\" and early_registration is true.\n * Populates the startDate span with the formatted start_date from the checkout preview.\n */\nexport const initializeAlertBoxEarly = () => {\n  const alertBoxEarly = document.querySelector(\"#alertBoxEarly\") as HTMLElement;\n  const startDateSpan = document.querySelector(\"#startDate\") as HTMLElement;\n\n  if (!alertBoxEarly || !startDateSpan) {\n    console.error(\"Early Alert Box elements not found\");\n    return;\n  }\n\n  const state = loadState();\n  const { selectedPricingOption, early_registration, checkoutPreview } = state;\n\n  // Check if selectedPricingOption is \"Monthly\" and early_registration is true\n  if (\n    selectedPricingOption === \"Monthly\" &&\n    early_registration &&\n    checkoutPreview &&\n    checkoutPreview.start_date\n  ) {\n    // Parse the start_date as UTC\n    const startDate = new Date(checkoutPreview.start_date);\n\n    // Format the date in UTC to avoid timezone shifts\n    const formatter = new Intl.DateTimeFormat(undefined, {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      timeZone: \"UTC\", // Ensure formatting is done in UTC\n    });\n\n    const formattedDate = formatter.format(startDate);\n\n    // Update the startDate span\n    startDateSpan.textContent = formattedDate;\n\n    // Display the alert box\n    alertBoxEarly.style.display = \"flex\";\n    console.log(\"Early registration alert box displayed with start date:\", formattedDate);\n  } else {\n    // Hide the alert box if conditions are not met\n    alertBoxEarly.style.display = \"none\";\n    console.log(\"Early registration alert box hidden\");\n  }\n};\n","// financialAid.ts\nimport { WFComponent } from \"@xatom/core\";\nimport { loadState, saveState } from \"../state/registrationState\";\nimport { updateTotalAmount } from \"./updateTotalAmount\";\nimport { toggleError, setupValidation } from \"../../../utils/formUtils\";\nimport {\n  validateNotEmpty,\n  validateSelectField,\n} from \"../../../utils/validationUtils\";\n\n// Function to initialize the financial aid checkbox and dialog\nexport const initializeFinancialAid = () => {\n  const financialAidCheckbox = new WFComponent(\"#requestFinAid\");\n  const financialAidDialog = new WFComponent(\"#finaidForm\");\n\n  // Show dialog when checkbox is checked\n  financialAidCheckbox.on(\"change\", () => {\n    const checkboxElement =\n      financialAidCheckbox.getElement() as HTMLInputElement;\n    const state = loadState(); // Load the state here\n    if (checkboxElement.checked) {\n      (financialAidDialog.getElement() as HTMLDialogElement).showModal();\n    } else {\n      // Reset financial aid-related state\n      saveState({ fin_aid_requested: false, selected_discount: undefined });\n\n      // Determine if deposit is included\n      const includeDeposit =\n        state.pendingStudents?.length > 0 ||\n        (state.early_registration && state.selectedPricingOption === \"Monthly\");\n      // Update totals accordingly\n      updateTotalAmount(includeDeposit, state.selectedPricingOption);\n    }\n  });\n\n  // Close dialog event to uncheck checkbox if no discount is applied\n  financialAidDialog.getElement()?.addEventListener(\"close\", () => {\n    const state = loadState();\n    if (!state.selected_discount) {\n      (financialAidCheckbox.getElement() as HTMLInputElement).checked = false;\n    }\n  });\n\n  // Form validation\n  setupFinancialAidFormValidation();\n\n  // Handle form submission\n  const submitButton = new WFComponent(\"#submitfinancialAid\");\n  submitButton.on(\"click\", () => {\n    if (validateFinancialAidForm()) {\n      saveFinancialAidData();\n      showSuccessState();\n    }\n  });\n\n  // Attach close dialog function to close button and outside click\n  attachCloseDialogHandler(financialAidDialog);\n\n  // Format currency in real-time as the user types\n  const annualIncomeInput = new WFComponent(\"#annualIncome\");\n  const monthlyExpenseInput = new WFComponent(\"#monthlyExpense\");\n\n  const formatAndSetInputValue = (component: WFComponent) => {\n    const inputElement = component.getElement() as HTMLInputElement;\n    let value = inputElement.value.replace(/[^\\d.-]/g, \"\"); // Remove non-numeric characters except for digits, dots, and dashes\n\n    // Save the cursor position before formatting\n    let cursorPosition = inputElement.selectionStart || 0;\n\n    // Calculate the number of commas before formatting\n    const commaCountBefore = (\n      inputElement.value.slice(0, cursorPosition).match(/,/g) || []\n    ).length;\n\n    // Handle the case where the user might enter multiple decimal points\n    if (value.includes(\".\")) {\n      const [integerPart, decimalPart] = value.split(\".\");\n      value = `${integerPart}.${decimalPart.slice(0, 2)}`;\n    }\n\n    // Format the number\n    const formattedValue = formatNumber(value);\n    inputElement.value = formattedValue;\n\n    // Calculate the number of commas after formatting\n    const commaCountAfter = (\n      inputElement.value.slice(0, cursorPosition).match(/,/g) || []\n    ).length;\n\n    // Adjust cursor position based on the difference in comma count\n    cursorPosition += commaCountAfter - commaCountBefore;\n\n    // Ensure cursor position does not exceed the input length\n    if (cursorPosition > formattedValue.length) {\n      cursorPosition = formattedValue.length;\n    }\n\n    // Set the cursor position back to the calculated position\n    inputElement.setSelectionRange(cursorPosition, cursorPosition);\n  };\n\n  const formatNumber = (value: string): string => {\n    const number = parseFloat(value.replace(/,/g, \"\"));\n    if (isNaN(number)) return value;\n    return number.toLocaleString(\"en-US\", {\n      minimumFractionDigits: 0, // No decimals during typing\n      maximumFractionDigits: 0, // No decimals during typing\n    });\n  };\n\n  annualIncomeInput.on(\"input\", () =>\n    formatAndSetInputValue(annualIncomeInput)\n  );\n  monthlyExpenseInput.on(\"input\", () =>\n    formatAndSetInputValue(monthlyExpenseInput)\n  );\n};\n\n// Function to close the financial aid dialog\nconst closeFinancialAidDialog = (dialog: WFComponent) => {\n  (dialog.getElement() as HTMLDialogElement).close();\n};\n\n// Function to attach close dialog handler\nconst attachCloseDialogHandler = (dialog: WFComponent) => {\n  const closeButton = new WFComponent(\"#close-dialog-btn\");\n\n  closeButton.on(\"click\", () => closeFinancialAidDialog(dialog));\n\n  dialog.getElement()?.addEventListener(\"click\", (event) => {\n    const rect = (\n      dialog.getElement() as HTMLDialogElement\n    ).getBoundingClientRect();\n    if (\n      event.clientX < rect.left ||\n      event.clientX > rect.right ||\n      event.clientY < rect.top ||\n      event.clientY > rect.bottom\n    ) {\n      closeFinancialAidDialog(dialog);\n    }\n  });\n};\n\n// Function to validate the financial aid form\nconst setupFinancialAidFormValidation = () => {\n  const relationshipInput = new WFComponent(\"#finaidRelationship\");\n  const relationshipError = new WFComponent(\"#finaidRelationshipError\");\n\n  const previousParticipantInputs = document.getElementsByName(\n    \"previous_participant\"\n  );\n  const previousParticipantError = new WFComponent(\"#previousParticipantError\");\n\n  const annualIncomeInput = new WFComponent(\"#annualIncome\");\n  const annualIncomeError = new WFComponent(\"#annualIncomeError\");\n\n  const monthlyExpenseInput = new WFComponent(\"#monthlyExpense\");\n  const monthlyExpenseError = new WFComponent(\"#monthlyExpenseError\");\n\n  setupValidation(relationshipInput, relationshipError, () =>\n    validateSelectField(getComponentValue(relationshipInput))\n      ? \"\"\n      : \"Please select a relationship.\"\n  );\n\n  setupValidation(annualIncomeInput, annualIncomeError, () =>\n    validateNotEmpty(getComponentValue(annualIncomeInput))\n      ? \"\"\n      : \"Please enter your annual household income.\"\n  );\n\n  setupValidation(monthlyExpenseInput, monthlyExpenseError, () =>\n    validateNotEmpty(getComponentValue(monthlyExpenseInput))\n      ? \"\"\n      : \"Please enter your monthly expenditure.\"\n  );\n\n  Array.from(previousParticipantInputs).forEach((input) => {\n    setupValidation(\n      new WFComponent(input as HTMLElement),\n      previousParticipantError,\n      () => {\n        const selected = Array.from(previousParticipantInputs).some(\n          (radio) => (radio as HTMLInputElement).checked\n        );\n        return selected ? \"\" : \"Please select an option.\";\n      }\n    );\n  });\n};\n\n// Function to validate the financial aid form on submit\nconst validateFinancialAidForm = () => {\n  const relationshipInput = new WFComponent(\"#finaidRelationship\");\n  const annualIncomeInput = new WFComponent(\"#annualIncome\");\n  const monthlyExpenseInput = new WFComponent(\"#monthlyExpense\");\n  const previousParticipantInputs = document.getElementsByName(\n    \"previous_participant\"\n  );\n\n  const isRelationshipValid = validateSelectField(\n    getComponentValue(relationshipInput)\n  );\n  toggleError(\n    new WFComponent(\"#finaidRelationshipError\"),\n    \"Please select a relationship.\",\n    !isRelationshipValid\n  );\n\n  const isAnnualIncomeValid = validateNotEmpty(\n    getComponentValue(annualIncomeInput)\n  );\n  toggleError(\n    new WFComponent(\"#annualIncomeError\"),\n    \"Please enter your annual household income.\",\n    !isAnnualIncomeValid\n  );\n\n  const isMonthlyExpenseValid = validateNotEmpty(\n    getComponentValue(monthlyExpenseInput)\n  );\n  toggleError(\n    new WFComponent(\"#monthlyExpenseError\"),\n    \"Please enter your monthly expenditure.\",\n    !isMonthlyExpenseValid\n  );\n\n  const isPreviousParticipantValid = Array.from(previousParticipantInputs).some(\n    (radio) => (radio as HTMLInputElement).checked\n  );\n  toggleError(\n    new WFComponent(\"#previousParticipantError\"),\n    \"Please select an option.\",\n    !isPreviousParticipantValid\n  );\n\n  return (\n    isRelationshipValid &&\n    isAnnualIncomeValid &&\n    isMonthlyExpenseValid &&\n    isPreviousParticipantValid\n  );\n};\n\n// Function to save financial aid data to state\nconst saveFinancialAidData = () => {\n  const relationshipComponent = new WFComponent(\"#finaidRelationship\");\n  const relationshipElement =\n    relationshipComponent.getElement() as HTMLSelectElement;\n  const relationship = relationshipElement.value;\n\n  const annualIncomeComponent = new WFComponent(\"#annualIncome\");\n  const annualIncomeElement =\n    annualIncomeComponent.getElement() as HTMLInputElement;\n  const annualIncome = annualIncomeElement.value;\n\n  const monthlyExpenseComponent = new WFComponent(\"#monthlyExpense\");\n  const monthlyExpenseElement =\n    monthlyExpenseComponent.getElement() as HTMLInputElement;\n  const monthlyExpense = monthlyExpenseElement.value;\n\n  const previousParticipantInput = document.querySelector(\n    \"input[name='previous_participant']:checked\"\n  ) as HTMLInputElement | null;\n  const previousParticipant = previousParticipantInput\n    ? previousParticipantInput.value\n    : \"\";\n\n  saveState({\n    fin_aid_requested: true,\n    selected_discount: \"\", // Placeholder; will be set when discount is applied\n    financialAidData: {\n      relationship,\n      annualIncome,\n      monthlyExpense,\n      previousParticipant,\n    },\n  });\n\n  console.log(\"Financial aid data saved:\", {\n    relationship,\n    annualIncome,\n    monthlyExpense,\n    previousParticipant,\n  });\n};\n\n// Function to display success state and discount selection\nconst showSuccessState = () => {\n  const successMessage = new WFComponent(\".success-message\");\n  const form = new WFComponent(\"#wf-form-Finaid-Form\");\n  form.setStyle({ display: \"none\" });\n  successMessage.setStyle({ display: \"block\" });\n\n  const applyDiscountButton = new WFComponent(\"#applyDiscount\");\n  const backFinAidButton = new WFComponent(\"#backFinAid\");\n  const financialAidDialog = new WFComponent(\"#finaidForm\");\n\n  applyDiscountButton.on(\"click\", () => {\n    const selectedDiscount = document.querySelector(\n      \"input[name='discountValue']:checked\"\n    ) as HTMLInputElement | null;\n\n    if (selectedDiscount) {\n      const discountValue = selectedDiscount.value;\n      const state = loadState();\n\n      saveState({ selected_discount: discountValue });\n      saveState({ fin_aid_requested: true });\n\n      // Determine if deposit is included\n      const includeDeposit =\n        state.pendingStudents?.length > 0 ||\n        (state.early_registration && state.selectedPricingOption === \"Monthly\");\n\n      updateTotalAmount(includeDeposit, state.selectedPricingOption);\n\n      console.log(`Discount applied: ${discountValue}%`);\n\n      // Close the dialog\n      closeFinancialAidDialog(financialAidDialog);\n    } else {\n      console.warn(\"No discount selected.\");\n      // Optionally provide feedback to the user about selecting a discount\n    }\n  });\n\n  backFinAidButton.on(\"click\", () => {\n    successMessage.setStyle({ display: \"none\" });\n    form.setStyle({ display: \"flex\" });\n  });\n};\n\n// Helper function to get the value of a component\nconst getComponentValue = (component: WFComponent): string => {\n  const element = component.getElement() as\n    | HTMLInputElement\n    | HTMLSelectElement;\n  return element.value;\n};\n","import { WFComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../api/apiConfig\";\nimport { userAuth } from \"../auth/authConfig\";\n\nexport function toggleError(\n  errorMessageComponent: WFComponent<any>,\n  message: string,\n  show: boolean\n): void {\n  errorMessageComponent.updateTextViaAttrVar({ text: show ? message : \"\" });\n  errorMessageComponent.setStyle({ display: show ? \"flex\" : \"none\" });\n}\n\nexport function setupValidation(\n  inputComponent: WFComponent,\n  errorComponent: WFComponent,\n  validate: () => string,\n  requestErrorComponent?: WFComponent // Optional component to clear on input change\n) {\n  const validateAndUpdate = () => {\n    const errorMessage = validate();\n    toggleError(errorComponent, errorMessage, !!errorMessage);\n    if (requestErrorComponent && errorMessage === \"\") {\n      // Clear request error message when the user is correcting the input\n      toggleError(requestErrorComponent, \"\", false);\n    }\n  };\n\n  // Attach event listeners for real-time validation\n  inputComponent.on(\"input\", validateAndUpdate);\n  inputComponent.on(\"blur\", validateAndUpdate);\n  inputComponent.on(\"change\", validateAndUpdate);\n}\n\nexport function createValidationFunction(\n  inputComponent: WFComponent,\n  validationFn: (input: string) => boolean,\n  errorMessage: string\n): () => string {\n  return () => {\n    const inputElement = inputComponent.getElement() as HTMLInputElement;\n    const isValid = validationFn(inputElement.value);\n    return isValid ? \"\" : errorMessage;\n  };\n}\n\nexport function createCheckboxValidationFunction(\n  checkboxComponent: WFComponent,\n  errorMessage: string\n): () => string {\n  return () => {\n    const checkbox = checkboxComponent.getElement() as HTMLInputElement;\n    return checkbox.checked ? \"\" : errorMessage;\n  };\n}\n\nexport function setupCheckboxValidation(\n  checkboxComponent: WFComponent,\n  checkboxErrorComponent: WFComponent,\n  errorMessage: string\n) {\n  const validate = createCheckboxValidationFunction(\n    checkboxComponent,\n    errorMessage\n  );\n  setupValidation(checkboxComponent, checkboxErrorComponent, validate);\n}\n\nexport function validateSelectedSessions(\n  selectedSessions: { sessionId: string; studentIds: string[] }[],\n  errorMessageComponent: WFComponent<any>,\n  errorMessage: string\n): boolean {\n  const isValid =\n    selectedSessions.length > 0 &&\n    selectedSessions.some((session) => session.studentIds.length > 0);\n\n  if (!isValid) {\n    toggleError(errorMessageComponent, errorMessage, true);\n  } else {\n    toggleError(errorMessageComponent, \"\", false);\n  }\n\n  return isValid;\n}\n\ntype fileUploadResponse = {\n  status: string;\n  url: {\n    profile_pic: {\n      url: string;\n    };\n  };\n};\n\n/**\n * Updates the user's profile picture URL in the authentication system.\n * @param {string} imageUrl - The URL of the uploaded image.\n */\nexport function setProfilePicUrl(imageUrl: string): void {\n  const user = userAuth.getUser();\n  if (user && user.profile) {\n    // Ensure the profile_picture object exists\n    user.profile.profile_pic = user.profile.profile_pic || { url: \"\" };\n\n    // Set the profile picture URL\n    user.profile.profile_pic.url = imageUrl;\n    userAuth.setUser(user);\n    localStorage.setItem(\"auth_user\", JSON.stringify(user));\n  }\n}\n\n/**\n * Handles file upload and displays the uploaded image.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */\n/**\n * Handles file upload and displays the uploaded image.\n * Only JPEG files less than 2 MB can be uploaded.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */\nexport function setupFileUpload(\n  fileInput: WFComponent,\n  fileInputError: WFComponent,\n  fileInputSuccess: WFComponent,\n  uploadEndpoint: string\n): Promise<string> {\n  const profilePictureImage = new WFImage(\"#profilePictureImage\");\n  const uploadAnimation = new WFComponent(\"#uploadAnimation\");\n\n  const overlay = new WFComponent(\".drop-zone\");\n  let dragCounter = 0;\n\n  return new Promise<string>((resolve) => {\n    const handleFile = (file: File) => {\n      // Validate file type and size\n      const validTypes = [\"image/jpeg\", \"image/jpg\"];\n      const maxSizeInBytes = 2 * 1024 * 1024; // 2 MB\n\n      if (\n        !validTypes.includes(file.type) &&\n        !/\\.(jpg|jpeg)$/i.test(file.name)\n      ) {\n        const errorMessage = \"Only JPEG images are allowed.\";\n        toggleError(fileInputError, errorMessage, true);\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n        return;\n      }\n\n      if (file.size > maxSizeInBytes) {\n        const errorMessage = \"File size must be less than 2 MB.\";\n        toggleError(fileInputError, errorMessage, true);\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n        return;\n      }\n\n      // Show upload animation immediately\n      uploadAnimation.setStyle({ display: \"flex\" });\n\n      // Hide error and success messages\n      fileInputError.setStyle({ display: \"none\" });\n      fileInputSuccess.setStyle({ display: \"none\" });\n\n      const reader = new FileReader();\n\n      // Display preview image as soon as the file is loaded into memory\n      reader.onload = (event) => {\n        // Set the preview image for the profile picture\n        const result = event.target?.result as string;\n        profilePictureImage.setImage(result);\n\n        // Hide overlay once the image is set\n        overlay.setStyle({ display: \"none\" });\n      };\n\n      reader.readAsDataURL(file);\n\n      const formData = new FormData();\n      formData.append(\"profile_picture\", file);\n\n      const existingStudent = localStorage.getItem(\"current_student\");\n      if (existingStudent) {\n        const student = JSON.parse(existingStudent);\n        formData.append(\"student_profile_id\", student.id.toString());\n      }\n\n      // Send the file to the server\n      const postRequest = apiClient.post<fileUploadResponse>(uploadEndpoint, {\n        data: formData,\n      });\n\n      postRequest.onData((response) => {\n        if (response.status === \"success\") {\n          const imageUrl = response.url.profile_pic.url;\n\n          // Update the profile picture URL in the user session and local storage\n          setProfilePicUrl(imageUrl);\n\n          // Update the image for other parts of the UI as well\n          profilePictureImage.setImage(imageUrl);\n\n          // Store the URL in local storage\n          localStorage.setItem(\"image_upload\", imageUrl);\n\n          // Show success message and hide upload animation\n          fileInputSuccess.setStyle({ display: \"flex\" });\n          uploadAnimation.setStyle({ display: \"none\" });\n\n          // Resolve with the uploaded image URL\n          resolve(imageUrl);\n        } else {\n          const errorMessage = \"Failed to upload profile picture.\";\n          toggleError(fileInputError, errorMessage, true);\n          uploadAnimation.setStyle({ display: \"none\" });\n          overlay.setStyle({ display: \"none\" });\n          dragCounter = 0;\n          // Reset file input value\n          (fileInput.getElement() as HTMLInputElement).value = \"\";\n        }\n      });\n\n      postRequest.onError((error) => {\n        let errorMessage = \"An error occurred during image upload.\";\n        if (error.response && error.response.data) {\n          errorMessage = error.response.data.message || errorMessage;\n        } else if (error.message) {\n          errorMessage = error.message;\n        }\n\n        // Show error message and hide upload animation\n        toggleError(fileInputError, errorMessage, true);\n        uploadAnimation.setStyle({ display: \"none\" });\n        overlay.setStyle({ display: \"none\" });\n        dragCounter = 0;\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n      });\n\n      // Make the API call\n      postRequest.fetch();\n    };\n\n    // Event listener for file input changes\n    fileInput.on(\"change\", () => {\n      const file = (fileInput.getElement() as HTMLInputElement).files?.[0];\n      if (file) {\n        handleFile(file);\n      }\n    });\n\n    // Event listeners for drag-and-drop\n    const dragZoneElement = document.body;\n    dragZoneElement.addEventListener(\"dragenter\", (event) => {\n      event.preventDefault();\n      dragCounter++;\n      if (dragCounter === 1) {\n        overlay.setStyle({ display: \"flex\" });\n      }\n    });\n\n    dragZoneElement.addEventListener(\"dragleave\", () => {\n      dragCounter--;\n      if (dragCounter <= 0) {\n        overlay.setStyle({ display: \"none\" });\n        dragCounter = 0;\n      }\n    });\n\n    dragZoneElement.addEventListener(\"dragover\", (event) => {\n      event.preventDefault();\n    });\n\n    dragZoneElement.addEventListener(\"drop\", (event) => {\n      event.preventDefault();\n\n      const files = event.dataTransfer?.files;\n      if (files?.length) {\n        handleFile(files[0]);\n      }\n\n      overlay.setStyle({ display: \"none\" });\n      dragCounter = 0;\n    });\n  });\n}\n\n// src/utils/formUtils.ts\n\n/**\n * Formats a phone number string to the format (xxx) xxx-xxxx.\n * If the input contains more than 10 digits, it truncates the extra digits.\n * If it contains fewer, it formats as much as possible.\n *\n * @param value - The raw phone number string.\n * @returns The formatted phone number string.\n */\nexport const formatPhoneNumber = (value: string): string => {\n  const cleaned = value.replace(/\\D/g, \"\"); // Remove all non-digit characters\n\n  if (cleaned.length <= 3) {\n    return cleaned;\n  } else if (cleaned.length <= 6) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3)}`;\n  } else if (cleaned.length <= 10) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(\n      6\n    )}`;\n  } else {\n    // If more than 10 digits, truncate the extra digits\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(\n      6,\n      10\n    )}`;\n  }\n};\n","var t=require(\"@xatom/core\");var e,r,s,i,o,n,u={};e=u,r=\"WFImage\",s=()=>c,Object.defineProperty(e,r,{get:s,set:i,enumerable:!0,configurable:!0});class c extends t.WFComponent{constructor(t){super(t)}getImageConfig(){return this._config}getSrc(){return this.getAttribute(\"src\")}getSizes(){return this.getAttribute(\"sizes\")}getSrcSet(){return this.getAttribute(\"srcset\")}getLoading(){return this.getAttribute(\"loading\")}onLoad(t){return this.on(\"load\",t),()=>{this.off(\"load\",t)}}onLoadError(t){return this.on(\"error\",t),()=>{this.off(\"error\",t)}}setImage(t){if(\"string\"==typeof t)this.setAttribute(\"src\",t),this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");else{if(this.setAttribute(\"src\",t.src),\"object\"==typeof t&&t.srcSet&&t.srcSet.length&&t.sizes&&t.sizes.length){const e=t.srcSet.map((t=>`${t.url} ${t.size}`)).join(\", \");this.setAttribute(\"srcset\",e)}else this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");t.loading&&this.setAttribute(\"loading\",t.loading)}}}o=module.exports,n=u,Object.keys(n).forEach((function(t){\"default\"===t||\"__esModule\"===t||o.hasOwnProperty(t)||Object.defineProperty(o,t,{enumerable:!0,get:function(){return n[t]}})}));","import { WFComponent } from \"@xatom/core\";\nimport { toggleError } from \"./formUtils\";\n\nexport function validateNotEmpty(input: string | undefined): boolean {\n  return input !== undefined && input.trim() !== \"\";\n}\n\nexport function validateEmail(input: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(input);\n}\n\n/**\n * Validates that the email is either empty or correctly formatted.\n * @param value The email input value.\n * @returns True if valid, false otherwise.\n */\nexport const validateEmailOptional = (value: string): boolean => {\n  if (value.trim() === \"\") {\n    // Email is optional, so empty string is valid\n    return true;\n  }\n  // Validate the email format if not empty\n  return validateEmail(value);\n};\n\nexport function validatePasswordRequirements(password: string): boolean {\n  const hasLowercase = /[a-z]/.test(password);\n  const hasUppercase = /[A-Z]/.test(password);\n  const hasDigit = /\\d/.test(password);\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n  const hasValidLength = password.length >= 8;\n  return (\n    hasLowercase && hasUppercase && hasDigit && hasSpecialChar && hasValidLength\n  );\n}\n\nexport function validateCheckbox(checked: boolean): boolean {\n  return checked;\n}\n\nexport function validatePasswordsMatch(\n  originalPassword: string,\n  confirmPassword: string\n): boolean {\n  return originalPassword === confirmPassword;\n}\n\nexport function validateSelectField(input: string | undefined): boolean {\n  return input !== undefined && input !== \"N/A\";\n}\n\nexport function validatePhoneNumber(input: string): boolean {\n  const phoneRegex = /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/;\n  return phoneRegex.test(input);\n}\n\nexport const validatePhoneNumberOptional = (value: string): boolean => {\n  if (value.trim() === \"\") {\n    // Phone number is optional, so empty string is valid\n    return true;\n  }\n  // Validate the phone number format if not empty\n  return validatePhoneNumber(value);\n};\n","var e=require(\"@xatom/core\"),s=require(\"uuid\");var t,i,r,l,d={};t=d,i=\"WFSlider\",r=()=>o,Object.defineProperty(t,i,{get:r,set:l,enumerable:!0,configurable:!0});const n=window.jQuery;class o extends e.WFComponent{_sliderConfig={};_slides=[];_defaultSwipeDisabled=!1;_index=0;_listeners=new Map;constructor(e){super(e),this.init()}init(){this._defaultSwipeDisabled=\"true\"===this.getAttribute(\"data-disable-swipe\"),this._sliderConfig=n(this.getElement()).data()[\".wSlider\"],this._slides=Array.from(this._sliderConfig.slides).map((s=>new(0,e.WFComponent)(s))),this._mask=new(0,e.WFComponent)(this._sliderConfig.mask[0]),this._nav=new(0,e.WFComponent)(this._sliderConfig.nav[0]),this._left=new(0,e.WFComponent)(this._sliderConfig.left[0]),this._right=new(0,e.WFComponent)(this._sliderConfig.right[0]),function(e,s){if(!document.styleSheets)return;if(0==document.getElementsByTagName(\"head\").length)return;let t,i;if(document.styleSheets.length>0)for(var r=0,l=document.styleSheets.length;r<l;r++)if(!document.styleSheets[r].disabled){var d=document.styleSheets[r].media;if(i=typeof d,\"string\"===i?\"\"!==d&&-1===d.indexOf(\"screen\")||(t=document.styleSheets[r]):\"object\"==i&&(\"\"!==d.mediaText&&-1===d.mediaText.indexOf(\"screen\")||(t=document.styleSheets[r])),void 0!==t)break}if(void 0===t){var n=document.createElement(\"style\");for(n.type=\"text/css\",document.getElementsByTagName(\"head\")[0].appendChild(n),r=0;r<document.styleSheets.length;r++)document.styleSheets[r].disabled||(t=document.styleSheets[r]);i=typeof t.media}if(\"string\"===i){for(r=0,l=t.rules.length;r<l;r++)if(t.rules[r].selectorText&&t.rules[r].selectorText.toLowerCase()==e.toLowerCase())return void(t.rules[r].style.cssText=s);t.addRule(e,s)}else if(\"object\"===i){var o=t.cssRules?t.cssRules.length:0;for(r=0;r<o;r++)if(t.cssRules[r].selectorText&&t.cssRules[r].selectorText.toLowerCase()==e.toLowerCase())return void(t.cssRules[r].style.cssText=s);t.insertRule(e+\"{\"+s+\"}\",o)}}(\".xa-slider-disable\",\"display:none !important;\");const s=this;Object.defineProperty(s._sliderConfig,\"index\",{set:function(e){s._index=e,s._triggerOnChange()},get:function(){return s._index}}),this.refereshSlides()}reloadWFSlider(){window.Webflow.require(\"slider\").destroy(),window.Webflow.require(\"slider\").redraw(),window.Webflow.require(\"slider\").ready()}refereshSlides(){this._mask.getChildAsComponents(\".w-slide\").forEach((e=>e.remove())),this._slides.reverse().forEach((e=>{this._mask.getElement().prepend(e.getElement())})),this._slides.reverse(),this.reloadWFSlider()}getActiveSlide(){return this._slides[this._index]}getAllSlides(){return[...this._slides]}getSlideByIndex(e){return this._slides[e]}getActiveSlideIndex(){return this._index}getPreviousSlideIndex(){return this._sliderConfig.previous}goNext(){this._sliderConfig.right.click()}goPrevious(){this._sliderConfig.left.click()}goToIndex(e){e>=0&&e<this._slides.length&&(console.log(e),n(this._sliderConfig.nav.children()[e]).click())}addSlide(s,t={}){const i=t.index,r=t.cssClass,l=(0,e.createComponent)(\"div\");l.addCssClass(\"w-slide\"),r&&l.addCssClass(r),l.appendChild(s);const d=\"number\"!=typeof i?-1:i,n=this._slides;d>=0&&d<=n.length?n.splice(i,0,l):n.push(l),this._slides=[...n],this.refereshSlides()}removeSlide(e){const s=[...this._slides];e>=0&&e<s.length&&s.splice(e,1),this._slides=[...s],console.log(this._slides),this.refereshSlides()}getSlideNav(){return this._nav}setSlideNavigationState(e){e?(this._left.removeCssClass(\"xa-slider-disable\"),this._right.removeCssClass(\"xa-slider-disable\"),this._nav.removeCssClass(\"xa-slider-disable\"),this.setAttribute(\"data-disable-swipe\",this._defaultSwipeDisabled?\"true\":\"false\")):(this._left.addCssClass(\"xa-slider-disable\"),this._right.addCssClass(\"xa-slider-disable\"),this._nav.addCssClass(\"xa-slider-disable\"),this.setAttribute(\"data-disable-swipe\",\"true\")),this.reloadWFSlider()}onSlideChange(e){const t=(0,s.v4)();return this._listeners.set(t,e),()=>{this._listeners.delete(t)}}_triggerOnChange(){Array.from(this._listeners.values()).forEach((e=>{e(this._index,this._sliderConfig.previous)}))}getConfig(){return this._sliderConfig}}var a,h;a=module.exports,h=d,Object.keys(h).forEach((function(e){\"default\"===e||\"__esModule\"===e||a.hasOwnProperty(e)||Object.defineProperty(a,e,{enumerable:!0,get:function(){return h[e]}})}));","// sidebarIndicators.ts\n\nimport { WFComponent } from \"@xatom/core\";\nimport { userAuth } from \"../../../auth/authConfig\";\n\n// Initialize the sidebar indicators\nexport const initializeSidebarIndicators = () => {\n  const steps = [\n    { id: \"sidebarStepOne\", index: 1 },\n    { id: \"sidebarStepTwo\", index: 2 },\n    { id: \"sidebarStepThree\", index: 3 },\n    { id: \"sidebarStepFour\", index: 4 },\n    { id: \"sidebarStepFive\", index: 5 },\n  ];\n\n  // Set sidebar first name from userAuth\n  const firstNameText = new WFComponent(\"#firstNameText\");\n  const user = userAuth.getUser();\n\n  if (user && user.profile && user.profile.first_name) {\n    firstNameText.setText(user.profile.first_name);\n  } else {\n    firstNameText.setText(\"Friend\");\n  }\n\n  steps.forEach((step) => {\n    const stepComponent = new WFComponent(`#${step.id}`);\n    let isCompleted = false; // Track the completed state\n\n    stepComponent.on(\"click\", () => {\n      if (isCompleted) {\n        isCompleted = false;\n        // Trigger reverse animation here if needed\n      } else {\n        isCompleted = true;\n        // Trigger completed animation here\n      }\n    });\n  });\n};\n\n// Set the active step\nexport const setActiveStep = (stepNumber: number) => {\n  const stepId = getStepId(stepNumber);\n  const stepComponent = new WFComponent(`#${stepId}`);\n  stepComponent.addCssClass(\"is-active\");\n};\n\n// Unset the active step\nexport const unsetActiveStep = (stepNumber: number) => {\n  const stepId = getStepId(stepNumber);\n  const stepComponent = new WFComponent(`#${stepId}`);\n  stepComponent.removeCssClass(\"is-active\");\n};\n\n// Mark step as completed\nexport const markStepAsCompleted = (stepNumber: number) => {\n  const stepId = getStepId(stepNumber);\n  const step = new WFComponent(`#${stepId}`);\n  step.getElement().click(); // Programmatically trigger the click event to mark as complete\n};\n\n// Unmark step as completed (reverse the completed animation)\nexport const unmarkStepAsCompleted = (stepNumber: number) => {\n  const stepId = getStepId(stepNumber);\n  const step = new WFComponent(`#${stepId}`);\n  step.getElement().click(); // Programmatically trigger the click event to unmark as complete\n};\n\n// Helper function to get the ID string for a step\nconst getStepId = (stepNumber: number): string => {\n  const stepMap: Record<number, string> = {\n    1: \"sidebarStepOne\",\n    2: \"sidebarStepTwo\",\n    3: \"sidebarStepThree\",\n    4: \"sidebarStepFour\",\n    5: \"sidebarStepFive\",\n  };\n  return stepMap[stepNumber] || `sidebarStep${stepNumber}`;\n};\n","import { WFComponent } from \"@xatom/core\";\nimport { fetchStudentProfiles } from \"../../../api/students\";\n// Function to display the action required dialog and prevent closing\nexport const displayActionRequiredDialog = () => {\n  const actionRequiredDialog = new WFComponent(\"#actionRequiredDialog\");\n  const alertDialogAnimationTrigger = new WFComponent(\n    \"#alertDialogAnimationTrigger\"\n  );\n  const pageMainElement = document.querySelector(\".page_main\");\n\n  // Show the dialog\n  (actionRequiredDialog.getElement() as HTMLDialogElement).showModal();\n\n  // Trigger any necessary animations\n  alertDialogAnimationTrigger.getElement().click();\n\n  // Set the data-brand attribute of .page_main to 5\n  if (pageMainElement) {\n    pageMainElement.setAttribute(\"data-brand\", \"5\");\n  }\n\n  // Prevent closing the dialog\n  actionRequiredDialog.getElement().addEventListener(\"cancel\", (event) => {\n    event.preventDefault();\n  });\n\n  actionRequiredDialog.getElement().addEventListener(\"close\", (event) => {\n    event.preventDefault();\n  });\n\n  // Prevent closing the dialog with the escape key\n  const preventEscapeClose = (event: KeyboardEvent) => {\n    if (event.key === \"Escape\") {\n      event.preventDefault();\n    }\n  };\n\n  document.addEventListener(\"keydown\", preventEscapeClose);\n};\n\n// Initialize the registration and check for student profiles\nexport const checkForStudents = async () => {\n  try {\n    const { students, showDialog } = await fetchStudentProfiles();\n\n    if (showDialog) {\n      displayActionRequiredDialog();\n    }\n\n    // Handle students data as needed\n    // For example, save to state, display, etc.\n  } catch (error) {\n    console.error(\"Error during registration initialization:\", error);\n  }\n};\n","// src/navigation/urlParamNavigator.ts\n\nimport { saveSelectedProgram } from \"../state/selectedProgram\";\nimport {\n  saveSelectedWorkshop,\n  resetSelectedWorkshop,\n} from \"../state/selectedWorkshop\";\nimport { initializeProgramList } from \"../../registration/programList\";\nimport { initializeWorkshopList } from \"../../registration/workshopList\";\nimport { initializeSessionList } from \"../../registration/sessionsList\";\nimport { WFSlider } from \"@xatom/slider\";\nimport {\n  initializeSidebarIndicators,\n  setActiveStep,\n  markStepAsCompleted,\n} from \"../../registration/components/sidebarIndicators\";\nimport { WFComponent } from \"@xatom/core\"; // Import WFComponent\nimport { apiClient } from \"../../../api/apiConfig\"; // Import apiClient\n\n// **Import the initializeAlertBoxEarly function**\nimport { initializeAlertBoxEarly } from \"../../registration/components/alertBoxEarly\";\n\n// Function to parse URL parameters\nconst getUrlParams = () => {\n  const params = new URLSearchParams(window.location.search);\n  const programId = params.get(\"program\");\n  const workshopId = params.get(\"workshop\");\n  const cancelId = params.get(\"cancel\"); // Extract 'cancel' parameter\n  return { programId, workshopId, cancelId };\n};\n\n// Function to initialize states based on URL parameters\nexport const initializeStateFromUrlParams = async (slider: WFSlider) => {\n  const { programId, workshopId, cancelId } = getUrlParams();\n  initializeSidebarIndicators(); // Initialize sidebar indicators\n\n  const loadingWall = new WFComponent(\".loading_wall\");\n  const animationDuration = 500; // Duration in milliseconds matching the CSS transition time\n\n  // Check if any relevant URL parameters are present\n  if (programId || workshopId || cancelId) {\n    // Show the loading wall\n    loadingWall.setStyle({ display: \"flex\" });\n\n    try {\n      // Handle cancellation if 'cancel' parameter is present\n      if (cancelId) {\n        // Create the DELETE request using AxiosClient\n        const deleteSubscription = apiClient.delete(\n          `/subscriptions/${cancelId}`\n        );\n\n        // Set up listeners for the DELETE request\n        await new Promise<void>((resolve, reject) => {\n          deleteSubscription.onData(() => {\n            console.log(`Subscription ${cancelId} canceled successfully`);\n\n            // Optional: Remove 'cancel' parameter from the URL to prevent repeated cancellations\n            const params = new URLSearchParams(window.location.search);\n            params.delete(\"cancel\");\n            const newUrl = `${window.location.pathname}${\n              params.toString() ? `?${params.toString()}` : \"\"\n            }`;\n            window.history.replaceState({}, document.title, newUrl);\n\n            resolve(); // Resolve the promise on successful deletion\n          });\n\n          deleteSubscription.onError((error) => {\n            console.error(`Failed to cancel subscription ${cancelId}:`, error);\n            // Optional: Display an error message to the user here\n            reject(error); // Reject the promise on error\n          });\n\n          // Initiate the DELETE request\n          deleteSubscription.fetch();\n        });\n      }\n\n      // Initialize the program list\n      await initializeProgramList();\n\n      if (programId) {\n        // Select the program based on the URL parameter\n        const programComponent = document.querySelector(\n          `input[value=\"${programId}\"]`\n        );\n        if (programComponent) {\n          (programComponent as HTMLInputElement).checked = true;\n          programComponent.dispatchEvent(new Event(\"change\"));\n          markStepAsCompleted(1);\n          setActiveStep(2);\n\n          // Initialize the workshop list for the selected program\n          await initializeWorkshopList(programId);\n\n          if (workshopId && workshopId === \"none\") {\n            // Skip workshop selection and navigate to session list initialization\n            resetSelectedWorkshop();\n            markStepAsCompleted(2);\n            setActiveStep(3);\n            await initializeSessionList(null, programId);\n            slider.goToIndex(2); // Navigate to the session selection slide\n          } else if (workshopId) {\n            // Select the workshop based on the URL parameter\n            const workshopComponent = document.querySelector(\n              `input[value=\"${workshopId}\"]`\n            );\n            if (workshopComponent) {\n              (workshopComponent as HTMLInputElement).checked = true;\n              workshopComponent.dispatchEvent(new Event(\"change\"));\n              markStepAsCompleted(2);\n              setActiveStep(3);\n\n              // Initialize the session list for the selected workshop\n              await initializeSessionList(workshopId, programId);\n              slider.goToIndex(2); // Navigate to the session selection slide\n            } else {\n              console.error(`Workshop with ID ${workshopId} not found`);\n              slider.goToIndex(1); // Navigate to the workshop selection slide\n            }\n          } else {\n            resetSelectedWorkshop();\n            slider.goToIndex(1); // Navigate to the workshop selection slide\n          }\n        } else {\n          console.error(`Program with ID ${programId} not found`);\n          slider.goToIndex(0); // Navigate to the program selection slide\n        }\n      } else {\n        slider.goToIndex(0); // Navigate to the first slide if no program selected\n      }\n    } catch (error) {\n      console.error(\"Error initializing state from URL parameters:\", error);\n      slider.goToIndex(0); // Navigate to the program selection slide on error\n    } finally {\n      // Hide the loading wall after completing all initializations\n      loadingWall.addCssClass(\"hidden\");\n      setTimeout(\n        () => loadingWall.setStyle({ display: \"none\" }),\n        animationDuration\n      );\n\n      // **Initialize the early registration alert box**\n      initializeAlertBoxEarly();\n    }\n  }\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","export","programRegistration","_programList","_workshopList","_sessionsList","_checkoutPreview","_selectedProgram","_selectedWorkshop","_core","_slider","_sidebarIndicators","_dialogHandler","_urlParamNavigator","_registrationState","_apiConfig","onload","localStorage","removeItem","initializeSidebarIndicators","setActiveStep","initializeProgramList","checkForStudents","slider","WFSlider","setupNavigationHandlers","initializeStateFromUrlParams","submitStepOne","WFComponent","submitStepOneError","stepOneRequestingAnimation","on","event","preventDefault","selectedProgram","loadSelectedProgram","setText","setStyle","display","initializeWorkshopList","workshopListContainer","document","querySelector","workshopItems","querySelectorAll","resetSelectedWorkshop","initializeSessionList","undefined","goNext","markStepAsCompleted","error","console","backStepTwo","goPrevious","unmarkStepAsCompleted","unsetActiveStep","submitStepTwo","stepTwoRequestingAnimation","submitStepTwoError","selectedWorkshop","loadSelectedWorkshop","backStepThree","submitStepThree","stepThreeRequestingAnimation","submitStepThreeError","validateAndSubmitSessions","initializeCheckoutPreview","backStepFour","submitStepFour","stepFourRequestingAnimation","submitStepFourError","registrationState","loadState","response","apiClient","post","data","fetch","log","setup_url","location","href","checkout_url","_programs","initialTemplateState","containerSelector","container","innerHTML","appendChild","cloneNode","list","WFDynamicList","rowSelector","loaderSelector","emptySelector","loaderRenderer","loaderElement","emptyRenderer","emptyElement","programs","fetchPrograms","rowRenderer","rowData","rowElement","index","programCard","programTitle","getChildAsComponent","programDescription","programAges","programImage","programInput","inputId","setAttribute","programLabel","fieldData","url","registrationTrueElement","registered","removeAttribute","saveSelectedProgram","imageUrl","ageRange","setData","fetchProgramById","programId","find","program","state","JSON","parse","getItem","selectedProgramId","selectedProgramName","selectedProgramImageUrl","selectedProgramAgeRange","setItem","stringify","_workshops","workshops","fetchWorkshops","workshopArray","Array","isArray","sort","a","b","localeCompare","workshopCard","workshopTitle","workshopDescription","workshopAges","workshopImage","workshopInput","workshopLabel","saveSelectedWorkshop","fetchWorkshopById","workshopId","workshop","selectedWorkshopId","selectedWorkshopName","selectedWorkshopImageUrl","selectedWorkshopAgeRange","_sessions","_updateUi","_students","_selectedSessions","sessionData","resetSelectedSessions","studentProfiles","students","fetchStudentProfiles","sessionCard","sessionWeekday","sessionTime","sessionLocation","sessionPrice","sessionInput","studentsList","hiddenFieldWrap","label","weekday","initialPrice","updateSessionPrice","removeAllChildren","forEach","student","studentId","uniqueStudentId","studentPill","createElement","addCssClass","studentCheckbox","toString","studentName","first_name","last_name","pillIcon","setHTML","studentCheckboxElement","getElement","studentIdInt","parseInt","value","sessionChangedEvent","CustomEvent","detail","sessionId","checked","initialPriceSelection","dispatchEvent","updateSelectedSessions","inputElement","studentCheckboxes","getChildAsComponents","checkbox","changeLoadingStatus","sessions","fetchSessions","selectedPricingOption","saveState","updateAllSessionPrices","addEventListener","logPricingOption","initializeFilterSelect","updateSelectedItemUI","price","sessionCards","sessionPriceElement","sessionInputElement","session","selectElement","getElementById","filterSessionsByLocation","target","sessionLocationElement","textContent","style","selectedSessions","studentIds","selectedProgramTitle","selectedWorkshopTitle","selectedAgeRange","selectedImage","selectedProgramTitleFinal","selectedWorkshopTitleFinal","selectedAgeRangeFinal","selectedImageFinal","setUIElements","image","showDialog","pendingStudentNames","pendingStudents","filter","Status","map","getPendingStudents","savedState","newState","pricingOption","loadSelectedSession","saveSelectedSession","selectedSession","s","includes","push","_alertBox","_primaryPaymentRadios","_lineItems","_updateTotalAmount","_financialAid","_alertBoxEarly","initializeAlertBox","early_registration","start_date","lineItemsOnly","annual_line_items","monthly_line_items","semester_line_items","deposit_line_items","checkoutPreview","initializePrimaryPaymentRadios","initializeFinancialAid","hasPendingStudents","shouldShowDeposit","depositLineItems","renderLineItems","updateTotalAmount","primaryLineItems","getLineItemsForSelectedOption","initializeAlertBoxEarly","alertBox","alertPendingStudentList","join","paymentPlans","key","wrapId","plan","planElement","planWrapElement","classList","remove","disabled","input","warn","lineItems","isDeposit","lineItemList","item","lineItemRow","className","productNameCell","product_name","unitAmountCell","unit_amount","quantityCell","quantity","totalAmountCell","total_amount","add","lineItemsData","_formatting","_updateSecondaryTotalAmount","includeDeposit","primaryTotal","primaryOriginal","totalAmountElement","primaryOriginalAmountElement","primaryDiscountPill","primaryDiscountNumber","secondaryAmountWrap","secondaryTotalAmountElement","secondaryOriginalAmountElement","secondaryDiscountPill","secondaryDiscountNumber","primaryAmountType","annual_amount_due","monthly_amount_due","semester_amount_due","depositAmount","deposit_amount_due","formatCurrency","updateSecondaryTotalAmount","flexDirection","selected_discount","discountValue","parseFloat","amount","numericAmount","isNaN","toLocaleString","currency","secondaryOriginalAmount","secondaryAmountType","discountedTotal","alertBoxEarly","startDateSpan","startDate","Date","formattedDate","formatter","Intl","DateTimeFormat","year","month","day","timeZone","format","_formUtils","_validationUtils","financialAidCheckbox","financialAidDialog","checkboxElement","showModal","fin_aid_requested","setupFinancialAidFormValidation","submitButton","validateFinancialAidForm","saveFinancialAidData","showSuccessState","attachCloseDialogHandler","annualIncomeInput","monthlyExpenseInput","formatAndSetInputValue","component","replace","cursorPosition","selectionStart","commaCountBefore","slice","match","integerPart","decimalPart","split","formattedValue","formatNumber","commaCountAfter","setSelectionRange","number","minimumFractionDigits","maximumFractionDigits","closeFinancialAidDialog","dialog","close","closeButton","rect","getBoundingClientRect","clientX","left","right","clientY","top","bottom","relationshipInput","relationshipError","previousParticipantInputs","getElementsByName","previousParticipantError","annualIncomeError","monthlyExpenseError","setupValidation","validateSelectField","getComponentValue","validateNotEmpty","from","selected","some","radio","isRelationshipValid","toggleError","isAnnualIncomeValid","isMonthlyExpenseValid","isPreviousParticipantValid","relationship","relationshipElement","relationshipComponent","annualIncome","annualIncomeElement","annualIncomeComponent","monthlyExpense","monthlyExpenseElement","monthlyExpenseComponent","previousParticipantInput","previousParticipant","financialAidData","successMessage","form","applyDiscountButton","backFinAidButton","selectedDiscount","element","createValidationFunction","createCheckboxValidationFunction","setupCheckboxValidation","validateSelectedSessions","setProfilePicUrl","setupFileUpload","formatPhoneNumber","_image","_authConfig","errorMessageComponent","message","show","updateTextViaAttrVar","text","inputComponent","errorComponent","validate","requestErrorComponent","validateAndUpdate","errorMessage","validationFn","isValid","checkboxComponent","checkboxErrorComponent","user","userAuth","getUser","profile","profile_pic","setUser","fileInput","fileInputError","fileInputSuccess","uploadEndpoint","profilePictureImage","WFImage","uploadAnimation","overlay","dragCounter","Promise","handleFile","file","validTypes","type","test","size","reader","FileReader","result","setImage","readAsDataURL","formData","FormData","append","existingStudent","postRequest","onData","status","onError","files","dragZoneElement","body","dataTransfer","cleaned","o","t","u","c","set","enumerable","configurable","constructor","getImageConfig","_config","getSrc","getAttribute","getSizes","getSrcSet","getLoading","onLoad","off","onLoadError","src","srcSet","sizes","e","loading","keys","hasOwnProperty","n","trim","validateEmail","emailRegex","validateEmailOptional","validatePasswordRequirements","validateCheckbox","validatePasswordsMatch","validatePhoneNumber","validatePhoneNumberOptional","password","hasLowercase","hasUppercase","hasDigit","hasSpecialChar","hasValidLength","originalPassword","confirmPassword","phoneRegex","d","jQuery","_sliderConfig","_slides","_defaultSwipeDisabled","_index","_listeners","Map","init","slides","_mask","mask","_nav","nav","_left","_right","styleSheets","getElementsByTagName","r","l","media","indexOf","mediaText","rules","selectorText","toLowerCase","cssText","addRule","cssRules","insertRule","_triggerOnChange","refereshSlides","reloadWFSlider","Webflow","destroy","redraw","ready","reverse","prepend","getActiveSlide","getAllSlides","getSlideByIndex","getActiveSlideIndex","getPreviousSlideIndex","previous","click","goToIndex","children","addSlide","cssClass","createComponent","splice","removeSlide","getSlideNav","setSlideNavigationState","removeCssClass","onSlideChange","v4","delete","values","getConfig","h","firstNameText","steps","step","stepComponent","isCompleted","stepNumber","stepId","getStepId","stepMap","displayActionRequiredDialog","actionRequiredDialog","alertDialogAnimationTrigger","pageMainElement","getUrlParams","params","URLSearchParams","search","cancelId","loadingWall","deleteSubscription","reject","newUrl","pathname","history","replaceState","title","programComponent","Event","workshopComponent","setTimeout"],"version":3,"file":"programRegistration.3cd8a827.js.map"}