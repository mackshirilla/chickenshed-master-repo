{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCgCA,EAAA,MAAA,CAAA,EAAA,oBAAA,IAAsB,GActB,EAAA,MAAA,CAAA,EAAA,mCAAA,IAAsB,GA5CtB,IAAA,EAAA,EAAA,eACA,EAAA,EAAA,gBACA,EAAA,EAAA,uBA4BO,eAAe,IACpB,GAAI,CACF,IAAM,EAAkB,AAAA,CAAA,EAAA,EAAA,SAAQ,AAAR,EAAU,GAAG,CACnC,4BAGF,OADiB,MAAM,EAAgB,KAAK,EAE9C,CAAE,MAAO,EAAO,CAEd,MADA,QAAQ,KAAK,CAAC,gCAAiC,GACzC,CACR,CACF,CAGO,eAAe,EACpB,CAAyB,EAGzB,IAAM,EAAO,IAAI,EAAA,aAAY,CAAe,EAAmB,CAC7D,YAAa,mBACb,eAAgB,sBAChB,cAAe,mBACjB,GAGA,EAAK,cAAc,CAAC,AAAC,IACnB,EAAc,QAAQ,CAAC,CACrB,QAAS,MACX,GACO,IAIT,EAAK,aAAa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","sources":["<anon>","src/modules/dashboard/listTicketOrders.ts","node_modules/.pnpm/@xatom+image@1.0.0_@xatom+core@1.0.12/node_modules/@xatom/image/dist/index.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"klDdo\":[function(require,module,exports) {\n// src/pages/listTicketOrders.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n// Function to fetch ticket orders from the API\nparcelHelpers.export(exports, \"fetchTicketOrders\", ()=>fetchTicketOrders);\n// Function to initialize and render the dynamic ticket order list\nparcelHelpers.export(exports, \"initializeDynamicTicketOrderList\", ()=>initializeDynamicTicketOrderList);\nvar _core = require(\"@xatom/core\");\nvar _image = require(\"@xatom/image\");\nvar _apiConfig = require(\"../../api/apiConfig\");\nasync function fetchTicketOrders() {\n    try {\n        const getTicketOrders = (0, _apiConfig.apiClient).get(\"/dashboard/ticket_orders\" // Ensure this endpoint is correct\n        );\n        const response = await getTicketOrders.fetch();\n        return response;\n    } catch (error) {\n        console.error(\"Error fetching ticket orders:\", error);\n        throw error;\n    }\n}\nasync function initializeDynamicTicketOrderList(containerSelector) {\n    // Initialize a new instance of WFDynamicList for Ticket Orders\n    const list = new (0, _core.WFDynamicList)(containerSelector, {\n        rowSelector: \"#listTicketsCard\",\n        loaderSelector: \"#listTicketsloading\",\n        emptySelector: \"#listTicketsEmpty\"\n    });\n    // Customize the rendering of the loader\n    list.loaderRenderer((loaderElement)=>{\n        loaderElement.setStyle({\n            display: \"flex\"\n        });\n        return loaderElement;\n    });\n    // Customize the rendering of the empty state\n    list.emptyRenderer((emptyElement)=>{\n        emptyElement.setStyle({\n            display: \"flex\"\n        });\n        return emptyElement;\n    });\n    // Customize the rendering of list items (Ticket Cards)\n    list.rowRenderer(({ rowData, rowElement })=>{\n        const ticketCard = new (0, _core.WFComponent)(rowElement);\n        // Set the performance image\n        const performanceImageComponent = ticketCard.getChildAsComponent(\"#cardPerformanceImage\");\n        if (performanceImageComponent) {\n            const performanceImage = new (0, _image.WFImage)(performanceImageComponent.getElement());\n            if (rowData.image_url) performanceImage.setImage(rowData.image_url);\n            else performanceImage.setImage(\"https://cdn.prod.website-files.com/667f080f36260b9afbdc46b2/667f080f36260b9afbdc46be_placeholder.svg\");\n        }\n        // Set the production name\n        const productionName = ticketCard.getChildAsComponent(\"#cardProductionName\");\n        if (productionName) productionName.setText(rowData.production_name);\n        // Set the performance name\n        const performanceName = ticketCard.getChildAsComponent(\"#cardPerformanceName\");\n        if (performanceName) performanceName.setText(rowData.performance_name);\n        // Set the performance date\n        const performanceDate = ticketCard.getChildAsComponent(\"#cardPerformanceDate\");\n        if (performanceDate) {\n            const date = new Date(rowData.performance_date_time);\n            performanceDate.setText(date.toLocaleString());\n        }\n        // Set the ticket quantity using the quantity value from the response\n        const ticketQuantity = ticketCard.getChildAsComponent(\"#quantity\");\n        if (ticketQuantity) ticketQuantity.setText(rowData.quantity.toString());\n        // Append the performance parameter to the existing href\n        const ticketCardElement = ticketCard.getElement();\n        const currentHref = ticketCardElement.getAttribute(\"href\") || \"#\";\n        const url = new URL(currentHref, window.location.origin);\n        url.searchParams.set(\"performance\", rowData.performance_id);\n        url.searchParams.set(\"order\", rowData.id.toString());\n        ticketCardElement.setAttribute(\"href\", url.toString());\n        // Show the list item\n        rowElement.setStyle({\n            display: \"block\"\n        });\n        return rowElement;\n    });\n    // Load and display ticket order data\n    try {\n        // Enable the loading state\n        list.changeLoadingStatus(true);\n        const ticketOrders = await fetchTicketOrders();\n        // Filter unique ticket orders by performance_id\n        const uniqueTicketOrdersMap = new Map();\n        ticketOrders.forEach((order)=>{\n            if (!uniqueTicketOrdersMap.has(order.performance_id)) uniqueTicketOrdersMap.set(order.performance_id, order);\n        });\n        const uniqueTicketOrders = Array.from(uniqueTicketOrdersMap.values());\n        // Sort ticket orders by performance date and time in ascending order\n        uniqueTicketOrders.sort((a, b)=>a.performance_date_time - b.performance_date_time);\n        // Set the data to be displayed in the dynamic list\n        list.setData(uniqueTicketOrders);\n        // Disable the loading state\n        list.changeLoadingStatus(false);\n    } catch (error) {\n        console.error(\"Error loading ticket orders:\", error);\n        // If there's an error, set an empty array to trigger the empty state\n        list.setData([]);\n        // Disable the loading state\n        list.changeLoadingStatus(false);\n    }\n}\n\n},{\"@xatom/core\":\"65YBq\",\"@xatom/image\":\"bavwf\",\"../../api/apiConfig\":\"dUmIV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"bavwf\":[function(require,module,exports) {\nvar t = require(\"d023971cccd819e3\");\nvar e, r, s, i, o, n, u = {};\ne = u, r = \"WFImage\", s = ()=>c, Object.defineProperty(e, r, {\n    get: s,\n    set: i,\n    enumerable: !0,\n    configurable: !0\n});\nclass c extends t.WFComponent {\n    constructor(t){\n        super(t);\n    }\n    getImageConfig() {\n        return this._config;\n    }\n    getSrc() {\n        return this.getAttribute(\"src\");\n    }\n    getSizes() {\n        return this.getAttribute(\"sizes\");\n    }\n    getSrcSet() {\n        return this.getAttribute(\"srcset\");\n    }\n    getLoading() {\n        return this.getAttribute(\"loading\");\n    }\n    onLoad(t) {\n        return this.on(\"load\", t), ()=>{\n            this.off(\"load\", t);\n        };\n    }\n    onLoadError(t) {\n        return this.on(\"error\", t), ()=>{\n            this.off(\"error\", t);\n        };\n    }\n    setImage(t) {\n        if (\"string\" == typeof t) this.setAttribute(\"src\", t), this.removeAttribute(\"srcset\"), this.removeAttribute(\"sizes\");\n        else {\n            if (this.setAttribute(\"src\", t.src), \"object\" == typeof t && t.srcSet && t.srcSet.length && t.sizes && t.sizes.length) {\n                const e = t.srcSet.map((t)=>`${t.url} ${t.size}`).join(\", \");\n                this.setAttribute(\"srcset\", e);\n            } else this.removeAttribute(\"srcset\"), this.removeAttribute(\"sizes\");\n            t.loading && this.setAttribute(\"loading\", t.loading);\n        }\n    }\n}\no = module.exports, n = u, Object.keys(n).forEach(function(t) {\n    \"default\" === t || \"__esModule\" === t || o.hasOwnProperty(t) || Object.defineProperty(o, t, {\n        enumerable: !0,\n        get: function() {\n            return n[t];\n        }\n    });\n});\n\n},{\"d023971cccd819e3\":\"65YBq\"}]},[], null, \"parcelRequired346\")\n\n//# sourceMappingURL=listTicketOrders.0d12cdf4.js.map\n","// src/pages/listTicketOrders.ts\n\nimport { WFDynamicList, WFComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../../api/apiConfig\";\n\n// Define the TicketOrder interface based on the API response\ninterface TicketOrder {\n  id: number;\n  status: string; // e.g., 'sold'\n  production_name: string;\n  performance_name: string;\n  location: string;\n  performance_date_time: number; // Unix timestamp in milliseconds\n  customer_first_name: string;\n  customer_last_name: string;\n  customer_email: string;\n  custom_question_answer?: string | null;\n  assistance_required: boolean;\n  assistance_message?: string | null;\n  checked_in: boolean;\n  checked_in_time?: string | null;\n  user_id: number;\n  contact_id: number;\n  performance_id: string;\n  created_at: number;\n  sale_id: number;\n  image_url: string;\n  quantity: number; // Added quantity field\n}\n\n// Function to fetch ticket orders from the API\nexport async function fetchTicketOrders(): Promise<TicketOrder[]> {\n  try {\n    const getTicketOrders = apiClient.get<TicketOrder[]>(\n      \"/dashboard/ticket_orders\" // Ensure this endpoint is correct\n    );\n    const response = await getTicketOrders.fetch();\n    return response;\n  } catch (error) {\n    console.error(\"Error fetching ticket orders:\", error);\n    throw error;\n  }\n}\n\n// Function to initialize and render the dynamic ticket order list\nexport async function initializeDynamicTicketOrderList(\n  containerSelector: string\n) {\n  // Initialize a new instance of WFDynamicList for Ticket Orders\n  const list = new WFDynamicList<TicketOrder>(containerSelector, {\n    rowSelector: \"#listTicketsCard\", // Using ID selector for template\n    loaderSelector: \"#listTicketsloading\", // Selector for the loader\n    emptySelector: \"#listTicketsEmpty\", // Selector for the empty state\n  });\n\n  // Customize the rendering of the loader\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({\n      display: \"flex\",\n    });\n    return loaderElement;\n  });\n\n  // Customize the rendering of the empty state\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({\n      display: \"flex\",\n    });\n    return emptyElement;\n  });\n\n  // Customize the rendering of list items (Ticket Cards)\n  list.rowRenderer(({ rowData, rowElement }) => {\n    const ticketCard = new WFComponent(rowElement);\n\n    // Set the performance image\n    const performanceImageComponent = ticketCard.getChildAsComponent(\n      \"#cardPerformanceImage\"\n    );\n    if (performanceImageComponent) {\n      const performanceImage = new WFImage(\n        performanceImageComponent.getElement()\n      );\n      if (rowData.image_url) {\n        performanceImage.setImage(rowData.image_url);\n      } else {\n        performanceImage.setImage(\n          \"https://cdn.prod.website-files.com/667f080f36260b9afbdc46b2/667f080f36260b9afbdc46be_placeholder.svg\"\n        );\n      }\n    }\n\n    // Set the production name\n    const productionName = ticketCard.getChildAsComponent(\n      \"#cardProductionName\"\n    );\n    if (productionName) {\n      productionName.setText(rowData.production_name);\n    }\n\n    // Set the performance name\n    const performanceName = ticketCard.getChildAsComponent(\n      \"#cardPerformanceName\"\n    );\n    if (performanceName) {\n      performanceName.setText(rowData.performance_name);\n    }\n\n    // Set the performance date\n    const performanceDate = ticketCard.getChildAsComponent(\n      \"#cardPerformanceDate\"\n    );\n    if (performanceDate) {\n      const date = new Date(rowData.performance_date_time);\n      performanceDate.setText(date.toLocaleString());\n    }\n\n    // Set the ticket quantity using the quantity value from the response\n    const ticketQuantity = ticketCard.getChildAsComponent(\"#quantity\");\n    if (ticketQuantity) {\n      ticketQuantity.setText(rowData.quantity.toString());\n    }\n\n    // Append the performance parameter to the existing href\n    const ticketCardElement = ticketCard.getElement() as HTMLAnchorElement;\n    const currentHref = ticketCardElement.getAttribute(\"href\") || \"#\";\n    const url = new URL(currentHref, window.location.origin);\n    url.searchParams.set(\"performance\", rowData.performance_id);\n    url.searchParams.set(\"order\", rowData.id.toString());\n    ticketCardElement.setAttribute(\"href\", url.toString());\n\n    // Show the list item\n    rowElement.setStyle({\n      display: \"block\",\n    });\n\n    return rowElement;\n  });\n\n  // Load and display ticket order data\n  try {\n    // Enable the loading state\n    list.changeLoadingStatus(true);\n\n    const ticketOrders = await fetchTicketOrders();\n\n    // Filter unique ticket orders by performance_id\n    const uniqueTicketOrdersMap = new Map<string, TicketOrder>();\n    ticketOrders.forEach((order) => {\n      if (!uniqueTicketOrdersMap.has(order.performance_id)) {\n        uniqueTicketOrdersMap.set(order.performance_id, order);\n      }\n    });\n    const uniqueTicketOrders = Array.from(uniqueTicketOrdersMap.values());\n\n    // Sort ticket orders by performance date and time in ascending order\n    uniqueTicketOrders.sort(\n      (a, b) => a.performance_date_time - b.performance_date_time\n    );\n\n    // Set the data to be displayed in the dynamic list\n    list.setData(uniqueTicketOrders);\n\n    // Disable the loading state\n    list.changeLoadingStatus(false);\n  } catch (error) {\n    console.error(\"Error loading ticket orders:\", error);\n\n    // If there's an error, set an empty array to trigger the empty state\n    list.setData([]);\n\n    // Disable the loading state\n    list.changeLoadingStatus(false);\n  }\n}\n","var t=require(\"@xatom/core\");var e,r,s,i,o,n,u={};e=u,r=\"WFImage\",s=()=>c,Object.defineProperty(e,r,{get:s,set:i,enumerable:!0,configurable:!0});class c extends t.WFComponent{constructor(t){super(t)}getImageConfig(){return this._config}getSrc(){return this.getAttribute(\"src\")}getSizes(){return this.getAttribute(\"sizes\")}getSrcSet(){return this.getAttribute(\"srcset\")}getLoading(){return this.getAttribute(\"loading\")}onLoad(t){return this.on(\"load\",t),()=>{this.off(\"load\",t)}}onLoadError(t){return this.on(\"error\",t),()=>{this.off(\"error\",t)}}setImage(t){if(\"string\"==typeof t)this.setAttribute(\"src\",t),this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");else{if(this.setAttribute(\"src\",t.src),\"object\"==typeof t&&t.srcSet&&t.srcSet.length&&t.sizes&&t.sizes.length){const e=t.srcSet.map((t=>`${t.url} ${t.size}`)).join(\", \");this.setAttribute(\"srcset\",e)}else this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");t.loading&&this.setAttribute(\"loading\",t.loading)}}}o=module.exports,n=u,Object.keys(n).forEach((function(t){\"default\"===t||\"__esModule\"===t||o.hasOwnProperty(t)||Object.defineProperty(o,t,{enumerable:!0,get:function(){return n[t]}})}));"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","export","fetchTicketOrders","initializeDynamicTicketOrderList","_core","_image","_apiConfig","getTicketOrders","apiClient","fetch","error","console","containerSelector","list","WFDynamicList","rowSelector","loaderSelector","emptySelector","loaderRenderer","loaderElement","setStyle","display","emptyRenderer","emptyElement","rowRenderer","rowData","rowElement","ticketCard","WFComponent","performanceImageComponent","getChildAsComponent","performanceImage","WFImage","getElement","image_url","setImage","productionName","setText","production_name","performanceName","performance_name","performanceDate","date","Date","performance_date_time","toLocaleString","ticketQuantity","quantity","toString","ticketCardElement","url","URL","getAttribute","location","origin","searchParams","set","performance_id","setAttribute","changeLoadingStatus","ticketOrders","uniqueTicketOrdersMap","Map","forEach","order","has","uniqueTicketOrders","Array","from","values","sort","a","b","setData","o","t","u","c","enumerable","configurable","constructor","getImageConfig","_config","getSrc","getSizes","getSrcSet","getLoading","onLoad","on","off","onLoadError","removeAttribute","src","srcSet","sizes","e","map","size","join","loading","keys","hasOwnProperty","n"],"version":3,"file":"listTicketOrders.0d12cdf4.js.map"}