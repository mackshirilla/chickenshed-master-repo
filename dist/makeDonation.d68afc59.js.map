{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,Q,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GC6Ca,EAAA,MAAA,CAAA,EAAA,eAAA,IAAA,GA3Cb,IAAA,EAAA,EAAA,eACA,EAAA,EAAA,kBACA,EAAA,EAAA,yBACA,EAAA,EAAA,yBASA,EAAA,EAAA,wCACA,EAAA,EAAA,iBACA,EAAA,EAAA,mCACA,EAAA,EAAA,+BACA,EAAA,EAAA,uBACA,EAAA,EAAA,kCAOA,EAAA,EAAA,kCACA,EAAA,EAAA,yBAEA,IAAM,EAA6B,KAIjC,AAHe,SAAS,gBAAgB,CACtC,oCAEK,OAAO,CAAC,AAAC,IACd,EAAM,gBAAgB,CAAC,SAAU,KAC3B,EAAM,OAAO,GACf,AAAA,CAAA,EAAA,EAAA,wBAAuB,AAAvB,EAAyB,EAAM,KAAK,EACpC,QAAQ,GAAG,CAAC,4BAA6B,EAAM,KAAK,EACpD,AAAA,CAAA,EAAA,EAAA,gCAAgC,AAAhC,IAEJ,EACF,EACF,EAGa,EAAe,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","sources":["<anon>","src/modules/donate/makeDonation.ts","src/modules/donate/campaignList.ts","src/api/campaigns.ts","src/modules/donate/state/donationState.ts","src/modules/donate/campaignProductList.ts","src/api/campaignProducts.ts","src/modules/donate/components/selectedCampaignDisplay.ts","node_modules/.pnpm/@xatom+slider@1.0.0_@xatom+core@1.0.12/node_modules/@xatom/slider/dist/index.js","src/modules/donate/components/userContactDetails.ts","src/utils/validationUtils.ts","src/utils/formUtils.ts","node_modules/.pnpm/@xatom+image@1.0.0_@xatom+core@1.0.12/node_modules/@xatom/image/dist/index.js","src/modules/donate/components/sidebarIndicators.ts","src/modules/donate/components/urlParamNavigator.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"2XpAL\":[function(require,module,exports) {\n// makeDonation.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"makeDonation\", ()=>makeDonation);\nvar _core = require(\"@xatom/core\");\nvar _campaignList = require(\"./campaignList\");\nvar _campaignProductList = require(\"./campaignProductList\");\nvar _donationState = require(\"./state/donationState\");\nvar _selectedCampaignDisplay = require(\"./components/selectedCampaignDisplay\");\nvar _slider = require(\"@xatom/slider\");\nvar _userContactDetails = require(\"./components/userContactDetails\");\nvar _validationUtils = require(\"../../utils/validationUtils\");\nvar _apiConfig = require(\"../../api/apiConfig\");\nvar _sidebarIndicators = require(\"./components/sidebarIndicators\");\nvar _urlParamNavigator = require(\"./components/urlParamNavigator\");\nvar _authConfig = require(\"../../auth/authConfig\");\nconst setupDonationTypeSelection = ()=>{\n    const radios = document.querySelectorAll('input[name=\"selectDonationType\"]');\n    radios.forEach((radio)=>{\n        radio.addEventListener(\"change\", ()=>{\n            if (radio.checked) {\n                (0, _donationState.saveSelectedDonationType)(radio.value);\n                console.log(\"Donation type changed to:\", radio.value);\n                (0, _campaignProductList.renderProductListForDonationType)(); // 👈 this line ensures product list updates\n            }\n        });\n    });\n};\nconst makeDonation = async ()=>{\n    // Clear selected campaign and product on load to ensure a fresh start\n    (0, _donationState.clearDonationState)();\n    setupDonationTypeSelection();\n    (0, _sidebarIndicators.initializeSidebarIndicators)(); // Initialize sidebar indicators\n    (0, _sidebarIndicators.setActiveStep)(1);\n    // Initialize the slider component\n    const slider = new (0, _slider.WFSlider)(\".multi-step_form_slider\");\n    (0, _urlParamNavigator.initializeStateFromUrlParams)(slider);\n    // Initialize campaign list\n    await (0, _campaignList.initializeCampaignList)(\"#selectCampaignList\");\n    // Initialize user contact details\n    (0, _userContactDetails.initializeUserContactDetails)();\n    // Handle form submission for campaign selection\n    const formStepOne = new (0, _core.WFFormComponent)(\"#formStepOne\");\n    formStepOne.onFormSubmit(async (formData, event)=>{\n        event.preventDefault();\n        const selectedCampaign = (0, _donationState.getSelectedCampaign)();\n        if (!selectedCampaign || !selectedCampaign.id) {\n            console.error(\"No campaign selected.\");\n            const submitStepOneError = new (0, _core.WFComponent)(\"#submitStepOneError\");\n            submitStepOneError.setText(\"Please select a campaign.\");\n            submitStepOneError.setStyle({\n                display: \"block\"\n            });\n            return;\n        }\n        console.log(\"Campaign selected:\", selectedCampaign);\n        // Show loading animation\n        const stepOneRequestingAnimation = new (0, _core.WFComponent)(\"#stepOneRequestingAnimation\");\n        stepOneRequestingAnimation.setStyle({\n            display: \"block\"\n        });\n        try {\n            // Initialize product list based on the selected campaign\n            await (0, _campaignProductList.initializeDynamicProductList)(\"#selectProductList\", selectedCampaign.id);\n            // Update selected campaign display\n            (0, _selectedCampaignDisplay.updateSelectedCampaignDisplay)();\n            // Hide loading animation\n            stepOneRequestingAnimation.setStyle({\n                display: \"none\"\n            });\n            // Mark step one as completed and proceed to the next step\n            (0, _sidebarIndicators.markStepAsCompleted)(1);\n            (0, _sidebarIndicators.setActiveStep)(2);\n            slider.goNext();\n        } catch (error) {\n            console.error(\"Error loading products:\", error);\n            // Hide loading animation and show error message\n            stepOneRequestingAnimation.setStyle({\n                display: \"none\"\n            });\n            const submitStepOneError = new (0, _core.WFComponent)(\"#submitStepOneError\");\n            submitStepOneError.setText(\"Error loading products. Please try again.\");\n            submitStepOneError.setStyle({\n                display: \"block\"\n            });\n        }\n    });\n    // Handle step 2 interactions\n    const formStepTwo = new (0, _core.WFFormComponent)(\"#formStepTwo\");\n    formStepTwo.onFormSubmit(async (formData, event)=>{\n        event.preventDefault();\n        const selectedProduct = (0, _donationState.getSelectedProduct)();\n        const donationType = (0, _donationState.getSelectedDonationType)(); // \"one-time\", \"month\", or \"year\"\n        let isPriceAvailable = false;\n        switch(donationType){\n            case \"one-time\":\n                isPriceAvailable = !!selectedProduct.Single_sale_price_id;\n                break;\n            case \"month\":\n                isPriceAvailable = !!selectedProduct.Monthly_price_id;\n                break;\n            case \"year\":\n                isPriceAvailable = !!selectedProduct.Annual_price_id;\n                break;\n        }\n        if (!isPriceAvailable) {\n            const submitStepTwoError = new (0, _core.WFComponent)(\"#submitStepTwoError\");\n            submitStepTwoError.setText(\"The selected product is not available for this donation type.\");\n            submitStepTwoError.setStyle({\n                display: \"block\"\n            });\n            return;\n        }\n        // Get user email from authentication state if logged in\n        const user = (0, _authConfig.userAuth).getUser();\n        const userEmail = user && user.email ? user.email : null;\n        // Validate user contact details if emailWrap is displayed\n        const emailWrap = document.getElementById(\"emailWrap\");\n        let hasErrors = false;\n        let email = userEmail;\n        // Initialize an object to hold all donor details\n        let donorDetails = {\n            email: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            isAnonymous: false\n        };\n        if (emailWrap && emailWrap.style.display !== \"none\") {\n            const firstNameInput = document.getElementById(\"firstNameInput\");\n            const lastNameInput = document.getElementById(\"lastNameInput\");\n            const emailInput = document.getElementById(\"emailInput\");\n            const firstNameError = !(0, _validationUtils.validateNotEmpty)(firstNameInput.value);\n            const lastNameError = !(0, _validationUtils.validateNotEmpty)(lastNameInput.value);\n            const emailError = !(0, _validationUtils.validateEmail)(emailInput.value);\n            if (firstNameError || lastNameError || emailError) {\n                hasErrors = true;\n                console.error(\"Invalid input in contact details.\");\n                if (firstNameError) {\n                    const firstNameInputError = new (0, _core.WFComponent)(\"#firstNameInputError\");\n                    firstNameInputError.setText(\"First name is required.\");\n                    firstNameInputError.setStyle({\n                        display: \"block\"\n                    });\n                }\n                if (lastNameError) {\n                    const lastNameInputError = new (0, _core.WFComponent)(\"#lastNameInputError\");\n                    lastNameInputError.setText(\"Last name is required.\");\n                    lastNameInputError.setStyle({\n                        display: \"block\"\n                    });\n                }\n                if (emailError) {\n                    const emailInputError = new (0, _core.WFComponent)(\"#emailInputError\");\n                    emailInputError.setText(\"A valid email address is required.\");\n                    emailInputError.setStyle({\n                        display: \"block\"\n                    });\n                }\n                // Display general error message\n                const submitStepTwoError = new (0, _core.WFComponent)(\"#submitStepTwoError\");\n                submitStepTwoError.setText(\"Please correct the errors above.\");\n                submitStepTwoError.setStyle({\n                    display: \"block\"\n                });\n                return;\n            }\n            // If validation passes and the user is not logged in, save contact details\n            if (!userEmail) email = emailInput.value;\n            const isAnonymous = document.getElementById(\"anonymousInput\").checked;\n            // Populate donorDetails object\n            donorDetails = {\n                email: email,\n                firstName: firstNameInput.value,\n                lastName: lastNameInput.value,\n                isAnonymous: isAnonymous\n            };\n        } else {\n            // Handle anonymous input and email when the user is logged in\n            const isAnonymous = document.getElementById(\"anonymousInput\").checked;\n            donorDetails = {\n                email: userEmail || \"\",\n                firstName: user ? user.profile.first_name : \"\",\n                lastName: user ? user.profile.last_name : \"\",\n                isAnonymous: isAnonymous\n            };\n        }\n        // Handle \"Make this donation in someone else's name\"\n        const inNameOfCheckbox = document.getElementById(\"inNameOfBoolInput\");\n        const inNameOfInput = document.getElementById(\"inNameOfInput\");\n        if (inNameOfCheckbox && inNameOfCheckbox.checked) {\n            const inNameOfValue = inNameOfInput.value.trim();\n            const inNameOfError = !(0, _validationUtils.validateNotEmpty)(inNameOfValue);\n            if (inNameOfError) {\n                hasErrors = true;\n                console.error(\"Name input is required when making donation in someone else's name.\");\n                const inNameOfInputError = new (0, _core.WFComponent)(\"#inNameOfInputError\");\n                inNameOfInputError.setText(\"Please enter the name.\");\n                inNameOfInputError.setStyle({\n                    display: \"block\"\n                });\n                // Display general error message\n                const submitStepTwoError = new (0, _core.WFComponent)(\"#submitStepTwoError\");\n                submitStepTwoError.setText(\"Please correct the errors above.\");\n                submitStepTwoError.setStyle({\n                    display: \"block\"\n                });\n                return;\n            } else // Add inNameOf to donorDetails\n            donorDetails.inNameOf = inNameOfValue;\n        } else // If checkbox is not checked, ensure inNameOf is cleared\n        donorDetails.inNameOf = \"\";\n        if (!hasErrors) {\n            console.log(\"Donor details:\", donorDetails);\n            console.log(\"Product selected:\", selectedProduct);\n            // Save all donor details at once\n            (0, _donationState.saveDonorDetails)(donorDetails);\n            // Debug: Log the entire donation state before submission\n            const currentDonationState = (0, _donationState.loadDonationState)();\n            console.log(\"Current Donation State:\", currentDonationState);\n            // Show loading animation\n            const stepTwoRequestingAnimation = new (0, _core.WFComponent)(\"#stepTwoRequestingAnimation\");\n            stepTwoRequestingAnimation.setStyle({\n                display: \"block\"\n            });\n            // Submit the donation state to the server\n            try {\n                const donationState = {\n                    ...(0, _donationState.loadDonationState)(),\n                    currentPageUrl: window.location.href\n                };\n                const response = await (0, _apiConfig.apiClient).post(\"/donate/begin_checkout\", {\n                    data: donationState\n                }).fetch();\n                // Hide loading animation\n                stepTwoRequestingAnimation.setStyle({\n                    display: \"none\"\n                });\n                // Navigate to the checkout URL\n                window.location.href = response.checkout_url;\n            } catch (error) {\n                console.error(\"Error during checkout:\", error);\n                // Hide loading animation\n                stepTwoRequestingAnimation.setStyle({\n                    display: \"none\"\n                });\n                const submitStepTwoError = new (0, _core.WFComponent)(\"#submitStepTwoError\");\n                submitStepTwoError.setText(\"An error occurred during checkout. Please try again.\");\n                submitStepTwoError.setStyle({\n                    display: \"block\"\n                });\n            }\n        }\n    });\n    // Initialize components for UI interactions\n    const backStepTwoButton = new (0, _core.WFComponent)(\"#backStepTwo\");\n    backStepTwoButton.on(\"click\", ()=>{\n        console.log(\"Navigating to the previous step.\");\n        (0, _sidebarIndicators.unmarkStepAsCompleted)(1); // Unmark the first step if going back\n        (0, _sidebarIndicators.setActiveStep)(1); // Set the first step as active\n        (0, _sidebarIndicators.unsetActiveStep)(2); // Unset the second step as active\n        slider.goPrevious();\n    });\n    const submitStepTwoButton = new (0, _core.WFComponent)(\"#submitStepTwo\");\n    submitStepTwoButton.on(\"click\", ()=>{\n        console.log(\"Submitting the second step.\");\n    });\n    // Clear general error when inputs are interacted with\n    const clearSubmitStepTwoError = ()=>{\n        const submitStepTwoError = new (0, _core.WFComponent)(\"#submitStepTwoError\");\n        submitStepTwoError.setText(\"\");\n        submitStepTwoError.setStyle({\n            display: \"none\"\n        });\n    };\n    const firstNameInput = document.getElementById(\"firstNameInput\");\n    const lastNameInput = document.getElementById(\"lastNameInput\");\n    const emailInput = document.getElementById(\"emailInput\");\n    const inNameOfInput = document.getElementById(\"inNameOfInput\");\n    if (firstNameInput && lastNameInput && emailInput && inNameOfInput) {\n        firstNameInput.addEventListener(\"focus\", clearSubmitStepTwoError);\n        lastNameInput.addEventListener(\"focus\", clearSubmitStepTwoError);\n        emailInput.addEventListener(\"focus\", clearSubmitStepTwoError);\n        inNameOfInput.addEventListener(\"focus\", clearSubmitStepTwoError);\n    }\n    // Handle the \"Make donation in someone else's name\" checkbox\n    const inNameOfCheckbox = document.getElementById(\"inNameOfBoolInput\");\n    const hiddenInputWrapper = document.getElementById(\"hiddenInput\");\n    const toggleHiddenInput = ()=>{\n        if (inNameOfCheckbox.checked) hiddenInputWrapper.style.display = \"block\";\n        else {\n            hiddenInputWrapper.style.display = \"none\";\n            // Clear the input value and any error messages\n            inNameOfInput.value = \"\";\n            const inNameOfError = new (0, _core.WFComponent)(\"#inNameOfInputError\");\n            inNameOfError.setText(\"\");\n            inNameOfError.setStyle({\n                display: \"none\"\n            });\n        }\n        clearSubmitStepTwoError();\n    };\n    if (inNameOfCheckbox && hiddenInputWrapper) {\n        // Initialize the hidden input state based on checkbox\n        toggleHiddenInput();\n        // Add event listener to the checkbox\n        inNameOfCheckbox.addEventListener(\"change\", toggleHiddenInput);\n    }\n};\n\n},{\"@xatom/core\":\"65YBq\",\"./campaignList\":\"cyN3Q\",\"./campaignProductList\":\"dw1Mn\",\"./state/donationState\":\"apIbX\",\"./components/selectedCampaignDisplay\":\"iv1HY\",\"@xatom/slider\":\"ejxGx\",\"./components/userContactDetails\":\"kfWdK\",\"../../utils/validationUtils\":\"gu2z7\",\"../../api/apiConfig\":\"dUmIV\",\"./components/sidebarIndicators\":\"aB2QU\",\"./components/urlParamNavigator\":\"4SgF0\",\"../../auth/authConfig\":\"dHwPR\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"cyN3Q\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeCampaignList\", ()=>initializeCampaignList);\nvar _core = require(\"@xatom/core\");\nvar _campaigns = require(\"../../api/campaigns\");\nvar _donationState = require(\"./state/donationState\");\nlet selectedCampaignId = null;\n// Function to log the current state to localStorage\nconst logState = ()=>{\n    const state = JSON.parse(localStorage.getItem(\"donationState\") || \"{}\");\n    state.selectedCampaignId = selectedCampaignId;\n    console.log(\"Logging state to localStorage:\", state);\n    localStorage.setItem(\"donationState\", JSON.stringify(state));\n};\n// Store the initial template state of the container\nlet initialTemplateState = null;\nconst initializeCampaignList = async (containerSelector)=>{\n    const container = document.querySelector(containerSelector);\n    if (!container) {\n        console.error(\"Campaign list container not found.\");\n        return [];\n    }\n    // Capture the initial template state if not already captured\n    if (!initialTemplateState) initialTemplateState = container.cloneNode(true);\n    // Clear the existing list by resetting the container to its initial state\n    container.innerHTML = \"\";\n    container.appendChild(initialTemplateState.cloneNode(true));\n    const list = new (0, _core.WFDynamicList)(containerSelector, {\n        rowSelector: \"#cardSelectProduction\",\n        loaderSelector: \"#productionListLoading\",\n        emptySelector: \"#productionListEmpty\"\n    });\n    list.loaderRenderer((loaderElement)=>{\n        loaderElement.setStyle({\n            display: \"flex\"\n        });\n        return loaderElement;\n    });\n    list.emptyRenderer((emptyElement)=>{\n        emptyElement.setStyle({\n            display: \"flex\"\n        });\n        return emptyElement;\n    });\n    let campaigns = [];\n    list.rowRenderer(({ rowData, rowElement, index })=>{\n        const campaignCard = new (0, _core.WFComponent)(rowElement);\n        const campaignTitle = campaignCard.getChildAsComponent(\"#cardCampaignTitle\");\n        const campaignSubheading = campaignCard.getChildAsComponent(\"#cardCampaignSubheading\");\n        const campaignDescription = campaignCard.getChildAsComponent(\"#cardCampaignDescription\");\n        const campaignImage = campaignCard.getChildAsComponent(\"#cardCampaignImage\");\n        const campaignInput = campaignCard.getChildAsComponent(\".input_card_input\");\n        const campaignLabel = campaignCard.getChildAsComponent(\"label\");\n        if (!campaignTitle || !campaignSubheading || !campaignDescription || !campaignInput || !campaignImage || !campaignLabel) {\n            console.error(\"Campaign elements not found.\");\n            return;\n        }\n        const inputId = `campaignInput-${index}`;\n        campaignInput.setAttribute(\"id\", inputId);\n        campaignInput.setAttribute(\"value\", rowData.id.toString());\n        campaignLabel.setAttribute(\"for\", inputId);\n        campaignTitle.setText(rowData.Name);\n        campaignSubheading.setText(rowData.Subheading);\n        campaignDescription.setText(rowData.Short_Description);\n        if (rowData.Main_Image) campaignImage.setAttribute(\"src\", rowData.Main_Image);\n        else console.warn(`Campaign ID ${rowData.id} does not have a main image.`);\n        campaignInput.on(\"change\", ()=>{\n            selectedCampaignId = rowData.id.toString();\n            (0, _donationState.saveSelectedCampaign)({\n                id: rowData.id.toString(),\n                name: rowData.Name,\n                imageUrl: rowData.Main_Image,\n                description: rowData.Short_Description,\n                subheading: rowData.Subheading\n            });\n            logState();\n            console.log(\"Selected Campaign ID:\", selectedCampaignId);\n        });\n        rowElement.setStyle({\n            display: \"flex\"\n        });\n        campaigns.push(rowData);\n        return rowElement;\n    });\n    try {\n        list.changeLoadingStatus(true);\n        campaigns = await (0, _campaigns.fetchCampaigns)();\n        console.log(\"Fetched campaigns:\", campaigns);\n        if (campaigns.length > 0) list.setData(campaigns);\n        else list.setData([]);\n        list.changeLoadingStatus(false);\n    } catch (error) {\n        console.error(\"Error loading campaigns:\", error);\n        list.setData([]);\n        list.changeLoadingStatus(false);\n    }\n    return campaigns;\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../../api/campaigns\":\"8hXW0\",\"./state/donationState\":\"apIbX\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"8hXW0\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"fetchCampaigns\", ()=>fetchCampaigns);\nvar _apiConfig = require(\"./apiConfig\");\nconst fetchCampaigns = async ()=>{\n    try {\n        const response = await (0, _apiConfig.apiClient).get(\"/donate/campaigns\").fetch();\n        return response.campaigns;\n    } catch (error) {\n        console.error(\"Error fetching campaigns:\", error);\n        throw error;\n    }\n};\n\n},{\"./apiConfig\":\"dUmIV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"apIbX\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"loadDonationState\", ()=>loadDonationState);\nparcelHelpers.export(exports, \"saveDonationState\", ()=>saveDonationState);\nparcelHelpers.export(exports, \"clearDonationState\", ()=>clearDonationState);\nparcelHelpers.export(exports, \"getSelectedCampaign\", ()=>getSelectedCampaign);\nparcelHelpers.export(exports, \"saveSelectedCampaign\", ()=>saveSelectedCampaign);\nparcelHelpers.export(exports, \"getSelectedProduct\", ()=>getSelectedProduct);\nparcelHelpers.export(exports, \"saveSelectedProduct\", ()=>saveSelectedProduct);\nparcelHelpers.export(exports, \"getDonorDetails\", ()=>getDonorDetails);\nparcelHelpers.export(exports, \"saveDonorDetails\", ()=>saveDonorDetails);\nparcelHelpers.export(exports, \"getSelectedDonationType\", ()=>getSelectedDonationType);\nparcelHelpers.export(exports, \"saveSelectedDonationType\", ()=>saveSelectedDonationType);\nconst DONATION_STATE_KEY = \"donationState\";\nconst loadDonationState = ()=>{\n    const savedState = localStorage.getItem(DONATION_STATE_KEY);\n    return savedState ? JSON.parse(savedState) : {};\n};\nconst saveDonationState = (state)=>{\n    const currentState = loadDonationState();\n    const newState = {\n        ...currentState,\n        ...state\n    };\n    localStorage.setItem(DONATION_STATE_KEY, JSON.stringify(newState));\n};\nconst clearDonationState = ()=>{\n    localStorage.removeItem(DONATION_STATE_KEY);\n};\nconst getSelectedCampaign = ()=>{\n    const state = loadDonationState();\n    return {\n        id: state.selectedCampaignId || null,\n        name: state.selectedCampaignName || null,\n        imageUrl: state.selectedCampaignImageUrl || null,\n        description: state.selectedCampaignDescription || null,\n        subheading: state.selectedCampaignSubheading || null\n    };\n};\nconst saveSelectedCampaign = (campaign)=>{\n    saveDonationState({\n        selectedCampaignId: campaign.id,\n        selectedCampaignName: campaign.name,\n        selectedCampaignImageUrl: campaign.imageUrl,\n        selectedCampaignDescription: campaign.description,\n        selectedCampaignSubheading: campaign.subheading\n    });\n};\nconst getSelectedProduct = ()=>{\n    const state = loadDonationState();\n    return {\n        id: state.selectedProductId || null,\n        name: state.selectedProductName || null,\n        amount: state.selectedProductAmount || null,\n        Single_sale_price_id: state.Single_sale_price_id || null,\n        Monthly_price_id: state.Monthly_price_id || null,\n        Annual_price_id: state.Annual_price_id || null\n    };\n};\nconst saveSelectedProduct = (product)=>{\n    saveDonationState({\n        selectedProductId: product.id,\n        selectedProductName: product.name,\n        selectedProductAmount: product.amount,\n        Single_sale_price_id: product.Single_sale_price_id,\n        Monthly_price_id: product.Monthly_price_id,\n        Annual_price_id: product.Annual_price_id\n    });\n};\nconst getDonorDetails = ()=>{\n    const state = loadDonationState();\n    return {\n        email: state.email || null,\n        firstName: state.firstName || null,\n        lastName: state.lastName || null,\n        isAnonymous: state.isAnonymous || false,\n        inNameOf: state.inNameOf || null\n    };\n};\nconst saveDonorDetails = (donor)=>{\n    saveDonationState({\n        email: donor.email,\n        firstName: donor.firstName,\n        lastName: donor.lastName,\n        isAnonymous: donor.isAnonymous,\n        inNameOf: donor.inNameOf\n    });\n};\nconst getSelectedDonationType = ()=>{\n    const state = loadDonationState();\n    return state.selectedDonationType || \"one-time\";\n};\nconst saveSelectedDonationType = (type)=>{\n    saveDonationState({\n        selectedDonationType: type\n    });\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"dw1Mn\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"renderProductListForDonationType\", ()=>renderProductListForDonationType);\nparcelHelpers.export(exports, \"initializeDynamicProductList\", ()=>initializeDynamicProductList);\nvar _core = require(\"@xatom/core\");\nvar _campaignProducts = require(\"../../api/campaignProducts\");\nvar _donationState = require(\"./state/donationState\");\nlet selectedProductId = null;\nlet initialTemplateState = null;\nlet productCache = [];\nlet productListRef = null;\n// Filter + sort products based on current donation type\nconst filterProductsByDonationType = (products)=>{\n    const donationType = (0, _donationState.getSelectedDonationType)();\n    const filtered = products.filter((product)=>{\n        switch(donationType){\n            case \"one-time\":\n                return !!product.Single_sale_price_id;\n            case \"month\":\n                return !!product.Monthly_price_id;\n            case \"year\":\n                return !!product.Annual_price_id;\n            default:\n                return false;\n        }\n    });\n    return filtered.sort((a, b)=>{\n        switch(donationType){\n            case \"one-time\":\n                return a.Single_sale_price_amount - b.Single_sale_price_amount;\n            case \"month\":\n                return a.Monthly_price_amount - b.Monthly_price_amount;\n            case \"year\":\n                return a.Annual_price_amount - b.Annual_price_amount;\n            default:\n                return 0;\n        }\n    });\n};\nconst renderProductListForDonationType = ()=>{\n    if (productListRef && productCache.length > 0) {\n        const filtered = filterProductsByDonationType([\n            ...productCache\n        ]); // clone to avoid side effects\n        productListRef.setData(filtered); // will now use freshly sorted data\n    }\n};\nconst initializeDynamicProductList = async (containerSelector, campaignId)=>{\n    const container = document.querySelector(containerSelector);\n    if (!container) {\n        console.error(\"Product list container not found.\");\n        return;\n    }\n    if (!initialTemplateState) initialTemplateState = container.cloneNode(true);\n    container.innerHTML = \"\";\n    container.appendChild(initialTemplateState.cloneNode(true));\n    const list = new (0, _core.WFDynamicList)(containerSelector, {\n        rowSelector: \"#cardSelectProduct\"\n    });\n    productListRef = list;\n    list.loaderRenderer((loaderElement)=>{\n        loaderElement.setStyle({\n            display: \"flex\"\n        });\n        return loaderElement;\n    });\n    list.emptyRenderer((emptyElement)=>{\n        emptyElement.setStyle({\n            display: \"flex\"\n        });\n        return emptyElement;\n    });\n    list.rowRenderer(({ rowData, rowElement, index })=>{\n        const productCard = new (0, _core.WFComponent)(rowElement);\n        const productTitle = productCard.getChildAsComponent(\"#cardProductTitle\");\n        const productInput = productCard.getChildAsComponent(\".input_card_input\");\n        if (!productTitle || !productInput) {\n            console.error(\"One or more elements not found in the product card\");\n            return;\n        }\n        const inputId = `productInput-${index}`;\n        productInput.setAttribute(\"id\", inputId);\n        productInput.setAttribute(\"value\", rowData.id.toString());\n        const label = productCard.getChildAsComponent(\"label\");\n        if (label) label.setAttribute(\"for\", inputId);\n        productTitle.setText(rowData.Product_name);\n        productInput.on(\"change\", ()=>{\n            const donationType = (0, _donationState.getSelectedDonationType)();\n            let valid = false;\n            let amount = 0;\n            switch(donationType){\n                case \"one-time\":\n                    valid = !!rowData.Single_sale_price_id;\n                    amount = rowData.Single_sale_price_amount;\n                    break;\n                case \"month\":\n                    valid = !!rowData.Monthly_price_id;\n                    amount = rowData.Monthly_price_amount;\n                    break;\n                case \"year\":\n                    valid = !!rowData.Annual_price_id;\n                    amount = rowData.Annual_price_amount;\n                    break;\n            }\n            if (!valid) {\n                console.warn(\"Selected product is not valid for this donation type.\");\n                productInput.getElement().checked = false;\n                return;\n            }\n            selectedProductId = rowData.id.toString();\n            (0, _donationState.saveSelectedProduct)({\n                id: rowData.id.toString(),\n                name: rowData.Product_name,\n                amount: rowData.Single_sale_price_amount,\n                Single_sale_price_id: rowData.Single_sale_price_id,\n                Monthly_price_id: rowData.Monthly_price_id,\n                Annual_price_id: rowData.Annual_price_id\n            });\n            console.log(\"Selected Product ID:\", selectedProductId);\n        });\n        rowElement.setStyle({\n            display: \"flex\"\n        });\n        return rowElement;\n    });\n    try {\n        list.changeLoadingStatus(true);\n        productCache = await (0, _campaignProducts.fetchProducts)(campaignId);\n        const filtered = filterProductsByDonationType(productCache);\n        console.log(\"Filtered products:\", filtered);\n        list.setData(filtered.length > 0 ? filtered : []);\n        list.changeLoadingStatus(false);\n    } catch (error) {\n        console.error(\"Error loading products:\", error);\n        list.setData([]);\n        list.changeLoadingStatus(false);\n    }\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../../api/campaignProducts\":\"abEqP\",\"./state/donationState\":\"apIbX\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"abEqP\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"fetchProducts\", ()=>fetchProducts);\nvar _apiConfig = require(\"./apiConfig\");\nconst fetchProducts = async (campaignId)=>{\n    try {\n        const response = await (0, _apiConfig.apiClient).post(\"/donate/campaign/products\", {\n            data: {\n                campaign_id: campaignId\n            }\n        }).fetch();\n        return response.products;\n    } catch (error) {\n        console.error(\"Error fetching products:\", error);\n        throw error;\n    }\n};\n\n},{\"./apiConfig\":\"dUmIV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"iv1HY\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"updateSelectedCampaignDisplay\", ()=>updateSelectedCampaignDisplay);\nvar _core = require(\"@xatom/core\");\nvar _donationState = require(\"../state/donationState\");\nconst updateSelectedCampaignDisplay = ()=>{\n    const selectedCampaign = (0, _donationState.getSelectedCampaign)();\n    if (!selectedCampaign) {\n        console.error(\"No selected campaign found in the state.\");\n        return;\n    }\n    const { name, subheading, description, imageUrl } = selectedCampaign;\n    // Ensure all necessary elements exist before updating them\n    const selectedCampaignTitle = new (0, _core.WFComponent)(\"#selectedCampaignTitle\");\n    const selectedCampaignSubtitle = new (0, _core.WFComponent)(\"#selectedCampaignSubtitle\");\n    const selectedCampaignDescription = new (0, _core.WFComponent)(\"#selectedCampaignDescription\");\n    const selectedImage = new (0, _core.WFComponent)(\"#selectedImage\");\n    // Update the campaign details\n    selectedCampaignTitle.setText(name || \"N/A\");\n    selectedCampaignSubtitle.setText(subheading || \"No subheading available.\");\n    selectedCampaignDescription.setText(description || \"No description available.\");\n    if (imageUrl) selectedImage.setAttribute(\"src\", imageUrl);\n    else selectedImage.setAttribute(\"src\", \"https://cdn.prod.website-files.com/plugins/Basic/assets/placeholder.60f9b1840c.svg\");\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../state/donationState\":\"apIbX\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"ejxGx\":[function(require,module,exports) {\nvar e = require(\"1a87f3bc23b90fa3\"), s = require(\"37b5fd8189a9f4c7\");\nvar t, i, r, l, d = {};\nt = d, i = \"WFSlider\", r = ()=>o, Object.defineProperty(t, i, {\n    get: r,\n    set: l,\n    enumerable: !0,\n    configurable: !0\n});\nconst n = window.jQuery;\nclass o extends e.WFComponent {\n    _sliderConfig = {};\n    _slides = [];\n    _defaultSwipeDisabled = !1;\n    _index = 0;\n    _listeners = new Map;\n    constructor(e){\n        super(e), this.init();\n    }\n    init() {\n        this._defaultSwipeDisabled = \"true\" === this.getAttribute(\"data-disable-swipe\"), this._sliderConfig = n(this.getElement()).data()[\".wSlider\"], this._slides = Array.from(this._sliderConfig.slides).map((s)=>new e.WFComponent(s)), this._mask = new e.WFComponent(this._sliderConfig.mask[0]), this._nav = new e.WFComponent(this._sliderConfig.nav[0]), this._left = new e.WFComponent(this._sliderConfig.left[0]), this._right = new e.WFComponent(this._sliderConfig.right[0]), function(e, s) {\n            if (!document.styleSheets) return;\n            if (0 == document.getElementsByTagName(\"head\").length) return;\n            let t, i;\n            if (document.styleSheets.length > 0) {\n                for(var r = 0, l = document.styleSheets.length; r < l; r++)if (!document.styleSheets[r].disabled) {\n                    var d = document.styleSheets[r].media;\n                    if (i = typeof d, \"string\" === i ? \"\" !== d && -1 === d.indexOf(\"screen\") || (t = document.styleSheets[r]) : \"object\" == i && (\"\" !== d.mediaText && -1 === d.mediaText.indexOf(\"screen\") || (t = document.styleSheets[r])), void 0 !== t) break;\n                }\n            }\n            if (void 0 === t) {\n                var n = document.createElement(\"style\");\n                for(n.type = \"text/css\", document.getElementsByTagName(\"head\")[0].appendChild(n), r = 0; r < document.styleSheets.length; r++)document.styleSheets[r].disabled || (t = document.styleSheets[r]);\n                i = typeof t.media;\n            }\n            if (\"string\" === i) {\n                for(r = 0, l = t.rules.length; r < l; r++)if (t.rules[r].selectorText && t.rules[r].selectorText.toLowerCase() == e.toLowerCase()) return void (t.rules[r].style.cssText = s);\n                t.addRule(e, s);\n            } else if (\"object\" === i) {\n                var o = t.cssRules ? t.cssRules.length : 0;\n                for(r = 0; r < o; r++)if (t.cssRules[r].selectorText && t.cssRules[r].selectorText.toLowerCase() == e.toLowerCase()) return void (t.cssRules[r].style.cssText = s);\n                t.insertRule(e + \"{\" + s + \"}\", o);\n            }\n        }(\".xa-slider-disable\", \"display:none !important;\");\n        const s = this;\n        Object.defineProperty(s._sliderConfig, \"index\", {\n            set: function(e) {\n                s._index = e, s._triggerOnChange();\n            },\n            get: function() {\n                return s._index;\n            }\n        }), this.refereshSlides();\n    }\n    reloadWFSlider() {\n        window.Webflow.require(\"slider\").destroy(), window.Webflow.require(\"slider\").redraw(), window.Webflow.require(\"slider\").ready();\n    }\n    refereshSlides() {\n        this._mask.getChildAsComponents(\".w-slide\").forEach((e)=>e.remove()), this._slides.reverse().forEach((e)=>{\n            this._mask.getElement().prepend(e.getElement());\n        }), this._slides.reverse(), this.reloadWFSlider();\n    }\n    getActiveSlide() {\n        return this._slides[this._index];\n    }\n    getAllSlides() {\n        return [\n            ...this._slides\n        ];\n    }\n    getSlideByIndex(e) {\n        return this._slides[e];\n    }\n    getActiveSlideIndex() {\n        return this._index;\n    }\n    getPreviousSlideIndex() {\n        return this._sliderConfig.previous;\n    }\n    goNext() {\n        this._sliderConfig.right.click();\n    }\n    goPrevious() {\n        this._sliderConfig.left.click();\n    }\n    goToIndex(e) {\n        e >= 0 && e < this._slides.length && (console.log(e), n(this._sliderConfig.nav.children()[e]).click());\n    }\n    addSlide(s, t = {}) {\n        const i = t.index, r = t.cssClass, l = (0, e.createComponent)(\"div\");\n        l.addCssClass(\"w-slide\"), r && l.addCssClass(r), l.appendChild(s);\n        const d = \"number\" != typeof i ? -1 : i, n = this._slides;\n        d >= 0 && d <= n.length ? n.splice(i, 0, l) : n.push(l), this._slides = [\n            ...n\n        ], this.refereshSlides();\n    }\n    removeSlide(e) {\n        const s = [\n            ...this._slides\n        ];\n        e >= 0 && e < s.length && s.splice(e, 1), this._slides = [\n            ...s\n        ], console.log(this._slides), this.refereshSlides();\n    }\n    getSlideNav() {\n        return this._nav;\n    }\n    setSlideNavigationState(e) {\n        e ? (this._left.removeCssClass(\"xa-slider-disable\"), this._right.removeCssClass(\"xa-slider-disable\"), this._nav.removeCssClass(\"xa-slider-disable\"), this.setAttribute(\"data-disable-swipe\", this._defaultSwipeDisabled ? \"true\" : \"false\")) : (this._left.addCssClass(\"xa-slider-disable\"), this._right.addCssClass(\"xa-slider-disable\"), this._nav.addCssClass(\"xa-slider-disable\"), this.setAttribute(\"data-disable-swipe\", \"true\")), this.reloadWFSlider();\n    }\n    onSlideChange(e) {\n        const t = (0, s.v4)();\n        return this._listeners.set(t, e), ()=>{\n            this._listeners.delete(t);\n        };\n    }\n    _triggerOnChange() {\n        Array.from(this._listeners.values()).forEach((e)=>{\n            e(this._index, this._sliderConfig.previous);\n        });\n    }\n    getConfig() {\n        return this._sliderConfig;\n    }\n}\nvar a, h;\na = module.exports, h = d, Object.keys(h).forEach(function(e) {\n    \"default\" === e || \"__esModule\" === e || a.hasOwnProperty(e) || Object.defineProperty(a, e, {\n        enumerable: !0,\n        get: function() {\n            return h[e];\n        }\n    });\n});\n\n},{\"1a87f3bc23b90fa3\":\"65YBq\",\"37b5fd8189a9f4c7\":\"faiuA\"}],\"kfWdK\":[function(require,module,exports) {\n// userContactDetails.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeUserContactDetails\", ()=>initializeUserContactDetails);\nvar _core = require(\"@xatom/core\");\nvar _validationUtils = require(\"../../../utils/validationUtils\");\nvar _formUtils = require(\"../../../utils/formUtils\");\nvar _donationState = require(\"../state/donationState\");\nvar _authConfig = require(\"../../../auth/authConfig\");\nconst initializeUserContactDetails = ()=>{\n    // Elements\n    const firstNameInput = new (0, _core.WFComponent)(\"#firstNameInput\");\n    const lastNameInput = new (0, _core.WFComponent)(\"#lastNameInput\");\n    const emailInput = new (0, _core.WFComponent)(\"#emailInput\");\n    const firstNameInputError = new (0, _core.WFComponent)(\"#firstNameInputError\");\n    const lastNameInputError = new (0, _core.WFComponent)(\"#lastNameInputError\");\n    const emailInputError = new (0, _core.WFComponent)(\"#emailInputError\");\n    const emailWrap = new (0, _core.WFComponent)(\"#emailWrap\");\n    // Check if user is authenticated and hide email field if so\n    const user = (0, _authConfig.userAuth).getUser();\n    if (user && user.email) {\n        emailWrap.setStyle({\n            display: \"none\"\n        });\n        (0, _donationState.saveDonationState)({\n            email: user.email\n        });\n    } else {\n        emailWrap.setStyle({\n            display: \"grid\"\n        });\n        // Setup validation for email field\n        (0, _formUtils.setupValidation)(emailInput, emailInputError, createValidationFunction(emailInput, (0, _validationUtils.validateEmail), \"Invalid email address.\"));\n    }\n    // Setup validation for first name and last name fields\n    (0, _formUtils.setupValidation)(firstNameInput, firstNameInputError, createValidationFunction(firstNameInput, (0, _validationUtils.validateNotEmpty), \"First name is required.\"));\n    (0, _formUtils.setupValidation)(lastNameInput, lastNameInputError, createValidationFunction(lastNameInput, (0, _validationUtils.validateNotEmpty), \"Last name is required.\"));\n    // Save input data to state\n    firstNameInput.on(\"input\", ()=>{\n        const firstName = firstNameInput.getElement().value;\n        (0, _donationState.saveDonationState)({\n            firstName\n        });\n    });\n    lastNameInput.on(\"input\", ()=>{\n        const lastName = lastNameInput.getElement().value;\n        (0, _donationState.saveDonationState)({\n            lastName\n        });\n    });\n    emailInput.on(\"input\", ()=>{\n        const email = emailInput.getElement().value;\n        (0, _donationState.saveDonationState)({\n            email\n        });\n    });\n};\n// Utility function for validation\nfunction createValidationFunction(inputComponent, validationFn, errorMessage) {\n    return ()=>{\n        const inputElement = inputComponent.getElement();\n        const isValid = validationFn(inputElement.value);\n        return isValid ? \"\" : errorMessage;\n    };\n}\n\n},{\"@xatom/core\":\"65YBq\",\"../../../utils/validationUtils\":\"gu2z7\",\"../../../utils/formUtils\":\"gepHz\",\"../state/donationState\":\"apIbX\",\"../../../auth/authConfig\":\"dHwPR\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"gu2z7\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"validateNotEmpty\", ()=>validateNotEmpty);\nparcelHelpers.export(exports, \"validateEmail\", ()=>validateEmail);\nparcelHelpers.export(exports, \"validateEmailOptional\", ()=>validateEmailOptional);\nparcelHelpers.export(exports, \"validatePasswordRequirements\", ()=>validatePasswordRequirements);\nparcelHelpers.export(exports, \"validateCheckbox\", ()=>validateCheckbox);\nparcelHelpers.export(exports, \"validatePasswordsMatch\", ()=>validatePasswordsMatch);\nparcelHelpers.export(exports, \"validateSelectField\", ()=>validateSelectField);\nparcelHelpers.export(exports, \"validatePhoneNumber\", ()=>validatePhoneNumber);\nparcelHelpers.export(exports, \"validatePhoneNumberOptional\", ()=>validatePhoneNumberOptional);\nfunction validateNotEmpty(input) {\n    return input !== undefined && input.trim() !== \"\";\n}\nfunction validateEmail(input) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(input);\n}\nconst validateEmailOptional = (value)=>{\n    if (value.trim() === \"\") // Email is optional, so empty string is valid\n    return true;\n    // Validate the email format if not empty\n    return validateEmail(value);\n};\nfunction validatePasswordRequirements(password) {\n    const hasLowercase = /[a-z]/.test(password);\n    const hasUppercase = /[A-Z]/.test(password);\n    const hasDigit = /\\d/.test(password);\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n    const hasValidLength = password.length >= 8;\n    return hasLowercase && hasUppercase && hasDigit && hasSpecialChar && hasValidLength;\n}\nfunction validateCheckbox(checked) {\n    return checked;\n}\nfunction validatePasswordsMatch(originalPassword, confirmPassword) {\n    return originalPassword === confirmPassword;\n}\nfunction validateSelectField(input) {\n    return input !== undefined && input !== \"N/A\";\n}\nfunction validatePhoneNumber(input) {\n    const phoneRegex = /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/;\n    return phoneRegex.test(input);\n}\nconst validatePhoneNumberOptional = (value)=>{\n    if (value.trim() === \"\") // Phone number is optional, so empty string is valid\n    return true;\n    // Validate the phone number format if not empty\n    return validatePhoneNumber(value);\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"gepHz\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"toggleError\", ()=>toggleError);\nparcelHelpers.export(exports, \"setupValidation\", ()=>setupValidation);\nparcelHelpers.export(exports, \"createValidationFunction\", ()=>createValidationFunction);\nparcelHelpers.export(exports, \"createCheckboxValidationFunction\", ()=>createCheckboxValidationFunction);\nparcelHelpers.export(exports, \"setupCheckboxValidation\", ()=>setupCheckboxValidation);\nparcelHelpers.export(exports, \"validateSelectedSessions\", ()=>validateSelectedSessions);\n/**\n * Updates the user's profile picture URL in the authentication system.\n * @param {string} imageUrl - The URL of the uploaded image.\n */ parcelHelpers.export(exports, \"setProfilePicUrl\", ()=>setProfilePicUrl);\n/**\n * Handles file upload and displays the uploaded image.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */ /**\n * Handles file upload and displays the uploaded image.\n * Only JPEG files less than 2 MB can be uploaded.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */ parcelHelpers.export(exports, \"setupFileUpload\", ()=>setupFileUpload);\nparcelHelpers.export(exports, \"formatPhoneNumber\", ()=>formatPhoneNumber);\nvar _core = require(\"@xatom/core\");\nvar _image = require(\"@xatom/image\");\nvar _apiConfig = require(\"../api/apiConfig\");\nvar _authConfig = require(\"../auth/authConfig\");\nfunction toggleError(errorMessageComponent, message, show) {\n    errorMessageComponent.updateTextViaAttrVar({\n        text: show ? message : \"\"\n    });\n    errorMessageComponent.setStyle({\n        display: show ? \"flex\" : \"none\"\n    });\n}\nfunction setupValidation(inputComponent, errorComponent, validate, requestErrorComponent // Optional component to clear on input change\n) {\n    const validateAndUpdate = ()=>{\n        const errorMessage = validate();\n        toggleError(errorComponent, errorMessage, !!errorMessage);\n        if (requestErrorComponent && errorMessage === \"\") // Clear request error message when the user is correcting the input\n        toggleError(requestErrorComponent, \"\", false);\n    };\n    // Attach event listeners for real-time validation\n    inputComponent.on(\"input\", validateAndUpdate);\n    inputComponent.on(\"blur\", validateAndUpdate);\n    inputComponent.on(\"change\", validateAndUpdate);\n}\nfunction createValidationFunction(inputComponent, validationFn, errorMessage) {\n    return ()=>{\n        const inputElement = inputComponent.getElement();\n        const isValid = validationFn(inputElement.value);\n        return isValid ? \"\" : errorMessage;\n    };\n}\nfunction createCheckboxValidationFunction(checkboxComponent, errorMessage) {\n    return ()=>{\n        const checkbox = checkboxComponent.getElement();\n        return checkbox.checked ? \"\" : errorMessage;\n    };\n}\nfunction setupCheckboxValidation(checkboxComponent, checkboxErrorComponent, errorMessage) {\n    const validate = createCheckboxValidationFunction(checkboxComponent, errorMessage);\n    setupValidation(checkboxComponent, checkboxErrorComponent, validate);\n}\nfunction validateSelectedSessions(selectedSessions, errorMessageComponent, errorMessage) {\n    const isValid = selectedSessions.length > 0 && selectedSessions.some((session)=>session.studentIds.length > 0);\n    if (!isValid) toggleError(errorMessageComponent, errorMessage, true);\n    else toggleError(errorMessageComponent, \"\", false);\n    return isValid;\n}\nfunction setProfilePicUrl(imageUrl) {\n    const user = (0, _authConfig.userAuth).getUser();\n    if (user && user.profile) {\n        // Ensure the profile_picture object exists\n        user.profile.profile_pic = user.profile.profile_pic || {\n            url: \"\"\n        };\n        // Set the profile picture URL\n        user.profile.profile_pic.url = imageUrl;\n        (0, _authConfig.userAuth).setUser(user);\n        localStorage.setItem(\"auth_user\", JSON.stringify(user));\n    }\n}\nfunction setupFileUpload(fileInput, fileInputError, fileInputSuccess, uploadEndpoint) {\n    const profilePictureImage = new (0, _image.WFImage)(\"#profilePictureImage\");\n    const uploadAnimation = new (0, _core.WFComponent)(\"#uploadAnimation\");\n    const overlay = new (0, _core.WFComponent)(\".drop-zone\");\n    let dragCounter = 0;\n    return new Promise((resolve)=>{\n        const handleFile = (file)=>{\n            // Validate file type and size\n            const validTypes = [\n                \"image/jpeg\",\n                \"image/jpg\"\n            ];\n            const maxSizeInBytes = 2097152; // 2 MB\n            if (!validTypes.includes(file.type) && !/\\.(jpg|jpeg)$/i.test(file.name)) {\n                const errorMessage = \"Only JPEG images are allowed.\";\n                toggleError(fileInputError, errorMessage, true);\n                // Reset file input value\n                fileInput.getElement().value = \"\";\n                return;\n            }\n            if (file.size > maxSizeInBytes) {\n                const errorMessage = \"File size must be less than 2 MB.\";\n                toggleError(fileInputError, errorMessage, true);\n                // Reset file input value\n                fileInput.getElement().value = \"\";\n                return;\n            }\n            // Show upload animation immediately\n            uploadAnimation.setStyle({\n                display: \"flex\"\n            });\n            // Hide error and success messages\n            fileInputError.setStyle({\n                display: \"none\"\n            });\n            fileInputSuccess.setStyle({\n                display: \"none\"\n            });\n            const reader = new FileReader();\n            // Display preview image as soon as the file is loaded into memory\n            reader.onload = (event)=>{\n                // Set the preview image for the profile picture\n                const result = event.target?.result;\n                profilePictureImage.setImage(result);\n                // Hide overlay once the image is set\n                overlay.setStyle({\n                    display: \"none\"\n                });\n            };\n            reader.readAsDataURL(file);\n            const formData = new FormData();\n            formData.append(\"profile_picture\", file);\n            const existingStudent = localStorage.getItem(\"current_student\");\n            if (existingStudent) {\n                const student = JSON.parse(existingStudent);\n                formData.append(\"student_profile_id\", student.id.toString());\n            }\n            // Send the file to the server\n            const postRequest = (0, _apiConfig.apiClient).post(uploadEndpoint, {\n                data: formData\n            });\n            postRequest.onData((response)=>{\n                if (response.status === \"success\") {\n                    const imageUrl = response.url.profile_pic.url;\n                    // Update the profile picture URL in the user session and local storage\n                    setProfilePicUrl(imageUrl);\n                    // Update the image for other parts of the UI as well\n                    profilePictureImage.setImage(imageUrl);\n                    // Store the URL in local storage\n                    localStorage.setItem(\"image_upload\", imageUrl);\n                    // Show success message and hide upload animation\n                    fileInputSuccess.setStyle({\n                        display: \"flex\"\n                    });\n                    uploadAnimation.setStyle({\n                        display: \"none\"\n                    });\n                    // Resolve with the uploaded image URL\n                    resolve(imageUrl);\n                } else {\n                    const errorMessage = \"Failed to upload profile picture.\";\n                    toggleError(fileInputError, errorMessage, true);\n                    uploadAnimation.setStyle({\n                        display: \"none\"\n                    });\n                    overlay.setStyle({\n                        display: \"none\"\n                    });\n                    dragCounter = 0;\n                    // Reset file input value\n                    fileInput.getElement().value = \"\";\n                }\n            });\n            postRequest.onError((error)=>{\n                let errorMessage = \"An error occurred during image upload.\";\n                if (error.response && error.response.data) errorMessage = error.response.data.message || errorMessage;\n                else if (error.message) errorMessage = error.message;\n                // Show error message and hide upload animation\n                toggleError(fileInputError, errorMessage, true);\n                uploadAnimation.setStyle({\n                    display: \"none\"\n                });\n                overlay.setStyle({\n                    display: \"none\"\n                });\n                dragCounter = 0;\n                // Reset file input value\n                fileInput.getElement().value = \"\";\n            });\n            // Make the API call\n            postRequest.fetch();\n        };\n        // Event listener for file input changes\n        fileInput.on(\"change\", ()=>{\n            const file = fileInput.getElement().files?.[0];\n            if (file) handleFile(file);\n        });\n        // Event listeners for drag-and-drop\n        const dragZoneElement = document.body;\n        dragZoneElement.addEventListener(\"dragenter\", (event)=>{\n            event.preventDefault();\n            dragCounter++;\n            if (dragCounter === 1) overlay.setStyle({\n                display: \"flex\"\n            });\n        });\n        dragZoneElement.addEventListener(\"dragleave\", ()=>{\n            dragCounter--;\n            if (dragCounter <= 0) {\n                overlay.setStyle({\n                    display: \"none\"\n                });\n                dragCounter = 0;\n            }\n        });\n        dragZoneElement.addEventListener(\"dragover\", (event)=>{\n            event.preventDefault();\n        });\n        dragZoneElement.addEventListener(\"drop\", (event)=>{\n            event.preventDefault();\n            const files = event.dataTransfer?.files;\n            if (files?.length) handleFile(files[0]);\n            overlay.setStyle({\n                display: \"none\"\n            });\n            dragCounter = 0;\n        });\n    });\n}\nconst formatPhoneNumber = (value)=>{\n    const cleaned = value.replace(/\\D/g, \"\"); // Remove all non-digit characters\n    if (cleaned.length <= 3) return cleaned;\n    else if (cleaned.length <= 6) return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3)}`;\n    else if (cleaned.length <= 10) return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6)}`;\n    else // If more than 10 digits, truncate the extra digits\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6, 10)}`;\n};\n\n},{\"@xatom/core\":\"65YBq\",\"@xatom/image\":\"bavwf\",\"../api/apiConfig\":\"dUmIV\",\"../auth/authConfig\":\"dHwPR\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"bavwf\":[function(require,module,exports) {\nvar t = require(\"d023971cccd819e3\");\nvar e, r, s, i, o, n, u = {};\ne = u, r = \"WFImage\", s = ()=>c, Object.defineProperty(e, r, {\n    get: s,\n    set: i,\n    enumerable: !0,\n    configurable: !0\n});\nclass c extends t.WFComponent {\n    constructor(t){\n        super(t);\n    }\n    getImageConfig() {\n        return this._config;\n    }\n    getSrc() {\n        return this.getAttribute(\"src\");\n    }\n    getSizes() {\n        return this.getAttribute(\"sizes\");\n    }\n    getSrcSet() {\n        return this.getAttribute(\"srcset\");\n    }\n    getLoading() {\n        return this.getAttribute(\"loading\");\n    }\n    onLoad(t) {\n        return this.on(\"load\", t), ()=>{\n            this.off(\"load\", t);\n        };\n    }\n    onLoadError(t) {\n        return this.on(\"error\", t), ()=>{\n            this.off(\"error\", t);\n        };\n    }\n    setImage(t) {\n        if (\"string\" == typeof t) this.setAttribute(\"src\", t), this.removeAttribute(\"srcset\"), this.removeAttribute(\"sizes\");\n        else {\n            if (this.setAttribute(\"src\", t.src), \"object\" == typeof t && t.srcSet && t.srcSet.length && t.sizes && t.sizes.length) {\n                const e = t.srcSet.map((t)=>`${t.url} ${t.size}`).join(\", \");\n                this.setAttribute(\"srcset\", e);\n            } else this.removeAttribute(\"srcset\"), this.removeAttribute(\"sizes\");\n            t.loading && this.setAttribute(\"loading\", t.loading);\n        }\n    }\n}\no = module.exports, n = u, Object.keys(n).forEach(function(t) {\n    \"default\" === t || \"__esModule\" === t || o.hasOwnProperty(t) || Object.defineProperty(o, t, {\n        enumerable: !0,\n        get: function() {\n            return n[t];\n        }\n    });\n});\n\n},{\"d023971cccd819e3\":\"65YBq\"}],\"aB2QU\":[function(require,module,exports) {\n// sidebarIndicators.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeSidebarIndicators\", ()=>initializeSidebarIndicators);\nparcelHelpers.export(exports, \"setActiveStep\", ()=>setActiveStep);\nparcelHelpers.export(exports, \"unsetActiveStep\", ()=>unsetActiveStep);\nparcelHelpers.export(exports, \"markStepAsCompleted\", ()=>markStepAsCompleted);\nparcelHelpers.export(exports, \"unmarkStepAsCompleted\", ()=>unmarkStepAsCompleted);\nvar _core = require(\"@xatom/core\");\nvar _authConfig = require(\"../../../auth/authConfig\");\nconst initializeSidebarIndicators = ()=>{\n    const steps = [\n        {\n            id: \"sidebarStepOne\",\n            index: 1\n        },\n        {\n            id: \"sidebarStepTwo\",\n            index: 2\n        },\n        {\n            id: \"sidebarStepThree\",\n            index: 3\n        }\n    ];\n    // Set sidebar first name from userAuth\n    const firstNameText = new (0, _core.WFComponent)(\"#firstNameText\");\n    const user = (0, _authConfig.userAuth).getUser();\n    if (user && user.profile && user.profile.first_name) firstNameText.setText(user.profile.first_name);\n    else firstNameText.setText(\"Friend\");\n    steps.forEach((step)=>{\n        const stepComponent = new (0, _core.WFComponent)(`#${step.id}`);\n        let isCompleted = false; // Track the completed state\n        stepComponent.on(\"click\", ()=>{\n            if (isCompleted) isCompleted = false;\n            else isCompleted = true;\n        });\n    });\n};\nconst setActiveStep = (stepNumber)=>{\n    const stepId = getStepId(stepNumber);\n    const stepComponent = new (0, _core.WFComponent)(`#${stepId}`);\n    stepComponent.addCssClass(\"is-active\");\n};\nconst unsetActiveStep = (stepNumber)=>{\n    const stepId = getStepId(stepNumber);\n    const stepComponent = new (0, _core.WFComponent)(`#${stepId}`);\n    stepComponent.removeCssClass(\"is-active\");\n};\nconst markStepAsCompleted = (stepNumber)=>{\n    const stepId = getStepId(stepNumber);\n    const step = new (0, _core.WFComponent)(`#${stepId}`);\n    step.getElement().click(); // Programmatically trigger the click event to mark as complete\n};\nconst unmarkStepAsCompleted = (stepNumber)=>{\n    const stepId = getStepId(stepNumber);\n    const step = new (0, _core.WFComponent)(`#${stepId}`);\n    step.getElement().click(); // Programmatically trigger the click event to unmark as complete\n};\n// Helper function to get the ID string for a step\nconst getStepId = (stepNumber)=>{\n    const stepMap = {\n        1: \"sidebarStepOne\",\n        2: \"sidebarStepTwo\",\n        3: \"sidebarStepThree\"\n    };\n    return stepMap[stepNumber] || `sidebarStep${stepNumber}`;\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../../../auth/authConfig\":\"dHwPR\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"4SgF0\":[function(require,module,exports) {\n// src/navigation/urlParamNavigator.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeStateFromUrlParams\", ()=>initializeStateFromUrlParams);\nvar _donationState = require(\"../state/donationState\");\nvar _campaignList = require(\"../campaignList\");\nvar _campaignProductList = require(\"../campaignProductList\");\nvar _sidebarIndicators = require(\"../components/sidebarIndicators\");\nvar _core = require(\"@xatom/core\");\nvar _selectedCampaignDisplay = require(\"../components/selectedCampaignDisplay\"); // Import updateSelectedCampaignDisplay\nvar _apiConfig = require(\"../../../api/apiConfig\"); // Import apiClient\n// Function to parse URL parameters\nconst getUrlParams = ()=>{\n    const params = new URLSearchParams(window.location.search);\n    const campaignId = params.get(\"campaign\");\n    const cancelId = params.get(\"cancel\"); // Extract 'cancel' parameter\n    return {\n        campaignId,\n        cancelId\n    };\n};\n// Placeholder functions for user feedback\nconst displayErrorMessage = (message)=>{\n// Implement your error display logic here\n// Example: Use a toast notification system\n// toast.error(message);\n};\nconst displaySuccessMessage = (message)=>{\n// Implement your success display logic here\n// Example: Use a toast notification system\n// toast.success(message);\n};\nconst initializeStateFromUrlParams = async (slider)=>{\n    const { campaignId, cancelId } = getUrlParams();\n    (0, _sidebarIndicators.initializeSidebarIndicators)(); // Initialize sidebar indicators\n    const loadingWall = new (0, _core.WFComponent)(\".loading_wall\");\n    const animationDuration = 500; // Duration in milliseconds matching the CSS transition time\n    // Check if any relevant URL parameters are present\n    if (campaignId || cancelId) {\n        // Show the loading wall\n        loadingWall.setStyle({\n            display: \"flex\"\n        });\n        try {\n            // Handle cancellation if 'cancel' parameter is present\n            if (cancelId) {\n                // Create the DELETE request using apiClient\n                const deleteDonation = (0, _apiConfig.apiClient).delete(`/donate/cancel_donation/${cancelId}`);\n                // Set up listeners for the DELETE request\n                await new Promise((resolve, reject)=>{\n                    deleteDonation.onData(()=>{\n                        console.log(`Donation ${cancelId} canceled successfully`);\n                        // Optional: Remove 'cancel' parameter from the URL to prevent repeated cancellations\n                        const params = new URLSearchParams(window.location.search);\n                        params.delete(\"cancel\");\n                        const newUrl = `${window.location.pathname}${params.toString() ? `?${params.toString()}` : \"\"}`;\n                        window.history.replaceState({}, document.title, newUrl);\n                        // Provide user feedback\n                        displaySuccessMessage(\"Your donation has been successfully canceled.\");\n                        resolve(); // Resolve the promise on successful deletion\n                    });\n                    deleteDonation.onError((error)=>{\n                        console.error(`Failed to cancel donation ${cancelId}:`, error);\n                        // Provide user feedback\n                        displayErrorMessage(\"Failed to cancel your donation. Please try again later.\");\n                        reject(error); // Reject the promise on error\n                    });\n                    // Initiate the DELETE request\n                    deleteDonation.fetch();\n                });\n            }\n            // Proceed with campaign initialization if 'campaignId' is present\n            if (campaignId) {\n                // Clear any previous donation state\n                (0, _donationState.clearDonationState)();\n                // Initialize the campaign list\n                const campaigns = await (0, _campaignList.initializeCampaignList)(\"#selectCampaignList\");\n                // Find and select the campaign based on the URL parameter\n                const selectedCampaign = campaigns.find((campaign)=>campaign.id.toString() === campaignId);\n                if (selectedCampaign) {\n                    (0, _donationState.saveSelectedCampaign)({\n                        id: selectedCampaign.id.toString(),\n                        name: selectedCampaign.Name,\n                        imageUrl: selectedCampaign.Main_Image,\n                        description: selectedCampaign.Short_Description,\n                        subheading: selectedCampaign.Subheading\n                    });\n                    (0, _sidebarIndicators.markStepAsCompleted)(1);\n                    (0, _sidebarIndicators.setActiveStep)(2);\n                    (0, _selectedCampaignDisplay.updateSelectedCampaignDisplay)();\n                    const campaignComponent = document.querySelector(`input[value=\"${campaignId}\"]`);\n                    if (campaignComponent) {\n                        campaignComponent.checked = true;\n                        campaignComponent.dispatchEvent(new Event(\"change\"));\n                    }\n                    await (0, _campaignProductList.initializeDynamicProductList)(\"#selectProductList\", campaignId);\n                    slider.goToIndex(1);\n                } else {\n                    console.error(`Campaign with ID ${campaignId} not found`);\n                    displayErrorMessage(\"Selected campaign not found. Please choose a valid campaign.\");\n                    slider.goToIndex(0); // Navigate to the campaign selection slide\n                }\n            }\n        } catch (error) {\n            console.error(\"Error initializing state from URL parameters:\", error);\n            displayErrorMessage(\"An error occurred while initializing. Please try again.\");\n            slider.goToIndex(0); // Navigate to the campaign selection slide on error\n        } finally{\n            // Hide the loading wall after completing all initializations\n            loadingWall.addCssClass(\"hidden\");\n            setTimeout(()=>loadingWall.setStyle({\n                    display: \"none\"\n                }), animationDuration);\n        }\n    }\n};\n\n},{\"../state/donationState\":\"apIbX\",\"../campaignList\":\"cyN3Q\",\"../campaignProductList\":\"dw1Mn\",\"../components/sidebarIndicators\":\"aB2QU\",\"@xatom/core\":\"65YBq\",\"../components/selectedCampaignDisplay\":\"iv1HY\",\"../../../api/apiConfig\":\"dUmIV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}]},[], null, \"parcelRequired346\")\n\n//# sourceMappingURL=makeDonation.d68afc59.js.map\n","// makeDonation.ts\n\nimport { WFComponent, WFFormComponent } from \"@xatom/core\";\nimport { initializeCampaignList } from \"./campaignList\";\nimport { initializeDynamicProductList, renderProductListForDonationType } from \"./campaignProductList\";\nimport {\n  getSelectedCampaign,\n  getSelectedProduct,\n  getSelectedDonationType,\n  clearDonationState,\n  saveDonorDetails,\n  loadDonationState,\n  saveSelectedDonationType,\n} from \"./state/donationState\";\nimport { updateSelectedCampaignDisplay } from \"./components/selectedCampaignDisplay\";\nimport { WFSlider } from \"@xatom/slider\";\nimport { initializeUserContactDetails } from \"./components/userContactDetails\";\nimport { validateNotEmpty, validateEmail } from \"../../utils/validationUtils\";\nimport { apiClient } from \"../../api/apiConfig\";\nimport {\n  initializeSidebarIndicators,\n  setActiveStep,\n  markStepAsCompleted,\n  unmarkStepAsCompleted,\n  unsetActiveStep,\n} from \"./components/sidebarIndicators\";\nimport { initializeStateFromUrlParams } from \"./components/urlParamNavigator\";\nimport { userAuth } from \"../../auth/authConfig\";\n\nconst setupDonationTypeSelection = () => {\n  const radios = document.querySelectorAll<HTMLInputElement>(\n    'input[name=\"selectDonationType\"]'\n  );\n  radios.forEach((radio) => {\n    radio.addEventListener(\"change\", () => {\n      if (radio.checked) {\n        saveSelectedDonationType(radio.value as \"one-time\" | \"month\" | \"year\");\n        console.log(\"Donation type changed to:\", radio.value);\n        renderProductListForDonationType(); // 👈 this line ensures product list updates\n      }\n    });\n  });\n};\n\n// Initialize the donation process\nexport const makeDonation = async () => {\n  // Clear selected campaign and product on load to ensure a fresh start\n  clearDonationState();\n  setupDonationTypeSelection();\n  initializeSidebarIndicators(); // Initialize sidebar indicators\n  setActiveStep(1);\n\n  // Initialize the slider component\n  const slider = new WFSlider(\".multi-step_form_slider\");\n\n  initializeStateFromUrlParams(slider);\n\n  // Initialize campaign list\n  await initializeCampaignList(\"#selectCampaignList\");\n  // Initialize user contact details\n  initializeUserContactDetails();\n\n  // Handle form submission for campaign selection\n  const formStepOne = new WFFormComponent<{ campaign_id: string }>(\n    \"#formStepOne\"\n  );\n\n  formStepOne.onFormSubmit(async (formData, event) => {\n    event.preventDefault();\n    const selectedCampaign = getSelectedCampaign();\n\n    if (!selectedCampaign || !selectedCampaign.id) {\n      console.error(\"No campaign selected.\");\n      const submitStepOneError = new WFComponent(\"#submitStepOneError\");\n      submitStepOneError.setText(\"Please select a campaign.\");\n      submitStepOneError.setStyle({ display: \"block\" });\n      return;\n    }\n\n    console.log(\"Campaign selected:\", selectedCampaign);\n\n    // Show loading animation\n    const stepOneRequestingAnimation = new WFComponent(\n      \"#stepOneRequestingAnimation\"\n    );\n    stepOneRequestingAnimation.setStyle({ display: \"block\" });\n\n    try {\n      // Initialize product list based on the selected campaign\n      await initializeDynamicProductList(\n        \"#selectProductList\",\n        selectedCampaign.id\n      );\n\n      // Update selected campaign display\n      updateSelectedCampaignDisplay();\n\n      // Hide loading animation\n      stepOneRequestingAnimation.setStyle({ display: \"none\" });\n\n      // Mark step one as completed and proceed to the next step\n      markStepAsCompleted(1);\n      setActiveStep(2);\n      slider.goNext();\n    } catch (error) {\n      console.error(\"Error loading products:\", error);\n\n      // Hide loading animation and show error message\n      stepOneRequestingAnimation.setStyle({ display: \"none\" });\n      const submitStepOneError = new WFComponent(\"#submitStepOneError\");\n      submitStepOneError.setText(\"Error loading products. Please try again.\");\n      submitStepOneError.setStyle({ display: \"block\" });\n    }\n  });\n\n  // Handle step 2 interactions\n  const formStepTwo = new WFFormComponent<{ product_id: string }>(\n    \"#formStepTwo\"\n  );\n\n  formStepTwo.onFormSubmit(async (formData, event) => {\n    event.preventDefault();\n  \n    const selectedProduct = getSelectedProduct();\n    const donationType = getSelectedDonationType(); // \"one-time\", \"month\", or \"year\"\n    let isPriceAvailable = false;\n    \n    switch (donationType) {\n      case \"one-time\":\n        isPriceAvailable = !!selectedProduct.Single_sale_price_id;\n        break;\n      case \"month\":\n        isPriceAvailable = !!selectedProduct.Monthly_price_id;\n        break;\n      case \"year\":\n        isPriceAvailable = !!selectedProduct.Annual_price_id;\n        break;\n    }\n    \n    if (!isPriceAvailable) {\n      const submitStepTwoError = new WFComponent(\"#submitStepTwoError\");\n      submitStepTwoError.setText(\"The selected product is not available for this donation type.\");\n      submitStepTwoError.setStyle({ display: \"block\" });\n      return;\n    }\n    \n\n    // Get user email from authentication state if logged in\n    const user = userAuth.getUser();\n    const userEmail = user && user.email ? user.email : null;\n\n    // Validate user contact details if emailWrap is displayed\n    const emailWrap = document.getElementById(\"emailWrap\");\n    let hasErrors = false;\n    let email = userEmail;\n\n    // Initialize an object to hold all donor details\n    let donorDetails: {\n      email: string;\n      firstName: string;\n      lastName: string;\n      isAnonymous: boolean;\n      inNameOf?: string;\n    } = {\n      email: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      isAnonymous: false,\n    };\n\n    if (emailWrap && emailWrap.style.display !== \"none\") {\n      const firstNameInput = document.getElementById(\n        \"firstNameInput\"\n      ) as HTMLInputElement;\n      const lastNameInput = document.getElementById(\n        \"lastNameInput\"\n      ) as HTMLInputElement;\n      const emailInput = document.getElementById(\n        \"emailInput\"\n      ) as HTMLInputElement;\n\n      const firstNameError = !validateNotEmpty(firstNameInput.value);\n      const lastNameError = !validateNotEmpty(lastNameInput.value);\n      const emailError = !validateEmail(emailInput.value);\n\n      if (firstNameError || lastNameError || emailError) {\n        hasErrors = true;\n        console.error(\"Invalid input in contact details.\");\n\n        if (firstNameError) {\n          const firstNameInputError = new WFComponent(\"#firstNameInputError\");\n          firstNameInputError.setText(\"First name is required.\");\n          firstNameInputError.setStyle({ display: \"block\" });\n        }\n\n        if (lastNameError) {\n          const lastNameInputError = new WFComponent(\"#lastNameInputError\");\n          lastNameInputError.setText(\"Last name is required.\");\n          lastNameInputError.setStyle({ display: \"block\" });\n        }\n\n        if (emailError) {\n          const emailInputError = new WFComponent(\"#emailInputError\");\n          emailInputError.setText(\"A valid email address is required.\");\n          emailInputError.setStyle({ display: \"block\" });\n        }\n\n        // Display general error message\n        const submitStepTwoError = new WFComponent(\"#submitStepTwoError\");\n        submitStepTwoError.setText(\"Please correct the errors above.\");\n        submitStepTwoError.setStyle({ display: \"block\" });\n\n        return;\n      }\n\n      // If validation passes and the user is not logged in, save contact details\n      if (!userEmail) {\n        email = emailInput.value;\n      }\n\n      const isAnonymous = (\n        document.getElementById(\"anonymousInput\") as HTMLInputElement\n      ).checked;\n\n      // Populate donorDetails object\n      donorDetails = {\n        email: email,\n        firstName: firstNameInput.value,\n        lastName: lastNameInput.value,\n        isAnonymous: isAnonymous,\n      };\n    } else {\n      // Handle anonymous input and email when the user is logged in\n      const isAnonymous = (\n        document.getElementById(\"anonymousInput\") as HTMLInputElement\n      ).checked;\n      donorDetails = {\n        email: userEmail || \"\",\n        firstName: user ? user.profile.first_name : \"\",\n        lastName: user ? user.profile.last_name : \"\",\n        isAnonymous: isAnonymous,\n      };\n    }\n\n    // Handle \"Make this donation in someone else's name\"\n    const inNameOfCheckbox = document.getElementById(\n      \"inNameOfBoolInput\"\n    ) as HTMLInputElement;\n    const inNameOfInput = document.getElementById(\n      \"inNameOfInput\"\n    ) as HTMLInputElement;\n\n    if (inNameOfCheckbox && inNameOfCheckbox.checked) {\n      const inNameOfValue = inNameOfInput.value.trim();\n      const inNameOfError = !validateNotEmpty(inNameOfValue);\n\n      if (inNameOfError) {\n        hasErrors = true;\n        console.error(\n          \"Name input is required when making donation in someone else's name.\"\n        );\n\n        const inNameOfInputError = new WFComponent(\"#inNameOfInputError\");\n        inNameOfInputError.setText(\"Please enter the name.\");\n        inNameOfInputError.setStyle({ display: \"block\" });\n\n        // Display general error message\n        const submitStepTwoError = new WFComponent(\"#submitStepTwoError\");\n        submitStepTwoError.setText(\"Please correct the errors above.\");\n        submitStepTwoError.setStyle({ display: \"block\" });\n\n        return;\n      } else {\n        // Add inNameOf to donorDetails\n        donorDetails.inNameOf = inNameOfValue;\n      }\n    } else {\n      // If checkbox is not checked, ensure inNameOf is cleared\n      donorDetails.inNameOf = \"\";\n    }\n\n    if (!hasErrors) {\n      console.log(\"Donor details:\", donorDetails);\n      console.log(\"Product selected:\", selectedProduct);\n\n      // Save all donor details at once\n      saveDonorDetails(donorDetails);\n\n      // Debug: Log the entire donation state before submission\n      const currentDonationState = loadDonationState();\n      console.log(\"Current Donation State:\", currentDonationState);\n\n      // Show loading animation\n      const stepTwoRequestingAnimation = new WFComponent(\n        \"#stepTwoRequestingAnimation\"\n      );\n      stepTwoRequestingAnimation.setStyle({ display: \"block\" });\n\n      // Submit the donation state to the server\n      try {\n        const donationState = {\n          ...loadDonationState(),\n          currentPageUrl: window.location.href, // ✅ Add this line\n        };\n        const response = await apiClient\n  .post<{ checkout_url: string }>(\"/donate/begin_checkout\", {\n    data: donationState,\n  })\n  .fetch();\n\n\n        // Hide loading animation\n        stepTwoRequestingAnimation.setStyle({ display: \"none\" });\n\n        // Navigate to the checkout URL\n        window.location.href = response.checkout_url;\n      } catch (error) {\n        console.error(\"Error during checkout:\", error);\n\n        // Hide loading animation\n        stepTwoRequestingAnimation.setStyle({ display: \"none\" });\n\n        const submitStepTwoError = new WFComponent(\"#submitStepTwoError\");\n        submitStepTwoError.setText(\n          \"An error occurred during checkout. Please try again.\"\n        );\n        submitStepTwoError.setStyle({ display: \"block\" });\n      }\n    }\n  });\n\n  // Initialize components for UI interactions\n  const backStepTwoButton = new WFComponent(\"#backStepTwo\");\n  backStepTwoButton.on(\"click\", () => {\n    console.log(\"Navigating to the previous step.\");\n    unmarkStepAsCompleted(1); // Unmark the first step if going back\n    setActiveStep(1); // Set the first step as active\n    unsetActiveStep(2); // Unset the second step as active\n    slider.goPrevious();\n  });\n\n  const submitStepTwoButton = new WFComponent(\"#submitStepTwo\");\n  submitStepTwoButton.on(\"click\", () => {\n    console.log(\"Submitting the second step.\");\n  });\n\n  // Clear general error when inputs are interacted with\n  const clearSubmitStepTwoError = () => {\n    const submitStepTwoError = new WFComponent(\"#submitStepTwoError\");\n    submitStepTwoError.setText(\"\");\n    submitStepTwoError.setStyle({ display: \"none\" });\n  };\n\n  const firstNameInput = document.getElementById(\n    \"firstNameInput\"\n  ) as HTMLInputElement;\n  const lastNameInput = document.getElementById(\n    \"lastNameInput\"\n  ) as HTMLInputElement;\n  const emailInput = document.getElementById(\"emailInput\") as HTMLInputElement;\n  const inNameOfInput = document.getElementById(\"inNameOfInput\") as HTMLInputElement;\n\n  if (firstNameInput && lastNameInput && emailInput && inNameOfInput) {\n    firstNameInput.addEventListener(\"focus\", clearSubmitStepTwoError);\n    lastNameInput.addEventListener(\"focus\", clearSubmitStepTwoError);\n    emailInput.addEventListener(\"focus\", clearSubmitStepTwoError);\n    inNameOfInput.addEventListener(\"focus\", clearSubmitStepTwoError);\n  }\n\n  // Handle the \"Make donation in someone else's name\" checkbox\n  const inNameOfCheckbox = document.getElementById(\n    \"inNameOfBoolInput\"\n  ) as HTMLInputElement;\n  const hiddenInputWrapper = document.getElementById(\"hiddenInput\") as HTMLElement;\n\n  const toggleHiddenInput = () => {\n    if (inNameOfCheckbox.checked) {\n      hiddenInputWrapper.style.display = \"block\";\n    } else {\n      hiddenInputWrapper.style.display = \"none\";\n      // Clear the input value and any error messages\n      inNameOfInput.value = \"\";\n      const inNameOfError = new WFComponent(\"#inNameOfInputError\");\n      inNameOfError.setText(\"\");\n      inNameOfError.setStyle({ display: \"none\" });\n    }\n    clearSubmitStepTwoError();\n  };\n\n  if (inNameOfCheckbox && hiddenInputWrapper) {\n    // Initialize the hidden input state based on checkbox\n    toggleHiddenInput();\n\n    // Add event listener to the checkbox\n    inNameOfCheckbox.addEventListener(\"change\", toggleHiddenInput);\n  }\n};\n","import { WFDynamicList, WFComponent } from \"@xatom/core\";\nimport { fetchCampaigns, Campaign } from \"../../api/campaigns\";\nimport { saveSelectedCampaign } from \"./state/donationState\";\n\nlet selectedCampaignId: string | null = null;\n\n// Function to log the current state to localStorage\nconst logState = () => {\n  const state = JSON.parse(localStorage.getItem(\"donationState\") || \"{}\");\n  state.selectedCampaignId = selectedCampaignId;\n  console.log(\"Logging state to localStorage:\", state);\n  localStorage.setItem(\"donationState\", JSON.stringify(state));\n};\n\n// Store the initial template state of the container\nlet initialTemplateState: HTMLElement | null = null;\n\nexport const initializeCampaignList = async (\n  containerSelector: string\n): Promise<Campaign[]> => {\n  const container = document.querySelector(containerSelector);\n  if (!container) {\n    console.error(\"Campaign list container not found.\");\n    return [];\n  }\n\n  // Capture the initial template state if not already captured\n  if (!initialTemplateState) {\n    initialTemplateState = container.cloneNode(true) as HTMLElement;\n  }\n\n  // Clear the existing list by resetting the container to its initial state\n  container.innerHTML = \"\";\n  container.appendChild(initialTemplateState.cloneNode(true));\n\n  const list = new WFDynamicList<Campaign>(containerSelector, {\n    rowSelector: \"#cardSelectProduction\",\n    loaderSelector: \"#productionListLoading\",\n    emptySelector: \"#productionListEmpty\",\n  });\n\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({ display: \"flex\" });\n    return loaderElement;\n  });\n\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({ display: \"flex\" });\n    return emptyElement;\n  });\n\n  let campaigns: Campaign[] = [];\n\n  list.rowRenderer(({ rowData, rowElement, index }) => {\n    const campaignCard = new WFComponent(rowElement);\n    const campaignTitle = campaignCard.getChildAsComponent(\"#cardCampaignTitle\");\n    const campaignSubheading = campaignCard.getChildAsComponent(\"#cardCampaignSubheading\");\n    const campaignDescription = campaignCard.getChildAsComponent(\"#cardCampaignDescription\");\n    const campaignImage = campaignCard.getChildAsComponent(\"#cardCampaignImage\");\n    const campaignInput = campaignCard.getChildAsComponent(\".input_card_input\");\n    const campaignLabel = campaignCard.getChildAsComponent(\"label\");\n\n    if (\n      !campaignTitle ||\n      !campaignSubheading ||\n      !campaignDescription ||\n      !campaignInput ||\n      !campaignImage ||\n      !campaignLabel\n    ) {\n      console.error(\"Campaign elements not found.\");\n      return;\n    }\n\n    const inputId = `campaignInput-${index}`;\n    campaignInput.setAttribute(\"id\", inputId);\n    campaignInput.setAttribute(\"value\", rowData.id.toString());\n    campaignLabel.setAttribute(\"for\", inputId);\n\n    campaignTitle.setText(rowData.Name);\n    campaignSubheading.setText(rowData.Subheading);\n    campaignDescription.setText(rowData.Short_Description);\n\n    if (rowData.Main_Image) {\n      campaignImage.setAttribute(\"src\", rowData.Main_Image);\n    } else {\n      console.warn(`Campaign ID ${rowData.id} does not have a main image.`);\n    }\n\n    campaignInput.on(\"change\", () => {\n      selectedCampaignId = rowData.id.toString();\n      saveSelectedCampaign({\n        id: rowData.id.toString(),\n        name: rowData.Name,\n        imageUrl: rowData.Main_Image,\n        description: rowData.Short_Description,\n        subheading: rowData.Subheading,\n      });\n      logState();\n      console.log(\"Selected Campaign ID:\", selectedCampaignId);\n    });\n\n    rowElement.setStyle({ display: \"flex\" });\n    campaigns.push(rowData);\n\n    return rowElement;\n  });\n\n  try {\n    list.changeLoadingStatus(true);\n    campaigns = await fetchCampaigns();\n    console.log(\"Fetched campaigns:\", campaigns);\n\n    if (campaigns.length > 0) {\n      list.setData(campaigns);\n    } else {\n      list.setData([]);\n    }\n    list.changeLoadingStatus(false);\n  } catch (error) {\n    console.error(\"Error loading campaigns:\", error);\n    list.setData([]);\n    list.changeLoadingStatus(false);\n  }\n\n  return campaigns;\n};\n","import { apiClient } from \"./apiConfig\";\n\nexport interface Campaign {\n  id: number;\n  Name: string;\n  Main_Image: string;\n  Subheading: string;\n  Short_Description: string;\n}\n\ninterface CampaignApiResponse {\n  campaigns: Campaign[];\n}\n\n// Fetch campaigns from the server\nexport const fetchCampaigns = async (): Promise<Campaign[]> => {\n  try {\n    const response = await apiClient\n      .get<CampaignApiResponse>(\"/donate/campaigns\")\n      .fetch();\n    return response.campaigns;\n  } catch (error) {\n    console.error(\"Error fetching campaigns:\", error);\n    throw error;\n  }\n};\n","export interface DonationState {\n  selectedCampaignId?: string;\n  selectedCampaignName?: string;\n  selectedCampaignSubheading?: string;\n  selectedCampaignImageUrl?: string;\n  selectedCampaignDescription?: string;\n  selectedProductId?: string;\n  selectedProductName?: string;\n  selectedProductAmount?: number;\n  Single_sale_price_id?: string;\n  Monthly_price_id?: string;\n  Annual_price_id?: string;\n  email?: string;\n  firstName?: string;\n  lastName?: string;\n  isAnonymous?: boolean;\n  inNameOf?: string;\n  selectedDonationType?: \"one-time\" | \"month\" | \"year\"; // ✅ added\n  currentPageUrl?: string; // ✅ Add this\n\n}\n\nconst DONATION_STATE_KEY = \"donationState\";\n\n// Load the donation state from local storage\nexport const loadDonationState = (): DonationState => {\n  const savedState = localStorage.getItem(DONATION_STATE_KEY);\n  return savedState ? JSON.parse(savedState) : {};\n};\n\n// Save the donation state to local storage\nexport const saveDonationState = (state: Partial<DonationState>) => {\n  const currentState = loadDonationState();\n  const newState = { ...currentState, ...state };\n  localStorage.setItem(DONATION_STATE_KEY, JSON.stringify(newState));\n};\n\n// Clear the donation state from local storage\nexport const clearDonationState = () => {\n  localStorage.removeItem(DONATION_STATE_KEY);\n};\n\n// Get the selected campaign details\nexport const getSelectedCampaign = () => {\n  const state = loadDonationState();\n  return {\n    id: state.selectedCampaignId || null,\n    name: state.selectedCampaignName || null,\n    imageUrl: state.selectedCampaignImageUrl || null,\n    description: state.selectedCampaignDescription || null,\n    subheading: state.selectedCampaignSubheading || null,\n  };\n};\n\n// Save the selected campaign details\nexport const saveSelectedCampaign = (campaign: {\n  id: string;\n  name: string;\n  imageUrl: string;\n  description: string;\n  subheading: string;\n}) => {\n  saveDonationState({\n    selectedCampaignId: campaign.id,\n    selectedCampaignName: campaign.name,\n    selectedCampaignImageUrl: campaign.imageUrl,\n    selectedCampaignDescription: campaign.description,\n    selectedCampaignSubheading: campaign.subheading,\n  });\n};\n\n// Get the selected product details\nexport const getSelectedProduct = () => {\n  const state = loadDonationState();\n  return {\n    id: state.selectedProductId || null,\n    name: state.selectedProductName || null,\n    amount: state.selectedProductAmount || null,\n    Single_sale_price_id: state.Single_sale_price_id || null,\n    Monthly_price_id: state.Monthly_price_id || null,\n    Annual_price_id: state.Annual_price_id || null,\n  };\n};\n\n// Save the selected product details\nexport const saveSelectedProduct = (product: {\n  id: string;\n  name: string;\n  amount: number;\n  Single_sale_price_id?: string;\n  Monthly_price_id?: string;\n  Annual_price_id?: string;\n}) => {\n  saveDonationState({\n    selectedProductId: product.id,\n    selectedProductName: product.name,\n    selectedProductAmount: product.amount,\n    Single_sale_price_id: product.Single_sale_price_id,\n    Monthly_price_id: product.Monthly_price_id,\n    Annual_price_id: product.Annual_price_id,\n  });\n};\n\n// Get the donor details\nexport const getDonorDetails = () => {\n  const state = loadDonationState();\n  return {\n    email: state.email || null,\n    firstName: state.firstName || null,\n    lastName: state.lastName || null,\n    isAnonymous: state.isAnonymous || false,\n    inNameOf: state.inNameOf || null,\n  };\n};\n\n// Save the donor details\nexport const saveDonorDetails = (donor: {\n  email: string;\n  firstName: string;\n  lastName: string;\n  isAnonymous: boolean;\n  inNameOf?: string;\n}) => {\n  saveDonationState({\n    email: donor.email,\n    firstName: donor.firstName,\n    lastName: donor.lastName,\n    isAnonymous: donor.isAnonymous,\n    inNameOf: donor.inNameOf,\n  });\n};\n\n// Get and save donation type\nexport const getSelectedDonationType = (): \"one-time\" | \"month\" | \"year\" => {\n  const state = loadDonationState();\n  return (state.selectedDonationType as \"one-time\" | \"month\" | \"year\") || \"one-time\";\n};\n\nexport const saveSelectedDonationType = (type: \"one-time\" | \"month\" | \"year\") => {\n  saveDonationState({ selectedDonationType: type });\n};\n","import { WFDynamicList, WFComponent } from \"@xatom/core\";\nimport { fetchProducts, Product } from \"../../api/campaignProducts\";\nimport {\n  saveSelectedProduct,\n  getSelectedDonationType,\n} from \"./state/donationState\";\n\nlet selectedProductId: string | null = null;\nlet initialTemplateState: HTMLElement | null = null;\nlet productCache: Product[] = [];\nlet productListRef: WFDynamicList<Product> | null = null;\n\n// Filter + sort products based on current donation type\nconst filterProductsByDonationType = (products: Product[]): Product[] => {\n  const donationType = getSelectedDonationType();\n\n  const filtered = products.filter((product) => {\n    switch (donationType) {\n      case \"one-time\":\n        return !!product.Single_sale_price_id;\n      case \"month\":\n        return !!product.Monthly_price_id;\n      case \"year\":\n        return !!product.Annual_price_id;\n      default:\n        return false;\n    }\n  });\n\n  return filtered.sort((a, b) => {\n    switch (donationType) {\n      case \"one-time\":\n        return a.Single_sale_price_amount - b.Single_sale_price_amount;\n      case \"month\":\n        return a.Monthly_price_amount - b.Monthly_price_amount;\n      case \"year\":\n        return a.Annual_price_amount - b.Annual_price_amount;\n      default:\n        return 0;\n    }\n  });\n};\n\n\n// Re-render product list based on new donation type\nexport const renderProductListForDonationType = () => {\n  if (productListRef && productCache.length > 0) {\n    const filtered = filterProductsByDonationType([...productCache]); // clone to avoid side effects\n    productListRef.setData(filtered); // will now use freshly sorted data\n  }\n};\n\nexport const initializeDynamicProductList = async (\n  containerSelector: string,\n  campaignId: string\n) => {\n  const container = document.querySelector(containerSelector);\n  if (!container) {\n    console.error(\"Product list container not found.\");\n    return;\n  }\n\n  if (!initialTemplateState) {\n    initialTemplateState = container.cloneNode(true) as HTMLElement;\n  }\n\n  container.innerHTML = \"\";\n  container.appendChild(initialTemplateState.cloneNode(true));\n\n  const list = new WFDynamicList<Product>(containerSelector, {\n    rowSelector: \"#cardSelectProduct\",\n  });\n\n  productListRef = list;\n\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({ display: \"flex\" });\n    return loaderElement;\n  });\n\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({ display: \"flex\" });\n    return emptyElement;\n  });\n\n  list.rowRenderer(({ rowData, rowElement, index }) => {\n    const productCard = new WFComponent(rowElement);\n    const productTitle = productCard.getChildAsComponent(\"#cardProductTitle\");\n    const productInput = productCard.getChildAsComponent(\".input_card_input\");\n\n    if (!productTitle || !productInput) {\n      console.error(\"One or more elements not found in the product card\");\n      return;\n    }\n\n    const inputId = `productInput-${index}`;\n    productInput.setAttribute(\"id\", inputId);\n    productInput.setAttribute(\"value\", rowData.id.toString());\n\n    const label = productCard.getChildAsComponent(\"label\");\n    if (label) {\n      label.setAttribute(\"for\", inputId);\n    }\n\n    productTitle.setText(rowData.Product_name);\n\n    productInput.on(\"change\", () => {\n      const donationType = getSelectedDonationType();\n\n      let valid = false;\n      let amount = 0;\n\n      switch (donationType) {\n        case \"one-time\":\n          valid = !!rowData.Single_sale_price_id;\n          amount = rowData.Single_sale_price_amount;\n          break;\n        case \"month\":\n          valid = !!rowData.Monthly_price_id;\n          amount = rowData.Monthly_price_amount;\n          break;\n        case \"year\":\n          valid = !!rowData.Annual_price_id;\n          amount = rowData.Annual_price_amount;\n          break;\n      }\n\n      if (!valid) {\n        console.warn(\"Selected product is not valid for this donation type.\");\n        (productInput.getElement() as HTMLInputElement).checked = false;\n        return;\n      }\n\n      selectedProductId = rowData.id.toString();\n      saveSelectedProduct({\n        id: rowData.id.toString(),\n        name: rowData.Product_name,\n        amount: rowData.Single_sale_price_amount,\n        Single_sale_price_id: rowData.Single_sale_price_id,\n        Monthly_price_id: rowData.Monthly_price_id,\n        Annual_price_id: rowData.Annual_price_id,\n      });\n\n      console.log(\"Selected Product ID:\", selectedProductId);\n    });\n\n    rowElement.setStyle({ display: \"flex\" });\n\n    return rowElement;\n  });\n\n  try {\n    list.changeLoadingStatus(true);\n    productCache = await fetchProducts(campaignId);\n    const filtered = filterProductsByDonationType(productCache);\n\n    console.log(\"Filtered products:\", filtered);\n\n    list.setData(filtered.length > 0 ? filtered : []);\n    list.changeLoadingStatus(false);\n  } catch (error) {\n    console.error(\"Error loading products:\", error);\n    list.setData([]);\n    list.changeLoadingStatus(false);\n  }\n};\n","import { apiClient } from \"./apiConfig\";\n\nexport interface Product {\n  id: number;\n  Product_name: string;\n  Product_id: string;\n  Annual_price_id: string;\n  Monthly_price_id: string;\n  Single_sale_price_id: string;\n  Displayed_annual_price: string;\n  Displayed_monthly_price: string;\n  Displayed_single_sale_price: string;\n  Annual_price_amount: number;\n  Monthly_price_amount: number;\n  Single_sale_price_amount: number;\n}\n\nexport interface ProductApiResponse {\n  products: Product[];\n}\n\n// Fetch products from the server based on the selected campaign ID\nexport const fetchProducts = async (campaignId: string): Promise<Product[]> => {\n  try {\n    const response = await apiClient\n      .post<ProductApiResponse>(\"/donate/campaign/products\", {\n        data: { campaign_id: campaignId },\n      })\n      .fetch();\n    return response.products;\n  } catch (error) {\n    console.error(\"Error fetching products:\", error);\n    throw error;\n  }\n};\n","import { WFComponent } from \"@xatom/core\";\nimport { getSelectedCampaign } from \"../state/donationState\";\n\n// Function to update the selected campaign display\nexport const updateSelectedCampaignDisplay = () => {\n  const selectedCampaign = getSelectedCampaign();\n\n  if (!selectedCampaign) {\n    console.error(\"No selected campaign found in the state.\");\n    return;\n  }\n\n  const { name, subheading, description, imageUrl } = selectedCampaign;\n\n  // Ensure all necessary elements exist before updating them\n  const selectedCampaignTitle = new WFComponent(\"#selectedCampaignTitle\");\n  const selectedCampaignSubtitle = new WFComponent(\"#selectedCampaignSubtitle\");\n  const selectedCampaignDescription = new WFComponent(\n    \"#selectedCampaignDescription\"\n  );\n  const selectedImage = new WFComponent<HTMLImageElement>(\"#selectedImage\");\n\n  // Update the campaign details\n  selectedCampaignTitle.setText(name || \"N/A\");\n  selectedCampaignSubtitle.setText(subheading || \"No subheading available.\");\n  selectedCampaignDescription.setText(\n    description || \"No description available.\"\n  );\n\n  if (imageUrl) {\n    selectedImage.setAttribute(\"src\", imageUrl);\n  } else {\n    selectedImage.setAttribute(\n      \"src\",\n      \"https://cdn.prod.website-files.com/plugins/Basic/assets/placeholder.60f9b1840c.svg\"\n    );\n  }\n};\n","var e=require(\"@xatom/core\"),s=require(\"uuid\");var t,i,r,l,d={};t=d,i=\"WFSlider\",r=()=>o,Object.defineProperty(t,i,{get:r,set:l,enumerable:!0,configurable:!0});const n=window.jQuery;class o extends e.WFComponent{_sliderConfig={};_slides=[];_defaultSwipeDisabled=!1;_index=0;_listeners=new Map;constructor(e){super(e),this.init()}init(){this._defaultSwipeDisabled=\"true\"===this.getAttribute(\"data-disable-swipe\"),this._sliderConfig=n(this.getElement()).data()[\".wSlider\"],this._slides=Array.from(this._sliderConfig.slides).map((s=>new(0,e.WFComponent)(s))),this._mask=new(0,e.WFComponent)(this._sliderConfig.mask[0]),this._nav=new(0,e.WFComponent)(this._sliderConfig.nav[0]),this._left=new(0,e.WFComponent)(this._sliderConfig.left[0]),this._right=new(0,e.WFComponent)(this._sliderConfig.right[0]),function(e,s){if(!document.styleSheets)return;if(0==document.getElementsByTagName(\"head\").length)return;let t,i;if(document.styleSheets.length>0)for(var r=0,l=document.styleSheets.length;r<l;r++)if(!document.styleSheets[r].disabled){var d=document.styleSheets[r].media;if(i=typeof d,\"string\"===i?\"\"!==d&&-1===d.indexOf(\"screen\")||(t=document.styleSheets[r]):\"object\"==i&&(\"\"!==d.mediaText&&-1===d.mediaText.indexOf(\"screen\")||(t=document.styleSheets[r])),void 0!==t)break}if(void 0===t){var n=document.createElement(\"style\");for(n.type=\"text/css\",document.getElementsByTagName(\"head\")[0].appendChild(n),r=0;r<document.styleSheets.length;r++)document.styleSheets[r].disabled||(t=document.styleSheets[r]);i=typeof t.media}if(\"string\"===i){for(r=0,l=t.rules.length;r<l;r++)if(t.rules[r].selectorText&&t.rules[r].selectorText.toLowerCase()==e.toLowerCase())return void(t.rules[r].style.cssText=s);t.addRule(e,s)}else if(\"object\"===i){var o=t.cssRules?t.cssRules.length:0;for(r=0;r<o;r++)if(t.cssRules[r].selectorText&&t.cssRules[r].selectorText.toLowerCase()==e.toLowerCase())return void(t.cssRules[r].style.cssText=s);t.insertRule(e+\"{\"+s+\"}\",o)}}(\".xa-slider-disable\",\"display:none !important;\");const s=this;Object.defineProperty(s._sliderConfig,\"index\",{set:function(e){s._index=e,s._triggerOnChange()},get:function(){return s._index}}),this.refereshSlides()}reloadWFSlider(){window.Webflow.require(\"slider\").destroy(),window.Webflow.require(\"slider\").redraw(),window.Webflow.require(\"slider\").ready()}refereshSlides(){this._mask.getChildAsComponents(\".w-slide\").forEach((e=>e.remove())),this._slides.reverse().forEach((e=>{this._mask.getElement().prepend(e.getElement())})),this._slides.reverse(),this.reloadWFSlider()}getActiveSlide(){return this._slides[this._index]}getAllSlides(){return[...this._slides]}getSlideByIndex(e){return this._slides[e]}getActiveSlideIndex(){return this._index}getPreviousSlideIndex(){return this._sliderConfig.previous}goNext(){this._sliderConfig.right.click()}goPrevious(){this._sliderConfig.left.click()}goToIndex(e){e>=0&&e<this._slides.length&&(console.log(e),n(this._sliderConfig.nav.children()[e]).click())}addSlide(s,t={}){const i=t.index,r=t.cssClass,l=(0,e.createComponent)(\"div\");l.addCssClass(\"w-slide\"),r&&l.addCssClass(r),l.appendChild(s);const d=\"number\"!=typeof i?-1:i,n=this._slides;d>=0&&d<=n.length?n.splice(i,0,l):n.push(l),this._slides=[...n],this.refereshSlides()}removeSlide(e){const s=[...this._slides];e>=0&&e<s.length&&s.splice(e,1),this._slides=[...s],console.log(this._slides),this.refereshSlides()}getSlideNav(){return this._nav}setSlideNavigationState(e){e?(this._left.removeCssClass(\"xa-slider-disable\"),this._right.removeCssClass(\"xa-slider-disable\"),this._nav.removeCssClass(\"xa-slider-disable\"),this.setAttribute(\"data-disable-swipe\",this._defaultSwipeDisabled?\"true\":\"false\")):(this._left.addCssClass(\"xa-slider-disable\"),this._right.addCssClass(\"xa-slider-disable\"),this._nav.addCssClass(\"xa-slider-disable\"),this.setAttribute(\"data-disable-swipe\",\"true\")),this.reloadWFSlider()}onSlideChange(e){const t=(0,s.v4)();return this._listeners.set(t,e),()=>{this._listeners.delete(t)}}_triggerOnChange(){Array.from(this._listeners.values()).forEach((e=>{e(this._index,this._sliderConfig.previous)}))}getConfig(){return this._sliderConfig}}var a,h;a=module.exports,h=d,Object.keys(h).forEach((function(e){\"default\"===e||\"__esModule\"===e||a.hasOwnProperty(e)||Object.defineProperty(a,e,{enumerable:!0,get:function(){return h[e]}})}));","// userContactDetails.ts\nimport { WFComponent } from \"@xatom/core\";\nimport {\n  validateNotEmpty,\n  validateEmail,\n} from \"../../../utils/validationUtils\";\nimport { toggleError, setupValidation } from \"../../../utils/formUtils\";\nimport { saveDonationState } from \"../state/donationState\";\nimport { userAuth } from \"../../../auth/authConfig\";\n\n// Initialize the user contact details\nexport const initializeUserContactDetails = () => {\n  // Elements\n  const firstNameInput = new WFComponent(\"#firstNameInput\");\n  const lastNameInput = new WFComponent(\"#lastNameInput\");\n  const emailInput = new WFComponent(\"#emailInput\");\n  const firstNameInputError = new WFComponent(\"#firstNameInputError\");\n  const lastNameInputError = new WFComponent(\"#lastNameInputError\");\n  const emailInputError = new WFComponent(\"#emailInputError\");\n  const emailWrap = new WFComponent(\"#emailWrap\");\n\n  // Check if user is authenticated and hide email field if so\n  const user = userAuth.getUser();\n  if (user && user.email) {\n    emailWrap.setStyle({ display: \"none\" });\n    saveDonationState({ email: user.email });\n  } else {\n    emailWrap.setStyle({ display: \"grid\" });\n\n    // Setup validation for email field\n    setupValidation(\n      emailInput,\n      emailInputError,\n      createValidationFunction(\n        emailInput,\n        validateEmail,\n        \"Invalid email address.\"\n      )\n    );\n  }\n\n  // Setup validation for first name and last name fields\n  setupValidation(\n    firstNameInput,\n    firstNameInputError,\n    createValidationFunction(\n      firstNameInput,\n      validateNotEmpty,\n      \"First name is required.\"\n    )\n  );\n\n  setupValidation(\n    lastNameInput,\n    lastNameInputError,\n    createValidationFunction(\n      lastNameInput,\n      validateNotEmpty,\n      \"Last name is required.\"\n    )\n  );\n\n  // Save input data to state\n  firstNameInput.on(\"input\", () => {\n    const firstName = (firstNameInput.getElement() as HTMLInputElement).value;\n    saveDonationState({ firstName });\n  });\n\n  lastNameInput.on(\"input\", () => {\n    const lastName = (lastNameInput.getElement() as HTMLInputElement).value;\n    saveDonationState({ lastName });\n  });\n\n  emailInput.on(\"input\", () => {\n    const email = (emailInput.getElement() as HTMLInputElement).value;\n    saveDonationState({ email });\n  });\n};\n\n// Utility function for validation\nfunction createValidationFunction(\n  inputComponent: WFComponent,\n  validationFn: (input: string) => boolean,\n  errorMessage: string\n): () => string {\n  return () => {\n    const inputElement = inputComponent.getElement() as HTMLInputElement;\n    const isValid = validationFn(inputElement.value);\n    return isValid ? \"\" : errorMessage;\n  };\n}\n","import { WFComponent } from \"@xatom/core\";\nimport { toggleError } from \"./formUtils\";\n\nexport function validateNotEmpty(input: string | undefined): boolean {\n  return input !== undefined && input.trim() !== \"\";\n}\n\nexport function validateEmail(input: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(input);\n}\n\n/**\n * Validates that the email is either empty or correctly formatted.\n * @param value The email input value.\n * @returns True if valid, false otherwise.\n */\nexport const validateEmailOptional = (value: string): boolean => {\n  if (value.trim() === \"\") {\n    // Email is optional, so empty string is valid\n    return true;\n  }\n  // Validate the email format if not empty\n  return validateEmail(value);\n};\n\nexport function validatePasswordRequirements(password: string): boolean {\n  const hasLowercase = /[a-z]/.test(password);\n  const hasUppercase = /[A-Z]/.test(password);\n  const hasDigit = /\\d/.test(password);\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n  const hasValidLength = password.length >= 8;\n  return (\n    hasLowercase && hasUppercase && hasDigit && hasSpecialChar && hasValidLength\n  );\n}\n\nexport function validateCheckbox(checked: boolean): boolean {\n  return checked;\n}\n\nexport function validatePasswordsMatch(\n  originalPassword: string,\n  confirmPassword: string\n): boolean {\n  return originalPassword === confirmPassword;\n}\n\nexport function validateSelectField(input: string | undefined): boolean {\n  return input !== undefined && input !== \"N/A\";\n}\n\nexport function validatePhoneNumber(input: string): boolean {\n  const phoneRegex = /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/;\n  return phoneRegex.test(input);\n}\n\nexport const validatePhoneNumberOptional = (value: string): boolean => {\n  if (value.trim() === \"\") {\n    // Phone number is optional, so empty string is valid\n    return true;\n  }\n  // Validate the phone number format if not empty\n  return validatePhoneNumber(value);\n};\n","import { WFComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../api/apiConfig\";\nimport { userAuth } from \"../auth/authConfig\";\n\nexport function toggleError(\n  errorMessageComponent: WFComponent<any>,\n  message: string,\n  show: boolean\n): void {\n  errorMessageComponent.updateTextViaAttrVar({ text: show ? message : \"\" });\n  errorMessageComponent.setStyle({ display: show ? \"flex\" : \"none\" });\n}\n\nexport function setupValidation(\n  inputComponent: WFComponent,\n  errorComponent: WFComponent,\n  validate: () => string,\n  requestErrorComponent?: WFComponent // Optional component to clear on input change\n) {\n  const validateAndUpdate = () => {\n    const errorMessage = validate();\n    toggleError(errorComponent, errorMessage, !!errorMessage);\n    if (requestErrorComponent && errorMessage === \"\") {\n      // Clear request error message when the user is correcting the input\n      toggleError(requestErrorComponent, \"\", false);\n    }\n  };\n\n  // Attach event listeners for real-time validation\n  inputComponent.on(\"input\", validateAndUpdate);\n  inputComponent.on(\"blur\", validateAndUpdate);\n  inputComponent.on(\"change\", validateAndUpdate);\n}\n\nexport function createValidationFunction(\n  inputComponent: WFComponent,\n  validationFn: (input: string) => boolean,\n  errorMessage: string\n): () => string {\n  return () => {\n    const inputElement = inputComponent.getElement() as HTMLInputElement;\n    const isValid = validationFn(inputElement.value);\n    return isValid ? \"\" : errorMessage;\n  };\n}\n\nexport function createCheckboxValidationFunction(\n  checkboxComponent: WFComponent,\n  errorMessage: string\n): () => string {\n  return () => {\n    const checkbox = checkboxComponent.getElement() as HTMLInputElement;\n    return checkbox.checked ? \"\" : errorMessage;\n  };\n}\n\nexport function setupCheckboxValidation(\n  checkboxComponent: WFComponent,\n  checkboxErrorComponent: WFComponent,\n  errorMessage: string\n) {\n  const validate = createCheckboxValidationFunction(\n    checkboxComponent,\n    errorMessage\n  );\n  setupValidation(checkboxComponent, checkboxErrorComponent, validate);\n}\n\nexport function validateSelectedSessions(\n  selectedSessions: { sessionId: string; studentIds: string[] }[],\n  errorMessageComponent: WFComponent<any>,\n  errorMessage: string\n): boolean {\n  const isValid =\n    selectedSessions.length > 0 &&\n    selectedSessions.some((session) => session.studentIds.length > 0);\n\n  if (!isValid) {\n    toggleError(errorMessageComponent, errorMessage, true);\n  } else {\n    toggleError(errorMessageComponent, \"\", false);\n  }\n\n  return isValid;\n}\n\ntype fileUploadResponse = {\n  status: string;\n  url: {\n    profile_pic: {\n      url: string;\n    };\n  };\n};\n\n/**\n * Updates the user's profile picture URL in the authentication system.\n * @param {string} imageUrl - The URL of the uploaded image.\n */\nexport function setProfilePicUrl(imageUrl: string): void {\n  const user = userAuth.getUser();\n  if (user && user.profile) {\n    // Ensure the profile_picture object exists\n    user.profile.profile_pic = user.profile.profile_pic || { url: \"\" };\n\n    // Set the profile picture URL\n    user.profile.profile_pic.url = imageUrl;\n    userAuth.setUser(user);\n    localStorage.setItem(\"auth_user\", JSON.stringify(user));\n  }\n}\n\n/**\n * Handles file upload and displays the uploaded image.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */\n/**\n * Handles file upload and displays the uploaded image.\n * Only JPEG files less than 2 MB can be uploaded.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */\nexport function setupFileUpload(\n  fileInput: WFComponent,\n  fileInputError: WFComponent,\n  fileInputSuccess: WFComponent,\n  uploadEndpoint: string\n): Promise<string> {\n  const profilePictureImage = new WFImage(\"#profilePictureImage\");\n  const uploadAnimation = new WFComponent(\"#uploadAnimation\");\n\n  const overlay = new WFComponent(\".drop-zone\");\n  let dragCounter = 0;\n\n  return new Promise<string>((resolve) => {\n    const handleFile = (file: File) => {\n      // Validate file type and size\n      const validTypes = [\"image/jpeg\", \"image/jpg\"];\n      const maxSizeInBytes = 2 * 1024 * 1024; // 2 MB\n\n      if (\n        !validTypes.includes(file.type) &&\n        !/\\.(jpg|jpeg)$/i.test(file.name)\n      ) {\n        const errorMessage = \"Only JPEG images are allowed.\";\n        toggleError(fileInputError, errorMessage, true);\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n        return;\n      }\n\n      if (file.size > maxSizeInBytes) {\n        const errorMessage = \"File size must be less than 2 MB.\";\n        toggleError(fileInputError, errorMessage, true);\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n        return;\n      }\n\n      // Show upload animation immediately\n      uploadAnimation.setStyle({ display: \"flex\" });\n\n      // Hide error and success messages\n      fileInputError.setStyle({ display: \"none\" });\n      fileInputSuccess.setStyle({ display: \"none\" });\n\n      const reader = new FileReader();\n\n      // Display preview image as soon as the file is loaded into memory\n      reader.onload = (event) => {\n        // Set the preview image for the profile picture\n        const result = event.target?.result as string;\n        profilePictureImage.setImage(result);\n\n        // Hide overlay once the image is set\n        overlay.setStyle({ display: \"none\" });\n      };\n\n      reader.readAsDataURL(file);\n\n      const formData = new FormData();\n      formData.append(\"profile_picture\", file);\n\n      const existingStudent = localStorage.getItem(\"current_student\");\n      if (existingStudent) {\n        const student = JSON.parse(existingStudent);\n        formData.append(\"student_profile_id\", student.id.toString());\n      }\n\n      // Send the file to the server\n      const postRequest = apiClient.post<fileUploadResponse>(uploadEndpoint, {\n        data: formData,\n      });\n\n      postRequest.onData((response) => {\n        if (response.status === \"success\") {\n          const imageUrl = response.url.profile_pic.url;\n\n          // Update the profile picture URL in the user session and local storage\n          setProfilePicUrl(imageUrl);\n\n          // Update the image for other parts of the UI as well\n          profilePictureImage.setImage(imageUrl);\n\n          // Store the URL in local storage\n          localStorage.setItem(\"image_upload\", imageUrl);\n\n          // Show success message and hide upload animation\n          fileInputSuccess.setStyle({ display: \"flex\" });\n          uploadAnimation.setStyle({ display: \"none\" });\n\n          // Resolve with the uploaded image URL\n          resolve(imageUrl);\n        } else {\n          const errorMessage = \"Failed to upload profile picture.\";\n          toggleError(fileInputError, errorMessage, true);\n          uploadAnimation.setStyle({ display: \"none\" });\n          overlay.setStyle({ display: \"none\" });\n          dragCounter = 0;\n          // Reset file input value\n          (fileInput.getElement() as HTMLInputElement).value = \"\";\n        }\n      });\n\n      postRequest.onError((error) => {\n        let errorMessage = \"An error occurred during image upload.\";\n        if (error.response && error.response.data) {\n          errorMessage = error.response.data.message || errorMessage;\n        } else if (error.message) {\n          errorMessage = error.message;\n        }\n\n        // Show error message and hide upload animation\n        toggleError(fileInputError, errorMessage, true);\n        uploadAnimation.setStyle({ display: \"none\" });\n        overlay.setStyle({ display: \"none\" });\n        dragCounter = 0;\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n      });\n\n      // Make the API call\n      postRequest.fetch();\n    };\n\n    // Event listener for file input changes\n    fileInput.on(\"change\", () => {\n      const file = (fileInput.getElement() as HTMLInputElement).files?.[0];\n      if (file) {\n        handleFile(file);\n      }\n    });\n\n    // Event listeners for drag-and-drop\n    const dragZoneElement = document.body;\n    dragZoneElement.addEventListener(\"dragenter\", (event) => {\n      event.preventDefault();\n      dragCounter++;\n      if (dragCounter === 1) {\n        overlay.setStyle({ display: \"flex\" });\n      }\n    });\n\n    dragZoneElement.addEventListener(\"dragleave\", () => {\n      dragCounter--;\n      if (dragCounter <= 0) {\n        overlay.setStyle({ display: \"none\" });\n        dragCounter = 0;\n      }\n    });\n\n    dragZoneElement.addEventListener(\"dragover\", (event) => {\n      event.preventDefault();\n    });\n\n    dragZoneElement.addEventListener(\"drop\", (event) => {\n      event.preventDefault();\n\n      const files = event.dataTransfer?.files;\n      if (files?.length) {\n        handleFile(files[0]);\n      }\n\n      overlay.setStyle({ display: \"none\" });\n      dragCounter = 0;\n    });\n  });\n}\n\n// src/utils/formUtils.ts\n\n/**\n * Formats a phone number string to the format (xxx) xxx-xxxx.\n * If the input contains more than 10 digits, it truncates the extra digits.\n * If it contains fewer, it formats as much as possible.\n *\n * @param value - The raw phone number string.\n * @returns The formatted phone number string.\n */\nexport const formatPhoneNumber = (value: string): string => {\n  const cleaned = value.replace(/\\D/g, \"\"); // Remove all non-digit characters\n\n  if (cleaned.length <= 3) {\n    return cleaned;\n  } else if (cleaned.length <= 6) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3)}`;\n  } else if (cleaned.length <= 10) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(\n      6\n    )}`;\n  } else {\n    // If more than 10 digits, truncate the extra digits\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(\n      6,\n      10\n    )}`;\n  }\n};\n","var t=require(\"@xatom/core\");var e,r,s,i,o,n,u={};e=u,r=\"WFImage\",s=()=>c,Object.defineProperty(e,r,{get:s,set:i,enumerable:!0,configurable:!0});class c extends t.WFComponent{constructor(t){super(t)}getImageConfig(){return this._config}getSrc(){return this.getAttribute(\"src\")}getSizes(){return this.getAttribute(\"sizes\")}getSrcSet(){return this.getAttribute(\"srcset\")}getLoading(){return this.getAttribute(\"loading\")}onLoad(t){return this.on(\"load\",t),()=>{this.off(\"load\",t)}}onLoadError(t){return this.on(\"error\",t),()=>{this.off(\"error\",t)}}setImage(t){if(\"string\"==typeof t)this.setAttribute(\"src\",t),this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");else{if(this.setAttribute(\"src\",t.src),\"object\"==typeof t&&t.srcSet&&t.srcSet.length&&t.sizes&&t.sizes.length){const e=t.srcSet.map((t=>`${t.url} ${t.size}`)).join(\", \");this.setAttribute(\"srcset\",e)}else this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");t.loading&&this.setAttribute(\"loading\",t.loading)}}}o=module.exports,n=u,Object.keys(n).forEach((function(t){\"default\"===t||\"__esModule\"===t||o.hasOwnProperty(t)||Object.defineProperty(o,t,{enumerable:!0,get:function(){return n[t]}})}));","// sidebarIndicators.ts\n\nimport { WFComponent } from \"@xatom/core\";\nimport { userAuth } from \"../../../auth/authConfig\";\n\n// Initialize the sidebar indicators\nexport const initializeSidebarIndicators = () => {\n  const steps = [\n    { id: \"sidebarStepOne\", index: 1 },\n    { id: \"sidebarStepTwo\", index: 2 },\n    { id: \"sidebarStepThree\", index: 3 },\n  ];\n\n  // Set sidebar first name from userAuth\n  const firstNameText = new WFComponent(\"#firstNameText\");\n  const user = userAuth.getUser();\n\n  if (user && user.profile && user.profile.first_name) {\n    firstNameText.setText(user.profile.first_name);\n  } else {\n    firstNameText.setText(\"Friend\");\n  }\n\n  steps.forEach((step) => {\n    const stepComponent = new WFComponent(`#${step.id}`);\n    let isCompleted = false; // Track the completed state\n\n    stepComponent.on(\"click\", () => {\n      if (isCompleted) {\n        isCompleted = false;\n        // Trigger reverse animation here if needed\n      } else {\n        isCompleted = true;\n        // Trigger completed animation here\n      }\n    });\n  });\n};\n\n// Set the active step\nexport const setActiveStep = (stepNumber: number) => {\n  const stepId = getStepId(stepNumber);\n  const stepComponent = new WFComponent(`#${stepId}`);\n  stepComponent.addCssClass(\"is-active\");\n};\n\n// Unset the active step\nexport const unsetActiveStep = (stepNumber: number) => {\n  const stepId = getStepId(stepNumber);\n  const stepComponent = new WFComponent(`#${stepId}`);\n  stepComponent.removeCssClass(\"is-active\");\n};\n\n// Mark step as completed\nexport const markStepAsCompleted = (stepNumber: number) => {\n  const stepId = getStepId(stepNumber);\n  const step = new WFComponent(`#${stepId}`);\n  step.getElement().click(); // Programmatically trigger the click event to mark as complete\n};\n\n// Unmark step as completed (reverse the completed animation)\nexport const unmarkStepAsCompleted = (stepNumber: number) => {\n  const stepId = getStepId(stepNumber);\n  const step = new WFComponent(`#${stepId}`);\n  step.getElement().click(); // Programmatically trigger the click event to unmark as complete\n};\n\n// Helper function to get the ID string for a step\nconst getStepId = (stepNumber: number): string => {\n  const stepMap: Record<number, string> = {\n    1: \"sidebarStepOne\",\n    2: \"sidebarStepTwo\",\n    3: \"sidebarStepThree\",\n  };\n  return stepMap[stepNumber] || `sidebarStep${stepNumber}`;\n};\n","// src/navigation/urlParamNavigator.ts\n\nimport {\n  saveSelectedCampaign,\n  clearDonationState,\n} from \"../state/donationState\";\nimport { initializeCampaignList } from \"../campaignList\";\nimport { initializeDynamicProductList } from \"../campaignProductList\";\nimport { WFSlider } from \"@xatom/slider\";\nimport {\n  initializeSidebarIndicators,\n  setActiveStep,\n  markStepAsCompleted,\n} from \"../components/sidebarIndicators\";\nimport { WFComponent } from \"@xatom/core\";\nimport { updateSelectedCampaignDisplay } from \"../components/selectedCampaignDisplay\"; // Import updateSelectedCampaignDisplay\nimport { apiClient } from \"../../../api/apiConfig\"; // Import apiClient\n\n// Function to parse URL parameters\nconst getUrlParams = () => {\n  const params = new URLSearchParams(window.location.search);\n  const campaignId = params.get(\"campaign\");\n  const cancelId = params.get(\"cancel\"); // Extract 'cancel' parameter\n  return { campaignId, cancelId };\n};\n\n// Placeholder functions for user feedback\nconst displayErrorMessage = (message: string) => {\n  // Implement your error display logic here\n  // Example: Use a toast notification system\n  // toast.error(message);\n};\n\nconst displaySuccessMessage = (message: string) => {\n  // Implement your success display logic here\n  // Example: Use a toast notification system\n  // toast.success(message);\n};\n\n// Function to initialize states based on URL parameters\nexport const initializeStateFromUrlParams = async (slider: WFSlider) => {\n  const { campaignId, cancelId } = getUrlParams();\n  initializeSidebarIndicators(); // Initialize sidebar indicators\n\n  const loadingWall = new WFComponent(\".loading_wall\");\n  const animationDuration = 500; // Duration in milliseconds matching the CSS transition time\n\n  // Check if any relevant URL parameters are present\n  if (campaignId || cancelId) {\n    // Show the loading wall\n    loadingWall.setStyle({ display: \"flex\" });\n\n    try {\n      // Handle cancellation if 'cancel' parameter is present\n      if (cancelId) {\n        // Create the DELETE request using apiClient\n        const deleteDonation = apiClient.delete(\n          `/donate/cancel_donation/${cancelId}`\n        );\n\n        // Set up listeners for the DELETE request\n        await new Promise<void>((resolve, reject) => {\n          deleteDonation.onData(() => {\n            console.log(`Donation ${cancelId} canceled successfully`);\n\n            // Optional: Remove 'cancel' parameter from the URL to prevent repeated cancellations\n            const params = new URLSearchParams(window.location.search);\n            params.delete(\"cancel\");\n            const newUrl = `${window.location.pathname}${\n              params.toString() ? `?${params.toString()}` : \"\"\n            }`;\n            window.history.replaceState({}, document.title, newUrl);\n\n            // Provide user feedback\n            displaySuccessMessage(\n              \"Your donation has been successfully canceled.\"\n            );\n\n            resolve(); // Resolve the promise on successful deletion\n          });\n\n          deleteDonation.onError((error: any) => {\n            console.error(`Failed to cancel donation ${cancelId}:`, error);\n            // Provide user feedback\n            displayErrorMessage(\n              \"Failed to cancel your donation. Please try again later.\"\n            );\n            reject(error); // Reject the promise on error\n          });\n\n          // Initiate the DELETE request\n          deleteDonation.fetch();\n        });\n      }\n\n      // Proceed with campaign initialization if 'campaignId' is present\n      if (campaignId) {\n        // Clear any previous donation state\n        clearDonationState();\n\n        // Initialize the campaign list\n        const campaigns = await initializeCampaignList(\"#selectCampaignList\");\n\n        // Find and select the campaign based on the URL parameter\n        const selectedCampaign = campaigns.find(\n          (campaign) => campaign.id.toString() === campaignId\n        );\n        if (selectedCampaign) {\n          saveSelectedCampaign({\n            id: selectedCampaign.id.toString(),\n            name: selectedCampaign.Name,\n            imageUrl: selectedCampaign.Main_Image,\n            description: selectedCampaign.Short_Description,\n            subheading: selectedCampaign.Subheading,\n          });\n        \n          markStepAsCompleted(1);\n          setActiveStep(2);\n        \n          updateSelectedCampaignDisplay();\n        \n          const campaignComponent = document.querySelector(\n            `input[value=\"${campaignId}\"]`\n          );\n          if (campaignComponent) {\n            (campaignComponent as HTMLInputElement).checked = true;\n            campaignComponent.dispatchEvent(new Event(\"change\"));\n          }\n        \n          await initializeDynamicProductList(\"#selectProductList\", campaignId);\n          slider.goToIndex(1);\n        } else {\n          console.error(`Campaign with ID ${campaignId} not found`);\n          displayErrorMessage(\n            \"Selected campaign not found. Please choose a valid campaign.\"\n          );\n          slider.goToIndex(0); // Navigate to the campaign selection slide\n        }\n      }\n    } catch (error) {\n      console.error(\"Error initializing state from URL parameters:\", error);\n      displayErrorMessage(\n        \"An error occurred while initializing. Please try again.\"\n      );\n      slider.goToIndex(0); // Navigate to the campaign selection slide on error\n    } finally {\n      // Hide the loading wall after completing all initializations\n      loadingWall.addCssClass(\"hidden\");\n      setTimeout(\n        () => loadingWall.setStyle({ display: \"none\" }),\n        animationDuration\n      );\n    }\n  }\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","export","makeDonation","_core","_campaignList","_campaignProductList","_donationState","_selectedCampaignDisplay","_slider","_userContactDetails","_validationUtils","_apiConfig","_sidebarIndicators","_urlParamNavigator","_authConfig","setupDonationTypeSelection","radios","document","querySelectorAll","forEach","radio","addEventListener","checked","saveSelectedDonationType","value","console","log","renderProductListForDonationType","clearDonationState","initializeSidebarIndicators","setActiveStep","slider","WFSlider","initializeStateFromUrlParams","initializeCampaignList","initializeUserContactDetails","formStepOne","WFFormComponent","onFormSubmit","formData","event","preventDefault","selectedCampaign","getSelectedCampaign","error","submitStepOneError","WFComponent","setText","setStyle","display","stepOneRequestingAnimation","initializeDynamicProductList","updateSelectedCampaignDisplay","markStepAsCompleted","goNext","formStepTwo","selectedProduct","getSelectedProduct","donationType","getSelectedDonationType","isPriceAvailable","Single_sale_price_id","Monthly_price_id","Annual_price_id","submitStepTwoError","user","userAuth","getUser","userEmail","email","emailWrap","getElementById","hasErrors","donorDetails","firstName","lastName","isAnonymous","style","firstNameInput","lastNameInput","emailInput","firstNameError","validateNotEmpty","lastNameError","emailError","validateEmail","firstNameInputError","lastNameInputError","emailInputError","profile","first_name","last_name","inNameOfCheckbox","inNameOfInput","inNameOfValue","trim","inNameOfInputError","inNameOf","saveDonorDetails","loadDonationState","stepTwoRequestingAnimation","donationState","currentPageUrl","location","href","response","apiClient","post","data","fetch","checkout_url","backStepTwoButton","on","unmarkStepAsCompleted","unsetActiveStep","goPrevious","submitStepTwoButton","clearSubmitStepTwoError","hiddenInputWrapper","toggleHiddenInput","inNameOfError","_campaigns","selectedCampaignId","logState","state","JSON","parse","localStorage","getItem","setItem","stringify","initialTemplateState","containerSelector","container","querySelector","cloneNode","innerHTML","appendChild","list","WFDynamicList","rowSelector","loaderSelector","emptySelector","loaderRenderer","loaderElement","emptyRenderer","emptyElement","campaigns","rowRenderer","rowData","rowElement","index","campaignCard","campaignTitle","getChildAsComponent","campaignSubheading","campaignDescription","campaignImage","campaignInput","campaignLabel","inputId","setAttribute","toString","Name","Subheading","Short_Description","Main_Image","warn","saveSelectedCampaign","imageUrl","description","subheading","push","changeLoadingStatus","fetchCampaigns","setData","saveDonationState","saveSelectedProduct","getDonorDetails","DONATION_STATE_KEY","savedState","newState","removeItem","selectedCampaignName","selectedCampaignImageUrl","selectedCampaignDescription","selectedCampaignSubheading","campaign","selectedProductId","selectedProductName","amount","selectedProductAmount","product","donor","selectedDonationType","type","_campaignProducts","productCache","productListRef","filterProductsByDonationType","products","filtered","filter","sort","a","b","Single_sale_price_amount","Monthly_price_amount","Annual_price_amount","campaignId","productCard","productTitle","productInput","label","Product_name","valid","getElement","fetchProducts","campaign_id","selectedCampaignTitle","selectedCampaignSubtitle","selectedImage","e","s","d","o","set","enumerable","configurable","n","jQuery","_sliderConfig","_slides","_defaultSwipeDisabled","_index","_listeners","Map","constructor","init","getAttribute","Array","from","slides","map","_mask","mask","_nav","nav","_left","left","_right","right","t","styleSheets","getElementsByTagName","r","l","disabled","media","indexOf","mediaText","createElement","rules","selectorText","toLowerCase","cssText","addRule","cssRules","insertRule","_triggerOnChange","refereshSlides","reloadWFSlider","Webflow","destroy","redraw","ready","getChildAsComponents","remove","reverse","prepend","getActiveSlide","getAllSlides","getSlideByIndex","getActiveSlideIndex","getPreviousSlideIndex","previous","click","goToIndex","children","addSlide","cssClass","createComponent","addCssClass","splice","removeSlide","getSlideNav","setSlideNavigationState","removeCssClass","onSlideChange","v4","delete","values","getConfig","keys","hasOwnProperty","h","_formUtils","setupValidation","createValidationFunction","inputComponent","validationFn","errorMessage","isValid","inputElement","input","undefined","emailRegex","test","validateEmailOptional","validatePasswordRequirements","validateCheckbox","validatePasswordsMatch","validateSelectField","validatePhoneNumber","validatePhoneNumberOptional","password","hasLowercase","hasUppercase","hasDigit","hasSpecialChar","hasValidLength","originalPassword","confirmPassword","phoneRegex","toggleError","createCheckboxValidationFunction","setupCheckboxValidation","validateSelectedSessions","setProfilePicUrl","setupFileUpload","formatPhoneNumber","_image","errorMessageComponent","message","show","updateTextViaAttrVar","text","errorComponent","validate","requestErrorComponent","validateAndUpdate","checkboxComponent","checkbox","checkboxErrorComponent","selectedSessions","some","session","studentIds","profile_pic","url","setUser","fileInput","fileInputError","fileInputSuccess","uploadEndpoint","profilePictureImage","WFImage","uploadAnimation","overlay","dragCounter","Promise","handleFile","file","validTypes","includes","size","reader","FileReader","onload","result","target","setImage","readAsDataURL","FormData","append","existingStudent","student","postRequest","onData","status","onError","files","dragZoneElement","body","dataTransfer","cleaned","replace","slice","u","c","getImageConfig","_config","getSrc","getSizes","getSrcSet","getLoading","onLoad","off","onLoadError","removeAttribute","src","srcSet","sizes","join","loading","firstNameText","steps","step","stepComponent","isCompleted","stepNumber","stepId","getStepId","stepMap","getUrlParams","params","URLSearchParams","search","cancelId","displayErrorMessage","displaySuccessMessage","loadingWall","deleteDonation","reject","newUrl","pathname","history","replaceState","title","find","campaignComponent","dispatchEvent","Event","setTimeout"],"version":3,"file":"makeDonation.d68afc59.js.map"}