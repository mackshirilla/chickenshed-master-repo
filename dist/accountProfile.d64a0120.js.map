{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCMa,EAAA,MAAA,CAAA,EAAA,+BAAA,IAAA,GAJb,IAAA,EAAA,EAAA,oBACA,EAAA,EAAA,oBACA,EAAA,EAAA,gBAEO,IAAM,EAA+B,UAE1C,MAAM,AAAA,CAAA,EAAA,EAAA,cAAa,AAAb,IAGN,AAAA,CAAA,EAAA,EAAA,wBAAuB,AAAvB,IAGA,AAAA,CAAA,EAAA,EAAA,oBAAmB,AAAnB,IAGA,OAAO,gBAAgB,CAAC,eAAgB,KACtC,aAAa,UAAU,CAAC,eAC1B,EACF,C,E,C,mB,Q,mB,Q,e,Q,iD,O,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCda,EAAA,MAAA,CAAA,EAAA,iBAAA,IAAA,GAJb,IAAA,EAAA,EAAA,0BACA,EAAA,EAAA,eACA,EAAA,EAAA,gBAEO,IAAM,EAAiB,UAE5B,IAAM,EAAiB,IAAI,EAAA,WAAU,CAAE,2BACvC,EAAe,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","sources":["<anon>","src/modules/dashboard/accountProfile/index.ts","src/modules/dashboard/accountProfile/getUserDetails.ts","node_modules/.pnpm/@xatom+image@1.0.0_@xatom+core@1.0.12/node_modules/@xatom/image/dist/index.js","src/modules/dashboard/accountProfile/edituserDialog.ts","src/utils/formUtils.ts","src/utils/validationUtils.ts","src/modules/dashboard/accountProfile/deleteUser.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"Vd1jl\":[function(require,module,exports) {\n// src/modules/pages/accountDetails/index.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeAccountDetailsPage\", ()=>initializeAccountDetailsPage);\nvar _getUserDetails = require(\"./getUserDetails\");\nvar _edituserDialog = require(\"./edituserDialog\");\nvar _deleteUser = require(\"./deleteUser\");\nconst initializeAccountDetailsPage = async ()=>{\n    // Fetch and display user details\n    await (0, _getUserDetails.getUserDetails)();\n    // Initialize the edit user dialog\n    (0, _edituserDialog.initializeEditUserDialog)();\n    // Initialize the delete user functionality\n    (0, _deleteUser.initializeDeleteUser)();\n    // Add an event listener to remove current_user from localStorage when navigating away\n    window.addEventListener(\"beforeunload\", ()=>{\n        localStorage.removeItem(\"current_user\");\n    });\n};\n\n},{\"./getUserDetails\":\"lg4FD\",\"./edituserDialog\":\"MM8O6\",\"./deleteUser\":\"b1pjg\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"lg4FD\":[function(require,module,exports) {\n// src/modules/pages/accountDetails/getUserDetails.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"getUserDetails\", ()=>getUserDetails);\nvar _apiConfig = require(\"../../../api/apiConfig\");\nvar _core = require(\"@xatom/core\");\nvar _image = require(\"@xatom/image\");\nconst getUserDetails = async ()=>{\n    // Show loading spinner\n    const loadingSpinner = new (0, _core.WFComponent)(\".dashboard_loading_wall\");\n    loadingSpinner.setStyle({\n        display: \"flex\"\n    });\n    try {\n        const response = await (0, _apiConfig.apiClient).get(\"/dashboard/account\").fetch();\n        if (response) {\n            const user = response; // Replace 'any' with a proper interface for better type safety\n            // Hide the loading spinner\n            triggerSuccessEvent(\".success_trigger\");\n            // Set user full name\n            const userFullName = new (0, _core.WFComponent)(\"#userFullName\");\n            userFullName.setText(`${user.first_name} ${user.last_name}`);\n            // Set profile picture\n            const userProfilePicture = new (0, _image.WFImage)(\"#userProfilePicture\");\n            if (user.profile_pic && user.profile_pic.url) userProfilePicture.setImage(user.profile_pic.url);\n            else userProfilePicture.setImage(\"https://cdn.prod.website-files.com/plugins/Basic/assets/placeholder.60f9b1840c.svg\");\n            // Set email\n            const userEmail = new (0, _core.WFComponent)(\"#userEmail\");\n            userEmail.setText(user.email || \"N/A\");\n            // Set phone\n            const userPhone = new (0, _core.WFComponent)(\"#userPhone\");\n            userPhone.setText(user.phone || \"N/A\");\n            // Set address line 1\n            const userAddressLineOne = new (0, _core.WFComponent)(\"#userAddressLineOne\");\n            userAddressLineOne.setText(user.address_line_1 || \"N/A\");\n            // Set address line 2\n            const userAddressLineTwo = new (0, _core.WFComponent)(\"#userAddressLineTwo\");\n            userAddressLineTwo.setText(user.address_line_2 || \"N/A\");\n            // Set city\n            const userCity = new (0, _core.WFComponent)(\"#userCity\");\n            userCity.setText(user.city || \"N/A\");\n            // Set state\n            const userState = new (0, _core.WFComponent)(\"#userState\");\n            userState.setText(user.state || \"N/A\");\n            // Set zip\n            const userZip = new (0, _core.WFComponent)(\"#userZip\");\n            userZip.setText(user.zip || \"N/A\");\n            // Set receive texts preference\n            const userTextTrue = new (0, _core.WFComponent)(\"#userTextTrue\");\n            const userTextFalse = new (0, _core.WFComponent)(\"#userTextFalse\");\n            if (user.send_texts) {\n                userTextTrue.setStyle({\n                    display: \"block\"\n                });\n                userTextFalse.setStyle({\n                    display: \"none\"\n                });\n            } else {\n                userTextTrue.setStyle({\n                    display: \"none\"\n                });\n                userTextFalse.setStyle({\n                    display: \"block\"\n                });\n            }\n            // Set YMCA member status\n            const userYTrue = new (0, _core.WFComponent)(\"#userYTrue\");\n            const userYFalse = new (0, _core.WFComponent)(\"#userYFalse\");\n            if (user.is_y_member) {\n                userYTrue.setStyle({\n                    display: \"block\"\n                });\n                userYFalse.setStyle({\n                    display: \"none\"\n                });\n            } else {\n                userYTrue.setStyle({\n                    display: \"none\"\n                });\n                userYFalse.setStyle({\n                    display: \"block\"\n                });\n            }\n            // Set YMCA membership number\n            const userYMembershipNumber = new (0, _core.WFComponent)(\"#userYMembershipNumber\");\n            userYMembershipNumber.setText(user.y_membership_id || \"N/A\");\n            // Save user data for later use (e.g., in edit forms)\n            localStorage.setItem(\"current_user\", JSON.stringify(user));\n        } else {\n            alert(\"Error: Received null response from the server.\");\n            console.error(\"Received null response from the server.\");\n            // Navigate back to the previous page or handle the error appropriately\n            window.history.back();\n        }\n    } catch (error) {\n        console.error(\"Error fetching user details:\", error);\n        alert(`Error fetching user details: ${error.message || error}`);\n        // Navigate back to the previous page or handle the error appropriately\n        window.history.back();\n    } finally{\n        // Hide loading spinner in all cases\n        loadingSpinner.setStyle({\n            display: \"none\"\n        });\n    }\n};\nconst triggerSuccessEvent = (selector)=>{\n    const successTrigger = document.querySelector(selector);\n    if (successTrigger instanceof HTMLElement) successTrigger.click();\n};\n\n},{\"../../../api/apiConfig\":\"dUmIV\",\"@xatom/core\":\"65YBq\",\"@xatom/image\":\"bavwf\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"bavwf\":[function(require,module,exports) {\nvar t = require(\"d023971cccd819e3\");\nvar e, r, s, i, o, n, u = {};\ne = u, r = \"WFImage\", s = ()=>c, Object.defineProperty(e, r, {\n    get: s,\n    set: i,\n    enumerable: !0,\n    configurable: !0\n});\nclass c extends t.WFComponent {\n    constructor(t){\n        super(t);\n    }\n    getImageConfig() {\n        return this._config;\n    }\n    getSrc() {\n        return this.getAttribute(\"src\");\n    }\n    getSizes() {\n        return this.getAttribute(\"sizes\");\n    }\n    getSrcSet() {\n        return this.getAttribute(\"srcset\");\n    }\n    getLoading() {\n        return this.getAttribute(\"loading\");\n    }\n    onLoad(t) {\n        return this.on(\"load\", t), ()=>{\n            this.off(\"load\", t);\n        };\n    }\n    onLoadError(t) {\n        return this.on(\"error\", t), ()=>{\n            this.off(\"error\", t);\n        };\n    }\n    setImage(t) {\n        if (\"string\" == typeof t) this.setAttribute(\"src\", t), this.removeAttribute(\"srcset\"), this.removeAttribute(\"sizes\");\n        else {\n            if (this.setAttribute(\"src\", t.src), \"object\" == typeof t && t.srcSet && t.srcSet.length && t.sizes && t.sizes.length) {\n                const e = t.srcSet.map((t)=>`${t.url} ${t.size}`).join(\", \");\n                this.setAttribute(\"srcset\", e);\n            } else this.removeAttribute(\"srcset\"), this.removeAttribute(\"sizes\");\n            t.loading && this.setAttribute(\"loading\", t.loading);\n        }\n    }\n}\no = module.exports, n = u, Object.keys(n).forEach(function(t) {\n    \"default\" === t || \"__esModule\" === t || o.hasOwnProperty(t) || Object.defineProperty(o, t, {\n        enumerable: !0,\n        get: function() {\n            return n[t];\n        }\n    });\n});\n\n},{\"d023971cccd819e3\":\"65YBq\"}],\"MM8O6\":[function(require,module,exports) {\n// src/modules/pages/accountDetails/editUserDialog.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeEditUserDialog\", ()=>initializeEditUserDialog);\nvar _core = require(\"@xatom/core\");\nvar _image = require(\"@xatom/image\");\nvar _apiConfig = require(\"../../../api/apiConfig\");\nvar _formUtils = require(\"../../../utils/formUtils\");\nvar _validationUtils = require(\"../../../utils/validationUtils\");\nvar _getUserDetails = require(\"./getUserDetails\");\n// Declare variables in the outer scope\nlet isYMemberInput;\nlet hiddenYMemberWrapper;\nlet yMemberIdInput;\nlet yMemberIdInputError;\nconst initializeEditUserDialog = ()=>{\n    // Retrieve and initialize the \"Open Edit Dialog\" button\n    const openEditDialogButton = new (0, _core.WFComponent)(\"#openEditUserDialog\");\n    // Retrieve the edit user dialog element\n    const editUserDialogElement = document.getElementById(\"editUserDialog\");\n    // Retrieve and initialize the \"Close Dialog\" button\n    const closeDialogButton = new (0, _core.WFComponent)(\"#close-dialog-btn\");\n    // Set up the click event listener to open the dialog\n    openEditDialogButton.on(\"click\", ()=>{\n        populateEditUserForm();\n        if (editUserDialogElement) editUserDialogElement.showModal();\n    });\n    // Set up the click event listener to close the dialog\n    closeDialogButton.on(\"click\", ()=>{\n        if (editUserDialogElement) editUserDialogElement.close();\n    });\n    // Initialize the form\n    const form = new (0, _core.WFFormComponent)(\"#editUserForm\");\n    // Initialize error component for form submission errors\n    const formSubmitError = new (0, _core.WFComponent)(\"#editUserSubmitError\");\n    // Define validation rules for each field\n    const fields = [\n        {\n            input: new (0, _core.WFComponent)(\"#firstNameInput\"),\n            error: new (0, _core.WFComponent)(\"#firstNameInputError\"),\n            validationFn: (0, _validationUtils.validateNotEmpty),\n            message: \"First name is required\"\n        },\n        {\n            input: new (0, _core.WFComponent)(\"#lastNameInput\"),\n            error: new (0, _core.WFComponent)(\"#lastNameInputError\"),\n            validationFn: (0, _validationUtils.validateNotEmpty),\n            message: \"Last name is required\"\n        },\n        {\n            input: new (0, _core.WFComponent)(\"#emailInput\"),\n            error: new (0, _core.WFComponent)(\"#emailInputError\"),\n            validationFn: (0, _validationUtils.validateEmail),\n            message: \"Invalid email format\"\n        },\n        {\n            input: new (0, _core.WFComponent)(\"#phoneNumberInput\"),\n            error: new (0, _core.WFComponent)(\"#phoneNumberInputError\"),\n            validationFn: (0, _validationUtils.validatePhoneNumber),\n            message: \"Phone number must be in the format (xxx) xxx-xxxx\"\n        }\n    ];\n    // Setup validation for each field\n    fields.forEach(({ input, error, validationFn, message })=>{\n        (0, _formUtils.setupValidation)(input, error, (0, _formUtils.createValidationFunction)(input, validationFn, message), formSubmitError);\n    });\n    // Initialize components for Y Member input\n    isYMemberInput = new (0, _core.WFComponent)(\"#isYMemberInput\");\n    hiddenYMemberWrapper = new (0, _core.WFComponent)(\"#hiddenyMemberWrapper\");\n    yMemberIdInput = new (0, _core.WFComponent)(\"#yMemberIdInput\");\n    yMemberIdInputError = new (0, _core.WFComponent)(\"#yMemberIdInputError\");\n    const toggleYMemberInput = ()=>{\n        const isChecked = isYMemberInput.getElement().checked;\n        if (isChecked) hiddenYMemberWrapper.removeCssClass(\"g-hide\");\n        else {\n            hiddenYMemberWrapper.addCssClass(\"g-hide\");\n            // Clear the Y Membership Number input\n            yMemberIdInput.getElement().value = \"\";\n        }\n    };\n    // Initialize the visibility on page load\n    toggleYMemberInput();\n    // Add event listener to the checkbox\n    isYMemberInput.on(\"change\", ()=>{\n        toggleYMemberInput();\n    });\n    // Remove validation for yMemberIdInput since it's no longer required\n    // Remove the yMemberIdValidation function and related code\n    // Handle form submission\n    form.onFormSubmit(async (formData, event)=>{\n        event.preventDefault();\n        const requestingAnimation = new (0, _core.WFComponent)(\"#requestingAnimationEditUser\");\n        requestingAnimation.setStyle({\n            display: \"block\"\n        });\n        let isFormValid = true;\n        // Validate all fields\n        fields.forEach(({ input, error, validationFn, message })=>{\n            const errorMessage = (0, _formUtils.createValidationFunction)(input, validationFn, message)();\n            if (errorMessage) {\n                (0, _formUtils.toggleError)(error, errorMessage, true);\n                isFormValid = false;\n            } else (0, _formUtils.toggleError)(error, \"\", false);\n        });\n        // Since Y Membership Number is not required, we don't need to validate it\n        // However, we can clear any previous errors\n        (0, _formUtils.toggleError)(yMemberIdInputError, \"\", false);\n        if (!isFormValid) {\n            (0, _formUtils.toggleError)(formSubmitError, \"Please correct all errors above.\", true);\n            requestingAnimation.setStyle({\n                display: \"none\"\n            });\n            return;\n        } else (0, _formUtils.toggleError)(formSubmitError, \"\", false);\n        // Disable submit button\n        const submitButton = new (0, _core.WFComponent)(\"#editUserSubmitButton\");\n        submitButton.setAttribute(\"disabled\", \"true\");\n        // Prepare data for API\n        const dataToUpdate = {\n            ...formData\n        };\n        try {\n            // Send update request to API\n            const response = await (0, _apiConfig.apiClient).post(`/profiles/update_profile`, {\n                data: dataToUpdate\n            }).fetch();\n            if (response.status === \"success\") {\n                // Update successful\n                // Refresh the user details on the page\n                await (0, _getUserDetails.getUserDetails)();\n                // Reset the form with updated information\n                populateEditUserForm();\n                // Close the dialog after successful request and data refresh\n                if (editUserDialogElement) editUserDialogElement.close();\n            } else throw new Error(response.message || \"Update failed\");\n        } catch (error) {\n            console.error(\"Error updating user profile:\", error);\n            (0, _formUtils.toggleError)(formSubmitError, error.message || \"An error occurred\", true);\n        } finally{\n            // Hide loading animation\n            requestingAnimation.setStyle({\n                display: \"none\"\n            });\n            // Re-enable submit button\n            submitButton.removeAttribute(\"disabled\");\n        }\n    });\n    // Set up the file upload for the profile picture\n    const profilePictureInput = new (0, _core.WFComponent)(\"#profilePictureInput\");\n    const profilePictureInputError = new (0, _core.WFComponent)(\"#profilePictureInputError\");\n    const profilePictureInputSuccess = new (0, _core.WFComponent)(\"#profilePictureInputSuccess\");\n    (0, _formUtils.setupFileUpload)(profilePictureInput, profilePictureInputError, profilePictureInputSuccess, \"/profiles/image-upload\");\n};\n// Function to populate the form with existing user data\nconst populateEditUserForm = ()=>{\n    const userData = localStorage.getItem(\"current_user\");\n    if (!userData) {\n        console.error(\"No user data found\");\n        return;\n    }\n    let user;\n    try {\n        user = JSON.parse(userData);\n    } catch (parseError) {\n        console.error(\"Error parsing user data from localStorage:\", parseError);\n        return;\n    }\n    // Helper function to set input value\n    const setInputValue = (selector, value, isCheckbox = false)=>{\n        const element = document.querySelector(selector);\n        if (element) {\n            if (isCheckbox && element instanceof HTMLInputElement) element.checked = Boolean(value);\n            else element.value = String(value);\n        }\n    };\n    // Set form fields\n    setInputValue(\"#firstNameInput\", user.first_name);\n    setInputValue(\"#lastNameInput\", user.last_name);\n    setInputValue(\"#emailInput\", user.email);\n    setInputValue(\"#phoneNumberInput\", user.phone);\n    setInputValue(\"#sendTextsInput\", user.send_texts, true);\n    setInputValue(\"#addressLineOneInput\", user.address_line_1);\n    setInputValue(\"#addressLineTwoInput\", user.address_line_2);\n    setInputValue(\"#cityInput\", user.city);\n    setInputValue(\"#stateInput\", user.state);\n    setInputValue(\"#zipInput\", user.zip);\n    setInputValue(\"#referralInput\", user.referred_by);\n    setInputValue(\"#isYMemberInput\", user.is_y_member, true);\n    setInputValue(\"#yMemberIdInput\", user.y_membership_id);\n    // Set profile picture preview using WFImage\n    const profilePictureImage = new (0, _image.WFImage)(\"#profilePictureImage\");\n    if (user.profile_pic && user.profile_pic.url) profilePictureImage.setImage(user.profile_pic.url);\n    else profilePictureImage.setImage(\"https://cdn.prod.website-files.com/667f080f36260b9afbdc46b2/667f080f36260b9afbdc46be_placeholder.svg\");\n    // Update the visibility of the hidden Y Member input\n    const isYMemberChecked = isYMemberInput.getElement().checked;\n    if (isYMemberChecked) hiddenYMemberWrapper.removeCssClass(\"g-hide\");\n    else {\n        hiddenYMemberWrapper.addCssClass(\"g-hide\");\n        // Clear the Y Membership Number input\n        yMemberIdInput.getElement().value = \"\";\n    }\n};\n\n},{\"@xatom/core\":\"65YBq\",\"@xatom/image\":\"bavwf\",\"../../../api/apiConfig\":\"dUmIV\",\"../../../utils/formUtils\":\"gepHz\",\"../../../utils/validationUtils\":\"gu2z7\",\"./getUserDetails\":\"lg4FD\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"gepHz\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"toggleError\", ()=>toggleError);\nparcelHelpers.export(exports, \"setupValidation\", ()=>setupValidation);\nparcelHelpers.export(exports, \"createValidationFunction\", ()=>createValidationFunction);\nparcelHelpers.export(exports, \"createCheckboxValidationFunction\", ()=>createCheckboxValidationFunction);\nparcelHelpers.export(exports, \"setupCheckboxValidation\", ()=>setupCheckboxValidation);\nparcelHelpers.export(exports, \"validateSelectedSessions\", ()=>validateSelectedSessions);\n/**\n * Updates the user's profile picture URL in the authentication system.\n * @param {string} imageUrl - The URL of the uploaded image.\n */ parcelHelpers.export(exports, \"setProfilePicUrl\", ()=>setProfilePicUrl);\n/**\n * Handles file upload and displays the uploaded image.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */ /**\n * Handles file upload and displays the uploaded image.\n * Only JPEG files less than 2 MB can be uploaded.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */ parcelHelpers.export(exports, \"setupFileUpload\", ()=>setupFileUpload);\nparcelHelpers.export(exports, \"formatPhoneNumber\", ()=>formatPhoneNumber);\nvar _core = require(\"@xatom/core\");\nvar _image = require(\"@xatom/image\");\nvar _apiConfig = require(\"../api/apiConfig\");\nvar _authConfig = require(\"../auth/authConfig\");\nfunction toggleError(errorMessageComponent, message, show) {\n    errorMessageComponent.updateTextViaAttrVar({\n        text: show ? message : \"\"\n    });\n    errorMessageComponent.setStyle({\n        display: show ? \"flex\" : \"none\"\n    });\n}\nfunction setupValidation(inputComponent, errorComponent, validate, requestErrorComponent // Optional component to clear on input change\n) {\n    const validateAndUpdate = ()=>{\n        const errorMessage = validate();\n        toggleError(errorComponent, errorMessage, !!errorMessage);\n        if (requestErrorComponent && errorMessage === \"\") // Clear request error message when the user is correcting the input\n        toggleError(requestErrorComponent, \"\", false);\n    };\n    // Attach event listeners for real-time validation\n    inputComponent.on(\"input\", validateAndUpdate);\n    inputComponent.on(\"blur\", validateAndUpdate);\n    inputComponent.on(\"change\", validateAndUpdate);\n}\nfunction createValidationFunction(inputComponent, validationFn, errorMessage) {\n    return ()=>{\n        const inputElement = inputComponent.getElement();\n        const isValid = validationFn(inputElement.value);\n        return isValid ? \"\" : errorMessage;\n    };\n}\nfunction createCheckboxValidationFunction(checkboxComponent, errorMessage) {\n    return ()=>{\n        const checkbox = checkboxComponent.getElement();\n        return checkbox.checked ? \"\" : errorMessage;\n    };\n}\nfunction setupCheckboxValidation(checkboxComponent, checkboxErrorComponent, errorMessage) {\n    const validate = createCheckboxValidationFunction(checkboxComponent, errorMessage);\n    setupValidation(checkboxComponent, checkboxErrorComponent, validate);\n}\nfunction validateSelectedSessions(selectedSessions, errorMessageComponent, errorMessage) {\n    const isValid = selectedSessions.length > 0 && selectedSessions.some((session)=>session.studentIds.length > 0);\n    if (!isValid) toggleError(errorMessageComponent, errorMessage, true);\n    else toggleError(errorMessageComponent, \"\", false);\n    return isValid;\n}\nfunction setProfilePicUrl(imageUrl) {\n    const user = (0, _authConfig.userAuth).getUser();\n    if (user && user.profile) {\n        // Ensure the profile_picture object exists\n        user.profile.profile_pic = user.profile.profile_pic || {\n            url: \"\"\n        };\n        // Set the profile picture URL\n        user.profile.profile_pic.url = imageUrl;\n        (0, _authConfig.userAuth).setUser(user);\n        localStorage.setItem(\"auth_user\", JSON.stringify(user));\n    }\n}\nfunction setupFileUpload(fileInput, fileInputError, fileInputSuccess, uploadEndpoint) {\n    const profilePictureImage = new (0, _image.WFImage)(\"#profilePictureImage\");\n    const uploadAnimation = new (0, _core.WFComponent)(\"#uploadAnimation\");\n    const overlay = new (0, _core.WFComponent)(\".drop-zone\");\n    let dragCounter = 0;\n    return new Promise((resolve)=>{\n        const handleFile = (file)=>{\n            // Validate file type and size\n            const validTypes = [\n                \"image/jpeg\",\n                \"image/jpg\"\n            ];\n            const maxSizeInBytes = 2097152; // 2 MB\n            if (!validTypes.includes(file.type) && !/\\.(jpg|jpeg)$/i.test(file.name)) {\n                const errorMessage = \"Only JPEG images are allowed.\";\n                toggleError(fileInputError, errorMessage, true);\n                // Reset file input value\n                fileInput.getElement().value = \"\";\n                return;\n            }\n            if (file.size > maxSizeInBytes) {\n                const errorMessage = \"File size must be less than 2 MB.\";\n                toggleError(fileInputError, errorMessage, true);\n                // Reset file input value\n                fileInput.getElement().value = \"\";\n                return;\n            }\n            // Show upload animation immediately\n            uploadAnimation.setStyle({\n                display: \"flex\"\n            });\n            // Hide error and success messages\n            fileInputError.setStyle({\n                display: \"none\"\n            });\n            fileInputSuccess.setStyle({\n                display: \"none\"\n            });\n            const reader = new FileReader();\n            // Display preview image as soon as the file is loaded into memory\n            reader.onload = (event)=>{\n                // Set the preview image for the profile picture\n                const result = event.target?.result;\n                profilePictureImage.setImage(result);\n                // Hide overlay once the image is set\n                overlay.setStyle({\n                    display: \"none\"\n                });\n            };\n            reader.readAsDataURL(file);\n            const formData = new FormData();\n            formData.append(\"profile_picture\", file);\n            const existingStudent = localStorage.getItem(\"current_student\");\n            if (existingStudent) {\n                const student = JSON.parse(existingStudent);\n                formData.append(\"student_profile_id\", student.id.toString());\n            }\n            // Send the file to the server\n            const postRequest = (0, _apiConfig.apiClient).post(uploadEndpoint, {\n                data: formData\n            });\n            postRequest.onData((response)=>{\n                if (response.status === \"success\") {\n                    const imageUrl = response.url.profile_pic.url;\n                    // Update the profile picture URL in the user session and local storage\n                    setProfilePicUrl(imageUrl);\n                    // Update the image for other parts of the UI as well\n                    profilePictureImage.setImage(imageUrl);\n                    // Store the URL in local storage\n                    localStorage.setItem(\"image_upload\", imageUrl);\n                    // Show success message and hide upload animation\n                    fileInputSuccess.setStyle({\n                        display: \"flex\"\n                    });\n                    uploadAnimation.setStyle({\n                        display: \"none\"\n                    });\n                    // Resolve with the uploaded image URL\n                    resolve(imageUrl);\n                } else {\n                    const errorMessage = \"Failed to upload profile picture.\";\n                    toggleError(fileInputError, errorMessage, true);\n                    uploadAnimation.setStyle({\n                        display: \"none\"\n                    });\n                    overlay.setStyle({\n                        display: \"none\"\n                    });\n                    dragCounter = 0;\n                    // Reset file input value\n                    fileInput.getElement().value = \"\";\n                }\n            });\n            postRequest.onError((error)=>{\n                let errorMessage = \"An error occurred during image upload.\";\n                if (error.response && error.response.data) errorMessage = error.response.data.message || errorMessage;\n                else if (error.message) errorMessage = error.message;\n                // Show error message and hide upload animation\n                toggleError(fileInputError, errorMessage, true);\n                uploadAnimation.setStyle({\n                    display: \"none\"\n                });\n                overlay.setStyle({\n                    display: \"none\"\n                });\n                dragCounter = 0;\n                // Reset file input value\n                fileInput.getElement().value = \"\";\n            });\n            // Make the API call\n            postRequest.fetch();\n        };\n        // Event listener for file input changes\n        fileInput.on(\"change\", ()=>{\n            const file = fileInput.getElement().files?.[0];\n            if (file) handleFile(file);\n        });\n        // Event listeners for drag-and-drop\n        const dragZoneElement = document.body;\n        dragZoneElement.addEventListener(\"dragenter\", (event)=>{\n            event.preventDefault();\n            dragCounter++;\n            if (dragCounter === 1) overlay.setStyle({\n                display: \"flex\"\n            });\n        });\n        dragZoneElement.addEventListener(\"dragleave\", ()=>{\n            dragCounter--;\n            if (dragCounter <= 0) {\n                overlay.setStyle({\n                    display: \"none\"\n                });\n                dragCounter = 0;\n            }\n        });\n        dragZoneElement.addEventListener(\"dragover\", (event)=>{\n            event.preventDefault();\n        });\n        dragZoneElement.addEventListener(\"drop\", (event)=>{\n            event.preventDefault();\n            const files = event.dataTransfer?.files;\n            if (files?.length) handleFile(files[0]);\n            overlay.setStyle({\n                display: \"none\"\n            });\n            dragCounter = 0;\n        });\n    });\n}\nconst formatPhoneNumber = (value)=>{\n    const cleaned = value.replace(/\\D/g, \"\"); // Remove all non-digit characters\n    if (cleaned.length <= 3) return cleaned;\n    else if (cleaned.length <= 6) return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3)}`;\n    else if (cleaned.length <= 10) return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6)}`;\n    else // If more than 10 digits, truncate the extra digits\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6, 10)}`;\n};\n\n},{\"@xatom/core\":\"65YBq\",\"@xatom/image\":\"bavwf\",\"../api/apiConfig\":\"dUmIV\",\"../auth/authConfig\":\"dHwPR\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"gu2z7\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"validateNotEmpty\", ()=>validateNotEmpty);\nparcelHelpers.export(exports, \"validateEmail\", ()=>validateEmail);\nparcelHelpers.export(exports, \"validateEmailOptional\", ()=>validateEmailOptional);\nparcelHelpers.export(exports, \"validatePasswordRequirements\", ()=>validatePasswordRequirements);\nparcelHelpers.export(exports, \"validateCheckbox\", ()=>validateCheckbox);\nparcelHelpers.export(exports, \"validatePasswordsMatch\", ()=>validatePasswordsMatch);\nparcelHelpers.export(exports, \"validateSelectField\", ()=>validateSelectField);\nparcelHelpers.export(exports, \"validatePhoneNumber\", ()=>validatePhoneNumber);\nfunction validateNotEmpty(input) {\n    return input !== undefined && input.trim() !== \"\";\n}\nfunction validateEmail(input) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(input);\n}\nconst validateEmailOptional = (value)=>{\n    if (value.trim() === \"\") // Email is optional, so empty string is valid\n    return true;\n    // Validate the email format if not empty\n    return validateEmail(value);\n};\nfunction validatePasswordRequirements(password) {\n    const hasLowercase = /[a-z]/.test(password);\n    const hasUppercase = /[A-Z]/.test(password);\n    const hasDigit = /\\d/.test(password);\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n    const hasValidLength = password.length >= 8;\n    return hasLowercase && hasUppercase && hasDigit && hasSpecialChar && hasValidLength;\n}\nfunction validateCheckbox(checked) {\n    return checked;\n}\nfunction validatePasswordsMatch(originalPassword, confirmPassword) {\n    return originalPassword === confirmPassword;\n}\nfunction validateSelectField(input) {\n    return input !== undefined && input !== \"N/A\";\n}\nfunction validatePhoneNumber(input) {\n    const phoneRegex = /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/;\n    return phoneRegex.test(input);\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"b1pjg\":[function(require,module,exports) {\n// src/modules/pages/accountDetails/deleteUser.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\n/**\n * Initializes the delete user functionality.\n */ parcelHelpers.export(exports, \"initializeDeleteUser\", ()=>initializeDeleteUser);\nvar _core = require(\"@xatom/core\");\nvar _apiConfig = require(\"../../../api/apiConfig\");\nfunction initializeDeleteUser() {\n    // Retrieve and initialize the \"Open Delete Dialog\" button\n    const openDeleteDialogBtn = new (0, _core.WFComponent)(\"#openDeleteDialog\");\n    // Retrieve the delete user dialog element\n    const deleteUserDialogElement = document.getElementById(\"deleteUserDialog\");\n    // Retrieve and initialize the \"Close Delete Dialog\" button\n    const closeDeleteDialogBtn = new (0, _core.WFComponent)(\"#close-delete-dialog-btn\");\n    // Retrieve and initialize the \"Final Delete\" button\n    const deleteUserFinalBtn = new (0, _core.WFComponent)(\"#deleteUserFinal\");\n    // Retrieve and initialize the \"Delete User Error\" component\n    const deleteUserError = new (0, _core.WFComponent)(\"#deleteUserError\");\n    // Retrieve and initialize the \"Page Main\" component\n    const pageMain = new (0, _core.WFComponent)(\".page_main\");\n    // Retrieve and initialize the loader animations\n    const deleteRequestingAnimation = new (0, _core.WFComponent)(\"#deleteRequestingAnimation\");\n    deleteRequestingAnimation.setStyle({\n        display: \"none\"\n    });\n    /**\n   * Shows the delete confirmation dialog and updates the data-brand attribute.\n   */ const showDeleteDialog = ()=>{\n        if (deleteUserDialogElement && pageMain) {\n            deleteUserDialogElement.showModal(); // Display the dialog\n            pageMain.setAttribute(\"data-brand\", \"6\"); // Update data-brand to 6\n        }\n    };\n    /**\n   * Hides the delete confirmation dialog and reverts the data-brand attribute.\n   */ const hideDeleteDialog = ()=>{\n        if (deleteUserDialogElement && pageMain && deleteUserError) {\n            deleteUserDialogElement.close(); // Close the dialog\n            pageMain.setAttribute(\"data-brand\", \"2\"); // Revert data-brand to 2\n            deleteUserError.setStyle({\n                display: \"none\"\n            }); // Hide any previous error messages\n        }\n    };\n    /**\n   * Handles the deletion of the user account.\n   */ const handleDeleteUser = async ()=>{\n        try {\n            // Hide previous error messages\n            deleteUserError.setStyle({\n                display: \"none\"\n            });\n            // Show the loader animation and disable the delete button\n            deleteRequestingAnimation.setStyle({\n                display: \"flex\"\n            });\n            deleteUserFinalBtn.setAttribute(\"disabled\", \"true\");\n            // Send the DELETE request to the API\n            const response = await (0, _apiConfig.apiClient).delete(`/profiles`).fetch();\n            // Hide the loader animation and re-enable the delete button\n            deleteRequestingAnimation.setStyle({\n                display: \"none\"\n            });\n            deleteUserFinalBtn.removeAttribute(\"disabled\");\n            if (response && response.status === 200) // Redirect to the homepage or login page\n            window.location.href = \"/login\"; // Adjust the URL as needed\n            else // Handle unexpected successful responses\n            throw new Error(\"Unexpected response from the server.\");\n        } catch (error) {\n            console.error(\"Error deleting user account:\", error);\n            // Hide the loader animation and re-enable the delete button\n            deleteRequestingAnimation.setStyle({\n                display: \"none\"\n            });\n            deleteUserFinalBtn.removeAttribute(\"disabled\");\n            // Display the error message\n            deleteUserError.setStyle({\n                display: \"flex\"\n            });\n            deleteUserError.getChildAsComponent(\".error-text\").setText(error.response?.data?.message || \"An unexpected error occurred while deleting your account.\");\n        }\n    };\n    // Event listener to open the delete dialog\n    openDeleteDialogBtn.on(\"click\", showDeleteDialog);\n    // Event listener to close the delete dialog\n    closeDeleteDialogBtn.on(\"click\", hideDeleteDialog);\n    // Event listener for the final delete action\n    deleteUserFinalBtn.on(\"click\", handleDeleteUser);\n}\n\n},{\"@xatom/core\":\"65YBq\",\"../../../api/apiConfig\":\"dUmIV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}]},[], null, \"parcelRequired346\")\n\n//# sourceMappingURL=accountProfile.d64a0120.js.map\n","// src/modules/pages/accountDetails/index.ts\n\nimport { getUserDetails } from \"./getUserDetails\";\nimport { initializeEditUserDialog } from \"./edituserDialog\";\nimport { initializeDeleteUser } from \"./deleteUser\";\n\nexport const initializeAccountDetailsPage = async () => {\n  // Fetch and display user details\n  await getUserDetails();\n\n  // Initialize the edit user dialog\n  initializeEditUserDialog();\n\n  // Initialize the delete user functionality\n  initializeDeleteUser();\n\n  // Add an event listener to remove current_user from localStorage when navigating away\n  window.addEventListener(\"beforeunload\", () => {\n    localStorage.removeItem(\"current_user\");\n  });\n};\n","// src/modules/pages/accountDetails/getUserDetails.ts\n\nimport { apiClient } from \"../../../api/apiConfig\";\nimport { WFComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\n\nexport const getUserDetails = async () => {\n  // Show loading spinner\n  const loadingSpinner = new WFComponent(\".dashboard_loading_wall\");\n  loadingSpinner.setStyle({ display: \"flex\" });\n\n  try {\n    const response = await apiClient.get(\"/dashboard/account\").fetch();\n\n    if (response) {\n      const user = response as any; // Replace 'any' with a proper interface for better type safety\n\n      // Hide the loading spinner\n      triggerSuccessEvent(\".success_trigger\");\n\n      // Set user full name\n      const userFullName = new WFComponent(\"#userFullName\");\n      userFullName.setText(`${user.first_name} ${user.last_name}`);\n\n      // Set profile picture\n      const userProfilePicture = new WFImage(\"#userProfilePicture\");\n      if (user.profile_pic && user.profile_pic.url) {\n        userProfilePicture.setImage(user.profile_pic.url);\n      } else {\n        userProfilePicture.setImage(\n          \"https://cdn.prod.website-files.com/plugins/Basic/assets/placeholder.60f9b1840c.svg\"\n        );\n      }\n\n      // Set email\n      const userEmail = new WFComponent(\"#userEmail\");\n      userEmail.setText(user.email || \"N/A\");\n\n      // Set phone\n      const userPhone = new WFComponent(\"#userPhone\");\n      userPhone.setText(user.phone || \"N/A\");\n\n      // Set address line 1\n      const userAddressLineOne = new WFComponent(\"#userAddressLineOne\");\n      userAddressLineOne.setText(user.address_line_1 || \"N/A\");\n\n      // Set address line 2\n      const userAddressLineTwo = new WFComponent(\"#userAddressLineTwo\");\n      userAddressLineTwo.setText(user.address_line_2 || \"N/A\");\n\n      // Set city\n      const userCity = new WFComponent(\"#userCity\");\n      userCity.setText(user.city || \"N/A\");\n\n      // Set state\n      const userState = new WFComponent(\"#userState\");\n      userState.setText(user.state || \"N/A\");\n\n      // Set zip\n      const userZip = new WFComponent(\"#userZip\");\n      userZip.setText(user.zip || \"N/A\");\n\n      // Set receive texts preference\n      const userTextTrue = new WFComponent(\"#userTextTrue\");\n      const userTextFalse = new WFComponent(\"#userTextFalse\");\n      if (user.send_texts) {\n        userTextTrue.setStyle({ display: \"block\" });\n        userTextFalse.setStyle({ display: \"none\" });\n      } else {\n        userTextTrue.setStyle({ display: \"none\" });\n        userTextFalse.setStyle({ display: \"block\" });\n      }\n\n      // Set YMCA member status\n      const userYTrue = new WFComponent(\"#userYTrue\");\n      const userYFalse = new WFComponent(\"#userYFalse\");\n      if (user.is_y_member) {\n        userYTrue.setStyle({ display: \"block\" });\n        userYFalse.setStyle({ display: \"none\" });\n      } else {\n        userYTrue.setStyle({ display: \"none\" });\n        userYFalse.setStyle({ display: \"block\" });\n      }\n\n      // Set YMCA membership number\n      const userYMembershipNumber = new WFComponent(\"#userYMembershipNumber\");\n      userYMembershipNumber.setText(user.y_membership_id || \"N/A\");\n\n      // Save user data for later use (e.g., in edit forms)\n      localStorage.setItem(\"current_user\", JSON.stringify(user));\n    } else {\n      alert(\"Error: Received null response from the server.\");\n      console.error(\"Received null response from the server.\");\n\n      // Navigate back to the previous page or handle the error appropriately\n      window.history.back();\n    }\n  } catch (error: any) {\n    console.error(\"Error fetching user details:\", error);\n    alert(`Error fetching user details: ${error.message || error}`);\n\n    // Navigate back to the previous page or handle the error appropriately\n    window.history.back();\n  } finally {\n    // Hide loading spinner in all cases\n    loadingSpinner.setStyle({ display: \"none\" });\n  }\n};\n\nconst triggerSuccessEvent = (selector: string) => {\n  const successTrigger = document.querySelector(selector);\n  if (successTrigger instanceof HTMLElement) {\n    successTrigger.click();\n  }\n};\n","var t=require(\"@xatom/core\");var e,r,s,i,o,n,u={};e=u,r=\"WFImage\",s=()=>c,Object.defineProperty(e,r,{get:s,set:i,enumerable:!0,configurable:!0});class c extends t.WFComponent{constructor(t){super(t)}getImageConfig(){return this._config}getSrc(){return this.getAttribute(\"src\")}getSizes(){return this.getAttribute(\"sizes\")}getSrcSet(){return this.getAttribute(\"srcset\")}getLoading(){return this.getAttribute(\"loading\")}onLoad(t){return this.on(\"load\",t),()=>{this.off(\"load\",t)}}onLoadError(t){return this.on(\"error\",t),()=>{this.off(\"error\",t)}}setImage(t){if(\"string\"==typeof t)this.setAttribute(\"src\",t),this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");else{if(this.setAttribute(\"src\",t.src),\"object\"==typeof t&&t.srcSet&&t.srcSet.length&&t.sizes&&t.sizes.length){const e=t.srcSet.map((t=>`${t.url} ${t.size}`)).join(\", \");this.setAttribute(\"srcset\",e)}else this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");t.loading&&this.setAttribute(\"loading\",t.loading)}}}o=module.exports,n=u,Object.keys(n).forEach((function(t){\"default\"===t||\"__esModule\"===t||o.hasOwnProperty(t)||Object.defineProperty(o,t,{enumerable:!0,get:function(){return n[t]}})}));","// src/modules/pages/accountDetails/editUserDialog.ts\n\nimport { WFComponent, WFFormComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../../../api/apiConfig\";\nimport {\n  setupValidation,\n  createValidationFunction,\n  toggleError,\n  setupFileUpload,\n} from \"../../../utils/formUtils\";\nimport {\n  validateNotEmpty,\n  validateEmail,\n  validatePhoneNumber,\n} from \"../../../utils/validationUtils\";\nimport { getUserDetails } from \"./getUserDetails\";\n\n// Define the ApiResponse interface to type the API responses\ninterface ApiResponse {\n  status: string;\n  message?: string;\n  profile_pic?: any;\n  [key: string]: any;\n}\n\n// Declare variables in the outer scope\nlet isYMemberInput: WFComponent<HTMLInputElement>;\nlet hiddenYMemberWrapper: WFComponent<HTMLElement>;\nlet yMemberIdInput: WFComponent<HTMLInputElement>;\nlet yMemberIdInputError: WFComponent<HTMLElement>;\n\nexport const initializeEditUserDialog = () => {\n  // Retrieve and initialize the \"Open Edit Dialog\" button\n  const openEditDialogButton = new WFComponent(\"#openEditUserDialog\");\n\n  // Retrieve the edit user dialog element\n  const editUserDialogElement = document.getElementById(\n    \"editUserDialog\"\n  ) as HTMLDialogElement | null;\n\n  // Retrieve and initialize the \"Close Dialog\" button\n  const closeDialogButton = new WFComponent(\"#close-dialog-btn\");\n\n  // Set up the click event listener to open the dialog\n  openEditDialogButton.on(\"click\", () => {\n    populateEditUserForm();\n    if (editUserDialogElement) {\n      editUserDialogElement.showModal();\n    }\n  });\n\n  // Set up the click event listener to close the dialog\n  closeDialogButton.on(\"click\", () => {\n    if (editUserDialogElement) {\n      editUserDialogElement.close();\n    }\n  });\n\n  // Initialize the form\n  const form = new WFFormComponent<{\n    profile_pic: File | null;\n    first_name: string;\n    last_name: string;\n    email: string;\n    phone: string;\n    send_texts: boolean;\n    address_line_1: string;\n    address_line_2: string;\n    city: string;\n    state: string;\n    zip: string;\n    referred_by: string;\n    is_y_member: boolean;\n    y_membership_id: string;\n  }>(\"#editUserForm\");\n\n  // Initialize error component for form submission errors\n  const formSubmitError = new WFComponent(\"#editUserSubmitError\");\n\n  // Define validation rules for each field\n  const fields = [\n    {\n      input: new WFComponent(\"#firstNameInput\"),\n      error: new WFComponent(\"#firstNameInputError\"),\n      validationFn: validateNotEmpty,\n      message: \"First name is required\",\n    },\n    {\n      input: new WFComponent(\"#lastNameInput\"),\n      error: new WFComponent(\"#lastNameInputError\"),\n      validationFn: validateNotEmpty,\n      message: \"Last name is required\",\n    },\n    {\n      input: new WFComponent(\"#emailInput\"),\n      error: new WFComponent(\"#emailInputError\"),\n      validationFn: validateEmail,\n      message: \"Invalid email format\",\n    },\n    {\n      input: new WFComponent(\"#phoneNumberInput\"),\n      error: new WFComponent(\"#phoneNumberInputError\"),\n      validationFn: validatePhoneNumber,\n      message: \"Phone number must be in the format (xxx) xxx-xxxx\",\n    },\n    // Add other fields as necessary\n  ];\n\n  // Setup validation for each field\n  fields.forEach(({ input, error, validationFn, message }) => {\n    setupValidation(\n      input,\n      error,\n      createValidationFunction(input, validationFn, message),\n      formSubmitError\n    );\n  });\n\n  // Initialize components for Y Member input\n  isYMemberInput = new WFComponent<HTMLInputElement>(\"#isYMemberInput\");\n  hiddenYMemberWrapper = new WFComponent(\"#hiddenyMemberWrapper\");\n  yMemberIdInput = new WFComponent<HTMLInputElement>(\"#yMemberIdInput\");\n  yMemberIdInputError = new WFComponent(\"#yMemberIdInputError\");\n\n  const toggleYMemberInput = () => {\n    const isChecked = isYMemberInput.getElement().checked;\n    if (isChecked) {\n      hiddenYMemberWrapper.removeCssClass(\"g-hide\");\n    } else {\n      hiddenYMemberWrapper.addCssClass(\"g-hide\");\n      // Clear the Y Membership Number input\n      yMemberIdInput.getElement().value = \"\";\n    }\n  };\n\n  // Initialize the visibility on page load\n  toggleYMemberInput();\n\n  // Add event listener to the checkbox\n  isYMemberInput.on(\"change\", () => {\n    toggleYMemberInput();\n  });\n\n  // Remove validation for yMemberIdInput since it's no longer required\n  // Remove the yMemberIdValidation function and related code\n\n  // Handle form submission\n  form.onFormSubmit(async (formData, event) => {\n    event.preventDefault();\n    const requestingAnimation = new WFComponent(\"#requestingAnimationEditUser\");\n    requestingAnimation.setStyle({ display: \"block\" });\n\n    let isFormValid = true;\n\n    // Validate all fields\n    fields.forEach(({ input, error, validationFn, message }) => {\n      const errorMessage = createValidationFunction(\n        input,\n        validationFn,\n        message\n      )();\n      if (errorMessage) {\n        toggleError(error, errorMessage, true);\n        isFormValid = false;\n      } else {\n        toggleError(error, \"\", false);\n      }\n    });\n\n    // Since Y Membership Number is not required, we don't need to validate it\n    // However, we can clear any previous errors\n    toggleError(yMemberIdInputError, \"\", false);\n\n    if (!isFormValid) {\n      toggleError(formSubmitError, \"Please correct all errors above.\", true);\n      requestingAnimation.setStyle({ display: \"none\" });\n      return;\n    } else {\n      toggleError(formSubmitError, \"\", false);\n    }\n\n    // Disable submit button\n    const submitButton = new WFComponent(\"#editUserSubmitButton\");\n    submitButton.setAttribute(\"disabled\", \"true\");\n\n    // Prepare data for API\n    const dataToUpdate = { ...formData };\n\n    try {\n      // Send update request to API\n      const response = (await apiClient\n        .post(`/profiles/update_profile`, {\n          data: dataToUpdate,\n        })\n        .fetch()) as ApiResponse;\n\n      if (response.status === \"success\") {\n        // Update successful\n\n        // Refresh the user details on the page\n        await getUserDetails();\n\n        // Reset the form with updated information\n        populateEditUserForm();\n\n        // Close the dialog after successful request and data refresh\n        if (editUserDialogElement) {\n          editUserDialogElement.close();\n        }\n      } else {\n        throw new Error(response.message || \"Update failed\");\n      }\n    } catch (error: any) {\n      console.error(\"Error updating user profile:\", error);\n      toggleError(formSubmitError, error.message || \"An error occurred\", true);\n    } finally {\n      // Hide loading animation\n      requestingAnimation.setStyle({ display: \"none\" });\n      // Re-enable submit button\n      submitButton.removeAttribute(\"disabled\");\n    }\n  });\n\n  // Set up the file upload for the profile picture\n  const profilePictureInput = new WFComponent(\"#profilePictureInput\");\n  const profilePictureInputError = new WFComponent(\"#profilePictureInputError\");\n  const profilePictureInputSuccess = new WFComponent(\n    \"#profilePictureInputSuccess\"\n  );\n  setupFileUpload(\n    profilePictureInput,\n    profilePictureInputError,\n    profilePictureInputSuccess,\n    \"/profiles/image-upload\"\n  );\n};\n\n// Function to populate the form with existing user data\nconst populateEditUserForm = () => {\n  const userData = localStorage.getItem(\"current_user\");\n  if (!userData) {\n    console.error(\"No user data found\");\n    return;\n  }\n\n  let user: any;\n  try {\n    user = JSON.parse(userData);\n  } catch (parseError) {\n    console.error(\"Error parsing user data from localStorage:\", parseError);\n    return;\n  }\n\n  // Helper function to set input value\n  const setInputValue = (\n    selector: string,\n    value: string | boolean,\n    isCheckbox: boolean = false\n  ) => {\n    const element = document.querySelector(selector) as\n      | HTMLInputElement\n      | HTMLSelectElement\n      | HTMLTextAreaElement\n      | null;\n    if (element) {\n      if (isCheckbox && element instanceof HTMLInputElement) {\n        element.checked = Boolean(value);\n      } else {\n        element.value = String(value);\n      }\n    }\n  };\n\n  // Set form fields\n  setInputValue(\"#firstNameInput\", user.first_name);\n  setInputValue(\"#lastNameInput\", user.last_name);\n  setInputValue(\"#emailInput\", user.email);\n  setInputValue(\"#phoneNumberInput\", user.phone);\n  setInputValue(\"#sendTextsInput\", user.send_texts, true);\n  setInputValue(\"#addressLineOneInput\", user.address_line_1);\n  setInputValue(\"#addressLineTwoInput\", user.address_line_2);\n  setInputValue(\"#cityInput\", user.city);\n  setInputValue(\"#stateInput\", user.state);\n  setInputValue(\"#zipInput\", user.zip);\n  setInputValue(\"#referralInput\", user.referred_by);\n  setInputValue(\"#isYMemberInput\", user.is_y_member, true);\n  setInputValue(\"#yMemberIdInput\", user.y_membership_id);\n\n  // Set profile picture preview using WFImage\n  const profilePictureImage = new WFImage(\"#profilePictureImage\");\n  if (user.profile_pic && user.profile_pic.url) {\n    profilePictureImage.setImage(user.profile_pic.url);\n  } else {\n    profilePictureImage.setImage(\n      \"https://cdn.prod.website-files.com/667f080f36260b9afbdc46b2/667f080f36260b9afbdc46be_placeholder.svg\"\n    );\n  }\n\n  // Update the visibility of the hidden Y Member input\n  const isYMemberChecked = isYMemberInput.getElement().checked;\n  if (isYMemberChecked) {\n    hiddenYMemberWrapper.removeCssClass(\"g-hide\");\n  } else {\n    hiddenYMemberWrapper.addCssClass(\"g-hide\");\n    // Clear the Y Membership Number input\n    yMemberIdInput.getElement().value = \"\";\n  }\n};\n","import { WFComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../api/apiConfig\";\nimport { userAuth } from \"../auth/authConfig\";\n\nexport function toggleError(\n  errorMessageComponent: WFComponent<any>,\n  message: string,\n  show: boolean\n): void {\n  errorMessageComponent.updateTextViaAttrVar({ text: show ? message : \"\" });\n  errorMessageComponent.setStyle({ display: show ? \"flex\" : \"none\" });\n}\n\nexport function setupValidation(\n  inputComponent: WFComponent,\n  errorComponent: WFComponent,\n  validate: () => string,\n  requestErrorComponent?: WFComponent // Optional component to clear on input change\n) {\n  const validateAndUpdate = () => {\n    const errorMessage = validate();\n    toggleError(errorComponent, errorMessage, !!errorMessage);\n    if (requestErrorComponent && errorMessage === \"\") {\n      // Clear request error message when the user is correcting the input\n      toggleError(requestErrorComponent, \"\", false);\n    }\n  };\n\n  // Attach event listeners for real-time validation\n  inputComponent.on(\"input\", validateAndUpdate);\n  inputComponent.on(\"blur\", validateAndUpdate);\n  inputComponent.on(\"change\", validateAndUpdate);\n}\n\nexport function createValidationFunction(\n  inputComponent: WFComponent,\n  validationFn: (input: string) => boolean,\n  errorMessage: string\n): () => string {\n  return () => {\n    const inputElement = inputComponent.getElement() as HTMLInputElement;\n    const isValid = validationFn(inputElement.value);\n    return isValid ? \"\" : errorMessage;\n  };\n}\n\nexport function createCheckboxValidationFunction(\n  checkboxComponent: WFComponent,\n  errorMessage: string\n): () => string {\n  return () => {\n    const checkbox = checkboxComponent.getElement() as HTMLInputElement;\n    return checkbox.checked ? \"\" : errorMessage;\n  };\n}\n\nexport function setupCheckboxValidation(\n  checkboxComponent: WFComponent,\n  checkboxErrorComponent: WFComponent,\n  errorMessage: string\n) {\n  const validate = createCheckboxValidationFunction(\n    checkboxComponent,\n    errorMessage\n  );\n  setupValidation(checkboxComponent, checkboxErrorComponent, validate);\n}\n\nexport function validateSelectedSessions(\n  selectedSessions: { sessionId: string; studentIds: string[] }[],\n  errorMessageComponent: WFComponent<any>,\n  errorMessage: string\n): boolean {\n  const isValid =\n    selectedSessions.length > 0 &&\n    selectedSessions.some((session) => session.studentIds.length > 0);\n\n  if (!isValid) {\n    toggleError(errorMessageComponent, errorMessage, true);\n  } else {\n    toggleError(errorMessageComponent, \"\", false);\n  }\n\n  return isValid;\n}\n\ntype fileUploadResponse = {\n  status: string;\n  url: {\n    profile_pic: {\n      url: string;\n    };\n  };\n};\n\n/**\n * Updates the user's profile picture URL in the authentication system.\n * @param {string} imageUrl - The URL of the uploaded image.\n */\nexport function setProfilePicUrl(imageUrl: string): void {\n  const user = userAuth.getUser();\n  if (user && user.profile) {\n    // Ensure the profile_picture object exists\n    user.profile.profile_pic = user.profile.profile_pic || { url: \"\" };\n\n    // Set the profile picture URL\n    user.profile.profile_pic.url = imageUrl;\n    userAuth.setUser(user);\n    localStorage.setItem(\"auth_user\", JSON.stringify(user));\n  }\n}\n\n/**\n * Handles file upload and displays the uploaded image.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */\n/**\n * Handles file upload and displays the uploaded image.\n * Only JPEG files less than 2 MB can be uploaded.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */\nexport function setupFileUpload(\n  fileInput: WFComponent,\n  fileInputError: WFComponent,\n  fileInputSuccess: WFComponent,\n  uploadEndpoint: string\n): Promise<string> {\n  const profilePictureImage = new WFImage(\"#profilePictureImage\");\n  const uploadAnimation = new WFComponent(\"#uploadAnimation\");\n\n  const overlay = new WFComponent(\".drop-zone\");\n  let dragCounter = 0;\n\n  return new Promise<string>((resolve) => {\n    const handleFile = (file: File) => {\n      // Validate file type and size\n      const validTypes = [\"image/jpeg\", \"image/jpg\"];\n      const maxSizeInBytes = 2 * 1024 * 1024; // 2 MB\n\n      if (\n        !validTypes.includes(file.type) &&\n        !/\\.(jpg|jpeg)$/i.test(file.name)\n      ) {\n        const errorMessage = \"Only JPEG images are allowed.\";\n        toggleError(fileInputError, errorMessage, true);\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n        return;\n      }\n\n      if (file.size > maxSizeInBytes) {\n        const errorMessage = \"File size must be less than 2 MB.\";\n        toggleError(fileInputError, errorMessage, true);\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n        return;\n      }\n\n      // Show upload animation immediately\n      uploadAnimation.setStyle({ display: \"flex\" });\n\n      // Hide error and success messages\n      fileInputError.setStyle({ display: \"none\" });\n      fileInputSuccess.setStyle({ display: \"none\" });\n\n      const reader = new FileReader();\n\n      // Display preview image as soon as the file is loaded into memory\n      reader.onload = (event) => {\n        // Set the preview image for the profile picture\n        const result = event.target?.result as string;\n        profilePictureImage.setImage(result);\n\n        // Hide overlay once the image is set\n        overlay.setStyle({ display: \"none\" });\n      };\n\n      reader.readAsDataURL(file);\n\n      const formData = new FormData();\n      formData.append(\"profile_picture\", file);\n\n      const existingStudent = localStorage.getItem(\"current_student\");\n      if (existingStudent) {\n        const student = JSON.parse(existingStudent);\n        formData.append(\"student_profile_id\", student.id.toString());\n      }\n\n      // Send the file to the server\n      const postRequest = apiClient.post<fileUploadResponse>(uploadEndpoint, {\n        data: formData,\n      });\n\n      postRequest.onData((response) => {\n        if (response.status === \"success\") {\n          const imageUrl = response.url.profile_pic.url;\n\n          // Update the profile picture URL in the user session and local storage\n          setProfilePicUrl(imageUrl);\n\n          // Update the image for other parts of the UI as well\n          profilePictureImage.setImage(imageUrl);\n\n          // Store the URL in local storage\n          localStorage.setItem(\"image_upload\", imageUrl);\n\n          // Show success message and hide upload animation\n          fileInputSuccess.setStyle({ display: \"flex\" });\n          uploadAnimation.setStyle({ display: \"none\" });\n\n          // Resolve with the uploaded image URL\n          resolve(imageUrl);\n        } else {\n          const errorMessage = \"Failed to upload profile picture.\";\n          toggleError(fileInputError, errorMessage, true);\n          uploadAnimation.setStyle({ display: \"none\" });\n          overlay.setStyle({ display: \"none\" });\n          dragCounter = 0;\n          // Reset file input value\n          (fileInput.getElement() as HTMLInputElement).value = \"\";\n        }\n      });\n\n      postRequest.onError((error) => {\n        let errorMessage = \"An error occurred during image upload.\";\n        if (error.response && error.response.data) {\n          errorMessage = error.response.data.message || errorMessage;\n        } else if (error.message) {\n          errorMessage = error.message;\n        }\n\n        // Show error message and hide upload animation\n        toggleError(fileInputError, errorMessage, true);\n        uploadAnimation.setStyle({ display: \"none\" });\n        overlay.setStyle({ display: \"none\" });\n        dragCounter = 0;\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n      });\n\n      // Make the API call\n      postRequest.fetch();\n    };\n\n    // Event listener for file input changes\n    fileInput.on(\"change\", () => {\n      const file = (fileInput.getElement() as HTMLInputElement).files?.[0];\n      if (file) {\n        handleFile(file);\n      }\n    });\n\n    // Event listeners for drag-and-drop\n    const dragZoneElement = document.body;\n    dragZoneElement.addEventListener(\"dragenter\", (event) => {\n      event.preventDefault();\n      dragCounter++;\n      if (dragCounter === 1) {\n        overlay.setStyle({ display: \"flex\" });\n      }\n    });\n\n    dragZoneElement.addEventListener(\"dragleave\", () => {\n      dragCounter--;\n      if (dragCounter <= 0) {\n        overlay.setStyle({ display: \"none\" });\n        dragCounter = 0;\n      }\n    });\n\n    dragZoneElement.addEventListener(\"dragover\", (event) => {\n      event.preventDefault();\n    });\n\n    dragZoneElement.addEventListener(\"drop\", (event) => {\n      event.preventDefault();\n\n      const files = event.dataTransfer?.files;\n      if (files?.length) {\n        handleFile(files[0]);\n      }\n\n      overlay.setStyle({ display: \"none\" });\n      dragCounter = 0;\n    });\n  });\n}\n\n// src/utils/formUtils.ts\n\n/**\n * Formats a phone number string to the format (xxx) xxx-xxxx.\n * If the input contains more than 10 digits, it truncates the extra digits.\n * If it contains fewer, it formats as much as possible.\n *\n * @param value - The raw phone number string.\n * @returns The formatted phone number string.\n */\nexport const formatPhoneNumber = (value: string): string => {\n  const cleaned = value.replace(/\\D/g, \"\"); // Remove all non-digit characters\n\n  if (cleaned.length <= 3) {\n    return cleaned;\n  } else if (cleaned.length <= 6) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3)}`;\n  } else if (cleaned.length <= 10) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(\n      6\n    )}`;\n  } else {\n    // If more than 10 digits, truncate the extra digits\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(\n      6,\n      10\n    )}`;\n  }\n};\n","import { WFComponent } from \"@xatom/core\";\nimport { toggleError } from \"./formUtils\";\n\nexport function validateNotEmpty(input: string | undefined): boolean {\n  return input !== undefined && input.trim() !== \"\";\n}\n\nexport function validateEmail(input: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(input);\n}\n\n/**\n * Validates that the email is either empty or correctly formatted.\n * @param value The email input value.\n * @returns True if valid, false otherwise.\n */\nexport const validateEmailOptional = (value: string): boolean => {\n  if (value.trim() === \"\") {\n    // Email is optional, so empty string is valid\n    return true;\n  }\n  // Validate the email format if not empty\n  return validateEmail(value);\n};\n\nexport function validatePasswordRequirements(password: string): boolean {\n  const hasLowercase = /[a-z]/.test(password);\n  const hasUppercase = /[A-Z]/.test(password);\n  const hasDigit = /\\d/.test(password);\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n  const hasValidLength = password.length >= 8;\n  return (\n    hasLowercase && hasUppercase && hasDigit && hasSpecialChar && hasValidLength\n  );\n}\n\nexport function validateCheckbox(checked: boolean): boolean {\n  return checked;\n}\n\nexport function validatePasswordsMatch(\n  originalPassword: string,\n  confirmPassword: string\n): boolean {\n  return originalPassword === confirmPassword;\n}\n\nexport function validateSelectField(input: string | undefined): boolean {\n  return input !== undefined && input !== \"N/A\";\n}\n\nexport function validatePhoneNumber(input: string): boolean {\n  const phoneRegex = /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/;\n  return phoneRegex.test(input);\n}\n","// src/modules/pages/accountDetails/deleteUser.ts\n\nimport { WFComponent } from \"@xatom/core\";\nimport { apiClient } from \"../../../api/apiConfig\";\n\n/**\n * Initializes the delete user functionality.\n */\nexport function initializeDeleteUser() {\n  // Retrieve and initialize the \"Open Delete Dialog\" button\n  const openDeleteDialogBtn = new WFComponent(\"#openDeleteDialog\");\n\n  // Retrieve the delete user dialog element\n  const deleteUserDialogElement = document.getElementById(\n    \"deleteUserDialog\"\n  ) as HTMLDialogElement | null;\n\n  // Retrieve and initialize the \"Close Delete Dialog\" button\n  const closeDeleteDialogBtn = new WFComponent(\"#close-delete-dialog-btn\");\n\n  // Retrieve and initialize the \"Final Delete\" button\n  const deleteUserFinalBtn = new WFComponent(\"#deleteUserFinal\");\n\n  // Retrieve and initialize the \"Delete User Error\" component\n  const deleteUserError = new WFComponent(\"#deleteUserError\");\n\n  // Retrieve and initialize the \"Page Main\" component\n  const pageMain = new WFComponent(\".page_main\");\n\n  // Retrieve and initialize the loader animations\n  const deleteRequestingAnimation = new WFComponent(\n    \"#deleteRequestingAnimation\"\n  );\n  deleteRequestingAnimation.setStyle({ display: \"none\" });\n\n  /**\n   * Shows the delete confirmation dialog and updates the data-brand attribute.\n   */\n  const showDeleteDialog = () => {\n    if (deleteUserDialogElement && pageMain) {\n      deleteUserDialogElement.showModal(); // Display the dialog\n      pageMain.setAttribute(\"data-brand\", \"6\"); // Update data-brand to 6\n    }\n  };\n\n  /**\n   * Hides the delete confirmation dialog and reverts the data-brand attribute.\n   */\n  const hideDeleteDialog = () => {\n    if (deleteUserDialogElement && pageMain && deleteUserError) {\n      deleteUserDialogElement.close(); // Close the dialog\n      pageMain.setAttribute(\"data-brand\", \"2\"); // Revert data-brand to 2\n      deleteUserError.setStyle({ display: \"none\" }); // Hide any previous error messages\n    }\n  };\n\n  /**\n   * Handles the deletion of the user account.\n   */\n  const handleDeleteUser = async () => {\n    try {\n      // Hide previous error messages\n      deleteUserError.setStyle({ display: \"none\" });\n\n      // Show the loader animation and disable the delete button\n      deleteRequestingAnimation.setStyle({ display: \"flex\" });\n      deleteUserFinalBtn.setAttribute(\"disabled\", \"true\");\n\n      // Send the DELETE request to the API\n      const response = await apiClient.delete(`/profiles`).fetch();\n\n      // Hide the loader animation and re-enable the delete button\n      deleteRequestingAnimation.setStyle({ display: \"none\" });\n      deleteUserFinalBtn.removeAttribute(\"disabled\");\n\n      if (response && response.status === 200) {\n        // Redirect to the homepage or login page\n        window.location.href = \"/login\"; // Adjust the URL as needed\n      } else {\n        // Handle unexpected successful responses\n        throw new Error(\"Unexpected response from the server.\");\n      }\n    } catch (error: any) {\n      console.error(\"Error deleting user account:\", error);\n\n      // Hide the loader animation and re-enable the delete button\n      deleteRequestingAnimation.setStyle({ display: \"none\" });\n      deleteUserFinalBtn.removeAttribute(\"disabled\");\n\n      // Display the error message\n      deleteUserError.setStyle({ display: \"flex\" });\n      deleteUserError\n        .getChildAsComponent(\".error-text\")\n        .setText(\n          error.response?.data?.message ||\n            \"An unexpected error occurred while deleting your account.\"\n        );\n    }\n  };\n\n  // Event listener to open the delete dialog\n  openDeleteDialogBtn.on(\"click\", showDeleteDialog);\n\n  // Event listener to close the delete dialog\n  closeDeleteDialogBtn.on(\"click\", hideDeleteDialog);\n\n  // Event listener for the final delete action\n  deleteUserFinalBtn.on(\"click\", handleDeleteUser);\n}\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","export","initializeAccountDetailsPage","_getUserDetails","_edituserDialog","_deleteUser","getUserDetails","initializeEditUserDialog","initializeDeleteUser","addEventListener","localStorage","removeItem","_apiConfig","_core","_image","loadingSpinner","WFComponent","setStyle","display","response","apiClient","fetch","triggerSuccessEvent","userFullName","setText","user","first_name","last_name","userProfilePicture","WFImage","profile_pic","url","setImage","userEmail","email","userPhone","phone","userAddressLineOne","address_line_1","userAddressLineTwo","address_line_2","userCity","city","userState","state","userZip","zip","userTextTrue","userTextFalse","send_texts","userYTrue","userYFalse","is_y_member","userYMembershipNumber","y_membership_id","setItem","JSON","stringify","alert","console","error","history","back","message","selector","successTrigger","document","querySelector","HTMLElement","click","o","t","u","c","set","enumerable","configurable","constructor","getImageConfig","_config","getSrc","getAttribute","getSizes","getSrcSet","getLoading","onLoad","on","off","onLoadError","setAttribute","removeAttribute","src","srcSet","sizes","e","map","size","join","loading","keys","forEach","hasOwnProperty","n","isYMemberInput","hiddenYMemberWrapper","yMemberIdInput","yMemberIdInputError","_formUtils","_validationUtils","openEditDialogButton","editUserDialogElement","getElementById","closeDialogButton","populateEditUserForm","showModal","close","form","WFFormComponent","formSubmitError","fields","input","validationFn","validateNotEmpty","validateEmail","validatePhoneNumber","setupValidation","createValidationFunction","toggleYMemberInput","getElement","checked","removeCssClass","addCssClass","value","onFormSubmit","formData","event","preventDefault","requestingAnimation","isFormValid","errorMessage","toggleError","submitButton","dataToUpdate","post","data","status","profilePictureInput","profilePictureInputError","profilePictureInputSuccess","setupFileUpload","userData","getItem","parse","parseError","setInputValue","isCheckbox","element","HTMLInputElement","Boolean","String","referred_by","profilePictureImage","createCheckboxValidationFunction","setupCheckboxValidation","validateSelectedSessions","setProfilePicUrl","formatPhoneNumber","_authConfig","errorMessageComponent","show","updateTextViaAttrVar","text","inputComponent","errorComponent","validate","requestErrorComponent","validateAndUpdate","isValid","inputElement","checkboxComponent","checkbox","checkboxErrorComponent","selectedSessions","some","session","studentIds","imageUrl","userAuth","getUser","profile","setUser","fileInput","fileInputError","fileInputSuccess","uploadEndpoint","uploadAnimation","overlay","dragCounter","Promise","handleFile","file","validTypes","includes","type","test","reader","FileReader","onload","result","target","readAsDataURL","FormData","append","existingStudent","student","toString","postRequest","onData","onError","files","dragZoneElement","body","dataTransfer","cleaned","replace","slice","undefined","trim","emailRegex","validateEmailOptional","validatePasswordRequirements","validateCheckbox","validatePasswordsMatch","validateSelectField","password","hasLowercase","hasUppercase","hasDigit","hasSpecialChar","hasValidLength","originalPassword","confirmPassword","phoneRegex","openDeleteDialogBtn","deleteUserDialogElement","closeDeleteDialogBtn","deleteUserFinalBtn","deleteUserError","pageMain","deleteRequestingAnimation","handleDeleteUser","delete","location","href","getChildAsComponent"],"version":3,"file":"accountProfile.d64a0120.js.map"}