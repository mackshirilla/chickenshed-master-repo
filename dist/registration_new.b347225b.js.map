{"mappings":"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","sources":["src/modules/registration_new/index.ts","src/api/startRegistration.ts","src/modules/registration_new/components/dynamicRegistrationTable.ts","src/modules/registration_new/state/registrationState.ts","src/modules/registration_new/components/checkoutLineItems.ts","src/modules/registration_new/components/updateTotalAmount.ts","src/modules/registration_new/components/financialAid.ts","src/utils/formUtils.ts","node_modules/.pnpm/@xatom+image@1.0.0_@xatom+core@1.0.12/node_modules/@xatom/image/dist/index.js","src/utils/validationUtils.ts","src/modules/registration_new/components/pendingStudentsAlert.ts","src/modules/registration_new/components/checkoutSubmission.ts","src/modules/registration_new/components/loadRegistrationUI.ts","src/modules/registration_new/components/actionRequiredDialog.ts"],"sourcesContent":["import { startRegistration } from \"../../api/startRegistration\";\nimport { initDynamicRegistrationTable } from \"./components/dynamicRegistrationTable\";\nimport { updateCheckoutLineItems } from \"./components/checkoutLineItems\";\nimport { initializeFinancialAid } from \"./components/financialAid\";\nimport { saveState, loadState } from \"./state/registrationState\";\nimport { updatePendingStudentsAlert } from \"./components/pendingStudentsAlert\";\nimport { submitCheckout } from \"./components/checkoutSubmission\";\nimport { loadRegistrationUI } from \"./components/loadRegistrationUi\";\nimport { WFComponent } from \"@xatom/core\";\nimport { showActionRequiredDialogIfNoStudentProfiles } from \"./components/actionRequiredDialog\";\n\nexport async function newProgramRegistration(): Promise<void> {\n  console.log(\"new registration\");\n\n  try {\n    const response = await startRegistration({});\n    console.log(\"Registration started:\", response);\n\n    // Save the API response in state.\n    saveState({ apiData: response });\n\n    // Always initialize the dynamic registration table (this sets up the add button and template row).\n    initDynamicRegistrationTable(response, {\n      tableBodySelector: \"#subscription_items_list\",\n      emptyStateSelector: \"#subscription_empty\",\n      templateRowSelector: \"#subscription_item\",\n      addButtonSelector: \"#subscription_items_table tfoot #add_subscription_item\",\n      isAddOn: false,\n      fields: {\n        program: { textSelector: \"#item_program_name\", selectSelector: \"#program-select-1\" },\n        workshop: { textSelector: \"#item_workshop_name\", selectSelector: \"#workshop-select-1\" },\n        session: { textSelector: \"#item_session_name\", selectSelector: \"#session-select-1\" },\n        student: { textSelector: \"#item_student_name\", selectSelector: \"#student-select-1\" },\n      }\n    });\n\n    // Rehydrate the UI if there are saved registration items.\n    const state = loadState();\n    if (state.registrationItems && state.registrationItems.length > 0) {\n      loadRegistrationUI();\n    }\n\n    // Set subscription type select value from state.\n    const subscriptionTypeSelect = document.getElementById(\"subscription_type\") as HTMLSelectElement;\n    if (subscriptionTypeSelect && state.subscriptionType) {\n      subscriptionTypeSelect.value = state.subscriptionType;\n    }\n\n    updateCheckoutLineItems(response);\n    updatePendingStudentsAlert(response);\n\n    // Show action required dialog if no student profiles are returned.\n    showActionRequiredDialogIfNoStudentProfiles(response);\n\n    // After initial response is loaded, if the loading animation trigger exists, click it.\n    const successTrigger = document.querySelector(\".success_trigger\") as HTMLElement;\n    if (successTrigger) {\n      successTrigger.click();\n    }\n\n    // Setup an event to update the checkout button's enabled/disabled state.\n    function updateCheckoutButtonState() {\n      const confirmedRows = document.querySelectorAll(\"#subscription_items_list tr.confirmed\");\n      const checkoutBtn = document.getElementById(\"submit_registration_checkout\") as HTMLButtonElement;\n      if (confirmedRows.length === 0) {\n        checkoutBtn.disabled = true;\n      } else {\n        checkoutBtn.disabled = false;\n      }\n    }\n    updateCheckoutButtonState();\n    document.addEventListener(\"registrationChanged\", () => {\n      updateCheckoutLineItems(response);\n      updatePendingStudentsAlert(response);\n      updateCheckoutButtonState();\n    });\n\n    // When subscription type changes, update state and line items.\n    if (subscriptionTypeSelect) {\n      subscriptionTypeSelect.addEventListener(\"change\", () => {\n        saveState({ subscriptionType: subscriptionTypeSelect.value });\n        updateCheckoutLineItems(response);\n      });\n    }\n\n    // Setup checkout button behavior.\n    const checkoutButton = new WFComponent(\"#submit_registration_checkout\");\n    checkoutButton.on(\"click\", async (e: Event) => {\n      e.preventDefault();\n      const btnEl = checkoutButton.getElement() as HTMLButtonElement;\n      if (btnEl.disabled) return;\n      btnEl.disabled = true;\n\n      // Show loading animation.\n      const loadingAnim = document.getElementById(\"submit_registration_checkout_animation\");\n      if (loadingAnim) {\n        loadingAnim.style.display = \"block\";\n      }\n\n      try {\n        await submitCheckout();\n        // If submitCheckout() returns successfully and redirects, this code may not run.\n      } catch (error) {\n        console.error(error);\n      } finally {\n        // Hide loading animation and re-enable the button if not redirected.\n        if (loadingAnim) loadingAnim.style.display = \"none\";\n        btnEl.disabled = false;\n      }\n    });\n\n  } catch (error) {\n    console.error(\"Error starting registration:\", error);\n  }\n  initializeFinancialAid();\n}\n","import { apiClient } from \"./apiConfig\";\n\n// match the shape of profile_pic in your JSON\nexport interface ProfilePic {\n  access: string;\n  path: string;\n  name: string;\n  type: string;\n  size: number;\n  mime: string;\n  meta: {\n    width: number;\n    height: number;\n  };\n  url: string;\n}\n\nexport interface StudentProfile {\n  id: number;\n  full_name: string;\n  Status: string;\n  user_id: number;\n  parent_user_id: number;\n  first_name: string;\n  last_name: string;\n  email: string;\n  phone: string;\n  send_texts: boolean;\n  dob: string | null;\n  gender: string;\n  school: string;\n  grade: string;\n  health: string;\n  emergency_first_name: string;\n  emergency_last_name: string;\n  emergency_phone: string;\n  emergency_email: string;\n  emergency_relationship: string;\n  dismissal_names: string;\n  independent_travel: boolean;\n  family_involved: string;\n  photo_release: boolean;\n  created_at: number;\n  profile_pic: ProfilePic | null;\n}\n\nexport interface SessionProduct {\n  id: number;\n  Product_name: string;\n  Annual_price_id?: string;\n  Monthly_price_id?: string;\n  Semester_price_id?: string;\n  Single_sale_price_id?: string;\n  Displayed_annual_price?: string;\n  Displayed_monthly_price?: string;\n  Displayed_semester_price?: string;\n  Displayed_single_sale_price?: string;\n  Annual_price_amount: number;\n  Monthly_price_amount: number;\n  Semester_price_amount: number;\n  Single_sale_price_amount: number;\n}\n\nexport interface ProgramInfo {\n  id: number;\n  name: string;\n  Add_On_Program: boolean;\n  // reflect the 1st_Semester_Start_Date field in your payload\n  \"1st_Semester_Start_Date\": number;\n}\n\nexport interface Session {\n  id: number;\n  Name: string;\n  Weekday: string;\n  Time_block: string;\n  Start_Date: string | null;\n  End_Date: string | null;\n  Location: number;\n  Tuition_product: number;\n  Deposit_product: number;\n  program: ProgramInfo;\n  tuition_product: SessionProduct;\n  deposit_product: SessionProduct;\n  workshop?: {\n    id: number;\n    Name: string;\n  };\n}\n\nexport interface StartRegistrationResponse {\n  student_profiles: StudentProfile[];\n  sessions: Session[];\n  has_active_subscription: boolean;\n  pending_students?: StudentProfile[];\n}\n\nexport async function startRegistration(\n  payload: any\n): Promise<StartRegistrationResponse> {\n  try {\n    const response = await apiClient\n      .post<StartRegistrationResponse>(\"/registration/start_registration\", payload)\n      .fetch();\n\n    if (response.has_active_subscription) {\n      // navigate away if they already have an active subscription\n      window.location.assign(\"/dashboard/registration/manage-subscription\");\n      // optionally return here if you don’t want calling code to keep running:\n      // return response;\n    }\n\n    return response;\n  } catch (error) {\n    console.error(\"Error starting registration:\", error);\n    throw error;\n  }\n}","import { WFComponent } from \"@xatom/core\";\nimport { StartRegistrationResponse } from \"../../../api/startRegistration\";\nimport { loadState, saveState } from \"../state/registrationState\";\n\nexport interface FieldSelectors {\n  textSelector: string;\n  selectSelector: string;\n}\n\nexport interface DynamicTableConfig {\n  tableBodySelector: string;\n  emptyStateSelector: string;\n  templateRowSelector: string;\n  addButtonSelector: string;\n  isAddOn: boolean;\n  fields: {\n    program: FieldSelectors;\n    workshop: FieldSelectors;\n    session: FieldSelectors;\n    student: FieldSelectors;\n  };\n}\n\nexport function initDynamicRegistrationTable(\n  data: StartRegistrationResponse,\n  config: DynamicTableConfig\n): void {\n  const tableBody = new WFComponent(config.tableBodySelector);\n  const emptyState = new WFComponent(config.emptyStateSelector);\n  const addButton = new WFComponent(config.addButtonSelector);\n\n  const templateRow = document.querySelector(config.templateRowSelector) as HTMLElement;\n  if (!templateRow) {\n    console.error(\"Template row not found with selector:\", config.templateRowSelector);\n    return;\n  }\n  // Ensure the template row is always hidden.\n  templateRow.style.display = \"none\";\n\n  addButton.on(\"click\", () => {\n    emptyState.getElement().style.display = \"none\";\n\n    // Clone the template row.\n    const newRowElement = templateRow.cloneNode(true) as HTMLElement;\n    // Remove the id from the clone so it doesn’t conflict with the template.\n    newRowElement.removeAttribute(\"id\");\n    newRowElement.style.display = \"table-row\";\n\n    const newRow = new WFComponent(newRowElement);\n    resetRow(newRow, config);\n    tableBody.appendChild(newRow);\n\n    populateProgramOptions(newRow, data, config);\n    attachRowEventListeners(newRow, data, config);\n  });\n}\n\nfunction resetRow(row: WFComponent, config: DynamicTableConfig): void {\n  const fieldsToReset = [\n    { field: \"program\", enable: true },\n    { field: \"workshop\", enable: false },\n    { field: \"session\", enable: false },\n    { field: \"student\", enable: false },\n  ];\n\n  fieldsToReset.forEach(item => {\n    const textEl = row.getChildAsComponent(config.fields[item.field].textSelector);\n    const selectEl = row.getChildAsComponent(config.fields[item.field].selectSelector);\n    textEl.getElement().style.display = \"none\";\n    (selectEl.getElement() as HTMLElement).style.display = \"block\";\n    (selectEl.getElement() as HTMLSelectElement).disabled = !item.enable;\n  });\n\n  const confirmButton = row.getChildAsComponent(\".add_registration_button\");\n  (confirmButton.getElement() as HTMLElement).style.display = \"block\";\n\n  row.removeCssClass(\"confirmed\");\n}\n\nfunction populateProgramOptions(\n  row: WFComponent,\n  data: StartRegistrationResponse,\n  config: DynamicTableConfig\n): void {\n  const programSelect = row.getChildAsComponent(config.fields.program.selectSelector);\n  (programSelect.getElement() as HTMLSelectElement).disabled = false;\n\n  const programsMap = new Map<number, string>();\n  data.sessions.forEach(session => {\n    if (session.program.Add_On_Program === config.isAddOn) {\n      programsMap.set(session.program.id, session.program.name);\n    }\n  });\n\n  let optionsHTML = '<option value=\"\">Select Program</option>';\n  programsMap.forEach((name, id) => {\n    optionsHTML += `<option value=\"${id}\">${name}</option>`;\n  });\n  programSelect.setHTML(optionsHTML);\n}\n\nfunction populateWorkshopOptions(\n  row: WFComponent,\n  data: StartRegistrationResponse,\n  selectedProgramId: string,\n  config: DynamicTableConfig\n): void {\n  const workshopSelect = row.getChildAsComponent(config.fields.workshop.selectSelector);\n  const filteredSessions = data.sessions.filter(session =>\n    session.program.id.toString() === selectedProgramId && session.workshop\n  );\n  if (filteredSessions.length > 0) {\n    (workshopSelect.getElement() as HTMLSelectElement).disabled = false;\n    let optionsHTML = '<option value=\"\">Select Workshop</option>';\n    const workshopsMap = new Map<number, string>();\n    filteredSessions.forEach(session => {\n      if (session.workshop) {\n        workshopsMap.set(session.workshop.id, session.workshop.Name);\n      }\n    });\n    workshopsMap.forEach((name, id) => {\n      optionsHTML += `<option value=\"${id}\">${name}</option>`;\n    });\n    workshopSelect.setHTML(optionsHTML);\n    (workshopSelect.getElement() as HTMLElement).style.display = \"block\";\n    const workshopText = row.getChildAsComponent(config.fields.workshop.textSelector);\n    workshopText.getElement().style.display = \"none\";\n  } else {\n    (workshopSelect.getElement() as HTMLSelectElement).disabled = true;\n    (workshopSelect.getElement() as HTMLElement).style.display = \"none\";\n    const workshopText = row.getChildAsComponent(config.fields.workshop.textSelector);\n    workshopText.setText(\" - \");\n    workshopText.getElement().style.display = \"block\";\n    populateSessionOptions(row, data, selectedProgramId, null, config);\n  }\n}\n\nfunction populateSessionOptions(\n  row: WFComponent,\n  data: StartRegistrationResponse,\n  selectedProgramId: string,\n  selectedWorkshopId: string | null,\n  config: DynamicTableConfig\n): void {\n  const sessionSelect = row.getChildAsComponent(config.fields.session.selectSelector);\n  (sessionSelect.getElement() as HTMLSelectElement).disabled = false;\n  let filteredSessions = data.sessions.filter(session =>\n    session.program.id.toString() === selectedProgramId\n  );\n  if (selectedWorkshopId) {\n    filteredSessions = filteredSessions.filter(session =>\n      session.workshop && session.workshop.id.toString() === selectedWorkshopId\n    );\n  }\n  let optionsHTML = '<option value=\"\">Select Session</option>';\n  filteredSessions.forEach(session => {\n    optionsHTML += `<option value=\"${session.id}\">${session.Name} (${session.Time_block})</option>`;\n  });\n  sessionSelect.setHTML(optionsHTML);\n}\n\nfunction populateStudentOptions(\n  row: WFComponent,\n  data: StartRegistrationResponse,\n  config: DynamicTableConfig\n): void {\n  const studentSelect = row.getChildAsComponent(config.fields.student.selectSelector);\n  (studentSelect.getElement() as HTMLSelectElement).disabled = false;\n  let optionsHTML = '<option value=\"\">Select Student</option>';\n  const currentSessionId = (row.getElement() as HTMLElement).getAttribute(\"data-session-id\");\n  const tableBodyEl = document.querySelector(config.tableBodySelector);\n  let usedStudentIds: string[] = [];\n  if (tableBodyEl && currentSessionId) {\n    const confirmedRows = Array.from(tableBodyEl.querySelectorAll(\"tr.confirmed\"));\n    confirmedRows.forEach(tr => {\n      if (tr.getAttribute(\"data-session-id\") === currentSessionId) {\n        const studentId = tr.getAttribute(\"data-student-id\");\n        if (studentId) {\n          usedStudentIds.push(studentId);\n        }\n      }\n    });\n  }\n  data.student_profiles.forEach(profile => {\n    if (!usedStudentIds.includes(profile.id.toString())) {\n      optionsHTML += `<option value=\"${profile.id}\">${profile.full_name}</option>`;\n    }\n  });\n  studentSelect.setHTML(optionsHTML);\n}\n\nfunction attachRowEventListeners(\n  row: WFComponent,\n  data: StartRegistrationResponse,\n  config: DynamicTableConfig\n): void {\n  const programSelect = row.getChildAsComponent(config.fields.program.selectSelector);\n  programSelect.on(\"change\", () => {\n    const selectEl = programSelect.getElement() as HTMLSelectElement;\n    const selectedProgramId = selectEl.value;\n    (row.getElement() as HTMLElement).setAttribute(\"data-program-id\", selectedProgramId);\n    populateWorkshopOptions(row, data, selectedProgramId, config);\n    const sessionSelect = row.getChildAsComponent(config.fields.session.selectSelector);\n    (sessionSelect.getElement() as HTMLSelectElement).disabled = false;\n  });\n\n  const workshopSelect = row.getChildAsComponent(config.fields.workshop.selectSelector);\n  workshopSelect.on(\"change\", () => {\n    const selectEl = workshopSelect.getElement() as HTMLSelectElement;\n    const selectedWorkshopId = selectEl.value;\n    (row.getElement() as HTMLElement).setAttribute(\"data-workshop-id\", selectedWorkshopId);\n    const confirmedProgramId = (row.getElement() as HTMLElement).getAttribute(\"data-program-id\") || \"\";\n    populateSessionOptions(row, data, confirmedProgramId, selectedWorkshopId, config);\n  });\n\n  const sessionSelect = row.getChildAsComponent(config.fields.session.selectSelector);\n  sessionSelect.on(\"change\", () => {\n    const selectEl = sessionSelect.getElement() as HTMLSelectElement;\n    const selectedSessionId = selectEl.value;\n    (row.getElement() as HTMLElement).setAttribute(\"data-session-id\", selectedSessionId);\n    const studentSelect = row.getChildAsComponent(config.fields.student.selectSelector);\n    (studentSelect.getElement() as HTMLSelectElement).disabled = false;\n    populateStudentOptions(row, data, config);\n  });\n\n  const studentSelect = row.getChildAsComponent(config.fields.student.selectSelector);\n  studentSelect.on(\"change\", () => {\n    const selectEl = studentSelect.getElement() as HTMLSelectElement;\n    (row.getElement() as HTMLElement).setAttribute(\"data-student-id\", selectEl.value);\n  });\n\n  const confirmButton = row.getChildAsComponent(\".add_registration_button\");\n  confirmButton.on(\"click\", () => {\n    const programSelectEl = row.getChildAsComponent(config.fields.program.selectSelector).getElement() as HTMLSelectElement;\n    const sessionSelectEl = row.getChildAsComponent(config.fields.session.selectSelector).getElement() as HTMLSelectElement;\n    const studentSelectEl = row.getChildAsComponent(config.fields.student.selectSelector).getElement() as HTMLSelectElement;\n  \n    if (!programSelectEl.value || !sessionSelectEl.value || !studentSelectEl.value) {\n      console.warn(\"Please select a Program, Session, and Student.\");\n      return;\n    }\n  \n    const tableBodyEl = document.querySelector(config.tableBodySelector);\n    const currentSessionId = (row.getElement() as HTMLElement).getAttribute(\"data-session-id\");\n    if (tableBodyEl && currentSessionId) {\n      const duplicate = Array.from(tableBodyEl.querySelectorAll(\"tr.confirmed\")).some(tr => {\n        return tr.getAttribute(\"data-session-id\") === currentSessionId &&\n               tr.getAttribute(\"data-student-id\") === studentSelectEl.value;\n      });\n      if (duplicate) {\n        console.warn(\"This student is already registered for the selected session.\");\n        return;\n      }\n    }\n  \n    (row.getElement() as HTMLElement).setAttribute(\"data-student-id\", studentSelectEl.value);\n  \n    const programText = row.getChildAsComponent(config.fields.program.textSelector);\n    programText.setText(programSelectEl.options[programSelectEl.selectedIndex].text);\n  \n    const workshopSelectEl = row.getChildAsComponent(config.fields.workshop.selectSelector).getElement() as HTMLSelectElement;\n    let workshopTextValue = workshopSelectEl.disabled\n      ? \" - \"\n      : workshopSelectEl.options[workshopSelectEl.selectedIndex].text;\n    const workshopText = row.getChildAsComponent(config.fields.workshop.textSelector);\n    workshopText.setText(workshopTextValue);\n  \n    const sessionText = row.getChildAsComponent(config.fields.session.textSelector);\n    sessionText.setText(sessionSelectEl.options[sessionSelectEl.selectedIndex].text);\n  \n    const studentText = row.getChildAsComponent(config.fields.student.textSelector);\n    studentText.setText(studentSelectEl.options[studentSelectEl.selectedIndex].text);\n  \n    const hideSelectParent = (selectSelector: string) => {\n      const comp = row.getChildAsComponent(selectSelector);\n      const parent = comp.getElement().parentElement;\n      if (parent) {\n        (parent as HTMLElement).style.display = \"none\";\n      }\n    };\n  \n    hideSelectParent(config.fields.program.selectSelector);\n    hideSelectParent(config.fields.workshop.selectSelector);\n    hideSelectParent(config.fields.session.selectSelector);\n    hideSelectParent(config.fields.student.selectSelector);\n  \n    (confirmButton.getElement() as HTMLElement).style.display = \"none\";\n    programText.getElement().style.display = \"block\";\n    workshopText.getElement().style.display = \"block\";\n    sessionText.getElement().style.display = \"block\";\n    studentText.getElement().style.display = \"block\";\n  \n    row.addCssClass(\"confirmed\");\n  \n    // Update state: add this row's data to registrationItems.\n    const currentItems = loadState().registrationItems || [];\n    const newItem = {\n      program_id: row.getAttribute(\"data-program-id\"),\n      session_id: row.getAttribute(\"data-session-id\"),\n      student_id: row.getAttribute(\"data-student-id\"),\n      program_name: programSelectEl.options[programSelectEl.selectedIndex].text,\n      workshop_name: workshopText.getElement().textContent || \"\",\n      session_name: sessionText.getElement().textContent || \"\",\n      student_name: studentText.getElement().textContent || \"\"\n    };\n    saveState({ registrationItems: [...currentItems, newItem] });\n  \n    document.dispatchEvent(new CustomEvent(\"registrationChanged\"));\n  });\n  \n  const deleteButton = row.getChildAsComponent(\".remove_registration_button\");\n  deleteButton.on(\"click\", () => {\n    row.remove();\n    const tableBodyEl = document.querySelector(config.tableBodySelector);\n    if (tableBodyEl) {\n      const templateRowId = config.templateRowSelector.startsWith(\"#\")\n        ? config.templateRowSelector.slice(1)\n        : config.templateRowSelector;\n      const emptyStateId = config.emptyStateSelector.startsWith(\"#\")\n        ? config.emptyStateSelector.slice(1)\n        : config.emptyStateSelector;\n      const userRows = Array.from(tableBodyEl.querySelectorAll(\"tr\")).filter(tr => {\n        return tr.id !== templateRowId && tr.id !== emptyStateId;\n      });\n      if (userRows.length === 0) {\n        const emptyRowEl = document.querySelector(config.emptyStateSelector) as HTMLElement;\n        if (emptyRowEl) {\n          emptyRowEl.style.display = \"table-row\";\n        }\n      }\n    }\n    // Remove corresponding item from state.registrationItems.\n    const state = loadState();\n    const updatedItems = (state.registrationItems || []).filter(item => {\n      return !(\n        item.session_id === row.getAttribute(\"data-session-id\") &&\n        item.student_id === row.getAttribute(\"data-student-id\")\n      );\n    });\n    saveState({ registrationItems: updatedItems });\n  \n    document.dispatchEvent(new CustomEvent(\"registrationChanged\"));\n  });\n}\n\nexport { attachRowEventListeners, populateProgramOptions };\n","// registrationState.ts\n\nexport interface RegistrationState {\n  fin_aid_requested: boolean;\n  selected_discount?: string;\n  financialAidData?: {\n    relationship: string;\n    annualIncome: string;\n    monthlyExpense: string;\n    previousParticipant: string;\n  };\n  subscriptionType?: string;\n  apiData?: any; // API response from startRegistration.\n  originalSubscriptionTotal?: number;\n  // NEW: Array of confirmed registration items with IDs and display text.\n  registrationItems?: {\n    program_id: string | null;\n    session_id: string | null;\n    student_id: string | null;\n    program_name?: string;\n    workshop_name?: string;\n    session_name?: string;\n    student_name?: string;\n  }[];\n}\n\nconst STORAGE_KEY = \"registrationState\";\n\nlet state: RegistrationState = loadStateFromStorage() || {\n  fin_aid_requested: false,\n  selected_discount: undefined,\n  financialAidData: undefined,\n  subscriptionType: \"year\",\n  apiData: undefined,\n  originalSubscriptionTotal: 0,\n  registrationItems: []\n};\n\nexport function loadState(): RegistrationState {\n  return state;\n}\n\nexport function saveState(newState: Partial<RegistrationState>): void {\n  state = { ...state, ...newState };\n  saveStateToStorage(state);\n}\n\nexport function resetRegistrationState(): void {\n  state = {\n    fin_aid_requested: false,\n    selected_discount: undefined,\n    financialAidData: undefined,\n    subscriptionType: \"year\",\n    apiData: undefined,\n    originalSubscriptionTotal: 0,\n    registrationItems: []\n  };\n  saveStateToStorage(state);\n}\n\nfunction loadStateFromStorage(): RegistrationState | null {\n  try {\n    const stored = localStorage.getItem(STORAGE_KEY);\n    return stored ? JSON.parse(stored) : null;\n  } catch (error) {\n    console.error(\"Error loading state from storage:\", error);\n    return null;\n  }\n}\n\nfunction saveStateToStorage(state: RegistrationState): void {\n  try {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(state));\n  } catch (error) {\n    console.error(\"Error saving state to storage:\", error);\n  }\n}\n","import { WFComponent } from \"@xatom/core\";\nimport { StartRegistrationResponse, Session } from \"../../../api/startRegistration\";\nimport { saveState, loadState } from \"../state/registrationState\";\nimport { updateTotalAmount } from \"./updateTotalAmount\";\n\ninterface LineItem {\n  productName: string;\n  quantity: number;\n  unitPrice: number;\n  total: number;\n}\n\n/**\n * Retrieves a session by its ID.\n */\nfunction getSessionById(sessions: Session[], sessionId: string): Session | undefined {\n  const session = sessions.find(s => s.id.toString() === sessionId);\n  console.log(`[DEBUG] getSessionById: Looking for session id ${sessionId}:`, session);\n  return session;\n}\n\n/**\n * Groups line items by productName.\n */\nfunction groupLineItems(items: LineItem[]): LineItem[] {\n  const grouped = new Map<string, LineItem>();\n  items.forEach(item => {\n    const key = item.productName;\n    if (grouped.has(key)) {\n      const existing = grouped.get(key)!;\n      existing.quantity += item.quantity;\n      existing.total += item.total;\n      grouped.set(key, existing);\n    } else {\n      grouped.set(key, { ...item });\n    }\n  });\n  const finalItems = Array.from(grouped.values());\n  console.log(\"[DEBUG] groupLineItems: Final grouped items:\", finalItems);\n  return finalItems;\n}\n\n/**\n * Updates the deposit line items using the deposit product’s single sale price.\n */\nfunction updateDepositLineItems(apiData: StartRegistrationResponse, subscriptionType: string): number {\n  console.log(\"[DEBUG] updateDepositLineItems: Starting deposit update...\");\n  const subscriptionRows = document.querySelectorAll(\"#subscription_items_list tr.confirmed\");\n  console.log(\"[DEBUG] updateDepositLineItems: Found\", subscriptionRows.length, \"confirmed subscription rows.\");\n  const depositItems: LineItem[] = [];\n  subscriptionRows.forEach((row, index) => {\n    const sessionId = row.getAttribute(\"data-session-id\");\n    console.log(`[DEBUG] updateDepositLineItems: Processing row ${index + 1}, session id:`, sessionId);\n    if (!sessionId) return;\n    const session = getSessionById(apiData.sessions, sessionId);\n    if (!session || !session.deposit_product) {\n      console.log(`[DEBUG] updateDepositLineItems: No session or deposit product found for session id ${sessionId}`);\n      return;\n    }\n    // Use the deposit product’s single sale price.\n    const depositPriceStr = session.deposit_product.Displayed_single_sale_price;\n    const depositUnitPrice = parseFloat(depositPriceStr.replace(/[^0-9\\.]/g, \"\")) || 0;\n    console.log(`[DEBUG] updateDepositLineItems: Deposit price string: \"${depositPriceStr}\", parsed unit price: ${depositUnitPrice}`);\n    depositItems.push({\n      productName: session.Name,\n      quantity: 1,\n      unitPrice: depositUnitPrice,\n      total: depositUnitPrice\n    });\n  });\n  console.log(\"[DEBUG] updateDepositLineItems: Deposit Items Array before grouping:\", depositItems);\n  const finalDepositItems = groupLineItems(depositItems);\n  let depositHTML = \"\";\n  finalDepositItems.forEach((item, index) => {\n    depositHTML += `\n      <div class=\"line_item u-hflex-left-center u-text-small\">\n        <div id=\"deposit_item_product\" class=\"text-weight-bold\">${item.productName}</div>\n        <div id=\"deposit_item_unit_amount\" class=\"line_item_unit_amount\">$${item.unitPrice.toFixed(2)}</div>\n        <div>x</div>\n        <div id=\"deposit_item_quantity\" class=\"line_item_quantity\">${item.quantity}</div>\n        <div id=\"deposit_item_total\" class=\"line_item_total text-weight-bold\">$${item.total.toFixed(2)}</div>\n      </div>\n    `;\n    console.log(`[DEBUG] updateDepositLineItems: Built deposit line item ${index + 1}:`, item);\n  });\n  new WFComponent(\"#deposit_line_items_list\").setHTML(depositHTML);\n  const depositTotal = finalDepositItems.reduce((acc, item) => acc + item.total, 0);\n  console.log(\"[DEBUG] updateDepositLineItems: Calculated deposit total:\", depositTotal);\n  new WFComponent(\"#deposit_total\").setText(`$${depositTotal.toFixed(2)}`);\n  \n  // Toggle container display based on whether any deposit items exist.\n  const depositContainer = new WFComponent(\"#deposit_line_items_container\");\n  const displayStyle = finalDepositItems.length > 0 ? \"flex\" : \"none\";\n  depositContainer.getElement().style.display = displayStyle;\n  console.log(\"[DEBUG] updateDepositLineItems: Deposit container display set to:\", displayStyle);\n  \n  return depositTotal;\n}\n\n/**\n * Updates the checkout line items UI.\n * - Builds and displays subscription line items.\n * - Determines if deposit line items should be displayed:\n *     • Always if pending student profiles exist.\n *     • Otherwise, only for monthly subscriptions if the registration is early.\n * - Updates the overall total and early alert accordingly.\n */\nexport function updateCheckoutLineItems(apiData: StartRegistrationResponse): void {\n  console.log(\"[DEBUG] updateCheckoutLineItems: Running updateCheckoutLineItems...\");\n  const subscriptionTypeSelect = document.getElementById(\"subscription_type\") as HTMLSelectElement;\n  if (!subscriptionTypeSelect) {\n    console.warn(\"[DEBUG] updateCheckoutLineItems: Subscription type select not found.\");\n    return;\n  }\n  const subscriptionType = subscriptionTypeSelect.value; // \"year\", \"month\", or \"semester\"\n  console.log(\"[DEBUG] updateCheckoutLineItems: Subscription type selected:\", subscriptionType);\n\n  const suffix = subscriptionType === \"year\" ? \"/year\"\n                : subscriptionType === \"month\" ? \"/month\"\n                : subscriptionType === \"semester\" ? \"/semester\"\n                : \"\";\n\n  // Process subscription items.\n  const subscriptionRows = document.querySelectorAll(\"#subscription_items_list tr.confirmed\");\n  console.log(\"[DEBUG] updateCheckoutLineItems: Found\", subscriptionRows.length, \"confirmed subscription rows.\");\n  const subscriptionItems: LineItem[] = [];\n  subscriptionRows.forEach((row, index) => {\n    const sessionId = row.getAttribute(\"data-session-id\");\n    console.log(`[DEBUG] updateCheckoutLineItems: Processing subscription row ${index + 1}, session id:`, sessionId);\n    if (!sessionId) return;\n    const session = getSessionById(apiData.sessions, sessionId);\n    if (!session) return;\n    let priceStr = \"\";\n    if (subscriptionType === \"year\") {\n      priceStr = session.tuition_product.Displayed_annual_price;\n    } else if (subscriptionType === \"month\") {\n      priceStr = session.tuition_product.Displayed_monthly_price;\n    } else if (subscriptionType === \"semester\") {\n      priceStr = session.tuition_product.Displayed_semester_price;\n    }\n    console.log(`[DEBUG] updateCheckoutLineItems: Price string for session ${sessionId}:`, priceStr);\n    const unitPrice = parseFloat(priceStr.replace(/[^0-9\\.]/g, \"\")) || 0;\n    console.log(`[DEBUG] updateCheckoutLineItems: Parsed unit price for session ${sessionId}:`, unitPrice);\n    subscriptionItems.push({\n      productName: session.Name,\n      quantity: 1,\n      unitPrice: unitPrice,\n      total: unitPrice\n    });\n  });\n  console.log(\"[DEBUG] updateCheckoutLineItems: Subscription Items Array before grouping:\", subscriptionItems);\n  const finalSubscriptionItems = groupLineItems(subscriptionItems);\n\n  let subscriptionHTML = \"\";\n  finalSubscriptionItems.forEach((item, index) => {\n    subscriptionHTML += `\n      <div class=\"line_item u-hflex-left-center u-text-small\">\n        <div id=\"subscription_item_product\" class=\"text-weight-bold line_item_product\">${item.productName}</div>\n        <div id=\"subscription_item_unit_amount\" class=\"line_item_unit_amount\">$${item.unitPrice.toFixed(2)}</div>\n        <div>x</div>\n        <div id=\"subscription_item_quantity\" class=\"line_item_quantity\">${item.quantity}</div>\n        <div id=\"subscription_item_total\" class=\"line_item_total text-weight-bold\">$${item.total.toFixed(2)} ${suffix}</div>\n      </div>\n    `;\n    console.log(`[DEBUG] updateCheckoutLineItems: Built subscription line item ${index + 1}:`, item);\n  });\n  new WFComponent(\"#subscription_line_items_list\").setHTML(subscriptionHTML);\n\n  const subscriptionItemsWrapper = new WFComponent(\"#subscription_line_items_wrap\");\n  const subscriptionEmptyState = new WFComponent(\"#subscription_line_items_empty\");\n  if (finalSubscriptionItems.length > 0) {\n    subscriptionItemsWrapper.getElement().style.display = \"flex\";\n    subscriptionEmptyState.getElement().style.display = \"none\";\n  } else {\n    subscriptionItemsWrapper.getElement().style.display = \"none\";\n    subscriptionEmptyState.getElement().style.display = \"block\";\n  }\n\n  const subscriptionTotal = finalSubscriptionItems.reduce((acc, item) => acc + item.total, 0);\n  console.log(\"[DEBUG] updateCheckoutLineItems: Subscription Total:\", subscriptionTotal);\n  saveState({ originalSubscriptionTotal: subscriptionTotal });\n  console.log(\"[DEBUG] updateCheckoutLineItems: Updated originalSubscriptionTotal:\", subscriptionTotal);\n\n  // Determine early registration for monthly subscriptions.\n  let earlyRegistration = false;\n  let earliestStartDate: number | null = null;\n  if (subscriptionType === \"month\") {\n    subscriptionRows.forEach(row => {\n      const sessionId = row.getAttribute(\"data-session-id\");\n      if (!sessionId) return;\n      const session = getSessionById(apiData.sessions, sessionId);\n      if (!session) return;\n      const startDate = session.program[\"1st_Semester_Start_Date\"];\n      if (startDate && startDate > Date.now()) {\n        earlyRegistration = true;\n        if (earliestStartDate === null || startDate < earliestStartDate) {\n          earliestStartDate = startDate;\n        }\n      }\n    });\n  }\n\n  // Check for pending student profiles.\n  const pendingStudents = apiData.student_profiles\n    ? apiData.student_profiles.filter((profile: any) =>\n        profile.Status && profile.Status.toLowerCase() === \"pending\"\n      )\n    : [];\n\n  // Determine if deposit line items should display:\n  // • Always if pending students exist.\n  // • Otherwise, only if subscriptionType is \"month\" and earlyRegistration is true.\n  let depositShouldDisplay = false;\n  if (pendingStudents.length > 0) {\n    depositShouldDisplay = true;\n  } else if (subscriptionType === \"month\" && earlyRegistration) {\n    depositShouldDisplay = true;\n  }\n\n  let depositTotal = 0;\n  if (depositShouldDisplay) {\n    console.log(\"[DEBUG] updateCheckoutLineItems: Pending students or early registration detected.\");\n    depositTotal = updateDepositLineItems(apiData, subscriptionType);\n    console.log(\"[DEBUG] updateCheckoutLineItems: Deposit total computed:\", depositTotal);\n  } else {\n    // Hide deposit container if not applicable.\n    new WFComponent(\"#deposit_line_items_container\").getElement().style.display = \"none\";\n    console.log(\"[DEBUG] updateCheckoutLineItems: Deposit container hidden.\");\n  }\n\n  // Update overall total amount due.\n  updateTotalAmount(false, subscriptionType, depositTotal);\n\n  // Update early registration alert.\n  updateEarlyAlert(apiData, subscriptionType);\n}\n\n/**\n * If the subscription is monthly, checks confirmed rows for the earliest upcoming start date.\n * If found, displays the early alert with that date; otherwise, hides the alert.\n */\nfunction updateEarlyAlert(apiData: StartRegistrationResponse, subscriptionType: string): void {\n  if (subscriptionType !== \"month\") {\n    new WFComponent(\"#alertBoxEarly\").getElement().style.display = \"none\";\n    return;\n  }\n  const confirmedRows = document.querySelectorAll(\"#subscription_items_list tr.confirmed\");\n  let earliestStartDate: number | null = null;\n  confirmedRows.forEach(row => {\n    const sessionId = row.getAttribute(\"data-session-id\");\n    if (!sessionId) return;\n    const session = getSessionById(apiData.sessions, sessionId);\n    if (!session) return;\n    const startDate = session.program[\"1st_Semester_Start_Date\"];\n    if (startDate && startDate > Date.now()) {\n      if (earliestStartDate === null || startDate < earliestStartDate) {\n        earliestStartDate = startDate;\n      }\n    }\n  });\n  const alertBox = new WFComponent(\"#alertBoxEarly\");\n  const startDateSpan = new WFComponent(\"#subscription_start_date\");\n  if (earliestStartDate) {\n    const formattedDate = new Date(earliestStartDate).toLocaleDateString();\n    startDateSpan.setText(formattedDate);\n    alertBox.getElement().style.display = \"block\";\n    console.log(\"[DEBUG] updateEarlyAlert: Displaying early alert with start date:\", formattedDate);\n  } else {\n    alertBox.getElement().style.display = \"none\";\n    console.log(\"[DEBUG] updateEarlyAlert: No upcoming start dates found, hiding early alert.\");\n  }\n}\n","import { WFComponent } from \"@xatom/core\";\nimport { loadState } from \"../state/registrationState\";\n\nexport function updateTotalAmount(\n  includeDeposit: boolean,\n  subscriptionType: string | undefined,\n  depositTotal: number = 0\n): void {\n  const state = loadState();\n  const originalTotal = state.originalSubscriptionTotal || 0;\n  const discount = state.selected_discount ? parseFloat(state.selected_discount) : 0;\n  const discountAmount = originalTotal * (discount / 100);\n  const discountedSubscriptionTotal = originalTotal - discountAmount;\n\n  // If depositTotal is provided (i.e. pending students exist) then that is the due amount.\n  const overallTotal = depositTotal > 0 ? depositTotal : discountedSubscriptionTotal;\n  const suffix = subscriptionType ? \"/\" + subscriptionType : \"\";\n\n  const discountPill = new WFComponent(\"#subscription_discount_pill\");\n  discountPill.getElement().style.display = discount > 0 ? \"block\" : \"none\";\n\n  const discountApplied = new WFComponent(\"#subscription_discount_applied\");\n  discountApplied.setText(discount > 0 ? `${discount}%` : \"\");\n\n  const originalAmount = new WFComponent(\"#subscription_original_amount\");\n  if (discount > 0) {\n    originalAmount.setText(`was $${originalTotal.toFixed(2)} ${suffix}`);\n    originalAmount.getElement().style.display = \"block\";\n  } else {\n    originalAmount.getElement().style.display = \"none\";\n  }\n\n  const subscriptionTotal = new WFComponent(\"#subscription_total\");\n  subscriptionTotal.setText(`$${discountedSubscriptionTotal.toFixed(2)} ${suffix}`);\n\n  const overallTotalDisplay = new WFComponent(\"#total_amount_due\");\n  overallTotalDisplay.setText(`$${overallTotal.toFixed(2)}`);\n}\n","import { WFComponent } from \"@xatom/core\";\nimport { loadState, saveState } from \"../state/registrationState\";\nimport { updateTotalAmount } from \"./updateTotalAmount\";\nimport { toggleError, setupValidation } from \"../../../utils/formUtils\";\nimport { validateNotEmpty, validateSelectField } from \"../../../utils/validationUtils\";\n\nexport const initializeFinancialAid = (): void => {\n  // Load any saved financial aid data to pre-populate the form.\n  loadFinancialAidData();\n\n  const financialAidCheckbox = new WFComponent(\"#requestFinAid\");\n  const financialAidDialog = new WFComponent(\"#finaidForm\");\n\n  financialAidCheckbox.on(\"change\", () => {\n    const checkboxElement = financialAidCheckbox.getElement() as HTMLInputElement;\n    if (checkboxElement.checked) {\n      (financialAidDialog.getElement() as HTMLDialogElement).showModal();\n    } else {\n      saveState({ fin_aid_requested: false, selected_discount: undefined });\n      document.dispatchEvent(new CustomEvent(\"registrationChanged\"));\n    }\n  });\n\n  financialAidDialog.getElement()?.addEventListener(\"close\", () => {\n    const state = loadState();\n    if (!state.selected_discount) {\n      (financialAidCheckbox.getElement() as HTMLInputElement).checked = false;\n    }\n  });\n\n  setupFinancialAidFormValidation();\n\n  const submitButton = new WFComponent(\"#submitfinancialAid\");\n  submitButton.on(\"click\", () => {\n    if (validateFinancialAidForm()) {\n      saveFinancialAidData();\n      showSuccessState();\n    }\n  });\n\n  attachCloseDialogHandler(financialAidDialog);\n\n  const annualIncomeInput = new WFComponent(\"#annualIncome\");\n  const monthlyExpenseInput = new WFComponent(\"#monthlyExpense\");\n\n  const formatAndSetInputValue = (component: WFComponent): void => {\n    const inputEl = component.getElement() as HTMLInputElement;\n    let value = inputEl.value.replace(/[^\\d.-]/g, \"\");\n    let cursorPos = inputEl.selectionStart || 0;\n    const commaCountBefore = (inputEl.value.slice(0, cursorPos).match(/,/g) || []).length;\n    if (value.includes(\".\")) {\n      const [intPart, decPart] = value.split(\".\");\n      value = `${intPart}.${decPart.slice(0, 2)}`;\n    }\n    const formattedValue = formatNumber(value);\n    inputEl.value = formattedValue;\n    const commaCountAfter = (formattedValue.slice(0, cursorPos).match(/,/g) || []).length;\n    cursorPos += commaCountAfter - commaCountBefore;\n    if (cursorPos > formattedValue.length) cursorPos = formattedValue.length;\n    inputEl.setSelectionRange(cursorPos, cursorPos);\n  };\n\n  const formatNumber = (value: string): string => {\n    const num = parseFloat(value.replace(/,/g, \"\"));\n    if (isNaN(num)) return value;\n    return num.toLocaleString(\"en-US\", { minimumFractionDigits: 0, maximumFractionDigits: 0 });\n  };\n\n  annualIncomeInput.on(\"input\", () => formatAndSetInputValue(annualIncomeInput));\n  monthlyExpenseInput.on(\"input\", () => formatAndSetInputValue(monthlyExpenseInput));\n};\n\n/**\n * Loads saved financial aid data from state and populates the form fields.\n * The checkbox is set to checked only if fin_aid_requested is true.\n */\nfunction loadFinancialAidData(): void {\n  const state = loadState();\n  const financialAidCheckbox = new WFComponent(\"#requestFinAid\");\n  if (state.fin_aid_requested && state.financialAidData) {\n    (financialAidCheckbox.getElement() as HTMLInputElement).checked = true;\n    \n    const relationshipInput = new WFComponent(\"#finaidRelationship\");\n    const annualIncomeInput = new WFComponent(\"#annualIncome\");\n    const monthlyExpenseInput = new WFComponent(\"#monthlyExpense\");\n    const previousParticipantValue = state.financialAidData.previousParticipant;\n    const previousParticipantInputs = document.getElementsByName(\"previous_participant\") as NodeListOf<HTMLInputElement>;\n\n    (relationshipInput.getElement() as HTMLSelectElement).value = state.financialAidData.relationship || \"\";\n    (annualIncomeInput.getElement() as HTMLInputElement).value = state.financialAidData.annualIncome || \"\";\n    (monthlyExpenseInput.getElement() as HTMLInputElement).value = state.financialAidData.monthlyExpense || \"\";\n    \n    previousParticipantInputs.forEach(radio => {\n      radio.checked = (radio.value === previousParticipantValue);\n    });\n    console.log(\"[DEBUG] loadFinancialAidData: Financial aid data loaded from state.\");\n  } else {\n    (financialAidCheckbox.getElement() as HTMLInputElement).checked = false;\n  }\n};\n\n/**\n * Sets up field-level validation for the financial aid form.\n */\nconst setupFinancialAidFormValidation = (): void => {\n  const relationshipInput = new WFComponent(\"#finaidRelationship\");\n  const relationshipError = new WFComponent(\"#finaidRelationshipError\");\n  const previousParticipantInputs = document.getElementsByName(\"previous_participant\");\n  const previousParticipantError = new WFComponent(\"#previousParticipantError\");\n  const annualIncomeInput = new WFComponent(\"#annualIncome\");\n  const annualIncomeError = new WFComponent(\"#annualIncomeError\");\n  const monthlyExpenseInput = new WFComponent(\"#monthlyExpense\");\n  const monthlyExpenseError = new WFComponent(\"#monthlyExpenseError\");\n\n  setupValidation(relationshipInput, relationshipError, () =>\n    validateSelectField(getComponentValue(relationshipInput))\n      ? \"\"\n      : \"Please select a relationship.\"\n  );\n\n  setupValidation(annualIncomeInput, annualIncomeError, () =>\n    validateNotEmpty(getComponentValue(annualIncomeInput))\n      ? \"\"\n      : \"Please enter your annual household income.\"\n  );\n\n  setupValidation(monthlyExpenseInput, monthlyExpenseError, () =>\n    validateNotEmpty(getComponentValue(monthlyExpenseInput))\n      ? \"\"\n      : \"Please enter your monthly expenditure.\"\n  );\n\n  Array.from(previousParticipantInputs).forEach((input) => {\n    setupValidation(new WFComponent(input as HTMLElement), previousParticipantError, () => {\n      const selected = Array.from(previousParticipantInputs).some(radio => (radio as HTMLInputElement).checked);\n      return selected ? \"\" : \"Please select an option.\";\n    });\n  });\n};\n\n/**\n * Validates the financial aid form.\n */\nconst validateFinancialAidForm = (): boolean => {\n  const relationshipInput = new WFComponent(\"#finaidRelationship\");\n  const annualIncomeInput = new WFComponent(\"#annualIncome\");\n  const monthlyExpenseInput = new WFComponent(\"#monthlyExpense\");\n  const previousParticipantInputs = document.getElementsByName(\"previous_participant\");\n\n  const isRelationshipValid = validateSelectField(getComponentValue(relationshipInput));\n  toggleError(new WFComponent(\"#finaidRelationshipError\"), \"Please select a relationship.\", !isRelationshipValid);\n\n  const isAnnualIncomeValid = validateNotEmpty(getComponentValue(annualIncomeInput));\n  toggleError(new WFComponent(\"#annualIncomeError\"), \"Please enter your annual household income.\", !isAnnualIncomeValid);\n\n  const isMonthlyExpenseValid = validateNotEmpty(getComponentValue(monthlyExpenseInput));\n  toggleError(new WFComponent(\"#monthlyExpenseError\"), \"Please enter your monthly expenditure.\", !isMonthlyExpenseValid);\n\n  const isPreviousParticipantValid = Array.from(previousParticipantInputs).some(radio => (radio as HTMLInputElement).checked);\n  toggleError(new WFComponent(\"#previousParticipantError\"), \"Please select an option.\", !isPreviousParticipantValid);\n\n  return isRelationshipValid && isAnnualIncomeValid && isMonthlyExpenseValid && isPreviousParticipantValid;\n};\n\n/**\n * Saves the financial aid data to state.\n */\nconst saveFinancialAidData = (): void => {\n  const relationship = (new WFComponent(\"#finaidRelationship\").getElement() as HTMLSelectElement).value;\n  const annualIncome = (new WFComponent(\"#annualIncome\").getElement() as HTMLInputElement).value;\n  const monthlyExpense = (new WFComponent(\"#monthlyExpense\").getElement() as HTMLInputElement).value;\n  const previousParticipantInput = document.querySelector(\"input[name='previous_participant']:checked\") as HTMLInputElement | null;\n  const previousParticipant = previousParticipantInput ? previousParticipantInput.value : \"\";\n\n  saveState({\n    fin_aid_requested: true,\n    selected_discount: \"\",\n    financialAidData: { relationship, annualIncome, monthlyExpense, previousParticipant },\n  });\n\n  console.log(\"[DEBUG] saveFinancialAidData: Financial aid data saved:\", { relationship, annualIncome, monthlyExpense, previousParticipant });\n};\n\n/**\n * Shows a success state for the financial aid form.\n */\nconst showSuccessState = (): void => {\n  const successMessage = new WFComponent(\".success-message\");\n  const form = new WFComponent(\"#wf-form-Finaid-Form\");\n  form.setStyle({ display: \"none\" });\n  successMessage.setStyle({ display: \"block\" });\n\n  const applyDiscountButton = new WFComponent(\"#applyDiscount\");\n  const backFinAidButton = new WFComponent(\"#backFinAid\");\n  const financialAidDialog = new WFComponent(\"#finaidForm\");\n\n  applyDiscountButton.on(\"click\", () => {\n    const selectedDiscount = document.querySelector(\"input[name='discountValue']:checked\") as HTMLInputElement | null;\n    if (selectedDiscount) {\n      const discountValue = selectedDiscount.value;\n      saveState({ selected_discount: discountValue, fin_aid_requested: true });\n      document.dispatchEvent(new CustomEvent(\"registrationChanged\"));\n      closeFinancialAidDialog(financialAidDialog);\n    } else {\n      console.warn(\"No discount selected.\");\n    }\n  });\n\n  backFinAidButton.on(\"click\", () => {\n    successMessage.setStyle({ display: \"none\" });\n    form.setStyle({ display: \"flex\" });\n  });\n};\n\nconst closeFinancialAidDialog = (dialog: WFComponent): void => {\n  (dialog.getElement() as HTMLDialogElement).close();\n};\n\nconst attachCloseDialogHandler = (dialog: WFComponent): void => {\n  const closeButton = new WFComponent(\"#close-dialog-btn\");\n  closeButton.on(\"click\", () => closeFinancialAidDialog(dialog));\n\n  dialog.getElement()?.addEventListener(\"click\", (event) => {\n    const rect = (dialog.getElement() as HTMLDialogElement).getBoundingClientRect();\n    if (\n      event.clientX < rect.left ||\n      event.clientX > rect.right ||\n      event.clientY < rect.top ||\n      event.clientY > rect.bottom\n    ) {\n      closeFinancialAidDialog(dialog);\n    }\n  });\n};\n\nconst getComponentValue = (component: WFComponent): string => {\n  const element = component.getElement() as HTMLInputElement | HTMLSelectElement;\n  return element.value;\n};\n\nexport { saveFinancialAidData, loadFinancialAidData };\n","import { WFComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../api/apiConfig\";\nimport { userAuth } from \"../auth/authConfig\";\n\nexport function toggleError(\n  errorMessageComponent: WFComponent<any>,\n  message: string,\n  show: boolean\n): void {\n  errorMessageComponent.updateTextViaAttrVar({ text: show ? message : \"\" });\n  errorMessageComponent.setStyle({ display: show ? \"flex\" : \"none\" });\n}\n\nexport function setupValidation(\n  inputComponent: WFComponent,\n  errorComponent: WFComponent,\n  validate: () => string,\n  requestErrorComponent?: WFComponent // Optional component to clear on input change\n) {\n  const validateAndUpdate = () => {\n    const errorMessage = validate();\n    toggleError(errorComponent, errorMessage, !!errorMessage);\n    if (requestErrorComponent && errorMessage === \"\") {\n      // Clear request error message when the user is correcting the input\n      toggleError(requestErrorComponent, \"\", false);\n    }\n  };\n\n  // Attach event listeners for real-time validation\n  inputComponent.on(\"input\", validateAndUpdate);\n  inputComponent.on(\"blur\", validateAndUpdate);\n  inputComponent.on(\"change\", validateAndUpdate);\n}\n\nexport function createValidationFunction(\n  inputComponent: WFComponent,\n  validationFn: (input: string) => boolean,\n  errorMessage: string\n): () => string {\n  return () => {\n    const inputElement = inputComponent.getElement() as HTMLInputElement;\n    const isValid = validationFn(inputElement.value);\n    return isValid ? \"\" : errorMessage;\n  };\n}\n\nexport function createCheckboxValidationFunction(\n  checkboxComponent: WFComponent,\n  errorMessage: string\n): () => string {\n  return () => {\n    const checkbox = checkboxComponent.getElement() as HTMLInputElement;\n    return checkbox.checked ? \"\" : errorMessage;\n  };\n}\n\nexport function setupCheckboxValidation(\n  checkboxComponent: WFComponent,\n  checkboxErrorComponent: WFComponent,\n  errorMessage: string\n) {\n  const validate = createCheckboxValidationFunction(\n    checkboxComponent,\n    errorMessage\n  );\n  setupValidation(checkboxComponent, checkboxErrorComponent, validate);\n}\n\nexport function validateSelectedSessions(\n  selectedSessions: { sessionId: string; studentIds: string[] }[],\n  errorMessageComponent: WFComponent<any>,\n  errorMessage: string\n): boolean {\n  const isValid =\n    selectedSessions.length > 0 &&\n    selectedSessions.some((session) => session.studentIds.length > 0);\n\n  if (!isValid) {\n    toggleError(errorMessageComponent, errorMessage, true);\n  } else {\n    toggleError(errorMessageComponent, \"\", false);\n  }\n\n  return isValid;\n}\n\ntype fileUploadResponse = {\n  status: string;\n  url: {\n    profile_pic: {\n      url: string;\n    };\n  };\n};\n\n/**\n * Updates the user's profile picture URL in the authentication system.\n * @param {string} imageUrl - The URL of the uploaded image.\n */\nexport function setProfilePicUrl(imageUrl: string): void {\n  const user = userAuth.getUser();\n  if (user && user.profile) {\n    // Ensure the profile_picture object exists\n    user.profile.profile_pic = user.profile.profile_pic || { url: \"\" };\n\n    // Set the profile picture URL\n    user.profile.profile_pic.url = imageUrl;\n    userAuth.setUser(user);\n    localStorage.setItem(\"auth_user\", JSON.stringify(user));\n  }\n}\n\n/**\n * Handles file upload and displays the uploaded image.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */\n/**\n * Handles file upload and displays the uploaded image.\n * Only JPEG files less than 2 MB can be uploaded.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */\nexport function setupFileUpload(\n  fileInput: WFComponent,\n  fileInputError: WFComponent,\n  fileInputSuccess: WFComponent,\n  uploadEndpoint: string\n): Promise<string> {\n  const profilePictureImage = new WFImage(\"#profilePictureImage\");\n  const uploadAnimation = new WFComponent(\"#uploadAnimation\");\n\n  const overlay = new WFComponent(\".drop-zone\");\n  let dragCounter = 0;\n\n  return new Promise<string>((resolve) => {\n    const handleFile = (file: File) => {\n      // Validate file type and size\n      const validTypes = [\"image/jpeg\", \"image/jpg\"];\n      const maxSizeInBytes = 2 * 1024 * 1024; // 2 MB\n\n      if (\n        !validTypes.includes(file.type) &&\n        !/\\.(jpg|jpeg)$/i.test(file.name)\n      ) {\n        const errorMessage = \"Only JPEG images are allowed.\";\n        toggleError(fileInputError, errorMessage, true);\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n        return;\n      }\n\n      if (file.size > maxSizeInBytes) {\n        const errorMessage = \"File size must be less than 2 MB.\";\n        toggleError(fileInputError, errorMessage, true);\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n        return;\n      }\n\n      // Show upload animation immediately\n      uploadAnimation.setStyle({ display: \"flex\" });\n\n      // Hide error and success messages\n      fileInputError.setStyle({ display: \"none\" });\n      fileInputSuccess.setStyle({ display: \"none\" });\n\n      const reader = new FileReader();\n\n      // Display preview image as soon as the file is loaded into memory\n      reader.onload = (event) => {\n        // Set the preview image for the profile picture\n        const result = event.target?.result as string;\n        profilePictureImage.setImage(result);\n\n        // Hide overlay once the image is set\n        overlay.setStyle({ display: \"none\" });\n      };\n\n      reader.readAsDataURL(file);\n\n      const formData = new FormData();\n      formData.append(\"profile_picture\", file);\n\n      const existingStudent = localStorage.getItem(\"current_student\");\n      if (existingStudent) {\n        const student = JSON.parse(existingStudent);\n        formData.append(\"student_profile_id\", student.id.toString());\n      }\n\n      // Send the file to the server\n      const postRequest = apiClient.post<fileUploadResponse>(uploadEndpoint, {\n        data: formData,\n      });\n\n      postRequest.onData((response) => {\n        if (response.status === \"success\") {\n          const imageUrl = response.url.profile_pic.url;\n\n          // Update the profile picture URL in the user session and local storage\n          setProfilePicUrl(imageUrl);\n\n          // Update the image for other parts of the UI as well\n          profilePictureImage.setImage(imageUrl);\n\n          // Store the URL in local storage\n          localStorage.setItem(\"image_upload\", imageUrl);\n\n          // Show success message and hide upload animation\n          fileInputSuccess.setStyle({ display: \"flex\" });\n          uploadAnimation.setStyle({ display: \"none\" });\n\n          // Resolve with the uploaded image URL\n          resolve(imageUrl);\n        } else {\n          const errorMessage = \"Failed to upload profile picture.\";\n          toggleError(fileInputError, errorMessage, true);\n          uploadAnimation.setStyle({ display: \"none\" });\n          overlay.setStyle({ display: \"none\" });\n          dragCounter = 0;\n          // Reset file input value\n          (fileInput.getElement() as HTMLInputElement).value = \"\";\n        }\n      });\n\n      postRequest.onError((error) => {\n        let errorMessage = \"An error occurred during image upload.\";\n        if (error.response && error.response.data) {\n          errorMessage = error.response.data.message || errorMessage;\n        } else if (error.message) {\n          errorMessage = error.message;\n        }\n\n        // Show error message and hide upload animation\n        toggleError(fileInputError, errorMessage, true);\n        uploadAnimation.setStyle({ display: \"none\" });\n        overlay.setStyle({ display: \"none\" });\n        dragCounter = 0;\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n      });\n\n      // Make the API call\n      postRequest.fetch();\n    };\n\n    // Event listener for file input changes\n    fileInput.on(\"change\", () => {\n      const file = (fileInput.getElement() as HTMLInputElement).files?.[0];\n      if (file) {\n        handleFile(file);\n      }\n    });\n\n    // Event listeners for drag-and-drop\n    const dragZoneElement = document.body;\n    dragZoneElement.addEventListener(\"dragenter\", (event) => {\n      event.preventDefault();\n      dragCounter++;\n      if (dragCounter === 1) {\n        overlay.setStyle({ display: \"flex\" });\n      }\n    });\n\n    dragZoneElement.addEventListener(\"dragleave\", () => {\n      dragCounter--;\n      if (dragCounter <= 0) {\n        overlay.setStyle({ display: \"none\" });\n        dragCounter = 0;\n      }\n    });\n\n    dragZoneElement.addEventListener(\"dragover\", (event) => {\n      event.preventDefault();\n    });\n\n    dragZoneElement.addEventListener(\"drop\", (event) => {\n      event.preventDefault();\n\n      const files = event.dataTransfer?.files;\n      if (files?.length) {\n        handleFile(files[0]);\n      }\n\n      overlay.setStyle({ display: \"none\" });\n      dragCounter = 0;\n    });\n  });\n}\n\n// src/utils/formUtils.ts\n\n/**\n * Formats a phone number string to the format (xxx) xxx-xxxx.\n * If the input contains more than 10 digits, it truncates the extra digits.\n * If it contains fewer, it formats as much as possible.\n *\n * @param value - The raw phone number string.\n * @returns The formatted phone number string.\n */\nexport const formatPhoneNumber = (value: string): string => {\n  const cleaned = value.replace(/\\D/g, \"\"); // Remove all non-digit characters\n\n  if (cleaned.length <= 3) {\n    return cleaned;\n  } else if (cleaned.length <= 6) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3)}`;\n  } else if (cleaned.length <= 10) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(\n      6\n    )}`;\n  } else {\n    // If more than 10 digits, truncate the extra digits\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(\n      6,\n      10\n    )}`;\n  }\n};\n","var t=require(\"@xatom/core\");var e,r,s,i,o,n,u={};e=u,r=\"WFImage\",s=()=>c,Object.defineProperty(e,r,{get:s,set:i,enumerable:!0,configurable:!0});class c extends t.WFComponent{constructor(t){super(t)}getImageConfig(){return this._config}getSrc(){return this.getAttribute(\"src\")}getSizes(){return this.getAttribute(\"sizes\")}getSrcSet(){return this.getAttribute(\"srcset\")}getLoading(){return this.getAttribute(\"loading\")}onLoad(t){return this.on(\"load\",t),()=>{this.off(\"load\",t)}}onLoadError(t){return this.on(\"error\",t),()=>{this.off(\"error\",t)}}setImage(t){if(\"string\"==typeof t)this.setAttribute(\"src\",t),this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");else{if(this.setAttribute(\"src\",t.src),\"object\"==typeof t&&t.srcSet&&t.srcSet.length&&t.sizes&&t.sizes.length){const e=t.srcSet.map((t=>`${t.url} ${t.size}`)).join(\", \");this.setAttribute(\"srcset\",e)}else this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");t.loading&&this.setAttribute(\"loading\",t.loading)}}}o=module.exports,n=u,Object.keys(n).forEach((function(t){\"default\"===t||\"__esModule\"===t||o.hasOwnProperty(t)||Object.defineProperty(o,t,{enumerable:!0,get:function(){return n[t]}})}));","import { WFComponent } from \"@xatom/core\";\nimport { toggleError } from \"./formUtils\";\n\nexport function validateNotEmpty(input: string | undefined): boolean {\n  return input !== undefined && input.trim() !== \"\";\n}\n\nexport function validateEmail(input: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(input);\n}\n\n/**\n * Validates that the email is either empty or correctly formatted.\n * @param value The email input value.\n * @returns True if valid, false otherwise.\n */\nexport const validateEmailOptional = (value: string): boolean => {\n  if (value.trim() === \"\") {\n    // Email is optional, so empty string is valid\n    return true;\n  }\n  // Validate the email format if not empty\n  return validateEmail(value);\n};\n\nexport function validatePasswordRequirements(password: string): boolean {\n  const hasLowercase = /[a-z]/.test(password);\n  const hasUppercase = /[A-Z]/.test(password);\n  const hasDigit = /\\d/.test(password);\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n  const hasValidLength = password.length >= 8;\n  return (\n    hasLowercase && hasUppercase && hasDigit && hasSpecialChar && hasValidLength\n  );\n}\n\nexport function validateCheckbox(checked: boolean): boolean {\n  return checked;\n}\n\nexport function validatePasswordsMatch(\n  originalPassword: string,\n  confirmPassword: string\n): boolean {\n  return originalPassword === confirmPassword;\n}\n\nexport function validateSelectField(input: string | undefined): boolean {\n  return input !== undefined && input !== \"N/A\";\n}\n\nexport function validatePhoneNumber(input: string): boolean {\n  const phoneRegex = /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/;\n  return phoneRegex.test(input);\n}\n\nexport const validatePhoneNumberOptional = (value: string): boolean => {\n  if (value.trim() === \"\") {\n    // Phone number is optional, so empty string is valid\n    return true;\n  }\n  // Validate the phone number format if not empty\n  return validatePhoneNumber(value);\n};\n","import { WFComponent } from \"@xatom/core\";\nimport { StartRegistrationResponse } from \"../../../api/startRegistration\";\n\nexport function updatePendingStudentsAlert(apiData: StartRegistrationResponse): void {\n  const alertBox = new WFComponent(\"#alertBox\");\n  const alertPendingStudentList = new WFComponent(\"#alertPendingStudentList\");\n\n  // Check if student_profiles exists in the API response\n  if (apiData.student_profiles && Array.isArray(apiData.student_profiles)) {\n    // Filter for pending profiles (case-insensitive)\n    const pendingStudents = apiData.student_profiles.filter(profile => \n      profile.Status && profile.Status.toLowerCase() === \"pending\"\n    );\n    \n    if (pendingStudents.length > 0) {\n      // Create a comma-separated list of full names\n      const names = pendingStudents.map(profile => profile.full_name).join(\", \");\n      alertPendingStudentList.setText(names);\n      alertBox.getElement().style.display = \"flex\";\n      return;\n    }\n  }\n  \n  // If no pending students, hide the alert box.\n  alertBox.getElement().style.display = \"none\";\n}\n","import { WFComponent } from \"@xatom/core\";\nimport { loadState } from \"../state/registrationState\";\nimport { toggleError } from \"../../../utils/formUtils\";\nimport { apiClient } from \"../../../api/apiConfig\";\n\ninterface CheckoutPayload {\n  registration_items: { program_id: string | null; session_id: string | null; student_id: string | null }[];\n  subscription_line_items: { price: string; quantity: number }[];\n  deposit_line_items: { price: string; quantity: number }[] | null;\n  financial_aid: {\n    requested: boolean;\n    selected_discount?: string;\n    data?: any;\n  };\n  subscription_type: string;\n  early_registration: boolean;\n  earliest_start_date: number | null;\n  subscription_subtotal: number;         // Original subscription total (no discounts).\n  subscription_amount_discount: number;    // Total discount amount for subscription pricing.\n  subscription_total: number;              // Subscription total after discount.\n  total_due: number;\n  students_pending: boolean;\n  base_url: string;\n}\n\ninterface CheckoutResponse {\n  url: string;\n  [key: string]: any;\n}\n\n/**\n * Utility: Given an array of sessions and a sessionId (as string),\n * returns the matching session object.\n */\nfunction getSessionById(sessions: any[], sessionId: string): any {\n  const session = sessions.find(s => s.id.toString() === sessionId);\n  console.log(`[DEBUG] checkoutSubmission - getSessionById: Looking for session id ${sessionId}:`, session);\n  return session;\n}\n\n/**\n * Gathers all registration data and sends it to the checkout endpoint.\n */\nexport async function submitCheckout() {\n  // 1. Load state (which should include apiData, financial aid info, subscription type, etc.)\n  const state = loadState();\n  if (!state.apiData) {\n    console.error(\"No API data found in state.\");\n    displayCheckoutError(\"No API data found in state.\");\n    return;\n  }\n  const apiData = state.apiData;\n\n  // 2. Build registration items from confirmed subscription rows.\n  const confirmedRows = Array.from(document.querySelectorAll(\"#subscription_items_list tr.confirmed\"));\n  const registrationItems = confirmedRows.map(row => ({\n    program_id: row.getAttribute(\"data-program-id\"),\n    session_id: row.getAttribute(\"data-session-id\"),\n    student_id: row.getAttribute(\"data-student-id\")\n  }));\n\n  // 3. Build subscription line items.\n  const subscriptionLineItemsMap = new Map<string, number>();\n  confirmedRows.forEach(row => {\n    const sessionId = row.getAttribute(\"data-session-id\");\n    if (!sessionId) return;\n    const session = getSessionById(apiData.sessions, sessionId);\n    if (!session) return;\n    let priceId = \"\";\n    if (state.subscriptionType === \"year\") {\n      priceId = session.tuition_product.Annual_price_id;\n    } else if (state.subscriptionType === \"month\") {\n      priceId = session.tuition_product.Monthly_price_id;\n    } else if (state.subscriptionType === \"semester\") {\n      priceId = session.tuition_product.Semester_price_id;\n    }\n    if (!priceId) return;\n    const currentQty = subscriptionLineItemsMap.get(priceId) || 0;\n    subscriptionLineItemsMap.set(priceId, currentQty + 1);\n  });\n  const subscriptionLineItems = Array.from(subscriptionLineItemsMap.entries()).map(\n    ([price, quantity]) => ({ price, quantity })\n  );\n  console.log(\"[DEBUG] submitCheckout: Subscription line items\", subscriptionLineItems);\n\n  // 4. Determine early registration for monthly subscriptions.\n  let earlyRegistration = false;\n  let earliestStartDate: number | null = null;\n  if (state.subscriptionType === \"month\") {\n    confirmedRows.forEach(row => {\n      const sessionId = row.getAttribute(\"data-session-id\");\n      if (!sessionId) return;\n      const session = getSessionById(apiData.sessions, sessionId);\n      if (!session) return;\n      const startDate = session.program[\"1st_Semester_Start_Date\"];\n      if (startDate && startDate > Date.now()) {\n        earlyRegistration = true;\n        if (earliestStartDate === null || startDate < earliestStartDate) {\n          earliestStartDate = startDate;\n        }\n      }\n    });\n  }\n  console.log(\"[DEBUG] submitCheckout: Early registration =\", earlyRegistration, \"Earliest start date =\", earliestStartDate);\n\n  // 5. Check for pending student profiles.\n  const pendingStudents = apiData.student_profiles\n    ? apiData.student_profiles.filter((profile: any) =>\n        profile.Status && profile.Status.toLowerCase() === \"pending\"\n      )\n    : [];\n  console.log(\"[DEBUG] submitCheckout: Pending students\", pendingStudents);\n\n  // 6. Build deposit line items if applicable.\n  let depositLineItems: { price: string; quantity: number }[] | null = null;\n  if (pendingStudents.length > 0 || (state.subscriptionType === \"month\" && earlyRegistration)) {\n    const depositLineItemsMap = new Map<string, number>();\n    const savedItems = state.registrationItems || [];\n    savedItems.forEach(item => {\n      const sessionId = item.session_id;\n      if (!sessionId) return;\n      const session = getSessionById(apiData.sessions, sessionId);\n      if (!session || !session.deposit_product) return;\n      const depositPriceId = session.deposit_product.Single_sale_price_id;\n      if (!depositPriceId) return;\n      const currentQty = depositLineItemsMap.get(depositPriceId) || 0;\n      depositLineItemsMap.set(depositPriceId, currentQty + 1);\n    });\n    depositLineItems = depositLineItemsMap.size > 0\n      ? Array.from(depositLineItemsMap.entries()).map(([price, quantity]) => ({ price, quantity }))\n      : null;\n  }\n  console.log(\"[DEBUG] submitCheckout: Deposit line items\", depositLineItems);\n\n  // 7. Get the total amount due from the DOM.\n  const totalDueText = new WFComponent(\"#total_amount_due\").getElement().textContent || \"\";\n  const totalDue = parseFloat(totalDueText.replace(/[^0-9\\.]/g, \"\")) || 0;\n\n  // 8. Compute subscription pricing details.\n  const subscriptionSubtotal = state.originalSubscriptionTotal || 0; // Amount with no discounts.\n  const discountPercent = state.selected_discount ? parseFloat(state.selected_discount) : 0;\n  const subscriptionAmountDiscount = subscriptionSubtotal * (discountPercent / 100);\n  const subscriptionTotal = subscriptionSubtotal - subscriptionAmountDiscount;\n\n  // 9. Pull financial aid info from state.\n  const financialAid = {\n    requested: state.fin_aid_requested,\n    selected_discount: state.selected_discount,\n    data: state.financialAidData\n  };\n\n  // 10. Assemble the payload object with new subscription pricing keys.\n  const checkoutPayload: CheckoutPayload = {\n    registration_items: registrationItems,\n    subscription_line_items: subscriptionLineItems,\n    deposit_line_items: depositLineItems,\n    financial_aid: financialAid,\n    subscription_type: state.subscriptionType,\n    early_registration: earlyRegistration,\n    earliest_start_date: earliestStartDate,\n    subscription_subtotal: subscriptionSubtotal,\n    subscription_amount_discount: subscriptionAmountDiscount,\n    subscription_total: subscriptionTotal,\n    total_due: totalDue,\n    students_pending: pendingStudents.length > 0,\n    base_url: window.location.origin\n  };\n\n  console.log(\"[DEBUG] submitCheckout: Payload\", checkoutPayload);\n\n  // 11. Send the payload using your Axios-based apiClient with .fetch() and a wrapped data property.\n  try {\n    const response = await apiClient\n      .post<CheckoutResponse>(\"/registration/checkout\", { data: checkoutPayload })\n      .fetch();\n    const data = response;\n    console.log(\"[DEBUG] submitCheckout: Response\", data);\n    if (data.url) {\n      hideCheckoutError();\n      window.location.href = data.url;\n    } else {\n      throw new Error(\"No checkout URL returned\");\n    }\n  } catch (error: any) {\n    console.error(\"Error submitting checkout\", error);\n    displayCheckoutError(error.message || \"An error occurred during checkout.\");\n  }\n}\n\n/**\n * Displays an error message in the checkout error element using toggleError.\n * @param message The error message to display.\n */\nfunction displayCheckoutError(message: string): void {\n  const errorComp = new WFComponent(\"#registration_checkout_error\");\n  toggleError(errorComp, message, true);\n}\n\n/**\n * Hides the checkout error element.\n */\nfunction hideCheckoutError(): void {\n  const errorComp = new WFComponent(\"#registration_checkout_error\");\n  toggleError(errorComp, \"\", false);\n}\n","import { WFComponent } from \"@xatom/core\";\nimport { loadState, saveState } from \"../state/registrationState\";\n\nexport function loadRegistrationUI(): void {\n  const state = loadState();\n  if (!state.registrationItems || state.registrationItems.length === 0) {\n    console.log(\"[DEBUG] loadRegistrationUI: No registration items to load.\");\n    return;\n  }\n\n  const tableBodyEl = document.getElementById(\"subscription_items_list\");\n  if (!tableBodyEl) {\n    console.error(\"Table body not found.\");\n    return;\n  }\n\n  // Get the template row.\n  const templateRow = document.getElementById(\"subscription_item\");\n  if (!templateRow) {\n    console.error(\"Template row not found.\");\n    return;\n  }\n  // Ensure the template row remains hidden.\n  templateRow.style.display = \"none\";\n\n  // Remove any confirmed rows that are clones (i.e. that do not have the id \"subscription_item\").\n  const allRows = Array.from(tableBodyEl.getElementsByTagName(\"tr\"));\n  allRows.forEach(row => {\n    if (row.id !== \"subscription_item\") {\n      row.remove();\n    }\n  });\n\n  // Hide the empty state element.\n  const emptyStateEl = document.getElementById(\"subscription_empty\");\n  if (emptyStateEl) {\n    emptyStateEl.style.display = \"none\";\n  }\n\n  // For each saved registration item, clone the template row and append it.\n  state.registrationItems.forEach(item => {\n    const newRow = templateRow.cloneNode(true) as HTMLElement;\n    // Remove id so it's not the template.\n    newRow.removeAttribute(\"id\");\n    newRow.classList.add(\"confirmed\");\n    newRow.style.display = \"table-row\";\n\n    // Set data attributes.\n    newRow.setAttribute(\"data-program-id\", item.program_id || \"\");\n    newRow.setAttribute(\"data-session-id\", item.session_id || \"\");\n    newRow.setAttribute(\"data-student-id\", item.student_id || \"\");\n\n    // Populate display text fields.\n    const programTextEl = newRow.querySelector(\"#item_program_name\");\n    if (programTextEl) {\n      programTextEl.textContent = item.program_name || \"\";\n      (programTextEl as HTMLElement).style.display = \"block\";\n    }\n    const workshopTextEl = newRow.querySelector(\"#item_workshop_name\");\n    if (workshopTextEl) {\n      workshopTextEl.textContent = item.workshop_name || \"\";\n      (workshopTextEl as HTMLElement).style.display = \"block\";\n    }\n    const sessionTextEl = newRow.querySelector(\"#item_session_name\");\n    if (sessionTextEl) {\n      sessionTextEl.textContent = item.session_name || \"\";\n      (sessionTextEl as HTMLElement).style.display = \"block\";\n    }\n    const studentTextEl = newRow.querySelector(\"#item_student_name\");\n    if (studentTextEl) {\n      studentTextEl.textContent = item.student_name || \"\";\n      (studentTextEl as HTMLElement).style.display = \"block\";\n    }\n\n    // Hide select elements and the confirm button.\n    const selects = newRow.querySelectorAll(\"select\");\n    selects.forEach(sel => (sel as HTMLElement).style.display = \"none\");\n    const confirmButton = newRow.querySelector(\".add_registration_button\");\n    if (confirmButton) {\n      (confirmButton as HTMLElement).style.display = \"none\";\n    }\n\n    // Attach delete event listener.\n    const deleteButton = newRow.querySelector(\".remove_registration_button\");\n    if (deleteButton) {\n      (deleteButton as HTMLElement).addEventListener(\"click\", () => {\n        newRow.remove();\n        const currentItems = loadState().registrationItems || [];\n        const updatedItems = currentItems.filter(stateItem => {\n          return !(\n            stateItem.session_id === newRow.getAttribute(\"data-session-id\") &&\n            stateItem.student_id === newRow.getAttribute(\"data-student-id\")\n          );\n        });\n        saveState({ registrationItems: updatedItems });\n        // If no confirmed rows remain (other than template), show the empty state.\n        const remainingRows = Array.from(tableBodyEl.getElementsByTagName(\"tr\")).filter(r => r.id === \"subscription_item\" ? false : true);\n        if (remainingRows.length === 0) {\n          const emptyEl = document.getElementById(\"subscription_empty\");\n          if (emptyEl) {\n            emptyEl.style.display = \"table-row\";\n          }\n        }\n        document.dispatchEvent(new CustomEvent(\"registrationChanged\"));\n      });\n    }\n\n    tableBodyEl.appendChild(newRow);\n  });\n  console.log(\"[DEBUG] loadRegistrationUI: UI reloaded from state.\");\n}\n","import { WFComponent } from \"@xatom/core\";\n\n/**\n * Checks if the API data has any student profiles.\n * If not, displays the Action Required dialog and clicks the trigger element.\n */\nexport function showActionRequiredDialogIfNoStudentProfiles(apiData: any): void {\n  // Check if student_profiles is missing or empty.\n  if (!apiData.student_profiles || apiData.student_profiles.length === 0) {\n    const dialogComp = new WFComponent(\"#actionRequiredDialog\");\n    const dialogEl = dialogComp.getElement();\n    if (dialogEl instanceof HTMLDialogElement) {\n      dialogEl.showModal();\n    } else {\n      dialogEl.style.display = \"block\";\n    }\n    // Also trigger the animation click.\n    const trigger = document.getElementById(\"alertDialogAnimationTrigger\");\n    if (trigger) {\n      trigger.click();\n    }\n  }\n}\n"],"names":[],"version":3,"file":"registration_new.b347225b.js.map","sourceRoot":"../"}