{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,Q,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCiCa,EAAA,MAAA,CAAA,EAAA,qBAAA,IAAA,GAjCb,IAAA,EAAA,EAAA,eACA,EAAA,EAAA,oBACA,EAAA,EAAA,qBACA,EAAA,EAAA,iBACA,EAAA,EAAA,+BAWA,EAAA,EAAA,iBACA,EAAA,EAAA,kCAOA,EAAA,EAAA,+BACA,EAAA,EAAA,yBACA,EAAA,EAAA,uBACA,EAAA,EAAA,kCAOO,IAAM,EAAqB,UAChC,IAAM,EAAS,IAAI,EAAA,QAAO,CAAE,0BAG5B,OAAM,AAAA,CAAA,EAAA,EAAA,4BAA2B,AAA3B,EAA6B,GAGnC,AAAA,CAAA,EAAA,EAAA,iCAAgC,AAAhC,IAGA,MAAM,AAAA,CAAA,EAAA,EAAA,wBAAuB,AAAvB,EAAyB,yBAG/B,IAAM,EAAc,IAAI,EAAA,eAAc,CACpC,gBAEI,EAAsB,IAAI,EAAA,WAAU,CAAE,kBAE5C,EAAY,YAAY,CA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","sources":["<anon>","src/modules/tickets/makeTicketPurchase.ts","src/modules/tickets/productionList.ts","src/api/productions.ts","src/modules/tickets/state/ticketPurchaseState.ts","src/modules/tickets/performanceList.ts","src/api/performances.ts","src/modules/tickets/components/performanceFilter.ts","src/modules/tickets/ticketTiers.ts","src/api/ticketTiersAPI.ts","src/modules/tickets/components/ticketTierListRender.ts","src/modules/tickets/components/bundleRenderer.ts","src/modules/tickets/state/bundleStateUpdater.ts","src/modules/tickets/components/ticketTierRenderer.ts","src/utils/formUtils.ts","node_modules/.pnpm/@xatom+image@1.0.0_@xatom+core@1.0.12/node_modules/@xatom/image/dist/index.js","src/modules/tickets/components/selectedPerformanceUI.ts","src/modules/tickets/components/customQuestionUI.ts","src/modules/tickets/components/assistanceInputUI.ts","src/modules/tickets/components/userDetailsUI.ts","node_modules/.pnpm/@xatom+slider@1.0.0_@xatom+core@1.0.12/node_modules/@xatom/slider/dist/index.js","src/modules/tickets/components/sidebarIndicators.ts","src/utils/validationUtils.ts","src/modules/tickets/components/urlParamNavigator.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"3Fz1E\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"makeTicketPurchase\", ()=>makeTicketPurchase);\nvar _core = require(\"@xatom/core\");\nvar _productionList = require(\"./productionList\");\nvar _performanceList = require(\"./performanceList\");\nvar _ticketTiers = require(\"./ticketTiers\");\nvar _ticketPurchaseState = require(\"./state/ticketPurchaseState\");\nvar _slider = require(\"@xatom/slider\");\nvar _sidebarIndicators = require(\"./components/sidebarIndicators\");\nvar _validationUtils = require(\"../../utils/validationUtils\");\nvar _formUtils = require(\"../../utils/formUtils\");\nvar _apiConfig = require(\"../../api/apiConfig\");\nvar _urlParamNavigator = require(\"./components/urlParamNavigator\");\nconst makeTicketPurchase = async ()=>{\n    const slider = new (0, _slider.WFSlider)(\".multi-step_form_slider\");\n    // Initialize state from URL parameters\n    await (0, _urlParamNavigator.initializeStateFromUrlParams)(slider);\n    // Initialize sidebar indicators\n    (0, _sidebarIndicators.initializeTicketSidebarIndicators)();\n    // Step 1: Initialize production list\n    await (0, _productionList.initializeProductionList)(\"#selectProductionList\");\n    // Handle form submission for production selection\n    const formStepOne = new (0, _core.WFFormComponent)(\"#formStepOne\");\n    const submitButtonStepOne = new (0, _core.WFComponent)(\"#submitStepOne\");\n    formStepOne.onFormSubmit(async (formData, event)=>{\n        event.preventDefault();\n        submitButtonStepOne.setAttribute(\"disabled\", \"true\");\n        const selectedProduction = (0, _ticketPurchaseState.getSelectedProduction)();\n        const stepOneRequestingAnimation = new (0, _core.WFComponent)(\"#stepOneRequestingAnimation\");\n        if (!selectedProduction || !selectedProduction.id) {\n            console.error(\"No production selected.\");\n            const submitStepOneError = new (0, _core.WFComponent)(\"#submitStepOneError\");\n            submitStepOneError.setText(\"Please select a production.\");\n            submitStepOneError.setStyle({\n                display: \"block\"\n            });\n            return;\n        }\n        console.log(\"Production selected:\", selectedProduction);\n        const submitStepOneError = new (0, _core.WFComponent)(\"#submitStepOneError\");\n        submitStepOneError.setStyle({\n            display: \"none\"\n        });\n        // Show the loading animation\n        stepOneRequestingAnimation.setStyle({\n            display: \"block\"\n        });\n        try {\n            // Proceed to Step 2: Initialize performance list\n            await (0, _performanceList.initializePerformanceList)(\"#selectPerformanceList\");\n            // Mark Step 1 as completed and move to Step 2\n            (0, _sidebarIndicators.markTicketStepAsCompleted)(1);\n            (0, _sidebarIndicators.setActiveTicketStep)(2);\n            // Move to the next step\n            slider.goNext();\n        } catch (error) {\n            console.error(\"Error during step 1 processing:\", error);\n        } finally{\n            // Hide the loading animation\n            stepOneRequestingAnimation.setStyle({\n                display: \"none\"\n            });\n            submitButtonStepOne.removeAttribute(\"disabled\");\n        }\n    });\n    // Step 2: Handle form submission for performance selection\n    const formStepTwo = new (0, _core.WFFormComponent)(\"#formStepTwo\");\n    const submitButtonStepTwo = new (0, _core.WFComponent)(\"#submitStepTwo\");\n    formStepTwo.onFormSubmit(async (formData, event)=>{\n        event.preventDefault();\n        submitButtonStepTwo.setAttribute(\"disabled\", \"true\");\n        const selectedPerformance = (0, _ticketPurchaseState.getSelectedPerformance)();\n        const stepTwoRequestingAnimation = new (0, _core.WFComponent)(\"#stepTwoRequestingAnimation\");\n        if (!selectedPerformance || !selectedPerformance.id) {\n            console.error(\"No performance selected.\");\n            const submitStepTwoError = new (0, _core.WFComponent)(\"#submitStepTwoError\");\n            submitStepTwoError.setText(\"Please select a performance.\");\n            submitStepTwoError.setStyle({\n                display: \"block\"\n            });\n            return;\n        }\n        console.log(\"Performance selected:\", selectedPerformance);\n        const submitStepTwoError = new (0, _core.WFComponent)(\"#submitStepTwoError\");\n        submitStepTwoError.setStyle({\n            display: \"none\"\n        });\n        // Show the loading animation\n        stepTwoRequestingAnimation.setStyle({\n            display: \"block\"\n        });\n        try {\n            // Mark Step 2 as completed and move to Step 3\n            (0, _sidebarIndicators.markTicketStepAsCompleted)(2);\n            (0, _sidebarIndicators.setActiveTicketStep)(3);\n            // Initialize ticket tiers (Step 3)\n            await (0, _ticketTiers.initializeTicketTiers)(\"#bundleList\", \"#ticketTierList\");\n            // Move to the next step\n            slider.goNext();\n        } catch (error) {\n            console.error(\"Error during step 2 processing:\", error);\n        } finally{\n            // Hide the loading animation\n            stepTwoRequestingAnimation.setStyle({\n                display: \"none\"\n            });\n            submitButtonStepTwo.removeAttribute(\"disabled\");\n        }\n    });\n    // Step 3: Handle form submission for final checkout\n    const formStepThree = new (0, _core.WFFormComponent)(\"#formStepThree\");\n    const emailWrap = new (0, _core.WFComponent)(\"#emailWrap\");\n    const firstNameInput = new (0, _core.WFComponent)(\"#firstNameInput\");\n    const lastNameInput = new (0, _core.WFComponent)(\"#lastNameInput\");\n    const emailInput = new (0, _core.WFComponent)(\"#emailInput\");\n    const customQuestionInput = new (0, _core.WFComponent)(\"#customQuestionInput\");\n    const submitStepThreeError = new (0, _core.WFComponent)(\"#submitStepThreeError\");\n    const noTicketsError = new (0, _core.WFComponent)(\"#noTicketsError\");\n    const submitButtonStepThree = new (0, _core.WFComponent)(\"#submitStepThree\");\n    // Function to clear errors on interaction\n    const clearErrorOnInteraction = (inputComponent, errorComponent)=>{\n        const clearError = ()=>(0, _formUtils.toggleError)(errorComponent, \"\", false);\n        inputComponent.on(\"input\", clearError);\n        inputComponent.on(\"focus\", clearError);\n        inputComponent.on(\"change\", clearError);\n    };\n    formStepThree.onFormSubmit(async (formData, event)=>{\n        event.preventDefault();\n        let formIsValid = true;\n        submitButtonStepThree.setAttribute(\"disabled\", \"true\");\n        // clear any existing submit errors\n        submitStepThreeError.setStyle({\n            display: \"none\"\n        });\n        // Validate email wrap section if displayed\n        if (emailWrap.getElement().style.display !== \"none\") {\n            // Validate First Name\n            const firstNameError = new (0, _core.WFComponent)(\"#firstNameInputError\");\n            const firstNameValidation = (0, _formUtils.createValidationFunction)(firstNameInput, (0, _validationUtils.validateNotEmpty), \"First name is required.\");\n            const firstNameValidationResult = firstNameValidation();\n            (0, _formUtils.toggleError)(firstNameError, firstNameValidationResult, !!firstNameValidationResult);\n            formIsValid = formIsValid && !firstNameValidationResult;\n            clearErrorOnInteraction(firstNameInput, firstNameError);\n            // Validate Last Name\n            const lastNameError = new (0, _core.WFComponent)(\"#lastNameInputError\");\n            const lastNameValidation = (0, _formUtils.createValidationFunction)(lastNameInput, (0, _validationUtils.validateNotEmpty), \"Last name is required.\");\n            const lastNameValidationResult = lastNameValidation();\n            (0, _formUtils.toggleError)(lastNameError, lastNameValidationResult, !!lastNameValidationResult);\n            formIsValid = formIsValid && !lastNameValidationResult;\n            clearErrorOnInteraction(lastNameInput, lastNameError);\n            // Validate Email\n            const emailError = new (0, _core.WFComponent)(\"#emailInputError\");\n            const emailValidation = (0, _formUtils.createValidationFunction)(emailInput, (0, _validationUtils.validateEmail), \"A valid email is required.\");\n            const emailValidationResult = emailValidation();\n            (0, _formUtils.toggleError)(emailError, emailValidationResult, !!emailValidationResult);\n            formIsValid = formIsValid && !emailValidationResult;\n            clearErrorOnInteraction(emailInput, emailError);\n        }\n        // Validate Custom Question\n        // Only validate the custom question if that entire section is shown\n        const customQuestionWrap = document.getElementById(\"customQuestionWrap\");\n        if (customQuestionWrap.style.display !== \"none\") {\n            const customQuestionError = new (0, _core.WFComponent)(\"#customQuestionInputError\");\n            const customQuestionValidation = (0, _formUtils.createValidationFunction)(customQuestionInput, (0, _validationUtils.validateNotEmpty), \"This field is required.\");\n            const customQuestionValidationResult = customQuestionValidation();\n            (0, _formUtils.toggleError)(customQuestionError, customQuestionValidationResult, !!customQuestionValidationResult);\n            formIsValid = formIsValid && !customQuestionValidationResult;\n            clearErrorOnInteraction(customQuestionInput, customQuestionError);\n        }\n        // Validate that at least one bundle or ticket is selected\n        const selectedBundles = (0, _ticketPurchaseState.getSelectedBundles)();\n        const selectedTickets = (0, _ticketPurchaseState.getSelectedTickets)();\n        if (selectedBundles.length === 0 && selectedTickets.length === 0) {\n            (0, _formUtils.toggleError)(noTicketsError, \"Please select at least one bundle or ticket.\", true);\n            formIsValid = false;\n        } else (0, _formUtils.toggleError)(noTicketsError, \"\", false);\n        if (!formIsValid) {\n            console.error(\"Form validation failed.\");\n            submitStepThreeError.setText(\"Please correct the highlighted errors.\");\n            submitStepThreeError.setStyle({\n                display: \"block\"\n            });\n            return;\n        }\n        console.log(\"Final form is valid, proceeding with submission...\");\n        const stepThreeRequestingAnimation = new (0, _core.WFComponent)(\"#stepThreeRequestingAnimation\");\n        stepThreeRequestingAnimation.setStyle({\n            display: \"block\"\n        });\n        try {\n            // Load the current state\n            const ticketPurchaseState = (0, _ticketPurchaseState.loadTicketPurchaseState)();\n            // Extract only the required values from the state\n            const { selectedBundles, selectedTickets, email, firstName, lastName, customQuestion, assistanceNeeded, assistanceMessage, selectedProductionId, selectedPerformanceId } = ticketPurchaseState;\n            // Construct the cancel_url\n            const cancelUrl = `${window.location.origin}/purchase-tickets?production=${selectedProductionId}&performance=${selectedPerformanceId}`;\n            // Create the payload with only the required values and the cancel_url\n            const payload = {\n                selectedBundles,\n                selectedTickets,\n                email,\n                firstName,\n                lastName,\n                customQuestion,\n                assistanceNeeded,\n                assistanceMessage,\n                selectedProductionId,\n                selectedPerformanceId,\n                cancel_url: cancelUrl\n            };\n            // Submit the extracted state to the /tickets/begin_checkout endpoint\n            const response = await (0, _apiConfig.apiClient).post(\"/tickets/begin_checkout\", {\n                data: payload\n            }).fetch();\n            // Handle the response (e.g., redirect to the payment page or show success message)\n            console.log(\"Checkout response:\", response);\n            // Mark Step 3 as completed\n            (0, _sidebarIndicators.markTicketStepAsCompleted)(3);\n            // Redirect or show success (this depends on your application flow)\n            window.location.href = response.checkout_url || \"/payment\";\n        } catch (error) {\n            console.error(\"Error during final step processing:\", error);\n            submitStepThreeError.setText(\"An error occurred during checkout. Please try again.\");\n            submitStepThreeError.setStyle({\n                display: \"block\"\n            });\n        } finally{\n            stepThreeRequestingAnimation.setStyle({\n                display: \"none\"\n            });\n            submitButtonStepThree.removeAttribute(\"disabled\");\n        }\n    });\n    // Handle \"Go Back\" button for Step 3\n    const backStepThree = new (0, _core.WFComponent)(\"#backStepThree\");\n    backStepThree.on(\"click\", ()=>{\n        (0, _ticketPurchaseState.clearSelectedBundles)();\n        (0, _ticketPurchaseState.clearSelectedTickets)();\n        slider.goPrevious();\n        (0, _sidebarIndicators.unsetActiveTicketStep)(3);\n        (0, _sidebarIndicators.unmarkTicketStepAsCompleted)(2);\n        (0, _sidebarIndicators.setActiveTicketStep)(2);\n    });\n    // Handle \"Go Back\" button for Step 2\n    const backStepTwo = new (0, _core.WFComponent)(\"#backStepTwo\");\n    backStepTwo.on(\"click\", ()=>{\n        (0, _ticketPurchaseState.clearSelectedPerformance)();\n        slider.goPrevious();\n        (0, _sidebarIndicators.unsetActiveTicketStep)(2);\n        (0, _sidebarIndicators.unmarkTicketStepAsCompleted)(1);\n        (0, _sidebarIndicators.setActiveTicketStep)(1);\n    });\n    // Initialize sidebar indicators and set the first step as active\n    (0, _sidebarIndicators.setActiveTicketStep)(1);\n};\n\n},{\"@xatom/core\":\"65YBq\",\"./productionList\":\"6zyyu\",\"./performanceList\":\"h28oA\",\"./ticketTiers\":\"bBABM\",\"./state/ticketPurchaseState\":\"8lBgN\",\"@xatom/slider\":\"ejxGx\",\"./components/sidebarIndicators\":\"i8KxD\",\"../../utils/validationUtils\":\"gu2z7\",\"../../utils/formUtils\":\"gepHz\",\"../../api/apiConfig\":\"dUmIV\",\"./components/urlParamNavigator\":\"4zIDj\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"6zyyu\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeProductionList\", ()=>initializeProductionList);\nvar _core = require(\"@xatom/core\");\nvar _productions = require(\"../../api/productions\");\nvar _ticketPurchaseState = require(\"./state/ticketPurchaseState\");\nlet selectedProductionId = null;\nlet initialTemplateState = null;\nconst initializeProductionList = async (containerSelector)=>{\n    const container = document.querySelector(containerSelector);\n    if (!container) {\n        console.error(\"Production list container not found.\");\n        return [];\n    }\n    if (!initialTemplateState) initialTemplateState = container.cloneNode(true);\n    container.innerHTML = \"\";\n    container.appendChild(initialTemplateState.cloneNode(true));\n    const list = new (0, _core.WFDynamicList)(containerSelector, {\n        rowSelector: \"#cardSelectProduction\",\n        loaderSelector: \"#productionListLoading\",\n        emptySelector: \"#productionListEmpty\"\n    });\n    list.loaderRenderer((loaderElement)=>{\n        loaderElement.setStyle({\n            display: \"flex\"\n        });\n        return loaderElement;\n    });\n    list.emptyRenderer((emptyElement)=>{\n        emptyElement.setStyle({\n            display: \"flex\"\n        });\n        return emptyElement;\n    });\n    list.rowRenderer(({ rowData: rawData, rowElement, index })=>{\n        // Cast rawData to match API response fields\n        const rowData = rawData;\n        const productionCard = new (0, _core.WFComponent)(rowElement);\n        const productionTitle = productionCard.getChildAsComponent(\"#cardProductionTitle\");\n        const productionDescription = productionCard.getChildAsComponent(\"#cardProductionDescription\");\n        const productionAges = productionCard.getChildAsComponent(\"#cardProductionAges\");\n        const productionImage = productionCard.getChildAsComponent(\"#cardProductionImage\");\n        const productionInput = productionCard.getChildAsComponent(\".input_card_input\");\n        const productionLabel = productionCard.getChildAsComponent(\"label\");\n        if (!productionTitle || !productionDescription || !productionAges || !productionInput || !productionImage || !productionLabel) {\n            console.error(\"Production elements not found.\");\n            return;\n        }\n        const inputId = `productionInput-${index}`;\n        productionInput.setAttribute(\"id\", inputId);\n        productionInput.setAttribute(\"value\", rowData.id.toString());\n        productionLabel.setAttribute(\"for\", inputId);\n        productionTitle.setText(rowData.Name);\n        productionDescription.setText(rowData.Short_Description);\n        productionAges.setText(rowData.Age_Description);\n        if (rowData.Main_Image) {\n            productionImage.setAttribute(\"src\", rowData.Main_Image);\n            productionImage.setAttribute(\"alt\", rowData.Name || \"Production Image\");\n        } else console.warn(`Production ID ${rowData.id} does not have a main image.`);\n        productionInput.on(\"change\", ()=>{\n            selectedProductionId = productionInput.getElement().value;\n            (0, _ticketPurchaseState.saveSelectedProduction)({\n                id: Number(selectedProductionId),\n                name: rowData.Name,\n                description: rowData.Short_Description,\n                imageUrl: rowData.Main_Image\n            });\n            console.log(\"Selected Production ID:\", selectedProductionId);\n        });\n        rowElement.setStyle({\n            display: \"flex\"\n        });\n        return rowElement;\n    });\n    try {\n        list.changeLoadingStatus(true);\n        const productions = await (0, _productions.fetchProductions)();\n        console.log(\"Fetched productions:\", productions);\n        list.setData(productions);\n        list.changeLoadingStatus(false);\n        return productions;\n    } catch (error) {\n        console.error(\"Error loading productions:\", error);\n        list.setData([]);\n        list.changeLoadingStatus(false);\n        return [];\n    }\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../../api/productions\":\"lptwN\",\"./state/ticketPurchaseState\":\"8lBgN\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"lptwN\":[function(require,module,exports) {\n// src/api/productions.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"fetchProductions\", ()=>fetchProductions);\nvar _apiConfig = require(\"./apiConfig\");\nconst fetchProductions = async ()=>{\n    try {\n        const response = await (0, _apiConfig.apiClient).get(\"/tickets/productions\").fetch();\n        return response.productions;\n    } catch (error) {\n        console.error(\"Error fetching productions:\", error);\n        throw error;\n    }\n};\n\n},{\"./apiConfig\":\"dUmIV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"8lBgN\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"loadTicketPurchaseState\", ()=>loadTicketPurchaseState);\nparcelHelpers.export(exports, \"saveTicketPurchaseState\", ()=>saveTicketPurchaseState);\nparcelHelpers.export(exports, \"clearTicketPurchaseState\", ()=>clearTicketPurchaseState);\nparcelHelpers.export(exports, \"getSelectedProduction\", ()=>getSelectedProduction);\nparcelHelpers.export(exports, \"saveSelectedProduction\", ()=>saveSelectedProduction);\nparcelHelpers.export(exports, \"getSelectedPerformance\", ()=>getSelectedPerformance);\nparcelHelpers.export(exports, \"saveSelectedPerformance\", ()=>saveSelectedPerformance);\nparcelHelpers.export(exports, \"getSelectedBundles\", ()=>getSelectedBundles);\nparcelHelpers.export(exports, \"saveSelectedBundle\", ()=>saveSelectedBundle);\nparcelHelpers.export(exports, \"removeSelectedBundle\", ()=>removeSelectedBundle);\nparcelHelpers.export(exports, \"getSelectedTickets\", ()=>getSelectedTickets);\nparcelHelpers.export(exports, \"saveSelectedTicket\", ()=>saveSelectedTicket);\nparcelHelpers.export(exports, \"removeSelectedTicket\", ()=>removeSelectedTicket);\nparcelHelpers.export(exports, \"getCustomQuestion\", ()=>getCustomQuestion);\nparcelHelpers.export(exports, \"saveCustomQuestion\", ()=>saveCustomQuestion);\nparcelHelpers.export(exports, \"getAssistanceNeeded\", ()=>getAssistanceNeeded);\nparcelHelpers.export(exports, \"saveAssistanceNeeded\", ()=>saveAssistanceNeeded);\nparcelHelpers.export(exports, \"getAssistanceMessage\", ()=>getAssistanceMessage);\nparcelHelpers.export(exports, \"saveAssistanceMessage\", ()=>saveAssistanceMessage);\nparcelHelpers.export(exports, \"saveUserDetails\", ()=>saveUserDetails);\nparcelHelpers.export(exports, \"clearSelectedPerformance\", ()=>clearSelectedPerformance);\nparcelHelpers.export(exports, \"clearSelectedBundles\", ()=>clearSelectedBundles);\nparcelHelpers.export(exports, \"clearSelectedTickets\", ()=>clearSelectedTickets);\nconst TICKET_PURCHASE_STATE_KEY = \"ticketPurchaseState\";\n// Utility to convert unknown to number\nconst safeNumber = (value)=>typeof value === \"number\" ? value : 0;\nconst loadTicketPurchaseState = ()=>{\n    const saved = localStorage.getItem(TICKET_PURCHASE_STATE_KEY);\n    return saved ? JSON.parse(saved) : {};\n};\nconst saveTicketPurchaseState = (state)=>{\n    const current = loadTicketPurchaseState();\n    const merged = {\n        ...current,\n        ...state\n    };\n    localStorage.setItem(TICKET_PURCHASE_STATE_KEY, JSON.stringify(merged));\n};\nconst clearTicketPurchaseState = ()=>{\n    localStorage.removeItem(TICKET_PURCHASE_STATE_KEY);\n};\nconst getSelectedProduction = ()=>{\n    const s = loadTicketPurchaseState();\n    return {\n        id: s.selectedProductionId ?? null,\n        name: s.selectedProductionName ?? null,\n        description: s.selectedProductionDescription ?? null,\n        imageUrl: s.selectedProductionImageUrl ?? null\n    };\n};\nconst saveSelectedProduction = (production)=>{\n    saveTicketPurchaseState({\n        selectedProductionId: production.id,\n        selectedProductionName: production.name,\n        selectedProductionDescription: production.description,\n        selectedProductionImageUrl: production.imageUrl\n    });\n};\nconst getSelectedPerformance = ()=>{\n    const s = loadTicketPurchaseState();\n    return {\n        id: s.selectedPerformanceId ?? null,\n        name: s.selectedPerformanceName ?? null,\n        dateTime: s.selectedPerformanceDateTime ?? null,\n        description: s.selectedPerformanceDescription ?? null,\n        imageUrl: s.selectedPerformanceImageUrl ?? null,\n        location: s.selectedPerformanceLocation ?? null\n    };\n};\nconst saveSelectedPerformance = (perf)=>{\n    saveTicketPurchaseState({\n        selectedPerformanceId: perf.id,\n        selectedPerformanceName: perf.name,\n        selectedPerformanceDateTime: perf.dateTime,\n        selectedPerformanceDescription: perf.description,\n        selectedPerformanceImageUrl: perf.imageUrl,\n        selectedPerformanceLocation: perf.location\n    });\n};\nconst getSelectedBundles = ()=>{\n    return loadTicketPurchaseState().selectedBundles || [];\n};\nconst saveSelectedBundle = (bundleId, quantity)=>{\n    const bundles = getSelectedBundles();\n    const idx = bundles.findIndex((b)=>b.bundle_id === bundleId);\n    if (idx > -1) {\n        if (quantity > 0) bundles[idx].quantity = quantity;\n        else bundles.splice(idx, 1);\n    } else if (quantity > 0) bundles.push({\n        bundle_id: bundleId,\n        quantity\n    });\n    saveTicketPurchaseState({\n        selectedBundles: bundles\n    });\n};\nconst removeSelectedBundle = (bundleId)=>{\n    const remaining = getSelectedBundles().filter((b)=>b.bundle_id !== bundleId);\n    saveTicketPurchaseState({\n        selectedBundles: remaining\n    });\n    // Remove bundle_required tickets if none selected\n    const total = remaining.reduce((sum, b)=>sum + safeNumber(b.quantity), 0);\n    if (total === 0) {\n        const tickets = getSelectedTickets().filter((t)=>!t.bundle_required);\n        saveTicketPurchaseState({\n            selectedTickets: tickets\n        });\n    }\n};\nconst getSelectedTickets = ()=>{\n    return loadTicketPurchaseState().selectedTickets || [];\n};\nconst saveSelectedTicket = (tierId, quantity, bundle_required)=>{\n    const tickets = getSelectedTickets();\n    const idx = tickets.findIndex((t)=>t.ticket_tier_id === tierId);\n    if (idx > -1) {\n        if (quantity > 0) tickets[idx].quantity = quantity;\n        else tickets.splice(idx, 1);\n    } else if (quantity > 0) tickets.push({\n        ticket_tier_id: tierId,\n        quantity,\n        bundle_required\n    });\n    saveTicketPurchaseState({\n        selectedTickets: tickets\n    });\n};\nconst removeSelectedTicket = (tierId)=>{\n    const remaining = getSelectedTickets().filter((t)=>t.ticket_tier_id !== tierId);\n    saveTicketPurchaseState({\n        selectedTickets: remaining\n    });\n};\nconst getCustomQuestion = ()=>loadTicketPurchaseState().customQuestion ?? null;\nconst saveCustomQuestion = (q)=>saveTicketPurchaseState({\n        customQuestion: q\n    });\nconst getAssistanceNeeded = ()=>loadTicketPurchaseState().assistanceNeeded ?? false;\nconst saveAssistanceNeeded = (v)=>saveTicketPurchaseState({\n        assistanceNeeded: v\n    });\nconst getAssistanceMessage = ()=>loadTicketPurchaseState().assistanceMessage ?? \"\";\nconst saveAssistanceMessage = (m)=>saveTicketPurchaseState({\n        assistanceMessage: m\n    });\nconst saveUserDetails = (d)=>saveTicketPurchaseState(d);\nconst clearSelectedPerformance = ()=>saveTicketPurchaseState({\n        selectedPerformanceId: undefined,\n        selectedPerformanceName: undefined,\n        selectedPerformanceDateTime: undefined,\n        selectedPerformanceDescription: undefined,\n        selectedPerformanceImageUrl: undefined,\n        selectedPerformanceLocation: undefined\n    });\nconst clearSelectedBundles = ()=>saveTicketPurchaseState({\n        selectedBundles: []\n    });\nconst clearSelectedTickets = ()=>saveTicketPurchaseState({\n        selectedTickets: []\n    });\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"h28oA\":[function(require,module,exports) {\n// src/modules/tickets/performanceList.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializePerformanceList\", ()=>initializePerformanceList);\nvar _core = require(\"@xatom/core\");\nvar _performances = require(\"../../api/performances\");\nvar _ticketPurchaseState = require(\"./state/ticketPurchaseState\");\nvar _performanceFilter = require(\"./components/performanceFilter\");\nlet initialTemplateState = null;\nconst initializePerformanceList = async (containerSelector)=>{\n    const container = document.querySelector(containerSelector);\n    if (!container) {\n        console.error(\"Performance list container not found.\");\n        return [];\n    }\n    if (!initialTemplateState) initialTemplateState = container.cloneNode(true);\n    container.innerHTML = \"\";\n    container.appendChild(initialTemplateState.cloneNode(true));\n    const list = new (0, _core.WFDynamicList)(containerSelector, {\n        rowSelector: \"#cardSelectPerformance\",\n        loaderSelector: \"#performanceListLoading\",\n        emptySelector: \"#performanceListEmpty\"\n    });\n    list.loaderRenderer((loader)=>{\n        loader.setStyle({\n            display: \"flex\"\n        });\n        return loader;\n    });\n    list.emptyRenderer((empty)=>{\n        empty.setStyle({\n            display: \"flex\"\n        });\n        return empty;\n    });\n    list.rowRenderer(({ rowData, rowElement, index })=>{\n        const perf = rowData;\n        const card = new (0, _core.WFComponent)(rowElement);\n        const dateWrapper = card.getChildAsComponent(\".production_date_wrapper\");\n        const dayEl = dateWrapper?.getChildAsComponent(\".u-text-h4\");\n        const monthEl = dateWrapper?.getChildAsComponent(\".production_date_month\");\n        const timeEl = dateWrapper?.getChildAsComponent(\".input_card_description\");\n        const weekdayEl = card.getChildAsComponent(\"#cardPerformanceWeekday\");\n        const titleEl = card.getChildAsComponent(\"#cardPerformanceTitle\");\n        const prodTitleEl = card.getChildAsComponent(\"#cardPerformanceProductionTitle\");\n        const descEl = card.getChildAsComponent(\"#cardPerformanceDescription\");\n        const imageEl = card.getChildAsComponent(\"#cardImage\");\n        const inputEl = card.getChildAsComponent(\".input_card_input\");\n        const labelEl = card.getChildAsComponent(\"label\");\n        const locEl = card.getChildAsComponent(\"#cardPerformanceLocation\");\n        const soldOutEl = card.getChildAsComponent(\"#performanceSoldOut\");\n        if (perf.Sold_Out) {\n            // Show the sold-out banner/label\n            soldOutEl?.setStyle({\n                display: \"flex\"\n            });\n            // Disable interaction on the row\n            rowElement.setStyle({\n                pointerEvents: \"none\",\n                opacity: \"0.6\"\n            });\n            // Optionally, also disable the radio input\n            inputEl.setAttribute(\"disabled\", \"true\");\n        } else // Ensure it's hidden if not sold out\n        soldOutEl?.setStyle({\n            display: \"none\"\n        });\n        if (!dayEl || !monthEl || !timeEl || !weekdayEl || !titleEl || !prodTitleEl || !descEl || !imageEl || !inputEl || !labelEl || !locEl || !soldOutEl) {\n            console.error(\"Performance elements not found.\");\n            return;\n        }\n        // Wire up the radio button\n        const inputId = `performanceInput-${index}`;\n        inputEl.setAttribute(\"id\", inputId);\n        inputEl.setAttribute(\"value\", perf.id.toString());\n        labelEl.setAttribute(\"for\", inputId);\n        // --- timezone‐aware formatting in New York ---\n        const ts = Number(perf.Date_Time);\n        const date = new Date(ts);\n        // Day of month\n        dayEl.setText(date.toLocaleString(\"en-US\", {\n            day: \"numeric\",\n            timeZone: \"America/New_York\"\n        }));\n        // Month abbreviation\n        monthEl.setText(date.toLocaleString(\"en-US\", {\n            month: \"short\",\n            timeZone: \"America/New_York\"\n        }));\n        // Weekday name\n        weekdayEl.setText(date.toLocaleString(\"en-US\", {\n            weekday: \"long\",\n            timeZone: \"America/New_York\"\n        }));\n        // Time (H:MM AM/PM)\n        timeEl.setText(date.toLocaleTimeString(\"en-US\", {\n            hour: \"numeric\",\n            minute: \"2-digit\",\n            hour12: true,\n            timeZone: \"America/New_York\"\n        }));\n        // --- end timezone‐aware block ---\n        // Fill in the rest\n        titleEl.setText(perf.Displayed_Name || perf.Name);\n        const selectedProd = (0, _ticketPurchaseState.getSelectedProduction)();\n        prodTitleEl.setText(selectedProd?.name || \"Unknown Production\");\n        descEl.setText(perf.Short_Description);\n        if (perf.Main_Image) {\n            imageEl.setAttribute(\"src\", perf.Main_Image);\n            imageEl.setAttribute(\"alt\", perf.Displayed_Name || perf.Name);\n        }\n        // Show human-readable venue name\n        locEl.setText(perf.location_details?.Name || \"Unknown venue\");\n        inputEl.on(\"change\", ()=>{\n            (0, _ticketPurchaseState.saveSelectedPerformance)({\n                id: perf.id.toString(),\n                name: perf.Displayed_Name,\n                dateTime: perf.Date_Time.toString(),\n                description: perf.Short_Description,\n                imageUrl: perf.Main_Image,\n                location: perf.location_details?.Name || \"\"\n            });\n        });\n        rowElement.setStyle({\n            display: \"flex\"\n        });\n        return rowElement;\n    });\n    try {\n        list.changeLoadingStatus(true);\n        const prod = (0, _ticketPurchaseState.getSelectedProduction)();\n        if (!prod?.id) throw new Error(\"No production selected\");\n        const performances = await (0, _performances.fetchPerformances)(prod.id.toString());\n        performances.sort((a, b)=>a.Date_Time - b.Date_Time);\n        list.setData(performances);\n        if (performances.length) (0, _performanceFilter.initializePerformanceFilter)();\n        list.changeLoadingStatus(false);\n        return performances;\n    } catch (err) {\n        console.error(\"Error loading performances:\", err);\n        list.setData([]);\n        list.changeLoadingStatus(false);\n        return [];\n    }\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../../api/performances\":\"kkvM9\",\"./state/ticketPurchaseState\":\"8lBgN\",\"./components/performanceFilter\":\"4sx37\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"kkvM9\":[function(require,module,exports) {\n// src/api/performances.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"fetchPerformances\", ()=>fetchPerformances);\nvar _apiConfig = require(\"./apiConfig\");\nconst fetchPerformances = async (productionId)=>{\n    try {\n        const { performances } = await (0, _apiConfig.apiClient).post(\"/tickets/performances\", {\n            data: {\n                production_id: productionId\n            }\n        }).fetch();\n        return performances;\n    } catch (error) {\n        console.error(\"Error fetching performances:\", error);\n        throw error;\n    }\n};\n\n},{\"./apiConfig\":\"dUmIV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"4sx37\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializePerformanceFilter\", ()=>initializePerformanceFilter);\nconst initializePerformanceFilter = ()=>{\n    const locationSelectElement = document.getElementById(\"locationFilter\");\n    const monthSelectElement = document.getElementById(\"monthFilter\");\n    if (locationSelectElement) locationSelectElement.addEventListener(\"change\", ()=>{\n        applyFilters();\n    });\n    if (monthSelectElement) monthSelectElement.addEventListener(\"change\", ()=>{\n        applyFilters();\n    });\n};\nconst applyFilters = ()=>{\n    const locationSelectElement = document.getElementById(\"locationFilter\");\n    const monthSelectElement = document.getElementById(\"monthFilter\");\n    const selectedLocation = locationSelectElement?.value || \"N/A\";\n    const selectedMonth = monthSelectElement?.value || \"N/A\";\n    filterPerformances(selectedLocation, selectedMonth);\n};\nconst filterPerformances = (location, month)=>{\n    const performanceCards = document.querySelectorAll(\".input_card_wrap\");\n    let hasVisibleItems = false;\n    performanceCards.forEach((performanceCard)=>{\n        const performanceLocationElement = performanceCard.querySelector(\"#cardPerformanceLocation\");\n        const performanceLocation = performanceLocationElement?.textContent || \"\";\n        const performanceMonthElement = performanceCard.querySelector(\".production_date_month\");\n        const performanceMonth = performanceMonthElement?.textContent || \"\";\n        const matchesLocation = location === \"N/A\" || performanceLocation === location;\n        const matchesMonth = month === \"N/A\" || performanceMonth.toUpperCase() === month;\n        if (matchesLocation && matchesMonth) {\n            performanceCard.style.display = \"flex\";\n            hasVisibleItems = true;\n        } else performanceCard.style.display = \"none\";\n    });\n    // Handle empty state display\n    const emptyStateElement = document.getElementById(\"filterListEmpty\");\n    if (emptyStateElement) emptyStateElement.style.display = hasVisibleItems ? \"none\" : \"flex\";\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"bBABM\":[function(require,module,exports) {\n// src/modules/tickets/ticketTiers.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeTicketTiers\", ()=>initializeTicketTiers);\nvar _ticketTiersAPI = require(\"../../api/ticketTiersAPI\");\nvar _ticketTierListRender = require(\"./components/ticketTierListRender\");\nvar _ticketPurchaseState = require(\"./state/ticketPurchaseState\");\nvar _core = require(\"@xatom/core\");\nvar _selectedPerformanceUI = require(\"./components/selectedPerformanceUI\");\nvar _customQuestionUI = require(\"./components/customQuestionUI\");\nvar _assistanceInputUI = require(\"./components/assistanceInputUI\");\nvar _userDetailsUI = require(\"./components/userDetailsUI\");\nconst initializeTicketTiers = async (bundleContainerSelector, tierContainerSelector)=>{\n    const selectedPerformance = (0, _ticketPurchaseState.getSelectedPerformance)();\n    if (!selectedPerformance?.id) {\n        console.error(\"No performance selected.\");\n        return;\n    }\n    try {\n        // Fetch all ticket tier data for this performance\n        const ticketTierData = await (0, _ticketTiersAPI.fetchTicketTiers)(selectedPerformance.id);\n        // Destructure API response shape, including bundles_available\n        const { tickets_available, performance_details, bundles_available } = ticketTierData;\n        // Flatten nested arrays\n        const bundles = performance_details.ticket_bundles_offered.flat();\n        const tickets = performance_details.ticket_tiers_offered.flat();\n        // Update selected performance UI\n        (0, _selectedPerformanceUI.updateSelectedPerformanceUI)();\n        // Initialize user details section\n        (0, _userDetailsUI.initializeUserDetails)();\n        // Reset container visibility\n        const bundleContainer = new (0, _core.WFComponent)(bundleContainerSelector);\n        bundleContainer.setStyle({\n            display: \"block\"\n        });\n        const tierContainer = new (0, _core.WFComponent)(tierContainerSelector);\n        tierContainer.setStyle({\n            display: \"block\"\n        });\n        let hasBundlesOrTickets = false;\n        // Render bundle cards (pass bundles_available)\n        if (bundles.length > 0) {\n            (0, _ticketTierListRender.renderBundles)(bundles, bundleContainerSelector, bundles_available);\n            hasBundlesOrTickets = true;\n        } else bundleContainer.setStyle({\n            display: \"none\"\n        });\n        // Render ticket tier cards with availability\n        if (tickets.length > 0) {\n            (0, _ticketTierListRender.renderTicketTiers)(tickets, tickets_available, tierContainerSelector);\n            hasBundlesOrTickets = true;\n        } else tierContainer.setStyle({\n            display: \"none\"\n        });\n        // Toggle \"no tickets available\" message\n        const noTicketsElem = new (0, _core.WFComponent)(\"#noTicketsAvailable\");\n        noTicketsElem.setStyle({\n            display: hasBundlesOrTickets ? \"none\" : \"flex\"\n        });\n        // Show custom question\n        const customQuestion = performance_details.Custom_Question;\n        (0, _customQuestionUI.updateCustomQuestion)(customQuestion);\n        // Initialize assistance input UI\n        (0, _assistanceInputUI.initializeAssistanceInput)();\n    } catch (error) {\n        console.error(\"Error fetching ticket tiers:\", error);\n    }\n};\n\n},{\"../../api/ticketTiersAPI\":\"iApBh\",\"./components/ticketTierListRender\":\"64cXF\",\"./state/ticketPurchaseState\":\"8lBgN\",\"@xatom/core\":\"65YBq\",\"./components/selectedPerformanceUI\":\"ldUYM\",\"./components/customQuestionUI\":\"dxOwo\",\"./components/assistanceInputUI\":\"2EvCq\",\"./components/userDetailsUI\":\"6alDg\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"iApBh\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"fetchTicketTiers\", ()=>fetchTicketTiers);\nvar _apiConfig = require(\"./apiConfig\");\nconst fetchTicketTiers = async (selectedPerformanceId)=>{\n    try {\n        const response = await (0, _apiConfig.apiClient).post(\"/tickets/ticket_tiers\", {\n            data: {\n                selectedPerformanceId\n            }\n        }).fetch();\n        return response;\n    } catch (error) {\n        console.error(\"Error fetching ticket tiers:\", error);\n        throw error;\n    }\n};\n\n},{\"./apiConfig\":\"dUmIV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"64cXF\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"renderBundles\", ()=>(0, _bundleRenderer.renderBundles));\nparcelHelpers.export(exports, \"renderTicketTiers\", ()=>(0, _ticketTierRenderer.renderTicketTiers));\nvar _bundleRenderer = require(\"./bundleRenderer\");\nvar _ticketTierRenderer = require(\"./ticketTierRenderer\");\n\n},{\"./bundleRenderer\":\"2Fs2e\",\"./ticketTierRenderer\":\"bIOFG\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"2Fs2e\":[function(require,module,exports) {\n// src/modules/tickets/components/bundleRenderer.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"renderBundles\", ()=>renderBundles);\nvar _core = require(\"@xatom/core\");\nvar _ticketPurchaseState = require(\"../state/ticketPurchaseState\");\nvar _bundleStateUpdater = require(\"../state/bundleStateUpdater\");\nvar _ticketTierRenderer = require(\"./ticketTierRenderer\");\nvar _formUtils = require(\"../../../utils/formUtils\");\nlet initialBundleTemplate = null;\nconst renderBundles = (bundles, containerSelector, bundlesAvailable = [])=>{\n    const container = document.querySelector(containerSelector);\n    if (!container) {\n        console.error(\"Bundle list container not found.\");\n        return;\n    }\n    // Keep a pristine copy of the template\n    if (!initialBundleTemplate) initialBundleTemplate = container.cloneNode(true);\n    container.innerHTML = \"\";\n    container.appendChild(initialBundleTemplate.cloneNode(true));\n    const clearNoTicketsError = ()=>{\n        const noTicketsError = new (0, _core.WFComponent)(\"#noTicketsError\");\n        (0, _formUtils.toggleError)(noTicketsError, \"\", false);\n    };\n    const list = new (0, _core.WFDynamicList)(containerSelector, {\n        rowSelector: \"#bundleCard\",\n        loaderSelector: \"#bundleListLoading\",\n        emptySelector: \"#bundleListEmpty\"\n    });\n    list.loaderRenderer((loader)=>{\n        loader.getElement().style.display = \"flex\";\n        return loader;\n    });\n    list.emptyRenderer((empty)=>{\n        empty.getElement().style.display = \"flex\";\n        return empty;\n    });\n    list.rowRenderer(({ rowData, rowElement })=>{\n        const bundleCard = new (0, _core.WFComponent)(rowElement);\n        const bundlePrice = bundleCard.getChildAsComponent(\"#bundlePrice\");\n        const bundleName = bundleCard.getChildAsComponent(\"#bundleName\");\n        const bundleDescription = bundleCard.getChildAsComponent(\"#bundleDescription\");\n        const bundleQuantityInput = bundleCard.getChildAsComponent(\"#bundleQuantityInput\");\n        const bundleIncrementButton = bundleCard.getChildAsComponent(\"#bundleQuantityIncrease\");\n        const bundleDecrementButton = bundleCard.getChildAsComponent(\"#bundleQuantityDecrease\");\n        const bundleMaxAlert = bundleCard.getChildAsComponent(\".maximum_alert\");\n        const bundleSoldOut = bundleCard.getChildAsComponent(\"#bundleSoldOut\");\n        const numberInputWrapper = bundleCard.getChildAsComponent(\".number_input_wrapper\");\n        if (!bundlePrice || !bundleName || !bundleDescription || !bundleQuantityInput || !bundleIncrementButton || !bundleDecrementButton || !bundleMaxAlert || !bundleSoldOut || !numberInputWrapper) {\n            console.error(\"Bundle elements not found.\");\n            return;\n        }\n        // Display price\n        bundlePrice.setText(rowData.product_details.Displayed_single_sale_price);\n        // Populate text\n        bundleName.setText(rowData.Displayed_Name);\n        bundleDescription.setText(rowData.Short_Description);\n        bundleQuantityInput.setAttribute(\"value\", \"0\");\n        // Lookup this bundle's max availability\n        const availability = bundlesAvailable.find((b)=>b.bundle_id === rowData.id);\n        const maxQty = availability ? availability.max_available : Infinity;\n        // If none available, show “Sold out” and disable input\n        if (maxQty <= 0) {\n            bundleSoldOut.setText(\"Sold out\");\n            bundleSoldOut.getElement().style.display = \"block\";\n            numberInputWrapper.addCssClass(\"is-disabled\");\n        } else {\n            bundleSoldOut.getElement().style.display = \"none\";\n            numberInputWrapper.removeCssClass(\"is-disabled\");\n        }\n        // Seed the input's max for native clamping\n        bundleQuantityInput.setAttribute(\"max\", maxQty.toString());\n        const hideAlert = ()=>bundleMaxAlert.getElement().style.display = \"none\";\n        const showAlert = (msg)=>{\n            bundleMaxAlert.setText(msg);\n            bundleMaxAlert.getElement().style.display = \"block\";\n        };\n        // Increment logic with max guard\n        bundleIncrementButton.on(\"click\", ()=>{\n            const inputEl = bundleQuantityInput.getElement();\n            let current = Number(inputEl.value);\n            if (current < maxQty) {\n                current += 1;\n                inputEl.value = String(current);\n                (0, _ticketPurchaseState.saveSelectedBundle)(rowData.id.toString(), current);\n                (0, _bundleStateUpdater.updateTicketTierButtons)();\n                clearNoTicketsError();\n                hideAlert();\n                (0, _bundleStateUpdater.resetTicketQuantitiesIfNeeded)();\n                (0, _ticketTierRenderer.revalidateTicketTierQuantities)();\n            } else showAlert(`Only up to ${maxQty} bundles available.`);\n        });\n        // Decrement logic\n        bundleDecrementButton.on(\"click\", ()=>{\n            const inputEl = bundleQuantityInput.getElement();\n            let current = Number(inputEl.value);\n            if (current > 0) {\n                current -= 1;\n                inputEl.value = String(current);\n                if (current > 0) (0, _ticketPurchaseState.saveSelectedBundle)(rowData.id.toString(), current);\n                else (0, _ticketPurchaseState.removeSelectedBundle)(rowData.id.toString());\n                (0, _bundleStateUpdater.updateTicketTierButtons)();\n                clearNoTicketsError();\n                hideAlert();\n                (0, _bundleStateUpdater.resetTicketQuantitiesIfNeeded)();\n                (0, _ticketTierRenderer.revalidateTicketTierQuantities)();\n            }\n        });\n        // Manual input guard\n        bundleQuantityInput.on(\"input\", ()=>{\n            clearNoTicketsError();\n            const inputEl = bundleQuantityInput.getElement();\n            let val = Number(inputEl.value);\n            if (val > maxQty) {\n                inputEl.value = String(maxQty);\n                showAlert(`Only up to ${maxQty} bundles available.`);\n            } else hideAlert();\n            (0, _bundleStateUpdater.resetTicketQuantitiesIfNeeded)();\n            (0, _ticketTierRenderer.revalidateTicketTierQuantities)();\n        });\n        // Show the card\n        rowElement.setStyle({\n            display: \"flex\"\n        });\n        return rowElement;\n    });\n    // Render all\n    list.setData(bundles);\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../state/ticketPurchaseState\":\"8lBgN\",\"../state/bundleStateUpdater\":\"by5b6\",\"./ticketTierRenderer\":\"bIOFG\",\"../../../utils/formUtils\":\"gepHz\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"by5b6\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"resetTicketQuantitiesIfNeeded\", ()=>resetTicketQuantitiesIfNeeded);\nparcelHelpers.export(exports, \"updateTicketTierButtons\", ()=>updateTicketTierButtons);\nvar _ticketPurchaseState = require(\"../state/ticketPurchaseState\");\n// Utility function to safely convert unknown types to number\nconst safeNumber = (value)=>typeof value === \"number\" ? value : 0;\nconst resetTicketQuantitiesIfNeeded = ()=>{\n    const selectedBundles = (0, _ticketPurchaseState.getSelectedBundles)();\n    const totalBundlesSelected = selectedBundles.reduce((sum, bundle)=>sum + safeNumber(bundle.quantity), 0);\n    const selectedTickets = (0, _ticketPurchaseState.getSelectedTickets)();\n    selectedTickets.forEach((ticket)=>{\n        const ticketElement = document.querySelector(`#ticketTierCard[data-id=\"${ticket.ticket_tier_id}\"] #ticketTierQuantityInput`);\n        if (!ticketElement) return;\n        if (ticket.bundle_required && totalBundlesSelected <= 0) {\n            ticketElement.value = \"0\";\n            (0, _ticketPurchaseState.removeSelectedTicket)(ticket.ticket_tier_id);\n        }\n    });\n    console.log(\"Updated selectedTickets:\", (0, _ticketPurchaseState.getSelectedTickets)());\n};\nconst updateTicketTierButtons = ()=>{\n    const selectedBundles = (0, _ticketPurchaseState.getSelectedBundles)();\n    const totalBundlesSelected = selectedBundles.reduce((sum, bundle)=>sum + safeNumber(bundle.quantity), 0);\n    const ticketTierInputs = document.querySelectorAll(\"#ticketTierQuantityInput\");\n    const ticketTierIncrementButtons = document.querySelectorAll(\"#ticketTierQuantityIncrease\");\n    ticketTierInputs.forEach((input)=>{\n        const ticketCard = input.closest(\"#ticketTierCard\");\n        const requiresBundle = ticketCard?.getAttribute(\"data-requires-bundle\") === \"true\";\n        if (requiresBundle && totalBundlesSelected <= 0) {\n            input.setAttribute(\"disabled\", \"true\");\n            input.value = \"0\";\n        } else input.removeAttribute(\"disabled\");\n    });\n    ticketTierIncrementButtons.forEach((button)=>{\n        const ticketCard = button.closest(\"#ticketTierCard\");\n        const requiresBundle = ticketCard?.getAttribute(\"data-requires-bundle\") === \"true\";\n        if (requiresBundle && totalBundlesSelected <= 0) button.setAttribute(\"disabled\", \"true\");\n        else button.removeAttribute(\"disabled\");\n    });\n    resetTicketQuantitiesIfNeeded();\n};\n\n},{\"../state/ticketPurchaseState\":\"8lBgN\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"bIOFG\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"revalidateTicketTierQuantities\", ()=>revalidateTicketTierQuantities);\nparcelHelpers.export(exports, \"renderTicketTiers\", ()=>renderTicketTiers);\nvar _core = require(\"@xatom/core\");\nvar _ticketPurchaseState = require(\"../state/ticketPurchaseState\");\nvar _formUtils = require(\"../../../utils/formUtils\");\nconst safeNumber = (value)=>typeof value === \"number\" ? value : 0;\nconst clearNoTicketsError = ()=>{\n    const noTicketsError = new (0, _core.WFComponent)(\"#noTicketsError\");\n    (0, _formUtils.toggleError)(noTicketsError, \"\", false);\n};\nlet initialTicketTierTemplate = null;\nconst revalidateTicketTierQuantities = ()=>{\n    const cards = document.querySelectorAll(\"[data-requires-bundle='true']\");\n    cards.forEach((card)=>{\n        const maxAlert = new (0, _core.WFComponent)(card.querySelector(\".maximum_alert\"));\n        const qtyInput = new (0, _core.WFComponent)(card.querySelector(\"#ticketTierQuantityInput\"));\n        const selectedBundles = (0, _ticketPurchaseState.getSelectedBundles)();\n        const totalBundles = selectedBundles.reduce((sum, b)=>sum + safeNumber(b.quantity), 0);\n        if (totalBundles <= 0) {\n            qtyInput.getElement().value = \"0\";\n            maxAlert.setText(\"This item requires a ticket bundle purchase. Please add a ticket bundle from the options above.\");\n            maxAlert.getElement().style.display = \"block\";\n        } else maxAlert.getElement().style.display = \"none\";\n    });\n};\nconst renderTicketTiers = (tickets, availabilities, containerSelector)=>{\n    // Build availability lookup\n    const availabilityMap = new Map();\n    availabilities.forEach((rec)=>{\n        availabilityMap.set(rec.Ticket_Tier, rec.Quantity_Available);\n    });\n    const container = document.querySelector(containerSelector);\n    if (!container) {\n        console.error(\"Ticket tier list container not found.\");\n        return;\n    }\n    if (!initialTicketTierTemplate) initialTicketTierTemplate = container.cloneNode(true);\n    container.innerHTML = \"\";\n    container.appendChild(initialTicketTierTemplate.cloneNode(true));\n    const list = new (0, _core.WFDynamicList)(containerSelector, {\n        rowSelector: \"#ticketTierCard\",\n        loaderSelector: \"#ticketTierListLoading\",\n        emptySelector: \"#ticketTierListEmpty\"\n    });\n    list.loaderRenderer((loader)=>{\n        loader.getElement().style.display = \"flex\";\n        return loader;\n    });\n    list.emptyRenderer((empty)=>{\n        empty.getElement().style.display = \"flex\";\n        return empty;\n    });\n    list.rowRenderer(({ rowData, rowElement })=>{\n        const card = new (0, _core.WFComponent)(rowElement);\n        const requiresBundle = rowData.Requires_Bundle_Purchase;\n        rowElement.setAttribute(\"data-requires-bundle\", requiresBundle ? \"true\" : \"false\");\n        const nameEl = card.getChildAsComponent(\"#ticketTierName\");\n        const priceEl = card.getChildAsComponent(\"#ticketTierPrice\");\n        const soldOutEl = card.getChildAsComponent(\"#ticketTierSoldOut\");\n        const descEl = card.getChildAsComponent(\"#ticketTierDescription\");\n        const qtyInput = card.getChildAsComponent(\"#ticketTierQuantityInput\");\n        const incBtn = card.getChildAsComponent(\"#ticketTierQuantityIncrease\");\n        const decBtn = card.getChildAsComponent(\"#ticketTierQuantityDecrease\");\n        const maxAlert = card.getChildAsComponent(\".maximum_alert\");\n        const wrapper = card.getChildAsComponent(\".number_input_wrapper\");\n        if (!nameEl || !priceEl || !soldOutEl || !descEl || !qtyInput || !incBtn || !decBtn || !maxAlert || !wrapper) {\n            console.error(\"Ticket tier elements not found.\");\n            return;\n        }\n        // Availability for this tier\n        const available = availabilityMap.get(rowData.id) ?? 0;\n        // Populate UI\n        nameEl.setText(rowData.Displayed_Name);\n        // show the formatted price from product_details\n        priceEl.setText(rowData.product_details.Displayed_single_sale_price);\n        descEl.setText(rowData.Short_Description);\n        // enforce stock limit in the quantity input\n        qtyInput.setAttribute(\"max\", String(available));\n        qtyInput.setAttribute(\"value\", \"0\");\n        if (available <= 0) {\n            soldOutEl.setText(\"Sold out\");\n            soldOutEl.getElement().style.display = \"block\";\n            wrapper.addCssClass(\"is-disabled\");\n        } else {\n            soldOutEl.getElement().style.display = \"none\";\n            wrapper.removeCssClass(\"is-disabled\");\n        }\n        const updateAlertVisibility = (message)=>{\n            maxAlert.setText(message);\n            maxAlert.getElement().style.display = \"block\";\n        };\n        // Increment handler\n        incBtn.on(\"click\", ()=>{\n            const inputEl = qtyInput.getElement();\n            let current = Number(inputEl.value);\n            // bundle-required guard\n            if (requiresBundle) {\n                const totalBundles = (0, _ticketPurchaseState.getSelectedBundles)().reduce((sum, b)=>sum + safeNumber(b.quantity), 0);\n                if (totalBundles <= 0) {\n                    updateAlertVisibility(\"This item requires a ticket bundle purchase. Please add a ticket bundle from the options above.\");\n                    return;\n                }\n            }\n            if (current < available) {\n                current++;\n                inputEl.value = String(current);\n                (0, _ticketPurchaseState.saveSelectedTicket)(rowData.id.toString(), current, requiresBundle);\n                clearNoTicketsError();\n                revalidateTicketTierQuantities();\n            } else updateAlertVisibility(\"You have reached the maximum available quantity.\");\n        });\n        // Decrement handler\n        decBtn.on(\"click\", ()=>{\n            const inputEl = qtyInput.getElement();\n            let current = Number(inputEl.value);\n            if (current > 0) {\n                current--;\n                inputEl.value = String(current);\n                if (current > 0) (0, _ticketPurchaseState.saveSelectedTicket)(rowData.id.toString(), current, requiresBundle);\n                else (0, _ticketPurchaseState.removeSelectedTicket)(rowData.id.toString());\n                clearNoTicketsError();\n                revalidateTicketTierQuantities();\n            }\n        });\n        // Manual input handler\n        qtyInput.on(\"input\", ()=>{\n            clearNoTicketsError();\n            const inputEl = qtyInput.getElement();\n            let val = Number(inputEl.value);\n            if (val > available) {\n                inputEl.value = String(available);\n                updateAlertVisibility(\"You have reached the maximum available quantity.\");\n            }\n            revalidateTicketTierQuantities();\n        });\n        rowElement.setStyle({\n            display: \"flex\"\n        });\n        return rowElement;\n    });\n    list.setData(tickets);\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../state/ticketPurchaseState\":\"8lBgN\",\"../../../utils/formUtils\":\"gepHz\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"gepHz\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"toggleError\", ()=>toggleError);\nparcelHelpers.export(exports, \"setupValidation\", ()=>setupValidation);\nparcelHelpers.export(exports, \"createValidationFunction\", ()=>createValidationFunction);\nparcelHelpers.export(exports, \"createCheckboxValidationFunction\", ()=>createCheckboxValidationFunction);\nparcelHelpers.export(exports, \"setupCheckboxValidation\", ()=>setupCheckboxValidation);\nparcelHelpers.export(exports, \"validateSelectedSessions\", ()=>validateSelectedSessions);\n/**\n * Updates the user's profile picture URL in the authentication system.\n * @param {string} imageUrl - The URL of the uploaded image.\n */ parcelHelpers.export(exports, \"setProfilePicUrl\", ()=>setProfilePicUrl);\n/**\n * Handles file upload and displays the uploaded image.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */ /**\n * Handles file upload and displays the uploaded image.\n * Only JPEG files less than 2 MB can be uploaded.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */ parcelHelpers.export(exports, \"setupFileUpload\", ()=>setupFileUpload);\nparcelHelpers.export(exports, \"formatPhoneNumber\", ()=>formatPhoneNumber);\nvar _core = require(\"@xatom/core\");\nvar _image = require(\"@xatom/image\");\nvar _apiConfig = require(\"../api/apiConfig\");\nvar _authConfig = require(\"../auth/authConfig\");\nfunction toggleError(errorMessageComponent, message, show) {\n    errorMessageComponent.updateTextViaAttrVar({\n        text: show ? message : \"\"\n    });\n    errorMessageComponent.setStyle({\n        display: show ? \"flex\" : \"none\"\n    });\n}\nfunction setupValidation(inputComponent, errorComponent, validate, requestErrorComponent // Optional component to clear on input change\n) {\n    const validateAndUpdate = ()=>{\n        const errorMessage = validate();\n        toggleError(errorComponent, errorMessage, !!errorMessage);\n        if (requestErrorComponent && errorMessage === \"\") // Clear request error message when the user is correcting the input\n        toggleError(requestErrorComponent, \"\", false);\n    };\n    // Attach event listeners for real-time validation\n    inputComponent.on(\"input\", validateAndUpdate);\n    inputComponent.on(\"blur\", validateAndUpdate);\n    inputComponent.on(\"change\", validateAndUpdate);\n}\nfunction createValidationFunction(inputComponent, validationFn, errorMessage) {\n    return ()=>{\n        const inputElement = inputComponent.getElement();\n        const isValid = validationFn(inputElement.value);\n        return isValid ? \"\" : errorMessage;\n    };\n}\nfunction createCheckboxValidationFunction(checkboxComponent, errorMessage) {\n    return ()=>{\n        const checkbox = checkboxComponent.getElement();\n        return checkbox.checked ? \"\" : errorMessage;\n    };\n}\nfunction setupCheckboxValidation(checkboxComponent, checkboxErrorComponent, errorMessage) {\n    const validate = createCheckboxValidationFunction(checkboxComponent, errorMessage);\n    setupValidation(checkboxComponent, checkboxErrorComponent, validate);\n}\nfunction validateSelectedSessions(selectedSessions, errorMessageComponent, errorMessage) {\n    const isValid = selectedSessions.length > 0 && selectedSessions.some((session)=>session.studentIds.length > 0);\n    if (!isValid) toggleError(errorMessageComponent, errorMessage, true);\n    else toggleError(errorMessageComponent, \"\", false);\n    return isValid;\n}\nfunction setProfilePicUrl(imageUrl) {\n    const user = (0, _authConfig.userAuth).getUser();\n    if (user && user.profile) {\n        // Ensure the profile_picture object exists\n        user.profile.profile_pic = user.profile.profile_pic || {\n            url: \"\"\n        };\n        // Set the profile picture URL\n        user.profile.profile_pic.url = imageUrl;\n        (0, _authConfig.userAuth).setUser(user);\n        localStorage.setItem(\"auth_user\", JSON.stringify(user));\n    }\n}\nfunction setupFileUpload(fileInput, fileInputError, fileInputSuccess, uploadEndpoint) {\n    const profilePictureImage = new (0, _image.WFImage)(\"#profilePictureImage\");\n    const uploadAnimation = new (0, _core.WFComponent)(\"#uploadAnimation\");\n    const overlay = new (0, _core.WFComponent)(\".drop-zone\");\n    let dragCounter = 0;\n    return new Promise((resolve)=>{\n        const handleFile = (file)=>{\n            // Validate file type and size\n            const validTypes = [\n                \"image/jpeg\",\n                \"image/jpg\"\n            ];\n            const maxSizeInBytes = 2097152; // 2 MB\n            if (!validTypes.includes(file.type) && !/\\.(jpg|jpeg)$/i.test(file.name)) {\n                const errorMessage = \"Only JPEG images are allowed.\";\n                toggleError(fileInputError, errorMessage, true);\n                // Reset file input value\n                fileInput.getElement().value = \"\";\n                return;\n            }\n            if (file.size > maxSizeInBytes) {\n                const errorMessage = \"File size must be less than 2 MB.\";\n                toggleError(fileInputError, errorMessage, true);\n                // Reset file input value\n                fileInput.getElement().value = \"\";\n                return;\n            }\n            // Show upload animation immediately\n            uploadAnimation.setStyle({\n                display: \"flex\"\n            });\n            // Hide error and success messages\n            fileInputError.setStyle({\n                display: \"none\"\n            });\n            fileInputSuccess.setStyle({\n                display: \"none\"\n            });\n            const reader = new FileReader();\n            // Display preview image as soon as the file is loaded into memory\n            reader.onload = (event)=>{\n                // Set the preview image for the profile picture\n                const result = event.target?.result;\n                profilePictureImage.setImage(result);\n                // Hide overlay once the image is set\n                overlay.setStyle({\n                    display: \"none\"\n                });\n            };\n            reader.readAsDataURL(file);\n            const formData = new FormData();\n            formData.append(\"profile_picture\", file);\n            const existingStudent = localStorage.getItem(\"current_student\");\n            if (existingStudent) {\n                const student = JSON.parse(existingStudent);\n                formData.append(\"student_profile_id\", student.id.toString());\n            }\n            // Send the file to the server\n            const postRequest = (0, _apiConfig.apiClient).post(uploadEndpoint, {\n                data: formData\n            });\n            postRequest.onData((response)=>{\n                if (response.status === \"success\") {\n                    const imageUrl = response.url.profile_pic.url;\n                    // Update the profile picture URL in the user session and local storage\n                    setProfilePicUrl(imageUrl);\n                    // Update the image for other parts of the UI as well\n                    profilePictureImage.setImage(imageUrl);\n                    // Store the URL in local storage\n                    localStorage.setItem(\"image_upload\", imageUrl);\n                    // Show success message and hide upload animation\n                    fileInputSuccess.setStyle({\n                        display: \"flex\"\n                    });\n                    uploadAnimation.setStyle({\n                        display: \"none\"\n                    });\n                    // Resolve with the uploaded image URL\n                    resolve(imageUrl);\n                } else {\n                    const errorMessage = \"Failed to upload profile picture.\";\n                    toggleError(fileInputError, errorMessage, true);\n                    uploadAnimation.setStyle({\n                        display: \"none\"\n                    });\n                    overlay.setStyle({\n                        display: \"none\"\n                    });\n                    dragCounter = 0;\n                    // Reset file input value\n                    fileInput.getElement().value = \"\";\n                }\n            });\n            postRequest.onError((error)=>{\n                let errorMessage = \"An error occurred during image upload.\";\n                if (error.response && error.response.data) errorMessage = error.response.data.message || errorMessage;\n                else if (error.message) errorMessage = error.message;\n                // Show error message and hide upload animation\n                toggleError(fileInputError, errorMessage, true);\n                uploadAnimation.setStyle({\n                    display: \"none\"\n                });\n                overlay.setStyle({\n                    display: \"none\"\n                });\n                dragCounter = 0;\n                // Reset file input value\n                fileInput.getElement().value = \"\";\n            });\n            // Make the API call\n            postRequest.fetch();\n        };\n        // Event listener for file input changes\n        fileInput.on(\"change\", ()=>{\n            const file = fileInput.getElement().files?.[0];\n            if (file) handleFile(file);\n        });\n        // Event listeners for drag-and-drop\n        const dragZoneElement = document.body;\n        dragZoneElement.addEventListener(\"dragenter\", (event)=>{\n            event.preventDefault();\n            dragCounter++;\n            if (dragCounter === 1) overlay.setStyle({\n                display: \"flex\"\n            });\n        });\n        dragZoneElement.addEventListener(\"dragleave\", ()=>{\n            dragCounter--;\n            if (dragCounter <= 0) {\n                overlay.setStyle({\n                    display: \"none\"\n                });\n                dragCounter = 0;\n            }\n        });\n        dragZoneElement.addEventListener(\"dragover\", (event)=>{\n            event.preventDefault();\n        });\n        dragZoneElement.addEventListener(\"drop\", (event)=>{\n            event.preventDefault();\n            const files = event.dataTransfer?.files;\n            if (files?.length) handleFile(files[0]);\n            overlay.setStyle({\n                display: \"none\"\n            });\n            dragCounter = 0;\n        });\n    });\n}\nconst formatPhoneNumber = (value)=>{\n    const cleaned = value.replace(/\\D/g, \"\"); // Remove all non-digit characters\n    if (cleaned.length <= 3) return cleaned;\n    else if (cleaned.length <= 6) return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3)}`;\n    else if (cleaned.length <= 10) return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6)}`;\n    else // If more than 10 digits, truncate the extra digits\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6, 10)}`;\n};\n\n},{\"@xatom/core\":\"65YBq\",\"@xatom/image\":\"bavwf\",\"../api/apiConfig\":\"dUmIV\",\"../auth/authConfig\":\"dHwPR\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"bavwf\":[function(require,module,exports) {\nvar t = require(\"d023971cccd819e3\");\nvar e, r, s, i, o, n, u = {};\ne = u, r = \"WFImage\", s = ()=>c, Object.defineProperty(e, r, {\n    get: s,\n    set: i,\n    enumerable: !0,\n    configurable: !0\n});\nclass c extends t.WFComponent {\n    constructor(t){\n        super(t);\n    }\n    getImageConfig() {\n        return this._config;\n    }\n    getSrc() {\n        return this.getAttribute(\"src\");\n    }\n    getSizes() {\n        return this.getAttribute(\"sizes\");\n    }\n    getSrcSet() {\n        return this.getAttribute(\"srcset\");\n    }\n    getLoading() {\n        return this.getAttribute(\"loading\");\n    }\n    onLoad(t) {\n        return this.on(\"load\", t), ()=>{\n            this.off(\"load\", t);\n        };\n    }\n    onLoadError(t) {\n        return this.on(\"error\", t), ()=>{\n            this.off(\"error\", t);\n        };\n    }\n    setImage(t) {\n        if (\"string\" == typeof t) this.setAttribute(\"src\", t), this.removeAttribute(\"srcset\"), this.removeAttribute(\"sizes\");\n        else {\n            if (this.setAttribute(\"src\", t.src), \"object\" == typeof t && t.srcSet && t.srcSet.length && t.sizes && t.sizes.length) {\n                const e = t.srcSet.map((t)=>`${t.url} ${t.size}`).join(\", \");\n                this.setAttribute(\"srcset\", e);\n            } else this.removeAttribute(\"srcset\"), this.removeAttribute(\"sizes\");\n            t.loading && this.setAttribute(\"loading\", t.loading);\n        }\n    }\n}\no = module.exports, n = u, Object.keys(n).forEach(function(t) {\n    \"default\" === t || \"__esModule\" === t || o.hasOwnProperty(t) || Object.defineProperty(o, t, {\n        enumerable: !0,\n        get: function() {\n            return n[t];\n        }\n    });\n});\n\n},{\"d023971cccd819e3\":\"65YBq\"}],\"ldUYM\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"updateSelectedPerformanceUI\", ()=>updateSelectedPerformanceUI);\nvar _core = require(\"@xatom/core\");\nvar _ticketPurchaseState = require(\"../state/ticketPurchaseState\");\nconst updateSelectedPerformanceUI = ()=>{\n    const selectedPerformance = (0, _ticketPurchaseState.getSelectedPerformance)();\n    const selectedProduction = (0, _ticketPurchaseState.getSelectedProduction)();\n    if (!selectedPerformance || !selectedPerformance.id) {\n        console.error(\"No performance selected.\");\n        return;\n    }\n    // pick up your DOM nodes\n    const selectedPerformanceDate = new (0, _core.WFComponent)(\"#selectedPerformanceDate\");\n    const selectedPerformanceMonth = new (0, _core.WFComponent)(\"#selectedPerformanceMonth\");\n    const selectedWeekday = new (0, _core.WFComponent)(\"#selectedWeekday\");\n    const selectedTime = new (0, _core.WFComponent)(\"#selectedTime\");\n    const selectedPerformanceTitle = new (0, _core.WFComponent)(\"#selectedPerformanceTitle\");\n    const selectedPerformanceProductionTitle = new (0, _core.WFComponent)(\"#selectedPerformanceProductionTitle\");\n    const selectedPerformanceDescription = new (0, _core.WFComponent)(\"#selectedPerformanceDescription\");\n    const selectedImage = new (0, _core.WFComponent)(\"#selectedImage\");\n    const selectedPerformanceLocation = new (0, _core.WFComponent)(\"#selectedPerformanceLocation\");\n    // dateTime might be an ISO string or a millisecond‐timestamp string\n    const raw = selectedPerformance.dateTime;\n    let date;\n    if (/^\\d+$/.test(raw)) date = new Date(Number(raw));\n    else date = new Date(raw);\n    // formatting options for New York\n    const optionsCommon = {\n        timeZone: \"America/New_York\"\n    };\n    // render date parts in Eastern Time\n    selectedPerformanceDate.setText(date.toLocaleString(\"en-US\", {\n        ...optionsCommon,\n        day: \"numeric\"\n    }));\n    selectedPerformanceMonth.setText(date.toLocaleString(\"en-US\", {\n        ...optionsCommon,\n        month: \"short\"\n    }));\n    selectedWeekday.setText(date.toLocaleString(\"en-US\", {\n        ...optionsCommon,\n        weekday: \"long\"\n    }));\n    selectedTime.setText(date.toLocaleTimeString(\"en-US\", {\n        ...optionsCommon,\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true\n    }));\n    selectedPerformanceTitle.setText(selectedPerformance.name);\n    selectedPerformanceProductionTitle.setText(selectedProduction.name);\n    selectedPerformanceDescription.setText(selectedProduction.description);\n    if (selectedPerformance.imageUrl) {\n        selectedImage.setAttribute(\"src\", selectedPerformance.imageUrl);\n        selectedImage.setAttribute(\"alt\", selectedPerformance.name);\n    }\n    // now display the human-readable venue name saved in state\n    if (selectedPerformance.location) selectedPerformanceLocation.setText(selectedPerformance.location);\n    else selectedPerformanceLocation.setText(\"Location not specified\");\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../state/ticketPurchaseState\":\"8lBgN\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"dxOwo\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"updateCustomQuestion\", ()=>updateCustomQuestion);\nvar _core = require(\"@xatom/core\");\nvar _ticketPurchaseState = require(\"../state/ticketPurchaseState\");\nconst updateCustomQuestion = (questionText)=>{\n    const wrapper = new (0, _core.WFComponent)(\"#customQuestionWrap\");\n    const divider = new (0, _core.WFComponent)(\"#customQuestionDivider\");\n    const label = new (0, _core.WFComponent)(\"label[for='customQuestionInput']\");\n    const input = new (0, _core.WFComponent)(\"#customQuestionInput\");\n    if (!questionText) {\n        wrapper.setStyle({\n            display: \"none\"\n        });\n        divider.setStyle({\n            display: \"none\"\n        });\n        return;\n    }\n    wrapper.setStyle({\n        display: \"\"\n    });\n    divider.setStyle({\n        display: \"\"\n    });\n    // Set the label text inside the wrapper\n    label.setText(questionText);\n    // Wire up input save\n    input.on(\"input\", ()=>{\n        const answer = input.getElement().value;\n        (0, _ticketPurchaseState.saveCustomQuestion)(answer);\n    });\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../state/ticketPurchaseState\":\"8lBgN\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"2EvCq\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeAssistanceInput\", ()=>initializeAssistanceInput);\nvar _core = require(\"@xatom/core\");\nvar _ticketPurchaseState = require(\"../state/ticketPurchaseState\");\nconst initializeAssistanceInput = ()=>{\n    const assistanceInput = new (0, _core.WFComponent)(\"#assistanceInput\");\n    const hiddenAssistanceWrapper = new (0, _core.WFComponent)(\"#hiddenAssistanceWrapper\");\n    const assistanceMessageInput = new (0, _core.WFComponent)(\"#assistanceMessageInput\");\n    if (!assistanceInput || !hiddenAssistanceWrapper || !assistanceMessageInput) {\n        console.error(\"Assistance input or hidden wrapper elements not found.\");\n        return;\n    }\n    // Initialize state based on current input values\n    const isChecked = assistanceInput.getElement().checked;\n    (0, _ticketPurchaseState.saveAssistanceNeeded)(isChecked);\n    if (isChecked) {\n        hiddenAssistanceWrapper.removeCssClass(\"g-hide\");\n        const assistanceMessage = assistanceMessageInput.getElement().value;\n        (0, _ticketPurchaseState.saveAssistanceMessage)(assistanceMessage);\n    } else {\n        hiddenAssistanceWrapper.addCssClass(\"g-hide\");\n        (0, _ticketPurchaseState.saveAssistanceMessage)(\"\"); // Clear the message in the state if hidden\n    }\n    assistanceInput.on(\"change\", ()=>{\n        const isChecked = assistanceInput.getElement().checked;\n        if (isChecked) hiddenAssistanceWrapper.removeCssClass(\"g-hide\");\n        else {\n            hiddenAssistanceWrapper.addCssClass(\"g-hide\");\n            assistanceMessageInput.getElement().value = \"\"; // Clear the input when hidden\n            (0, _ticketPurchaseState.saveAssistanceMessage)(\"\"); // Clear the message in the state if hidden\n        }\n        (0, _ticketPurchaseState.saveAssistanceNeeded)(isChecked); // Save the checkbox state\n    });\n    assistanceMessageInput.on(\"input\", ()=>{\n        const message = assistanceMessageInput.getElement().value;\n        (0, _ticketPurchaseState.saveAssistanceMessage)(message); // Save the message to the state\n    });\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../state/ticketPurchaseState\":\"8lBgN\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"6alDg\":[function(require,module,exports) {\n// src/modules/tickets/components/userDetailsUI.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeUserDetails\", ()=>initializeUserDetails);\nvar _core = require(\"@xatom/core\");\nvar _authConfig = require(\"../../../auth/authConfig\");\nvar _ticketPurchaseState = require(\"../state/ticketPurchaseState\"); // Import the save function from state\nconst initializeUserDetails = ()=>{\n    const emailWrap = new (0, _core.WFComponent)(\"#emailWrap\");\n    const firstNameInput = new (0, _core.WFComponent)(\"#firstNameInput\");\n    const lastNameInput = new (0, _core.WFComponent)(\"#lastNameInput\");\n    const emailInput = new (0, _core.WFComponent)(\"#emailInput\");\n    // Check if the user is logged in\n    const user = (0, _authConfig.authManager).getUserAuth().getUser();\n    if (user && user.email) {\n        // User is logged in, hide the emailWrap and populate the state\n        emailWrap.setStyle({\n            display: \"none\"\n        });\n        // Save the user details to the state\n        (0, _ticketPurchaseState.saveUserDetails)({\n            firstName: user.profile?.first_name || \"\",\n            lastName: user.profile?.last_name || \"\",\n            email: user.email\n        });\n    } else {\n        // User is not logged in, show the emailWrap\n        emailWrap.setStyle({\n            display: \"grid\"\n        });\n        // Set up event listeners to save user input to the state\n        firstNameInput.on(\"input\", ()=>{\n            const firstName = firstNameInput.getElement().value;\n            (0, _ticketPurchaseState.saveUserDetails)({\n                firstName\n            });\n        });\n        lastNameInput.on(\"input\", ()=>{\n            const lastName = lastNameInput.getElement().value;\n            (0, _ticketPurchaseState.saveUserDetails)({\n                lastName\n            });\n        });\n        emailInput.on(\"input\", ()=>{\n            const email = emailInput.getElement().value;\n            (0, _ticketPurchaseState.saveUserDetails)({\n                email\n            });\n        });\n    }\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../../../auth/authConfig\":\"dHwPR\",\"../state/ticketPurchaseState\":\"8lBgN\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"ejxGx\":[function(require,module,exports) {\nvar e = require(\"1a87f3bc23b90fa3\"), s = require(\"37b5fd8189a9f4c7\");\nvar t, i, r, l, d = {};\nt = d, i = \"WFSlider\", r = ()=>o, Object.defineProperty(t, i, {\n    get: r,\n    set: l,\n    enumerable: !0,\n    configurable: !0\n});\nconst n = window.jQuery;\nclass o extends e.WFComponent {\n    _sliderConfig = {};\n    _slides = [];\n    _defaultSwipeDisabled = !1;\n    _index = 0;\n    _listeners = new Map;\n    constructor(e){\n        super(e), this.init();\n    }\n    init() {\n        this._defaultSwipeDisabled = \"true\" === this.getAttribute(\"data-disable-swipe\"), this._sliderConfig = n(this.getElement()).data()[\".wSlider\"], this._slides = Array.from(this._sliderConfig.slides).map((s)=>new e.WFComponent(s)), this._mask = new e.WFComponent(this._sliderConfig.mask[0]), this._nav = new e.WFComponent(this._sliderConfig.nav[0]), this._left = new e.WFComponent(this._sliderConfig.left[0]), this._right = new e.WFComponent(this._sliderConfig.right[0]), function(e, s) {\n            if (!document.styleSheets) return;\n            if (0 == document.getElementsByTagName(\"head\").length) return;\n            let t, i;\n            if (document.styleSheets.length > 0) {\n                for(var r = 0, l = document.styleSheets.length; r < l; r++)if (!document.styleSheets[r].disabled) {\n                    var d = document.styleSheets[r].media;\n                    if (i = typeof d, \"string\" === i ? \"\" !== d && -1 === d.indexOf(\"screen\") || (t = document.styleSheets[r]) : \"object\" == i && (\"\" !== d.mediaText && -1 === d.mediaText.indexOf(\"screen\") || (t = document.styleSheets[r])), void 0 !== t) break;\n                }\n            }\n            if (void 0 === t) {\n                var n = document.createElement(\"style\");\n                for(n.type = \"text/css\", document.getElementsByTagName(\"head\")[0].appendChild(n), r = 0; r < document.styleSheets.length; r++)document.styleSheets[r].disabled || (t = document.styleSheets[r]);\n                i = typeof t.media;\n            }\n            if (\"string\" === i) {\n                for(r = 0, l = t.rules.length; r < l; r++)if (t.rules[r].selectorText && t.rules[r].selectorText.toLowerCase() == e.toLowerCase()) return void (t.rules[r].style.cssText = s);\n                t.addRule(e, s);\n            } else if (\"object\" === i) {\n                var o = t.cssRules ? t.cssRules.length : 0;\n                for(r = 0; r < o; r++)if (t.cssRules[r].selectorText && t.cssRules[r].selectorText.toLowerCase() == e.toLowerCase()) return void (t.cssRules[r].style.cssText = s);\n                t.insertRule(e + \"{\" + s + \"}\", o);\n            }\n        }(\".xa-slider-disable\", \"display:none !important;\");\n        const s = this;\n        Object.defineProperty(s._sliderConfig, \"index\", {\n            set: function(e) {\n                s._index = e, s._triggerOnChange();\n            },\n            get: function() {\n                return s._index;\n            }\n        }), this.refereshSlides();\n    }\n    reloadWFSlider() {\n        window.Webflow.require(\"slider\").destroy(), window.Webflow.require(\"slider\").redraw(), window.Webflow.require(\"slider\").ready();\n    }\n    refereshSlides() {\n        this._mask.getChildAsComponents(\".w-slide\").forEach((e)=>e.remove()), this._slides.reverse().forEach((e)=>{\n            this._mask.getElement().prepend(e.getElement());\n        }), this._slides.reverse(), this.reloadWFSlider();\n    }\n    getActiveSlide() {\n        return this._slides[this._index];\n    }\n    getAllSlides() {\n        return [\n            ...this._slides\n        ];\n    }\n    getSlideByIndex(e) {\n        return this._slides[e];\n    }\n    getActiveSlideIndex() {\n        return this._index;\n    }\n    getPreviousSlideIndex() {\n        return this._sliderConfig.previous;\n    }\n    goNext() {\n        this._sliderConfig.right.click();\n    }\n    goPrevious() {\n        this._sliderConfig.left.click();\n    }\n    goToIndex(e) {\n        e >= 0 && e < this._slides.length && (console.log(e), n(this._sliderConfig.nav.children()[e]).click());\n    }\n    addSlide(s, t = {}) {\n        const i = t.index, r = t.cssClass, l = (0, e.createComponent)(\"div\");\n        l.addCssClass(\"w-slide\"), r && l.addCssClass(r), l.appendChild(s);\n        const d = \"number\" != typeof i ? -1 : i, n = this._slides;\n        d >= 0 && d <= n.length ? n.splice(i, 0, l) : n.push(l), this._slides = [\n            ...n\n        ], this.refereshSlides();\n    }\n    removeSlide(e) {\n        const s = [\n            ...this._slides\n        ];\n        e >= 0 && e < s.length && s.splice(e, 1), this._slides = [\n            ...s\n        ], console.log(this._slides), this.refereshSlides();\n    }\n    getSlideNav() {\n        return this._nav;\n    }\n    setSlideNavigationState(e) {\n        e ? (this._left.removeCssClass(\"xa-slider-disable\"), this._right.removeCssClass(\"xa-slider-disable\"), this._nav.removeCssClass(\"xa-slider-disable\"), this.setAttribute(\"data-disable-swipe\", this._defaultSwipeDisabled ? \"true\" : \"false\")) : (this._left.addCssClass(\"xa-slider-disable\"), this._right.addCssClass(\"xa-slider-disable\"), this._nav.addCssClass(\"xa-slider-disable\"), this.setAttribute(\"data-disable-swipe\", \"true\")), this.reloadWFSlider();\n    }\n    onSlideChange(e) {\n        const t = (0, s.v4)();\n        return this._listeners.set(t, e), ()=>{\n            this._listeners.delete(t);\n        };\n    }\n    _triggerOnChange() {\n        Array.from(this._listeners.values()).forEach((e)=>{\n            e(this._index, this._sliderConfig.previous);\n        });\n    }\n    getConfig() {\n        return this._sliderConfig;\n    }\n}\nvar a, h;\na = module.exports, h = d, Object.keys(h).forEach(function(e) {\n    \"default\" === e || \"__esModule\" === e || a.hasOwnProperty(e) || Object.defineProperty(a, e, {\n        enumerable: !0,\n        get: function() {\n            return h[e];\n        }\n    });\n});\n\n},{\"1a87f3bc23b90fa3\":\"65YBq\",\"37b5fd8189a9f4c7\":\"faiuA\"}],\"i8KxD\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeTicketSidebarIndicators\", ()=>initializeTicketSidebarIndicators);\nparcelHelpers.export(exports, \"setActiveTicketStep\", ()=>setActiveTicketStep);\nparcelHelpers.export(exports, \"unsetActiveTicketStep\", ()=>unsetActiveTicketStep);\nparcelHelpers.export(exports, \"markTicketStepAsCompleted\", ()=>markTicketStepAsCompleted);\nparcelHelpers.export(exports, \"unmarkTicketStepAsCompleted\", ()=>unmarkTicketStepAsCompleted);\nvar _core = require(\"@xatom/core\");\nvar _authConfig = require(\"../../../auth/authConfig\");\nconst initializeTicketSidebarIndicators = ()=>{\n    const steps = [\n        {\n            id: \"sidebarStepOne\",\n            index: 1\n        },\n        {\n            id: \"sidebarStepTwo\",\n            index: 2\n        },\n        {\n            id: \"sidebarStepThree\",\n            index: 3\n        },\n        {\n            id: \"sidebarStepFour\",\n            index: 4\n        }\n    ];\n    // Set sidebar first name from userAuth\n    const firstNameText = new (0, _core.WFComponent)(\"#firstNameText\");\n    const user = (0, _authConfig.userAuth).getUser();\n    if (user && user.profile && user.profile.first_name) firstNameText.setText(user.profile.first_name);\n    else firstNameText.setText(\"Friend\");\n    steps.forEach((step)=>{\n        const stepComponent = new (0, _core.WFComponent)(`#${step.id}`);\n        let isCompleted = false; // Track the completed state\n        stepComponent.on(\"click\", ()=>{\n            if (isCompleted) isCompleted = false;\n            else isCompleted = true;\n        });\n    });\n};\nconst setActiveTicketStep = (stepNumber)=>{\n    const stepId = getTicketStepId(stepNumber);\n    const stepComponent = new (0, _core.WFComponent)(`#${stepId}`);\n    stepComponent.addCssClass(\"is-active\");\n};\nconst unsetActiveTicketStep = (stepNumber)=>{\n    const stepId = getTicketStepId(stepNumber);\n    const stepComponent = new (0, _core.WFComponent)(`#${stepId}`);\n    stepComponent.removeCssClass(\"is-active\");\n};\nconst markTicketStepAsCompleted = (stepNumber)=>{\n    const stepId = getTicketStepId(stepNumber);\n    const step = new (0, _core.WFComponent)(`#${stepId}`);\n    step.getElement().click(); // Programmatically trigger the click event to mark as complete\n};\nconst unmarkTicketStepAsCompleted = (stepNumber)=>{\n    const stepId = getTicketStepId(stepNumber);\n    const step = new (0, _core.WFComponent)(`#${stepId}`);\n    step.getElement().click(); // Programmatically trigger the click event to unmark as complete\n};\n// Helper function to get the ID string for a step in the ticket form\nconst getTicketStepId = (stepNumber)=>{\n    const stepMap = {\n        1: \"sidebarStepOne\",\n        2: \"sidebarStepTwo\",\n        3: \"sidebarStepThree\",\n        4: \"sidebarStepFour\"\n    };\n    return stepMap[stepNumber] || `ticketSidebarStep${stepNumber}`;\n};\n\n},{\"@xatom/core\":\"65YBq\",\"../../../auth/authConfig\":\"dHwPR\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"gu2z7\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"validateNotEmpty\", ()=>validateNotEmpty);\nparcelHelpers.export(exports, \"validateEmail\", ()=>validateEmail);\nparcelHelpers.export(exports, \"validateEmailOptional\", ()=>validateEmailOptional);\nparcelHelpers.export(exports, \"validatePasswordRequirements\", ()=>validatePasswordRequirements);\nparcelHelpers.export(exports, \"validateCheckbox\", ()=>validateCheckbox);\nparcelHelpers.export(exports, \"validatePasswordsMatch\", ()=>validatePasswordsMatch);\nparcelHelpers.export(exports, \"validateSelectField\", ()=>validateSelectField);\nparcelHelpers.export(exports, \"validatePhoneNumber\", ()=>validatePhoneNumber);\nparcelHelpers.export(exports, \"validatePhoneNumberOptional\", ()=>validatePhoneNumberOptional);\nfunction validateNotEmpty(input) {\n    return input !== undefined && input.trim() !== \"\";\n}\nfunction validateEmail(input) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(input);\n}\nconst validateEmailOptional = (value)=>{\n    if (value.trim() === \"\") // Email is optional, so empty string is valid\n    return true;\n    // Validate the email format if not empty\n    return validateEmail(value);\n};\nfunction validatePasswordRequirements(password) {\n    const hasLowercase = /[a-z]/.test(password);\n    const hasUppercase = /[A-Z]/.test(password);\n    const hasDigit = /\\d/.test(password);\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n    const hasValidLength = password.length >= 8;\n    return hasLowercase && hasUppercase && hasDigit && hasSpecialChar && hasValidLength;\n}\nfunction validateCheckbox(checked) {\n    return checked;\n}\nfunction validatePasswordsMatch(originalPassword, confirmPassword) {\n    return originalPassword === confirmPassword;\n}\nfunction validateSelectField(input) {\n    return input !== undefined && input !== \"N/A\";\n}\nfunction validatePhoneNumber(input) {\n    const phoneRegex = /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/;\n    return phoneRegex.test(input);\n}\nconst validatePhoneNumberOptional = (value)=>{\n    if (value.trim() === \"\") // Phone number is optional, so empty string is valid\n    return true;\n    // Validate the phone number format if not empty\n    return validatePhoneNumber(value);\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}],\"4zIDj\":[function(require,module,exports) {\n// src/modules/tickets/components/urlParamNavigator.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"initializeStateFromUrlParams\", ()=>initializeStateFromUrlParams);\nvar _ticketPurchaseState = require(\"../state/ticketPurchaseState\");\nvar _productionList = require(\"../productionList\");\nvar _performanceList = require(\"../performanceList\");\nvar _ticketTiers = require(\"../ticketTiers\");\nvar _sidebarIndicators = require(\"../components/sidebarIndicators\");\nvar _core = require(\"@xatom/core\");\nvar _selectedPerformanceUI = require(\"../components/selectedPerformanceUI\");\nvar _apiConfig = require(\"../../../api/apiConfig\");\n// parse URL params\nconst getUrlParams = ()=>{\n    const params = new URLSearchParams(window.location.search);\n    return {\n        productionId: params.get(\"production\"),\n        performanceId: params.get(\"performance\"),\n        cancelId: params.get(\"cancel\")\n    };\n};\nconst initializeStateFromUrlParams = async (slider)=>{\n    const { productionId, performanceId, cancelId } = getUrlParams();\n    (0, _sidebarIndicators.initializeTicketSidebarIndicators)();\n    const loadingWall = new (0, _core.WFComponent)(\".loading_wall\");\n    const animationDuration = 500;\n    if (productionId || performanceId || cancelId) {\n        loadingWall.setStyle({\n            display: \"flex\"\n        });\n        try {\n            // handle cancellation\n            if (cancelId) {\n                const req = (0, _apiConfig.apiClient).delete(`/tickets/cancel_order/${cancelId}`);\n                await new Promise((resolve, reject)=>{\n                    req.onData(()=>{\n                        // remove cancel from URL\n                        const ps = new URLSearchParams(window.location.search);\n                        ps.delete(\"cancel\");\n                        const base = window.location.pathname;\n                        const qs = ps.toString();\n                        window.history.replaceState({}, document.title, base + (qs ? `?${qs}` : \"\"));\n                        resolve();\n                    });\n                    req.onError((err)=>reject(err));\n                    req.fetch();\n                });\n            }\n            // if we have a productionId, pick step-1 → step-2\n            if (productionId) {\n                (0, _ticketPurchaseState.clearTicketPurchaseState)();\n                // load & render productions\n                const productions = await (0, _productionList.initializeProductionList)(\"#selectProductionList\");\n                // find by numeric id\n                const prod = productions.find((p)=>p.id === Number(productionId));\n                if (prod) {\n                    (0, _ticketPurchaseState.saveSelectedProduction)({\n                        id: prod.id,\n                        name: prod.Name,\n                        description: prod.Short_Description,\n                        imageUrl: prod.Main_Image\n                    });\n                    (0, _sidebarIndicators.markTicketStepAsCompleted)(1);\n                    (0, _sidebarIndicators.setActiveTicketStep)(2);\n                    // check the radio in the UI\n                    const inp = document.querySelector(`input[value=\"${productionId}\"]`);\n                    if (inp) {\n                        inp.checked = true;\n                        inp.dispatchEvent(new Event(\"change\"));\n                    }\n                    // now load performances for that production\n                    const performances = await (0, _performanceList.initializePerformanceList)(\"#selectPerformanceList\");\n                    // if URL has performanceId, pick step-2 → step-3\n                    if (performanceId) {\n                        const perf = performances.find((x)=>x.id.toString() === performanceId);\n                        if (perf) {\n                            (0, _ticketPurchaseState.saveSelectedPerformance)({\n                                id: perf.id.toString(),\n                                name: perf.Displayed_Name,\n                                dateTime: perf.Date_Time.toString(),\n                                description: perf.Short_Description,\n                                imageUrl: perf.Main_Image,\n                                location: perf.location_details.Name\n                            });\n                            (0, _sidebarIndicators.markTicketStepAsCompleted)(2);\n                            (0, _sidebarIndicators.setActiveTicketStep)(3);\n                            (0, _selectedPerformanceUI.updateSelectedPerformanceUI)();\n                            await (0, _ticketTiers.initializeTicketTiers)(\"#bundleList\", \"#ticketTierList\");\n                            slider.goToIndex(2);\n                        } else {\n                            console.error(`Performance ${performanceId} not found`);\n                            slider.goToIndex(1);\n                        }\n                    } else slider.goToIndex(1);\n                } else {\n                    console.error(`Production ${productionId} not found`);\n                    slider.goToIndex(0);\n                }\n            } else // no production param: stay on step-1\n            slider.goToIndex(0);\n        } catch (err) {\n            console.error(\"Error initializing from URL:\", err);\n            slider.goToIndex(0);\n        } finally{\n            loadingWall.addCssClass(\"hidden\");\n            setTimeout(()=>loadingWall.setStyle({\n                    display: \"none\"\n                }), animationDuration);\n        }\n    }\n};\n\n},{\"../state/ticketPurchaseState\":\"8lBgN\",\"../productionList\":\"6zyyu\",\"../performanceList\":\"h28oA\",\"../ticketTiers\":\"bBABM\",\"../components/sidebarIndicators\":\"i8KxD\",\"@xatom/core\":\"65YBq\",\"../components/selectedPerformanceUI\":\"ldUYM\",\"../../../api/apiConfig\":\"dUmIV\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}]},[], null, \"parcelRequired346\")\n\n//# sourceMappingURL=makeTicketPurchase.6f09276a.js.map\n","import { WFComponent, WFFormComponent } from \"@xatom/core\";\nimport { initializeProductionList } from \"./productionList\";\nimport { initializePerformanceList } from \"./performanceList\";\nimport { initializeTicketTiers } from \"./ticketTiers\";\nimport {\n  getSelectedProduction,\n  getSelectedPerformance,\n  loadTicketPurchaseState,\n  getSelectedBundles,\n  getSelectedTickets,\n  clearTicketPurchaseState,\n  clearSelectedPerformance,\n  clearSelectedBundles,\n  clearSelectedTickets,\n} from \"./state/ticketPurchaseState\";\nimport { WFSlider } from \"@xatom/slider\";\nimport {\n  initializeTicketSidebarIndicators,\n  setActiveTicketStep,\n  markTicketStepAsCompleted,\n  unsetActiveTicketStep,\n  unmarkTicketStepAsCompleted,\n} from \"./components/sidebarIndicators\";\nimport { validateNotEmpty, validateEmail } from \"../../utils/validationUtils\";\nimport { toggleError, createValidationFunction } from \"../../utils/formUtils\";\nimport { apiClient } from \"../../api/apiConfig\";\nimport { initializeStateFromUrlParams } from \"./components/urlParamNavigator\";\n\ninterface checkoutResponse {\n  checkout_url: string;\n}\n\n// Initialize the ticket purchase process\nexport const makeTicketPurchase = async () => {\n  const slider = new WFSlider(\".multi-step_form_slider\");\n\n  // Initialize state from URL parameters\n  await initializeStateFromUrlParams(slider);\n\n  // Initialize sidebar indicators\n  initializeTicketSidebarIndicators();\n\n  // Step 1: Initialize production list\n  await initializeProductionList(\"#selectProductionList\");\n\n  // Handle form submission for production selection\n  const formStepOne = new WFFormComponent<{ production_id: string }>(\n    \"#formStepOne\"\n  );\n  const submitButtonStepOne = new WFComponent(\"#submitStepOne\")\n\n  formStepOne.onFormSubmit(async (formData, event) => {\n    event.preventDefault();\n    submitButtonStepOne.setAttribute(\"disabled\", \"true\");\n    const selectedProduction = getSelectedProduction();\n    const stepOneRequestingAnimation = new WFComponent(\n      \"#stepOneRequestingAnimation\"\n    );\n\n    if (!selectedProduction || !selectedProduction.id) {\n      console.error(\"No production selected.\");\n      const submitStepOneError = new WFComponent(\"#submitStepOneError\");\n      submitStepOneError.setText(\"Please select a production.\");\n      submitStepOneError.setStyle({ display: \"block\" });\n      return;\n    }\n\n    console.log(\"Production selected:\", selectedProduction);\n\n    const submitStepOneError = new WFComponent(\"#submitStepOneError\");\n    submitStepOneError.setStyle({ display: \"none\" });\n\n    // Show the loading animation\n    stepOneRequestingAnimation.setStyle({ display: \"block\" });\n\n    try {\n      // Proceed to Step 2: Initialize performance list\n      await initializePerformanceList(\"#selectPerformanceList\");\n\n      // Mark Step 1 as completed and move to Step 2\n      markTicketStepAsCompleted(1);\n      setActiveTicketStep(2);\n\n      // Move to the next step\n      slider.goNext();\n    } catch (error) {\n      console.error(\"Error during step 1 processing:\", error);\n    } finally {\n      // Hide the loading animation\n      stepOneRequestingAnimation.setStyle({ display: \"none\" });\n      submitButtonStepOne.removeAttribute(\"disabled\");\n    }\n  });\n\n  // Step 2: Handle form submission for performance selection\n  const formStepTwo = new WFFormComponent<{ performance_id: string }>(\n    \"#formStepTwo\"\n  );\n  const submitButtonStepTwo = new WFComponent(\"#submitStepTwo\")\n\n\n  formStepTwo.onFormSubmit(async (formData, event) => {\n    event.preventDefault();\n    submitButtonStepTwo.setAttribute(\"disabled\", \"true\");\n    const selectedPerformance = getSelectedPerformance();\n    const stepTwoRequestingAnimation = new WFComponent(\n      \"#stepTwoRequestingAnimation\"\n    );\n\n    if (!selectedPerformance || !selectedPerformance.id) {\n      console.error(\"No performance selected.\");\n      const submitStepTwoError = new WFComponent(\"#submitStepTwoError\");\n      submitStepTwoError.setText(\"Please select a performance.\");\n      submitStepTwoError.setStyle({ display: \"block\" });\n      return;\n    }\n\n    console.log(\"Performance selected:\", selectedPerformance);\n\n    const submitStepTwoError = new WFComponent(\"#submitStepTwoError\");\n    submitStepTwoError.setStyle({ display: \"none\" });\n\n    // Show the loading animation\n    stepTwoRequestingAnimation.setStyle({ display: \"block\" });\n\n    try {\n      // Mark Step 2 as completed and move to Step 3\n      markTicketStepAsCompleted(2);\n      setActiveTicketStep(3);\n\n      // Initialize ticket tiers (Step 3)\n      await initializeTicketTiers(\"#bundleList\", \"#ticketTierList\");\n\n      // Move to the next step\n      slider.goNext();\n    } catch (error) {\n      console.error(\"Error during step 2 processing:\", error);\n    } finally {\n      // Hide the loading animation\n      stepTwoRequestingAnimation.setStyle({ display: \"none\" });\n      submitButtonStepTwo.removeAttribute(\"disabled\");\n    }\n  });\n\n  // Step 3: Handle form submission for final checkout\n  const formStepThree = new WFFormComponent(\"#formStepThree\");\n  const emailWrap = new WFComponent(\"#emailWrap\");\n  const firstNameInput = new WFComponent(\"#firstNameInput\");\n  const lastNameInput = new WFComponent(\"#lastNameInput\");\n  const emailInput = new WFComponent(\"#emailInput\");\n  const customQuestionInput = new WFComponent(\"#customQuestionInput\");\n  const submitStepThreeError = new WFComponent(\"#submitStepThreeError\");\n  const noTicketsError = new WFComponent(\"#noTicketsError\");\n  const submitButtonStepThree = new WFComponent(\"#submitStepThree\")\n\n  // Function to clear errors on interaction\n  const clearErrorOnInteraction = (\n    inputComponent: WFComponent,\n    errorComponent: WFComponent\n  ) => {\n    const clearError = () => toggleError(errorComponent, \"\", false);\n    inputComponent.on(\"input\", clearError);\n    inputComponent.on(\"focus\", clearError);\n    inputComponent.on(\"change\", clearError);\n  };\n\n  formStepThree.onFormSubmit(async (formData, event) => {\n    event.preventDefault();\n    let formIsValid = true;\n    submitButtonStepThree.setAttribute(\"disabled\", \"true\");\n    // clear any existing submit errors\n    submitStepThreeError.setStyle({ display: \"none\" });\n\n    // Validate email wrap section if displayed\n    if (emailWrap.getElement().style.display !== \"none\") {\n      // Validate First Name\n      const firstNameError = new WFComponent(\"#firstNameInputError\");\n      const firstNameValidation = createValidationFunction(\n        firstNameInput,\n        validateNotEmpty,\n        \"First name is required.\"\n      );\n      const firstNameValidationResult = firstNameValidation();\n      toggleError(\n        firstNameError,\n        firstNameValidationResult,\n        !!firstNameValidationResult\n      );\n      formIsValid = formIsValid && !firstNameValidationResult;\n      clearErrorOnInteraction(firstNameInput, firstNameError);\n\n      // Validate Last Name\n      const lastNameError = new WFComponent(\"#lastNameInputError\");\n      const lastNameValidation = createValidationFunction(\n        lastNameInput,\n        validateNotEmpty,\n        \"Last name is required.\"\n      );\n      const lastNameValidationResult = lastNameValidation();\n      toggleError(\n        lastNameError,\n        lastNameValidationResult,\n        !!lastNameValidationResult\n      );\n      formIsValid = formIsValid && !lastNameValidationResult;\n      clearErrorOnInteraction(lastNameInput, lastNameError);\n\n      // Validate Email\n      const emailError = new WFComponent(\"#emailInputError\");\n      const emailValidation = createValidationFunction(\n        emailInput,\n        validateEmail,\n        \"A valid email is required.\"\n      );\n      const emailValidationResult = emailValidation();\n      toggleError(emailError, emailValidationResult, !!emailValidationResult);\n      formIsValid = formIsValid && !emailValidationResult;\n      clearErrorOnInteraction(emailInput, emailError);\n    }\n\n    // Validate Custom Question\n    // Only validate the custom question if that entire section is shown\nconst customQuestionWrap = document.getElementById(\"customQuestionWrap\")!;\nif (customQuestionWrap.style.display !== \"none\") {\n  const customQuestionError = new WFComponent(\"#customQuestionInputError\");\n  const customQuestionValidation = createValidationFunction(\n    customQuestionInput,\n    validateNotEmpty,\n    \"This field is required.\"\n  );\n  const customQuestionValidationResult = customQuestionValidation();\n  toggleError(\n    customQuestionError,\n    customQuestionValidationResult,\n    !!customQuestionValidationResult\n  );\n  formIsValid = formIsValid && !customQuestionValidationResult;\n  clearErrorOnInteraction(customQuestionInput, customQuestionError);\n}\n\n\n    // Validate that at least one bundle or ticket is selected\n    const selectedBundles = getSelectedBundles();\n    const selectedTickets = getSelectedTickets();\n\n    if (selectedBundles.length === 0 && selectedTickets.length === 0) {\n      toggleError(\n        noTicketsError,\n        \"Please select at least one bundle or ticket.\",\n        true\n      );\n      formIsValid = false;\n    } else {\n      toggleError(noTicketsError, \"\", false);\n    }\n\n    if (!formIsValid) {\n      console.error(\"Form validation failed.\");\n      submitStepThreeError.setText(\"Please correct the highlighted errors.\");\n      submitStepThreeError.setStyle({ display: \"block\" });\n      return;\n    }\n\n    console.log(\"Final form is valid, proceeding with submission...\");\n\n    const stepThreeRequestingAnimation = new WFComponent(\n      \"#stepThreeRequestingAnimation\"\n    );\n    stepThreeRequestingAnimation.setStyle({ display: \"block\" });\n\n    try {\n      // Load the current state\n      const ticketPurchaseState = loadTicketPurchaseState();\n\n      // Extract only the required values from the state\n      const {\n        selectedBundles,\n        selectedTickets,\n        email,\n        firstName,\n        lastName,\n        customQuestion,\n        assistanceNeeded,\n        assistanceMessage,\n        selectedProductionId,\n        selectedPerformanceId,\n      } = ticketPurchaseState;\n\n      // Construct the cancel_url\n      const cancelUrl = `${window.location.origin}/purchase-tickets?production=${selectedProductionId}&performance=${selectedPerformanceId}`;\n\n      // Create the payload with only the required values and the cancel_url\n      const payload = {\n        selectedBundles,\n        selectedTickets,\n        email,\n        firstName,\n        lastName,\n        customQuestion,\n        assistanceNeeded,\n        assistanceMessage,\n        selectedProductionId,\n        selectedPerformanceId,\n        cancel_url: cancelUrl,\n      };\n\n      // Submit the extracted state to the /tickets/begin_checkout endpoint\n      const response = await apiClient\n        .post<checkoutResponse>(\"/tickets/begin_checkout\", {\n          data: payload,\n        })\n        .fetch();\n\n      // Handle the response (e.g., redirect to the payment page or show success message)\n      console.log(\"Checkout response:\", response);\n\n      // Mark Step 3 as completed\n      markTicketStepAsCompleted(3);\n\n      // Redirect or show success (this depends on your application flow)\n      window.location.href = response.checkout_url || \"/payment\";\n    } catch (error) {\n      console.error(\"Error during final step processing:\", error);\n      submitStepThreeError.setText(\n        \"An error occurred during checkout. Please try again.\"\n      );\n      submitStepThreeError.setStyle({ display: \"block\" });\n    } finally {\n      stepThreeRequestingAnimation.setStyle({ display: \"none\" });\n      submitButtonStepThree.removeAttribute(\"disabled\");\n    }\n  });\n\n  // Handle \"Go Back\" button for Step 3\n  const backStepThree = new WFComponent(\"#backStepThree\");\n  backStepThree.on(\"click\", () => {\n    clearSelectedBundles();\n    clearSelectedTickets();\n    slider.goPrevious();\n    unsetActiveTicketStep(3);\n    unmarkTicketStepAsCompleted(2);\n    setActiveTicketStep(2);\n  });\n\n  // Handle \"Go Back\" button for Step 2\n  const backStepTwo = new WFComponent(\"#backStepTwo\");\n  backStepTwo.on(\"click\", () => {\n    clearSelectedPerformance();\n    slider.goPrevious();\n    unsetActiveTicketStep(2);\n    unmarkTicketStepAsCompleted(1);\n    setActiveTicketStep(1);\n  });\n\n  // Initialize sidebar indicators and set the first step as active\n  setActiveTicketStep(1);\n};\n","import { WFDynamicList, WFComponent } from \"@xatom/core\";\nimport { fetchProductions, Production } from \"../../api/productions\";\nimport { saveSelectedProduction } from \"./state/ticketPurchaseState\";\n\nlet selectedProductionId: string | null = null;\nlet initialTemplateState: HTMLElement | null = null;\n\nexport const initializeProductionList = async (\n  containerSelector: string\n): Promise<Production[]> => {\n  const container = document.querySelector(containerSelector);\n  if (!container) {\n    console.error(\"Production list container not found.\");\n    return [];\n  }\n\n  if (!initialTemplateState) {\n    initialTemplateState = container.cloneNode(true) as HTMLElement;\n  }\n\n  container.innerHTML = \"\";\n  container.appendChild(initialTemplateState.cloneNode(true));\n\n  const list = new WFDynamicList<Production>(containerSelector, {\n    rowSelector: \"#cardSelectProduction\",\n    loaderSelector: \"#productionListLoading\",\n    emptySelector: \"#productionListEmpty\",\n  });\n\n  list.loaderRenderer((loaderElement) => {\n    loaderElement.setStyle({ display: \"flex\" });\n    return loaderElement;\n  });\n\n  list.emptyRenderer((emptyElement) => {\n    emptyElement.setStyle({ display: \"flex\" });\n    return emptyElement;\n  });\n\n  list.rowRenderer(({ rowData: rawData, rowElement, index }) => {\n    // Cast rawData to match API response fields\n    const rowData = rawData as unknown as {\n      id: number;\n      Name: string;\n      Short_Description: string;\n      Age_Description: string;\n      Main_Image: string;\n    };\n\n    const productionCard = new WFComponent(rowElement);\n    const productionTitle = productionCard.getChildAsComponent(\"#cardProductionTitle\");\n    const productionDescription = productionCard.getChildAsComponent(\"#cardProductionDescription\");\n    const productionAges = productionCard.getChildAsComponent(\"#cardProductionAges\");\n    const productionImage = productionCard.getChildAsComponent(\"#cardProductionImage\");\n    const productionInput = productionCard.getChildAsComponent(\".input_card_input\");\n    const productionLabel = productionCard.getChildAsComponent(\"label\");\n\n    if (\n      !productionTitle ||\n      !productionDescription ||\n      !productionAges ||\n      !productionInput ||\n      !productionImage ||\n      !productionLabel\n    ) {\n      console.error(\"Production elements not found.\");\n      return;\n    }\n\n    const inputId = `productionInput-${index}`;\n    productionInput.setAttribute(\"id\", inputId);\n    productionInput.setAttribute(\"value\", rowData.id.toString());\n    productionLabel.setAttribute(\"for\", inputId);\n\n    productionTitle.setText(rowData.Name);\n    productionDescription.setText(rowData.Short_Description);\n    productionAges.setText(rowData.Age_Description);\n\n    if (rowData.Main_Image) {\n      productionImage.setAttribute(\"src\", rowData.Main_Image);\n      productionImage.setAttribute(\"alt\", rowData.Name || \"Production Image\");\n    } else {\n      console.warn(`Production ID ${rowData.id} does not have a main image.`);\n    }\n\n    productionInput.on(\"change\", () => {\n      selectedProductionId = (productionInput.getElement() as HTMLInputElement).value;\n      saveSelectedProduction({\n        id: Number(selectedProductionId),\n        name: rowData.Name,\n        description: rowData.Short_Description,\n        imageUrl: rowData.Main_Image,\n      });\n      console.log(\"Selected Production ID:\", selectedProductionId);\n    });\n\n    rowElement.setStyle({ display: \"flex\" });\n    return rowElement;\n  });\n\n  try {\n    list.changeLoadingStatus(true);\n    const productions = await fetchProductions();\n    console.log(\"Fetched productions:\", productions);\n\n    list.setData(productions);\n    list.changeLoadingStatus(false);\n    return productions;\n  } catch (error) {\n    console.error(\"Error loading productions:\", error);\n    list.setData([]);\n    list.changeLoadingStatus(false);\n    return [];\n  }\n};\n","// src/api/productions.ts\n\nimport { apiClient } from \"./apiConfig\";\n\nexport interface Production {\n  /** now a number */\n  id: number;\n  Name: string;\n  Short_Description: string;\n  Main_Image: string;\n  Age_Description: string;\n}\n\ninterface ProductionApiResponse {\n  productions: Production[];\n}\n\n// Fetch productions from the server\nexport const fetchProductions = async (): Promise<Production[]> => {\n  try {\n    const response = await apiClient\n      .get<ProductionApiResponse>(\"/tickets/productions\")\n      .fetch();\n    return response.productions;\n  } catch (error) {\n    console.error(\"Error fetching productions:\", error);\n    throw error;\n  }\n};\n","export interface TicketItem {\n  ticket_tier_id: string;\n  quantity: number;\n  bundle_required: boolean;\n}\n\nexport interface BundleItem {\n  bundle_id: string;\n  quantity: number;\n}\n\nexport interface TicketPurchaseState {\n  selectedProductionId?: number;\n  selectedProductionName?: string;\n  selectedProductionDescription?: string;\n  selectedProductionImageUrl?: string;\n  selectedPerformanceId?: string;\n  selectedPerformanceName?: string;\n  selectedPerformanceDateTime?: string;\n  selectedPerformanceDescription?: string;\n  selectedPerformanceImageUrl?: string;\n  selectedPerformanceLocation?: string;\n  selectedBundles?: BundleItem[];\n  selectedTickets?: TicketItem[];\n  customQuestion?: string;\n  assistanceNeeded?: boolean;\n  assistanceMessage?: string;\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n}\n\nconst TICKET_PURCHASE_STATE_KEY = \"ticketPurchaseState\";\n\n// Utility to convert unknown to number\nconst safeNumber = (value: unknown): number =>\n  typeof value === \"number\" ? value : 0;\n\nexport const loadTicketPurchaseState = (): TicketPurchaseState => {\n  const saved = localStorage.getItem(TICKET_PURCHASE_STATE_KEY);\n  return saved ? JSON.parse(saved) : {};\n};\n\nexport const saveTicketPurchaseState = (\n  state: Partial<TicketPurchaseState>\n) => {\n  const current = loadTicketPurchaseState();\n  const merged = { ...current, ...state };\n  localStorage.setItem(\n    TICKET_PURCHASE_STATE_KEY,\n    JSON.stringify(merged)\n  );\n};\n\nexport const clearTicketPurchaseState = () => {\n  localStorage.removeItem(TICKET_PURCHASE_STATE_KEY);\n};\n\n// Production-related\nexport const getSelectedProduction = () => {\n  const s = loadTicketPurchaseState();\n  return {\n    id: s.selectedProductionId ?? null,\n    name: s.selectedProductionName ?? null,\n    description: s.selectedProductionDescription ?? null,\n    imageUrl: s.selectedProductionImageUrl ?? null,\n  };\n};\n\nexport const saveSelectedProduction = (production: {\n  id: number;\n  name: string;\n  description: string;\n  imageUrl: string;\n}) => {\n  saveTicketPurchaseState({\n    selectedProductionId: production.id,\n    selectedProductionName: production.name,\n    selectedProductionDescription: production.description,\n    selectedProductionImageUrl: production.imageUrl,\n  });\n};\n\n// Performance-related\nexport const getSelectedPerformance = () => {\n  const s = loadTicketPurchaseState();\n  return {\n    id: s.selectedPerformanceId ?? null,\n    name: s.selectedPerformanceName ?? null,\n    dateTime: s.selectedPerformanceDateTime ?? null,\n    description: s.selectedPerformanceDescription ?? null,\n    imageUrl: s.selectedPerformanceImageUrl ?? null,\n    location: s.selectedPerformanceLocation ?? null,\n  };\n};\n\nexport const saveSelectedPerformance = (perf: {\n  id: string;\n  name: string;\n  dateTime: string;\n  description: string;\n  imageUrl: string;\n  location: string;\n}) => {\n  saveTicketPurchaseState({\n    selectedPerformanceId: perf.id,\n    selectedPerformanceName: perf.name,\n    selectedPerformanceDateTime: perf.dateTime,\n    selectedPerformanceDescription: perf.description,\n    selectedPerformanceImageUrl: perf.imageUrl,\n    selectedPerformanceLocation: perf.location,\n  });\n};\n\n// Bundle functions\nexport const getSelectedBundles = (): BundleItem[] => {\n  return loadTicketPurchaseState().selectedBundles || [];\n};\n\nexport const saveSelectedBundle = (bundleId: string, quantity: number) => {\n  const bundles = getSelectedBundles();\n  const idx = bundles.findIndex((b) => b.bundle_id === bundleId);\n  if (idx > -1) {\n    if (quantity > 0) bundles[idx].quantity = quantity;\n    else bundles.splice(idx, 1);\n  } else if (quantity > 0) {\n    bundles.push({ bundle_id: bundleId, quantity });\n  }\n  saveTicketPurchaseState({ selectedBundles: bundles });\n};\n\nexport const removeSelectedBundle = (bundleId: string) => {\n  const remaining = getSelectedBundles().filter((b) => b.bundle_id !== bundleId);\n  saveTicketPurchaseState({ selectedBundles: remaining });\n  // Remove bundle_required tickets if none selected\n  const total = remaining.reduce((sum, b) => sum + safeNumber(b.quantity), 0);\n  if (total === 0) {\n    const tickets = getSelectedTickets().filter((t) => !t.bundle_required);\n    saveTicketPurchaseState({ selectedTickets: tickets });\n  }\n};\n\n// Ticket functions\nexport const getSelectedTickets = (): TicketItem[] => {\n  return loadTicketPurchaseState().selectedTickets || [];\n};\n\nexport const saveSelectedTicket = (\n  tierId: string,\n  quantity: number,\n  bundle_required: boolean\n) => {\n  const tickets = getSelectedTickets();\n  const idx = tickets.findIndex((t) => t.ticket_tier_id === tierId);\n  if (idx > -1) {\n    if (quantity > 0) tickets[idx].quantity = quantity;\n    else tickets.splice(idx, 1);\n  } else if (quantity > 0) {\n    tickets.push({ ticket_tier_id: tierId, quantity, bundle_required });\n  }\n  saveTicketPurchaseState({ selectedTickets: tickets });\n};\n\nexport const removeSelectedTicket = (tierId: string) => {\n  const remaining = getSelectedTickets().filter((t) => t.ticket_tier_id !== tierId);\n  saveTicketPurchaseState({ selectedTickets: remaining });\n};\n\n// Assistance\nexport const getCustomQuestion = () => loadTicketPurchaseState().customQuestion ?? null;\nexport const saveCustomQuestion = (q: string) => saveTicketPurchaseState({ customQuestion: q });\nexport const getAssistanceNeeded = () => loadTicketPurchaseState().assistanceNeeded ?? false;\nexport const saveAssistanceNeeded = (v: boolean) => saveTicketPurchaseState({ assistanceNeeded: v });\nexport const getAssistanceMessage = () => loadTicketPurchaseState().assistanceMessage ?? '';\nexport const saveAssistanceMessage = (m: string) => saveTicketPurchaseState({ assistanceMessage: m });\n\n// User details\nexport const saveUserDetails = (d: { firstName?: string; lastName?: string; email?: string }) =>\n  saveTicketPurchaseState(d);\n\n// Clearers\nexport const clearSelectedPerformance = () => saveTicketPurchaseState({\n  selectedPerformanceId: undefined,\n  selectedPerformanceName: undefined,\n  selectedPerformanceDateTime: undefined,\n  selectedPerformanceDescription: undefined,\n  selectedPerformanceImageUrl: undefined,\n  selectedPerformanceLocation: undefined,\n});\nexport const clearSelectedBundles = () => saveTicketPurchaseState({ selectedBundles: [] });\nexport const clearSelectedTickets = () => saveTicketPurchaseState({ selectedTickets: [] });\n","// src/modules/tickets/performanceList.ts\n\nimport { WFDynamicList, WFComponent } from \"@xatom/core\";\nimport { fetchPerformances, Performance } from \"../../api/performances\";\nimport {\n  saveSelectedPerformance,\n  getSelectedProduction,\n} from \"./state/ticketPurchaseState\";\nimport { initializePerformanceFilter } from \"./components/performanceFilter\";\n\nlet initialTemplateState: HTMLElement | null = null;\n\nexport const initializePerformanceList = async (\n  containerSelector: string\n): Promise<Performance[]> => {\n  const container = document.querySelector(containerSelector);\n  if (!container) {\n    console.error(\"Performance list container not found.\");\n    return [];\n  }\n\n  if (!initialTemplateState) {\n    initialTemplateState = container.cloneNode(true) as HTMLElement;\n  }\n\n  container.innerHTML = \"\";\n  container.appendChild(initialTemplateState.cloneNode(true));\n\n  const list = new WFDynamicList<Performance>(containerSelector, {\n    rowSelector: \"#cardSelectPerformance\",\n    loaderSelector: \"#performanceListLoading\",\n    emptySelector: \"#performanceListEmpty\",\n  });\n\n  list.loaderRenderer((loader) => {\n    loader.setStyle({ display: \"flex\" });\n    return loader;\n  });\n  list.emptyRenderer((empty) => {\n    empty.setStyle({ display: \"flex\" });\n    return empty;\n  });\n\n  list.rowRenderer(({ rowData, rowElement, index }) => {\n    const perf = rowData as Performance;\n    const card = new WFComponent(rowElement);\n\n    const dateWrapper = card.getChildAsComponent(\".production_date_wrapper\");\n    const dayEl = dateWrapper?.getChildAsComponent(\".u-text-h4\");\n    const monthEl = dateWrapper?.getChildAsComponent(\".production_date_month\");\n    const timeEl = dateWrapper?.getChildAsComponent(\".input_card_description\");\n    const weekdayEl = card.getChildAsComponent(\"#cardPerformanceWeekday\");\n\n    const titleEl = card.getChildAsComponent(\"#cardPerformanceTitle\");\n    const prodTitleEl = card.getChildAsComponent(\n      \"#cardPerformanceProductionTitle\"\n    );\n    const descEl = card.getChildAsComponent(\"#cardPerformanceDescription\");\n    const imageEl = card.getChildAsComponent(\"#cardImage\");\n    const inputEl = card.getChildAsComponent(\".input_card_input\");\n    const labelEl = card.getChildAsComponent(\"label\");\n    const locEl = card.getChildAsComponent(\"#cardPerformanceLocation\");\n    const soldOutEl = card.getChildAsComponent(\"#performanceSoldOut\");\n\nif (perf.Sold_Out) {\n  // Show the sold-out banner/label\n  soldOutEl?.setStyle({ display: \"flex\" });\n\n  // Disable interaction on the row\n  rowElement.setStyle({\n    pointerEvents: \"none\",\n    opacity: \"0.6\", // optional: to give visual feedback\n  });\n\n  // Optionally, also disable the radio input\n  inputEl.setAttribute(\"disabled\", \"true\");\n} else {\n  // Ensure it's hidden if not sold out\n  soldOutEl?.setStyle({ display: \"none\" });\n}\n\n\n    if (\n      !dayEl ||\n      !monthEl ||\n      !timeEl ||\n      !weekdayEl ||\n      !titleEl ||\n      !prodTitleEl ||\n      !descEl ||\n      !imageEl ||\n      !inputEl ||\n      !labelEl ||\n      !locEl ||\n      !soldOutEl \n    ) {\n      console.error(\"Performance elements not found.\");\n      return;\n    }\n\n    // Wire up the radio button\n    const inputId = `performanceInput-${index}`;\n    inputEl.setAttribute(\"id\", inputId);\n    inputEl.setAttribute(\"value\", perf.id.toString());\n    labelEl.setAttribute(\"for\", inputId);\n\n    // --- timezone‐aware formatting in New York ---\n    const ts = Number(perf.Date_Time);\n    const date = new Date(ts);\n\n    // Day of month\n    dayEl.setText(\n      date.toLocaleString(\"en-US\", {\n        day: \"numeric\",\n        timeZone: \"America/New_York\",\n      })\n    );\n    // Month abbreviation\n    monthEl.setText(\n      date.toLocaleString(\"en-US\", {\n        month: \"short\",\n        timeZone: \"America/New_York\",\n      })\n    );\n    // Weekday name\n    weekdayEl.setText(\n      date.toLocaleString(\"en-US\", {\n        weekday: \"long\",\n        timeZone: \"America/New_York\",\n      })\n    );\n    // Time (H:MM AM/PM)\n    timeEl.setText(\n      date.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"2-digit\",\n        hour12: true,\n        timeZone: \"America/New_York\",\n      })\n    );\n    // --- end timezone‐aware block ---\n\n    // Fill in the rest\n    titleEl.setText(perf.Displayed_Name || perf.Name);\n    const selectedProd = getSelectedProduction();\n    prodTitleEl.setText(selectedProd?.name || \"Unknown Production\");\n    descEl.setText(perf.Short_Description);\n\n    if (perf.Main_Image) {\n      imageEl.setAttribute(\"src\", perf.Main_Image);\n      imageEl.setAttribute(\"alt\", perf.Displayed_Name || perf.Name);\n    }\n\n    // Show human-readable venue name\n    locEl.setText(perf.location_details?.Name || \"Unknown venue\");\n\n    inputEl.on(\"change\", () => {\n      saveSelectedPerformance({\n        id: perf.id.toString(),\n        name: perf.Displayed_Name,\n        dateTime: perf.Date_Time.toString(),\n        description: perf.Short_Description,\n        imageUrl: perf.Main_Image,\n        location: perf.location_details?.Name || \"\",\n      });\n    });\n\n    rowElement.setStyle({ display: \"flex\" });\n    return rowElement;\n  });\n\n  try {\n    list.changeLoadingStatus(true);\n    const prod = getSelectedProduction();\n    if (!prod?.id) throw new Error(\"No production selected\");\n\n    const performances = await fetchPerformances(prod.id.toString());\n    performances.sort((a, b) => a.Date_Time - b.Date_Time);\n\n    list.setData(performances);\n    if (performances.length) initializePerformanceFilter();\n    list.changeLoadingStatus(false);\n    return performances;\n  } catch (err) {\n    console.error(\"Error loading performances:\", err);\n    list.setData([]);\n    list.changeLoadingStatus(false);\n    return [];\n  }\n};\n","// src/api/performances.ts\nimport { apiClient } from \"./apiConfig\";\n\n/**\n * Details about the venue/location\n */\nexport interface LocationDetails {\n  id: number;\n  Name: string;\n  Slug: string;\n  Collection_ID: string;\n  Locale_ID: string;\n  Item_ID: string;\n  Created_On: string | null;\n  Updated_On: string | null;\n  Published_On: string | null;\n  Address_line_1: string;\n  City_state_zip: string;\n  Map_embed: string;\n  Location_Description: string;\n}\n\n/**\n * A single performance as returned by `/tickets/performances`.\n */\nexport interface Performance {\n  id: number;\n  Name: string;\n  Slug: string;\n  Collection_ID: string;\n  Locale_ID: string;\n  Item_ID: string;\n  Archived: boolean;\n  Draft: boolean;\n  Created_On: string;\n  Updated_On: string;\n  Published_On: string;\n  Displayed_Name: string;\n  Main_Image: string;\n  Short_Description: string;\n  Sold_Out: boolean;\n  /**\n   * Unix‐millisecond timestamp\n   */\n  Date_Time: number;\n  Custom_Question: string;\n  Parent_Production: number;\n  ticket_tiers_offered: number[];\n  ticket_bundles_offered: number[];\n  Location: number;\n  location_details: LocationDetails;\n}\n\ninterface PerformanceApiResponse {\n  performances: Performance[];\n}\n\n/**\n * Fetch all performances for a given production.\n */\nexport const fetchPerformances = async (\n  productionId: string\n): Promise<Performance[]> => {\n  try {\n    const { performances } = await apiClient\n      .post<PerformanceApiResponse>(\"/tickets/performances\", {\n        data: { production_id: productionId },\n      })\n      .fetch();\n    return performances;\n  } catch (error) {\n    console.error(\"Error fetching performances:\", error);\n    throw error;\n  }\n};\n","export const initializePerformanceFilter = () => {\n  const locationSelectElement = document.getElementById(\"locationFilter\");\n  const monthSelectElement = document.getElementById(\"monthFilter\");\n\n  if (locationSelectElement) {\n    locationSelectElement.addEventListener(\"change\", () => {\n      applyFilters();\n    });\n  }\n\n  if (monthSelectElement) {\n    monthSelectElement.addEventListener(\"change\", () => {\n      applyFilters();\n    });\n  }\n};\n\nconst applyFilters = () => {\n  const locationSelectElement = document.getElementById(\n    \"locationFilter\"\n  ) as HTMLSelectElement;\n  const monthSelectElement = document.getElementById(\n    \"monthFilter\"\n  ) as HTMLSelectElement;\n\n  const selectedLocation = locationSelectElement?.value || \"N/A\";\n  const selectedMonth = monthSelectElement?.value || \"N/A\";\n\n  filterPerformances(selectedLocation, selectedMonth);\n};\n\nconst filterPerformances = (location: string, month: string) => {\n  const performanceCards = document.querySelectorAll(\".input_card_wrap\");\n  let hasVisibleItems = false;\n\n  performanceCards.forEach((performanceCard) => {\n    const performanceLocationElement = performanceCard.querySelector(\n      \"#cardPerformanceLocation\"\n    ) as HTMLElement;\n    const performanceLocation = performanceLocationElement?.textContent || \"\";\n\n    const performanceMonthElement = performanceCard.querySelector(\n      \".production_date_month\"\n    ) as HTMLElement;\n    const performanceMonth = performanceMonthElement?.textContent || \"\";\n\n    const matchesLocation =\n      location === \"N/A\" || performanceLocation === location;\n    const matchesMonth =\n      month === \"N/A\" || performanceMonth.toUpperCase() === month;\n\n    if (matchesLocation && matchesMonth) {\n      (performanceCard as HTMLElement).style.display = \"flex\";\n      hasVisibleItems = true;\n    } else {\n      (performanceCard as HTMLElement).style.display = \"none\";\n    }\n  });\n\n  // Handle empty state display\n  const emptyStateElement = document.getElementById(\"filterListEmpty\");\n  if (emptyStateElement) {\n    emptyStateElement.style.display = hasVisibleItems ? \"none\" : \"flex\";\n  }\n};\n","// src/modules/tickets/ticketTiers.ts\n\nimport { fetchTicketTiers } from \"../../api/ticketTiersAPI\";\nimport { renderBundles, renderTicketTiers } from \"./components/ticketTierListRender\";\nimport { getSelectedPerformance } from \"./state/ticketPurchaseState\";\nimport { WFComponent } from \"@xatom/core\";\nimport { updateSelectedPerformanceUI } from \"./components/selectedPerformanceUI\";\nimport { updateCustomQuestion } from \"./components/customQuestionUI\";\nimport { initializeAssistanceInput } from \"./components/assistanceInputUI\";\nimport { initializeUserDetails } from \"./components/userDetailsUI\";\n\n/**\n * Initialize the bundles and ticket tiers UI for the selected performance.\n */\nexport const initializeTicketTiers = async (\n  bundleContainerSelector: string,\n  tierContainerSelector: string\n) => {\n  const selectedPerformance = getSelectedPerformance();\n\n  if (!selectedPerformance?.id) {\n    console.error(\"No performance selected.\");\n    return;\n  }\n\n  try {\n    // Fetch all ticket tier data for this performance\n    const ticketTierData = await fetchTicketTiers(selectedPerformance.id);\n\n    // Destructure API response shape, including bundles_available\n    const { tickets_available, performance_details, bundles_available } = ticketTierData;\n\n    // Flatten nested arrays\n    const bundles = performance_details.ticket_bundles_offered.flat();\n    const tickets = performance_details.ticket_tiers_offered.flat();\n\n    // Update selected performance UI\n    updateSelectedPerformanceUI();\n    // Initialize user details section\n    initializeUserDetails();\n\n    // Reset container visibility\n    const bundleContainer = new WFComponent(bundleContainerSelector);\n    bundleContainer.setStyle({ display: \"block\" });\n    const tierContainer = new WFComponent(tierContainerSelector);\n    tierContainer.setStyle({ display: \"block\" });\n\n    let hasBundlesOrTickets = false;\n\n    // Render bundle cards (pass bundles_available)\n    if (bundles.length > 0) {\n      renderBundles(bundles, bundleContainerSelector, bundles_available);\n      hasBundlesOrTickets = true;\n    } else {\n      bundleContainer.setStyle({ display: \"none\" });\n    }\n\n    // Render ticket tier cards with availability\n    if (tickets.length > 0) {\n      renderTicketTiers(tickets, tickets_available, tierContainerSelector);\n      hasBundlesOrTickets = true;\n    } else {\n      tierContainer.setStyle({ display: \"none\" });\n    }\n\n    // Toggle \"no tickets available\" message\n    const noTicketsElem = new WFComponent(\"#noTicketsAvailable\");\n    noTicketsElem.setStyle({ display: hasBundlesOrTickets ? \"none\" : \"flex\" });\n\n    // Show custom question\n    const customQuestion = performance_details.Custom_Question;\n    updateCustomQuestion(customQuestion);\n\n    // Initialize assistance input UI\n    initializeAssistanceInput();\n  } catch (error) {\n    console.error(\"Error fetching ticket tiers:\", error);\n  }\n};\n","import { apiClient } from \"./apiConfig\";\nimport { Performance } from \"./performances\";\n\n/**\n * Availability record for each ticket tier\n */\nexport interface TicketTierAvailability {\n  id: number;\n  Parent_Performance: number;\n  Ticket_Tier: number;\n  Quantity_Available: number;\n  Reserved_Quantity: number;\n  Sold_Quantity: number;\n}\n\n/**\n * Bundle structure as returned in nested arrays\n */\nexport interface BundleOfferedFlat {\n  id: number;\n  Name: string;\n  Slug: string;\n  Collection_ID: string;\n  Locale_ID: string;\n  Item_ID: string;\n  Archived: boolean;\n  Draft: boolean;\n  Created_On: string;\n  Updated_On: string;\n  Published_On: string;\n  Displayed_Name: string;\n  Short_Description: string;\n  Product: number;\n\n  /** full product details for pricing display */\n  product_details: {\n    id: number;\n    Product_name: string;\n    category?: string;\n    Product_id?: string;\n    Single_sale_price_id: string;\n    Displayed_single_sale_price: string;\n    Single_sale_price_amount: number;\n  };\n}\n\n/**\n * Ticket tier structure as returned in nested arrays\n */\nexport interface TicketOfferedFlat {\n  id: number;\n  Name: string;\n  Slug: string;\n  Collection_ID: string;\n  Locale_ID: string;\n  Item_ID: string;\n  Archived: boolean;\n  Draft: boolean;\n  Created_On: string;\n  Updated_On: string;\n  Published_On: string;\n  Displayed_Name: string;\n  Short_Description: string;\n  Requires_Bundle_Purchase: boolean;\n  Product: number;\n\n  /** full product details for pricing display */\n  product_details: {\n    id: number;\n    Product_name: string;\n    category?: string;\n    Product_id?: string;\n    Single_sale_price_id: string;\n    Displayed_single_sale_price: string;\n    Single_sale_price_amount: number;\n  };\n}\n\n/**\n * Venue/location details\n */\nexport interface LocationDetails {\n  id: number;\n  Name: string;\n  Slug: string;\n  Collection_ID: string;\n  Locale_ID: string;\n  Item_ID: string;\n  Created_On: string | null;\n  Updated_On: string | null;\n  Published_On: string | null;\n  Address_line_1: string;\n  City_state_zip: string;\n  Map_embed: string;\n  Location_Description: string;\n}\n\n/**\n * Bundle availability calculated by Xano\n */\nexport interface BundleAvailability {\n  bundle_id: number;\n  bundle_name: string;\n  max_available: number;\n}\n\n/**\n * Full API response for ticket tiers step\n */\nexport interface TicketTiersApiResponse {\n  tickets_available: TicketTierAvailability[];\n  performance_details: Performance & {\n    ticket_tiers_offered: TicketOfferedFlat[][];\n    ticket_bundles_offered: BundleOfferedFlat[][];\n    Custom_Question: string;\n    Location: number;\n  };\n  location_details: LocationDetails;\n  bundles_available: BundleAvailability[];  // <-- added this\n}\n\n/**\n * Fetch ticket tiers (and availability, bundles, bundles & location) for a performance\n */\nexport const fetchTicketTiers = async (\n  selectedPerformanceId: string\n): Promise<TicketTiersApiResponse> => {\n  try {\n    const response = await apiClient\n      .post<TicketTiersApiResponse>(\"/tickets/ticket_tiers\", {\n        data: { selectedPerformanceId },\n      })\n      .fetch();\n    return response;\n  } catch (error) {\n    console.error(\"Error fetching ticket tiers:\", error);\n    throw error;\n  }\n};\n","import { renderBundles } from \"./bundleRenderer\";\nimport { renderTicketTiers } from \"./ticketTierRenderer\";\n\nexport { renderBundles, renderTicketTiers };\n","// src/modules/tickets/components/bundleRenderer.ts\n\nimport { WFDynamicList, WFComponent } from \"@xatom/core\";\nimport { BundleOfferedFlat } from \"../../../api/ticketTiersAPI\";\nimport {\n  saveSelectedBundle,\n  removeSelectedBundle,\n} from \"../state/ticketPurchaseState\";\nimport {\n  resetTicketQuantitiesIfNeeded,\n  updateTicketTierButtons,\n} from \"../state/bundleStateUpdater\";\nimport { revalidateTicketTierQuantities } from \"./ticketTierRenderer\";\nimport { toggleError } from \"../../../utils/formUtils\";\n\n// Availability info passed in from API\nexport interface BundleAvailability {\n  bundle_id: number;\n  bundle_name: string;\n  max_available: number;\n}\n\nlet initialBundleTemplate: HTMLElement | null = null;\n\n/**\n * Renders bundle selection cards and enforces max purchase limits.\n */\nexport const renderBundles = (\n  bundles: BundleOfferedFlat[],\n  containerSelector: string,\n  bundlesAvailable: BundleAvailability[] = []\n) => {\n  const container = document.querySelector(containerSelector);\n  if (!container) {\n    console.error(\"Bundle list container not found.\");\n    return;\n  }\n\n  // Keep a pristine copy of the template\n  if (!initialBundleTemplate) {\n    initialBundleTemplate = container.cloneNode(true) as HTMLElement;\n  }\n  container.innerHTML = \"\";\n  container.appendChild(initialBundleTemplate.cloneNode(true));\n\n  const clearNoTicketsError = () => {\n    const noTicketsError = new WFComponent(\"#noTicketsError\");\n    toggleError(noTicketsError, \"\", false);\n  };\n\n  const list = new WFDynamicList<BundleOfferedFlat>(containerSelector, {\n    rowSelector: \"#bundleCard\",\n    loaderSelector: \"#bundleListLoading\",\n    emptySelector: \"#bundleListEmpty\",\n  });\n\n  list.loaderRenderer(loader => {\n    loader.getElement().style.display = \"flex\";\n    return loader;\n  });\n\n  list.emptyRenderer(empty => {\n    empty.getElement().style.display = \"flex\";\n    return empty;\n  });\n\n  list.rowRenderer(({ rowData, rowElement }) => {\n    const bundleCard = new WFComponent(rowElement);\n    const bundlePrice = bundleCard.getChildAsComponent(\"#bundlePrice\");\n    const bundleName = bundleCard.getChildAsComponent(\"#bundleName\");\n    const bundleDescription = bundleCard.getChildAsComponent(\"#bundleDescription\");\n    const bundleQuantityInput = bundleCard.getChildAsComponent(\"#bundleQuantityInput\");\n    const bundleIncrementButton = bundleCard.getChildAsComponent(\"#bundleQuantityIncrease\");\n    const bundleDecrementButton = bundleCard.getChildAsComponent(\"#bundleQuantityDecrease\");\n    const bundleMaxAlert = bundleCard.getChildAsComponent(\".maximum_alert\");\n    const bundleSoldOut = bundleCard.getChildAsComponent(\"#bundleSoldOut\");\n    const numberInputWrapper = bundleCard.getChildAsComponent(\".number_input_wrapper\");\n\n    if (\n      !bundlePrice ||\n      !bundleName ||\n      !bundleDescription ||\n      !bundleQuantityInput ||\n      !bundleIncrementButton ||\n      !bundleDecrementButton ||\n      !bundleMaxAlert ||\n      !bundleSoldOut ||\n      !numberInputWrapper\n    ) {\n      console.error(\"Bundle elements not found.\");\n      return;\n    }\n\n    // Display price\n    bundlePrice.setText(rowData.product_details.Displayed_single_sale_price);\n    // Populate text\n    bundleName.setText(rowData.Displayed_Name);\n    bundleDescription.setText(rowData.Short_Description);\n    bundleQuantityInput.setAttribute(\"value\", \"0\");\n\n    // Lookup this bundle's max availability\nconst availability = bundlesAvailable.find(b => b.bundle_id === rowData.id);\nconst maxQty = availability ? availability.max_available : Infinity;\n\n// If none available, show “Sold out” and disable input\nif (maxQty <= 0) {\n  bundleSoldOut.setText(\"Sold out\");\n  bundleSoldOut.getElement().style.display = \"block\";\n  numberInputWrapper.addCssClass(\"is-disabled\");\n} else {\n  bundleSoldOut.getElement().style.display = \"none\";\n  numberInputWrapper.removeCssClass(\"is-disabled\");\n}\n\n// Seed the input's max for native clamping\nbundleQuantityInput.setAttribute(\"max\", maxQty.toString());\n\n    const hideAlert = () => bundleMaxAlert.getElement().style.display = \"none\";\n    const showAlert = (msg: string) => {\n      bundleMaxAlert.setText(msg);\n      bundleMaxAlert.getElement().style.display = \"block\";\n    };\n\n    // Increment logic with max guard\n    bundleIncrementButton.on(\"click\", () => {\n      const inputEl = bundleQuantityInput.getElement() as HTMLInputElement;\n      let current = Number(inputEl.value);\n      if (current < maxQty) {\n        current += 1;\n        inputEl.value = String(current);\n        saveSelectedBundle(rowData.id.toString(), current);\n        updateTicketTierButtons();\n        clearNoTicketsError();\n        hideAlert();\n        resetTicketQuantitiesIfNeeded();\n        revalidateTicketTierQuantities();\n      } else {\n        showAlert(`Only up to ${maxQty} bundles available.`);\n      }\n    });\n\n    // Decrement logic\n    bundleDecrementButton.on(\"click\", () => {\n      const inputEl = bundleQuantityInput.getElement() as HTMLInputElement;\n      let current = Number(inputEl.value);\n      if (current > 0) {\n        current -= 1;\n        inputEl.value = String(current);\n        if (current > 0) {\n          saveSelectedBundle(rowData.id.toString(), current);\n        } else {\n          removeSelectedBundle(rowData.id.toString());\n        }\n        updateTicketTierButtons();\n        clearNoTicketsError();\n        hideAlert();\n        resetTicketQuantitiesIfNeeded();\n        revalidateTicketTierQuantities();\n      }\n    });\n\n    // Manual input guard\n    bundleQuantityInput.on(\"input\", () => {\n      clearNoTicketsError();\n      const inputEl = bundleQuantityInput.getElement() as HTMLInputElement;\n      let val = Number(inputEl.value);\n      if (val > maxQty) {\n        inputEl.value = String(maxQty);\n        showAlert(`Only up to ${maxQty} bundles available.`);\n      } else {\n        hideAlert();\n      }\n      resetTicketQuantitiesIfNeeded();\n      revalidateTicketTierQuantities();\n    });\n\n    // Show the card\n    rowElement.setStyle({ display: \"flex\" });\n    return rowElement;\n  });\n\n  // Render all\n  list.setData(bundles);\n};","import {\n  getSelectedBundles,\n  getSelectedTickets,\n  removeSelectedTicket,\n} from \"../state/ticketPurchaseState\";\n\n// Utility function to safely convert unknown types to number\nconst safeNumber = (value: unknown): number =>\n  typeof value === \"number\" ? value : 0;\n\nexport const resetTicketQuantitiesIfNeeded = () => {\n  const selectedBundles = getSelectedBundles();\n  const totalBundlesSelected = selectedBundles.reduce(\n    (sum, bundle) => sum + safeNumber(bundle.quantity),\n    0\n  );\n\n  const selectedTickets = getSelectedTickets();\n  selectedTickets.forEach((ticket) => {\n    const ticketElement = document.querySelector(\n      `#ticketTierCard[data-id=\"${ticket.ticket_tier_id}\"] #ticketTierQuantityInput`\n    ) as HTMLInputElement;\n\n    if (!ticketElement) return;\n\n    if (ticket.bundle_required && totalBundlesSelected <= 0) {\n      ticketElement.value = \"0\";\n      removeSelectedTicket(ticket.ticket_tier_id);\n    }\n  });\n\n  console.log(\"Updated selectedTickets:\", getSelectedTickets());\n};\n\nexport const updateTicketTierButtons = () => {\n  const selectedBundles = getSelectedBundles();\n  const totalBundlesSelected = selectedBundles.reduce(\n    (sum, bundle) => sum + safeNumber(bundle.quantity),\n    0\n  );\n\n  const ticketTierInputs = document.querySelectorAll<HTMLInputElement>(\n    \"#ticketTierQuantityInput\"\n  );\n  const ticketTierIncrementButtons =\n    document.querySelectorAll<HTMLButtonElement>(\"#ticketTierQuantityIncrease\");\n\n  ticketTierInputs.forEach((input) => {\n    const ticketCard = input.closest(\"#ticketTierCard\");\n    const requiresBundle =\n      ticketCard?.getAttribute(\"data-requires-bundle\") === \"true\";\n\n    if (requiresBundle && totalBundlesSelected <= 0) {\n      input.setAttribute(\"disabled\", \"true\");\n      input.value = \"0\";\n    } else {\n      input.removeAttribute(\"disabled\");\n    }\n  });\n\n  ticketTierIncrementButtons.forEach((button) => {\n    const ticketCard = button.closest(\"#ticketTierCard\");\n    const requiresBundle =\n      ticketCard?.getAttribute(\"data-requires-bundle\") === \"true\";\n\n    if (requiresBundle && totalBundlesSelected <= 0) {\n      button.setAttribute(\"disabled\", \"true\");\n    } else {\n      button.removeAttribute(\"disabled\");\n    }\n  });\n\n  resetTicketQuantitiesIfNeeded();\n};\n","import { WFComponent, WFDynamicList } from \"@xatom/core\";\nimport {\n  TicketOfferedFlat,\n  TicketTierAvailability,\n} from \"../../../api/ticketTiersAPI\";\nimport {\n  saveSelectedTicket,\n  removeSelectedTicket,\n  getSelectedBundles,\n} from \"../state/ticketPurchaseState\";\nimport { toggleError } from \"../../../utils/formUtils\";\n\nconst safeNumber = (value: unknown): number =>\n  typeof value === \"number\" ? value : 0;\n\nconst clearNoTicketsError = () => {\n  const noTicketsError = new WFComponent(\"#noTicketsError\");\n  toggleError(noTicketsError, \"\", false);\n};\n\nlet initialTicketTierTemplate: HTMLElement | null = null;\n\nexport const revalidateTicketTierQuantities = () => {\n  const cards = document.querySelectorAll(\n    \"[data-requires-bundle='true']\"\n  );\n  cards.forEach((card) => {\n    const maxAlert = new WFComponent(card.querySelector(\".maximum_alert\"));\n    const qtyInput = new WFComponent(\n      card.querySelector(\"#ticketTierQuantityInput\")\n    );\n    const selectedBundles = getSelectedBundles();\n    const totalBundles = selectedBundles.reduce(\n      (sum, b) => sum + safeNumber(b.quantity),\n      0\n    );\n    if (totalBundles <= 0) {\n      (qtyInput.getElement() as HTMLInputElement).value = \"0\";\n      maxAlert.setText(\n        \"This item requires a ticket bundle purchase. Please add a ticket bundle from the options above.\"\n      );\n      (maxAlert.getElement() as HTMLElement).style.display = \"block\";\n    } else {\n      (maxAlert.getElement() as HTMLElement).style.display = \"none\";\n    }\n  });\n};\n\nexport const renderTicketTiers = (\n  tickets: TicketOfferedFlat[],\n  availabilities: TicketTierAvailability[],\n  containerSelector: string\n) => {\n  // Build availability lookup\n  const availabilityMap = new Map<number, number>();\n  availabilities.forEach((rec) => {\n    availabilityMap.set(rec.Ticket_Tier, rec.Quantity_Available);\n  });\n\n  const container = document.querySelector(containerSelector);\n  if (!container) {\n    console.error(\"Ticket tier list container not found.\");\n    return;\n  }\n\n  if (!initialTicketTierTemplate) {\n    initialTicketTierTemplate = container.cloneNode(true) as HTMLElement;\n  }\n  container.innerHTML = \"\";\n  container.appendChild(initialTicketTierTemplate.cloneNode(true));\n\n  const list = new WFDynamicList<TicketOfferedFlat>(containerSelector, {\n    rowSelector: \"#ticketTierCard\",\n    loaderSelector: \"#ticketTierListLoading\",\n    emptySelector: \"#ticketTierListEmpty\",\n  });\n\n  list.loaderRenderer((loader) => {\n    (loader.getElement() as HTMLElement).style.display = \"flex\";\n    return loader;\n  });\n  list.emptyRenderer((empty) => {\n    (empty.getElement() as HTMLElement).style.display = \"flex\";\n    return empty;\n  });\n\n  list.rowRenderer(({ rowData, rowElement }) => {\n    const card = new WFComponent(rowElement);\n    const requiresBundle = rowData.Requires_Bundle_Purchase;\n    rowElement.setAttribute(\n      \"data-requires-bundle\",\n      requiresBundle ? \"true\" : \"false\"\n    );\n\n    const nameEl = card.getChildAsComponent(\"#ticketTierName\");\n    const priceEl = card.getChildAsComponent(\"#ticketTierPrice\");\n    const soldOutEl = card.getChildAsComponent(\"#ticketTierSoldOut\");\n    const descEl = card.getChildAsComponent(\"#ticketTierDescription\");\n    const qtyInput = card.getChildAsComponent(\"#ticketTierQuantityInput\");\n    const incBtn = card.getChildAsComponent(\"#ticketTierQuantityIncrease\");\n    const decBtn = card.getChildAsComponent(\"#ticketTierQuantityDecrease\");\n    const maxAlert = card.getChildAsComponent(\".maximum_alert\");\n    const wrapper = card.getChildAsComponent(\".number_input_wrapper\");\n\n    if (\n      !nameEl ||\n      !priceEl ||\n      !soldOutEl ||\n      !descEl ||\n      !qtyInput ||\n      !incBtn ||\n      !decBtn ||\n      !maxAlert ||\n      !wrapper\n    ) {\n      console.error(\"Ticket tier elements not found.\");\n      return;\n    }\n\n    // Availability for this tier\n    const available = availabilityMap.get(rowData.id) ?? 0;\n\n    // Populate UI\n    nameEl.setText(rowData.Displayed_Name);\n    // show the formatted price from product_details\n    priceEl.setText(rowData.product_details.Displayed_single_sale_price);\n    descEl.setText(rowData.Short_Description);\n\n    // enforce stock limit in the quantity input\n    qtyInput.setAttribute(\"max\", String(available));\n    qtyInput.setAttribute(\"value\", \"0\");\n\n    if (available <= 0) {\n      soldOutEl.setText(\"Sold out\");\n      (soldOutEl.getElement() as HTMLElement).style.display = \"block\";\n      wrapper.addCssClass(\"is-disabled\");\n    } else {\n      (soldOutEl.getElement() as HTMLElement).style.display = \"none\";\n      wrapper.removeCssClass(\"is-disabled\");\n    }\n\n    const updateAlertVisibility = (message: string) => {\n      maxAlert.setText(message);\n      (maxAlert.getElement() as HTMLElement).style.display = \"block\";\n    };\n\n    // Increment handler\n    incBtn.on(\"click\", () => {\n      const inputEl = qtyInput.getElement() as HTMLInputElement;\n      let current = Number(inputEl.value);\n\n      // bundle-required guard\n      if (requiresBundle) {\n        const totalBundles = getSelectedBundles().reduce(\n          (sum, b) => sum + safeNumber(b.quantity),\n          0\n        );\n        if (totalBundles <= 0) {\n          updateAlertVisibility(\n            \"This item requires a ticket bundle purchase. Please add a ticket bundle from the options above.\"\n          );\n          return;\n        }\n      }\n\n      if (current < available) {\n        current++;\n        inputEl.value = String(current);\n        saveSelectedTicket(rowData.id.toString(), current, requiresBundle);\n        clearNoTicketsError();\n        revalidateTicketTierQuantities();\n      } else {\n        updateAlertVisibility(\n          \"You have reached the maximum available quantity.\"\n        );\n      }\n    });\n\n    // Decrement handler\n    decBtn.on(\"click\", () => {\n      const inputEl = qtyInput.getElement() as HTMLInputElement;\n      let current = Number(inputEl.value);\n      if (current > 0) {\n        current--;\n        inputEl.value = String(current);\n        if (current > 0) {\n          saveSelectedTicket(rowData.id.toString(), current, requiresBundle);\n        } else {\n          removeSelectedTicket(rowData.id.toString());\n        }\n        clearNoTicketsError();\n        revalidateTicketTierQuantities();\n      }\n    });\n\n    // Manual input handler\n    qtyInput.on(\"input\", () => {\n      clearNoTicketsError();\n      const inputEl = qtyInput.getElement() as HTMLInputElement;\n      let val = Number(inputEl.value);\n      if (val > available) {\n        inputEl.value = String(available);\n        updateAlertVisibility(\n          \"You have reached the maximum available quantity.\"\n        );\n      }\n      revalidateTicketTierQuantities();\n    });\n\n    rowElement.setStyle({ display: \"flex\" });\n    return rowElement;\n  });\n\n  list.setData(tickets);\n};\n","import { WFComponent } from \"@xatom/core\";\nimport { WFImage } from \"@xatom/image\";\nimport { apiClient } from \"../api/apiConfig\";\nimport { userAuth } from \"../auth/authConfig\";\n\nexport function toggleError(\n  errorMessageComponent: WFComponent<any>,\n  message: string,\n  show: boolean\n): void {\n  errorMessageComponent.updateTextViaAttrVar({ text: show ? message : \"\" });\n  errorMessageComponent.setStyle({ display: show ? \"flex\" : \"none\" });\n}\n\nexport function setupValidation(\n  inputComponent: WFComponent,\n  errorComponent: WFComponent,\n  validate: () => string,\n  requestErrorComponent?: WFComponent // Optional component to clear on input change\n) {\n  const validateAndUpdate = () => {\n    const errorMessage = validate();\n    toggleError(errorComponent, errorMessage, !!errorMessage);\n    if (requestErrorComponent && errorMessage === \"\") {\n      // Clear request error message when the user is correcting the input\n      toggleError(requestErrorComponent, \"\", false);\n    }\n  };\n\n  // Attach event listeners for real-time validation\n  inputComponent.on(\"input\", validateAndUpdate);\n  inputComponent.on(\"blur\", validateAndUpdate);\n  inputComponent.on(\"change\", validateAndUpdate);\n}\n\nexport function createValidationFunction(\n  inputComponent: WFComponent,\n  validationFn: (input: string) => boolean,\n  errorMessage: string\n): () => string {\n  return () => {\n    const inputElement = inputComponent.getElement() as HTMLInputElement;\n    const isValid = validationFn(inputElement.value);\n    return isValid ? \"\" : errorMessage;\n  };\n}\n\nexport function createCheckboxValidationFunction(\n  checkboxComponent: WFComponent,\n  errorMessage: string\n): () => string {\n  return () => {\n    const checkbox = checkboxComponent.getElement() as HTMLInputElement;\n    return checkbox.checked ? \"\" : errorMessage;\n  };\n}\n\nexport function setupCheckboxValidation(\n  checkboxComponent: WFComponent,\n  checkboxErrorComponent: WFComponent,\n  errorMessage: string\n) {\n  const validate = createCheckboxValidationFunction(\n    checkboxComponent,\n    errorMessage\n  );\n  setupValidation(checkboxComponent, checkboxErrorComponent, validate);\n}\n\nexport function validateSelectedSessions(\n  selectedSessions: { sessionId: string; studentIds: string[] }[],\n  errorMessageComponent: WFComponent<any>,\n  errorMessage: string\n): boolean {\n  const isValid =\n    selectedSessions.length > 0 &&\n    selectedSessions.some((session) => session.studentIds.length > 0);\n\n  if (!isValid) {\n    toggleError(errorMessageComponent, errorMessage, true);\n  } else {\n    toggleError(errorMessageComponent, \"\", false);\n  }\n\n  return isValid;\n}\n\ntype fileUploadResponse = {\n  status: string;\n  url: {\n    profile_pic: {\n      url: string;\n    };\n  };\n};\n\n/**\n * Updates the user's profile picture URL in the authentication system.\n * @param {string} imageUrl - The URL of the uploaded image.\n */\nexport function setProfilePicUrl(imageUrl: string): void {\n  const user = userAuth.getUser();\n  if (user && user.profile) {\n    // Ensure the profile_picture object exists\n    user.profile.profile_pic = user.profile.profile_pic || { url: \"\" };\n\n    // Set the profile picture URL\n    user.profile.profile_pic.url = imageUrl;\n    userAuth.setUser(user);\n    localStorage.setItem(\"auth_user\", JSON.stringify(user));\n  }\n}\n\n/**\n * Handles file upload and displays the uploaded image.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */\n/**\n * Handles file upload and displays the uploaded image.\n * Only JPEG files less than 2 MB can be uploaded.\n * @param {WFComponent} fileInput - The WFComponent instance for the file input field.\n * @param {WFComponent} fileInputError - The WFComponent instance for displaying error messages.\n * @param {WFComponent} fileInputSuccess - The WFComponent instance for displaying success messages.\n * @param {string} uploadEndpoint - The endpoint to which the file is sent.\n * @returns {Promise<string>} A promise that resolves with the URL of the uploaded image.\n */\nexport function setupFileUpload(\n  fileInput: WFComponent,\n  fileInputError: WFComponent,\n  fileInputSuccess: WFComponent,\n  uploadEndpoint: string\n): Promise<string> {\n  const profilePictureImage = new WFImage(\"#profilePictureImage\");\n  const uploadAnimation = new WFComponent(\"#uploadAnimation\");\n\n  const overlay = new WFComponent(\".drop-zone\");\n  let dragCounter = 0;\n\n  return new Promise<string>((resolve) => {\n    const handleFile = (file: File) => {\n      // Validate file type and size\n      const validTypes = [\"image/jpeg\", \"image/jpg\"];\n      const maxSizeInBytes = 2 * 1024 * 1024; // 2 MB\n\n      if (\n        !validTypes.includes(file.type) &&\n        !/\\.(jpg|jpeg)$/i.test(file.name)\n      ) {\n        const errorMessage = \"Only JPEG images are allowed.\";\n        toggleError(fileInputError, errorMessage, true);\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n        return;\n      }\n\n      if (file.size > maxSizeInBytes) {\n        const errorMessage = \"File size must be less than 2 MB.\";\n        toggleError(fileInputError, errorMessage, true);\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n        return;\n      }\n\n      // Show upload animation immediately\n      uploadAnimation.setStyle({ display: \"flex\" });\n\n      // Hide error and success messages\n      fileInputError.setStyle({ display: \"none\" });\n      fileInputSuccess.setStyle({ display: \"none\" });\n\n      const reader = new FileReader();\n\n      // Display preview image as soon as the file is loaded into memory\n      reader.onload = (event) => {\n        // Set the preview image for the profile picture\n        const result = event.target?.result as string;\n        profilePictureImage.setImage(result);\n\n        // Hide overlay once the image is set\n        overlay.setStyle({ display: \"none\" });\n      };\n\n      reader.readAsDataURL(file);\n\n      const formData = new FormData();\n      formData.append(\"profile_picture\", file);\n\n      const existingStudent = localStorage.getItem(\"current_student\");\n      if (existingStudent) {\n        const student = JSON.parse(existingStudent);\n        formData.append(\"student_profile_id\", student.id.toString());\n      }\n\n      // Send the file to the server\n      const postRequest = apiClient.post<fileUploadResponse>(uploadEndpoint, {\n        data: formData,\n      });\n\n      postRequest.onData((response) => {\n        if (response.status === \"success\") {\n          const imageUrl = response.url.profile_pic.url;\n\n          // Update the profile picture URL in the user session and local storage\n          setProfilePicUrl(imageUrl);\n\n          // Update the image for other parts of the UI as well\n          profilePictureImage.setImage(imageUrl);\n\n          // Store the URL in local storage\n          localStorage.setItem(\"image_upload\", imageUrl);\n\n          // Show success message and hide upload animation\n          fileInputSuccess.setStyle({ display: \"flex\" });\n          uploadAnimation.setStyle({ display: \"none\" });\n\n          // Resolve with the uploaded image URL\n          resolve(imageUrl);\n        } else {\n          const errorMessage = \"Failed to upload profile picture.\";\n          toggleError(fileInputError, errorMessage, true);\n          uploadAnimation.setStyle({ display: \"none\" });\n          overlay.setStyle({ display: \"none\" });\n          dragCounter = 0;\n          // Reset file input value\n          (fileInput.getElement() as HTMLInputElement).value = \"\";\n        }\n      });\n\n      postRequest.onError((error) => {\n        let errorMessage = \"An error occurred during image upload.\";\n        if (error.response && error.response.data) {\n          errorMessage = error.response.data.message || errorMessage;\n        } else if (error.message) {\n          errorMessage = error.message;\n        }\n\n        // Show error message and hide upload animation\n        toggleError(fileInputError, errorMessage, true);\n        uploadAnimation.setStyle({ display: \"none\" });\n        overlay.setStyle({ display: \"none\" });\n        dragCounter = 0;\n        // Reset file input value\n        (fileInput.getElement() as HTMLInputElement).value = \"\";\n      });\n\n      // Make the API call\n      postRequest.fetch();\n    };\n\n    // Event listener for file input changes\n    fileInput.on(\"change\", () => {\n      const file = (fileInput.getElement() as HTMLInputElement).files?.[0];\n      if (file) {\n        handleFile(file);\n      }\n    });\n\n    // Event listeners for drag-and-drop\n    const dragZoneElement = document.body;\n    dragZoneElement.addEventListener(\"dragenter\", (event) => {\n      event.preventDefault();\n      dragCounter++;\n      if (dragCounter === 1) {\n        overlay.setStyle({ display: \"flex\" });\n      }\n    });\n\n    dragZoneElement.addEventListener(\"dragleave\", () => {\n      dragCounter--;\n      if (dragCounter <= 0) {\n        overlay.setStyle({ display: \"none\" });\n        dragCounter = 0;\n      }\n    });\n\n    dragZoneElement.addEventListener(\"dragover\", (event) => {\n      event.preventDefault();\n    });\n\n    dragZoneElement.addEventListener(\"drop\", (event) => {\n      event.preventDefault();\n\n      const files = event.dataTransfer?.files;\n      if (files?.length) {\n        handleFile(files[0]);\n      }\n\n      overlay.setStyle({ display: \"none\" });\n      dragCounter = 0;\n    });\n  });\n}\n\n// src/utils/formUtils.ts\n\n/**\n * Formats a phone number string to the format (xxx) xxx-xxxx.\n * If the input contains more than 10 digits, it truncates the extra digits.\n * If it contains fewer, it formats as much as possible.\n *\n * @param value - The raw phone number string.\n * @returns The formatted phone number string.\n */\nexport const formatPhoneNumber = (value: string): string => {\n  const cleaned = value.replace(/\\D/g, \"\"); // Remove all non-digit characters\n\n  if (cleaned.length <= 3) {\n    return cleaned;\n  } else if (cleaned.length <= 6) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3)}`;\n  } else if (cleaned.length <= 10) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(\n      6\n    )}`;\n  } else {\n    // If more than 10 digits, truncate the extra digits\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(\n      6,\n      10\n    )}`;\n  }\n};\n","var t=require(\"@xatom/core\");var e,r,s,i,o,n,u={};e=u,r=\"WFImage\",s=()=>c,Object.defineProperty(e,r,{get:s,set:i,enumerable:!0,configurable:!0});class c extends t.WFComponent{constructor(t){super(t)}getImageConfig(){return this._config}getSrc(){return this.getAttribute(\"src\")}getSizes(){return this.getAttribute(\"sizes\")}getSrcSet(){return this.getAttribute(\"srcset\")}getLoading(){return this.getAttribute(\"loading\")}onLoad(t){return this.on(\"load\",t),()=>{this.off(\"load\",t)}}onLoadError(t){return this.on(\"error\",t),()=>{this.off(\"error\",t)}}setImage(t){if(\"string\"==typeof t)this.setAttribute(\"src\",t),this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");else{if(this.setAttribute(\"src\",t.src),\"object\"==typeof t&&t.srcSet&&t.srcSet.length&&t.sizes&&t.sizes.length){const e=t.srcSet.map((t=>`${t.url} ${t.size}`)).join(\", \");this.setAttribute(\"srcset\",e)}else this.removeAttribute(\"srcset\"),this.removeAttribute(\"sizes\");t.loading&&this.setAttribute(\"loading\",t.loading)}}}o=module.exports,n=u,Object.keys(n).forEach((function(t){\"default\"===t||\"__esModule\"===t||o.hasOwnProperty(t)||Object.defineProperty(o,t,{enumerable:!0,get:function(){return n[t]}})}));","import { WFComponent } from \"@xatom/core\";\nimport {\n  getSelectedPerformance,\n  getSelectedProduction,\n} from \"../state/ticketPurchaseState\";\n\nexport const updateSelectedPerformanceUI = () => {\n  const selectedPerformance = getSelectedPerformance();\n  const selectedProduction = getSelectedProduction();\n\n  if (!selectedPerformance || !selectedPerformance.id) {\n    console.error(\"No performance selected.\");\n    return;\n  }\n\n  // pick up your DOM nodes\n  const selectedPerformanceDate = new WFComponent(\"#selectedPerformanceDate\");\n  const selectedPerformanceMonth = new WFComponent(\"#selectedPerformanceMonth\");\n  const selectedWeekday = new WFComponent(\"#selectedWeekday\");\n  const selectedTime = new WFComponent(\"#selectedTime\");\n  const selectedPerformanceTitle = new WFComponent(\"#selectedPerformanceTitle\");\n  const selectedPerformanceProductionTitle = new WFComponent(\n    \"#selectedPerformanceProductionTitle\"\n  );\n  const selectedPerformanceDescription = new WFComponent(\n    \"#selectedPerformanceDescription\"\n  );\n  const selectedImage = new WFComponent(\"#selectedImage\");\n  const selectedPerformanceLocation = new WFComponent(\n    \"#selectedPerformanceLocation\"\n  );\n\n  // dateTime might be an ISO string or a millisecond‐timestamp string\n  const raw = selectedPerformance.dateTime;\n  let date: Date;\n  if (/^\\d+$/.test(raw)) {\n    date = new Date(Number(raw));\n  } else {\n    date = new Date(raw);\n  }\n\n  // formatting options for New York\n  const optionsCommon = { timeZone: \"America/New_York\" } as const;\n\n  // render date parts in Eastern Time\n  selectedPerformanceDate.setText(\n    date.toLocaleString(\"en-US\", { ...optionsCommon, day: \"numeric\" })\n  );\n  selectedPerformanceMonth.setText(\n    date.toLocaleString(\"en-US\", { ...optionsCommon, month: \"short\" })\n  );\n  selectedWeekday.setText(\n    date.toLocaleString(\"en-US\", { ...optionsCommon, weekday: \"long\" })\n  );\n  selectedTime.setText(\n    date.toLocaleTimeString(\"en-US\", {\n      ...optionsCommon,\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: true,\n    })\n  );\n\n  selectedPerformanceTitle.setText(selectedPerformance.name);\n  selectedPerformanceProductionTitle.setText(selectedProduction.name);\n  selectedPerformanceDescription.setText(selectedProduction.description);\n\n  if (selectedPerformance.imageUrl) {\n    selectedImage.setAttribute(\"src\", selectedPerformance.imageUrl);\n    selectedImage.setAttribute(\"alt\", selectedPerformance.name);\n  }\n\n  // now display the human-readable venue name saved in state\n  if (selectedPerformance.location) {\n    selectedPerformanceLocation.setText(selectedPerformance.location);\n  } else {\n    selectedPerformanceLocation.setText(\"Location not specified\");\n  }\n};\n","import { WFComponent } from \"@xatom/core\";\nimport { saveCustomQuestion } from \"../state/ticketPurchaseState\";\n\nexport const updateCustomQuestion = (questionText: string) => {\n  const wrapper = new WFComponent(\"#customQuestionWrap\");\n  const divider = new WFComponent(\"#customQuestionDivider\");\n  const label = new WFComponent(\"label[for='customQuestionInput']\");\n  const input = new WFComponent(\"#customQuestionInput\");\n\n  if (!questionText) {\n    wrapper.setStyle({ display: \"none\" });\n    divider.setStyle({ display: \"none\" });\n    return;\n  }\n\n  wrapper.setStyle({ display: \"\" });\n  divider.setStyle({ display: \"\" });\n\n  // Set the label text inside the wrapper\n  label.setText(questionText);\n\n  // Wire up input save\n  input.on(\"input\", () => {\n    const answer = (input.getElement() as HTMLInputElement).value;\n    saveCustomQuestion(answer);\n  });\n};\n","import { WFComponent } from \"@xatom/core\";\nimport {\n  saveAssistanceNeeded,\n  saveAssistanceMessage,\n} from \"../state/ticketPurchaseState\";\n\nexport const initializeAssistanceInput = () => {\n  const assistanceInput = new WFComponent(\"#assistanceInput\");\n  const hiddenAssistanceWrapper = new WFComponent(\"#hiddenAssistanceWrapper\");\n  const assistanceMessageInput = new WFComponent(\"#assistanceMessageInput\");\n\n  if (!assistanceInput || !hiddenAssistanceWrapper || !assistanceMessageInput) {\n    console.error(\"Assistance input or hidden wrapper elements not found.\");\n    return;\n  }\n\n  // Initialize state based on current input values\n  const isChecked = (assistanceInput.getElement() as HTMLInputElement).checked;\n  saveAssistanceNeeded(isChecked);\n\n  if (isChecked) {\n    hiddenAssistanceWrapper.removeCssClass(\"g-hide\");\n    const assistanceMessage = (\n      assistanceMessageInput.getElement() as HTMLTextAreaElement\n    ).value;\n    saveAssistanceMessage(assistanceMessage);\n  } else {\n    hiddenAssistanceWrapper.addCssClass(\"g-hide\");\n    saveAssistanceMessage(\"\"); // Clear the message in the state if hidden\n  }\n\n  assistanceInput.on(\"change\", () => {\n    const isChecked = (assistanceInput.getElement() as HTMLInputElement)\n      .checked;\n\n    if (isChecked) {\n      hiddenAssistanceWrapper.removeCssClass(\"g-hide\");\n    } else {\n      hiddenAssistanceWrapper.addCssClass(\"g-hide\");\n      (assistanceMessageInput.getElement() as HTMLTextAreaElement).value = \"\"; // Clear the input when hidden\n      saveAssistanceMessage(\"\"); // Clear the message in the state if hidden\n    }\n\n    saveAssistanceNeeded(isChecked); // Save the checkbox state\n  });\n\n  assistanceMessageInput.on(\"input\", () => {\n    const message = (assistanceMessageInput.getElement() as HTMLTextAreaElement)\n      .value;\n    saveAssistanceMessage(message); // Save the message to the state\n  });\n};\n","// src/modules/tickets/components/userDetailsUI.ts\nimport { WFComponent } from \"@xatom/core\";\nimport { authManager } from \"../../../auth/authConfig\";\nimport { saveUserDetails } from \"../state/ticketPurchaseState\"; // Import the save function from state\n\nexport const initializeUserDetails = () => {\n  const emailWrap = new WFComponent(\"#emailWrap\");\n  const firstNameInput = new WFComponent(\"#firstNameInput\");\n  const lastNameInput = new WFComponent(\"#lastNameInput\");\n  const emailInput = new WFComponent(\"#emailInput\");\n\n  // Check if the user is logged in\n  const user = authManager.getUserAuth().getUser();\n\n  if (user && user.email) {\n    // User is logged in, hide the emailWrap and populate the state\n    emailWrap.setStyle({ display: \"none\" });\n\n    // Save the user details to the state\n    saveUserDetails({\n      firstName: user.profile?.first_name || \"\",\n      lastName: user.profile?.last_name || \"\",\n      email: user.email,\n    });\n  } else {\n    // User is not logged in, show the emailWrap\n    emailWrap.setStyle({ display: \"grid\" });\n\n    // Set up event listeners to save user input to the state\n    firstNameInput.on(\"input\", () => {\n      const firstName = (firstNameInput.getElement() as HTMLInputElement).value;\n      saveUserDetails({ firstName });\n    });\n\n    lastNameInput.on(\"input\", () => {\n      const lastName = (lastNameInput.getElement() as HTMLInputElement).value;\n      saveUserDetails({ lastName });\n    });\n\n    emailInput.on(\"input\", () => {\n      const email = (emailInput.getElement() as HTMLInputElement).value;\n      saveUserDetails({ email });\n    });\n  }\n};\n","var e=require(\"@xatom/core\"),s=require(\"uuid\");var t,i,r,l,d={};t=d,i=\"WFSlider\",r=()=>o,Object.defineProperty(t,i,{get:r,set:l,enumerable:!0,configurable:!0});const n=window.jQuery;class o extends e.WFComponent{_sliderConfig={};_slides=[];_defaultSwipeDisabled=!1;_index=0;_listeners=new Map;constructor(e){super(e),this.init()}init(){this._defaultSwipeDisabled=\"true\"===this.getAttribute(\"data-disable-swipe\"),this._sliderConfig=n(this.getElement()).data()[\".wSlider\"],this._slides=Array.from(this._sliderConfig.slides).map((s=>new(0,e.WFComponent)(s))),this._mask=new(0,e.WFComponent)(this._sliderConfig.mask[0]),this._nav=new(0,e.WFComponent)(this._sliderConfig.nav[0]),this._left=new(0,e.WFComponent)(this._sliderConfig.left[0]),this._right=new(0,e.WFComponent)(this._sliderConfig.right[0]),function(e,s){if(!document.styleSheets)return;if(0==document.getElementsByTagName(\"head\").length)return;let t,i;if(document.styleSheets.length>0)for(var r=0,l=document.styleSheets.length;r<l;r++)if(!document.styleSheets[r].disabled){var d=document.styleSheets[r].media;if(i=typeof d,\"string\"===i?\"\"!==d&&-1===d.indexOf(\"screen\")||(t=document.styleSheets[r]):\"object\"==i&&(\"\"!==d.mediaText&&-1===d.mediaText.indexOf(\"screen\")||(t=document.styleSheets[r])),void 0!==t)break}if(void 0===t){var n=document.createElement(\"style\");for(n.type=\"text/css\",document.getElementsByTagName(\"head\")[0].appendChild(n),r=0;r<document.styleSheets.length;r++)document.styleSheets[r].disabled||(t=document.styleSheets[r]);i=typeof t.media}if(\"string\"===i){for(r=0,l=t.rules.length;r<l;r++)if(t.rules[r].selectorText&&t.rules[r].selectorText.toLowerCase()==e.toLowerCase())return void(t.rules[r].style.cssText=s);t.addRule(e,s)}else if(\"object\"===i){var o=t.cssRules?t.cssRules.length:0;for(r=0;r<o;r++)if(t.cssRules[r].selectorText&&t.cssRules[r].selectorText.toLowerCase()==e.toLowerCase())return void(t.cssRules[r].style.cssText=s);t.insertRule(e+\"{\"+s+\"}\",o)}}(\".xa-slider-disable\",\"display:none !important;\");const s=this;Object.defineProperty(s._sliderConfig,\"index\",{set:function(e){s._index=e,s._triggerOnChange()},get:function(){return s._index}}),this.refereshSlides()}reloadWFSlider(){window.Webflow.require(\"slider\").destroy(),window.Webflow.require(\"slider\").redraw(),window.Webflow.require(\"slider\").ready()}refereshSlides(){this._mask.getChildAsComponents(\".w-slide\").forEach((e=>e.remove())),this._slides.reverse().forEach((e=>{this._mask.getElement().prepend(e.getElement())})),this._slides.reverse(),this.reloadWFSlider()}getActiveSlide(){return this._slides[this._index]}getAllSlides(){return[...this._slides]}getSlideByIndex(e){return this._slides[e]}getActiveSlideIndex(){return this._index}getPreviousSlideIndex(){return this._sliderConfig.previous}goNext(){this._sliderConfig.right.click()}goPrevious(){this._sliderConfig.left.click()}goToIndex(e){e>=0&&e<this._slides.length&&(console.log(e),n(this._sliderConfig.nav.children()[e]).click())}addSlide(s,t={}){const i=t.index,r=t.cssClass,l=(0,e.createComponent)(\"div\");l.addCssClass(\"w-slide\"),r&&l.addCssClass(r),l.appendChild(s);const d=\"number\"!=typeof i?-1:i,n=this._slides;d>=0&&d<=n.length?n.splice(i,0,l):n.push(l),this._slides=[...n],this.refereshSlides()}removeSlide(e){const s=[...this._slides];e>=0&&e<s.length&&s.splice(e,1),this._slides=[...s],console.log(this._slides),this.refereshSlides()}getSlideNav(){return this._nav}setSlideNavigationState(e){e?(this._left.removeCssClass(\"xa-slider-disable\"),this._right.removeCssClass(\"xa-slider-disable\"),this._nav.removeCssClass(\"xa-slider-disable\"),this.setAttribute(\"data-disable-swipe\",this._defaultSwipeDisabled?\"true\":\"false\")):(this._left.addCssClass(\"xa-slider-disable\"),this._right.addCssClass(\"xa-slider-disable\"),this._nav.addCssClass(\"xa-slider-disable\"),this.setAttribute(\"data-disable-swipe\",\"true\")),this.reloadWFSlider()}onSlideChange(e){const t=(0,s.v4)();return this._listeners.set(t,e),()=>{this._listeners.delete(t)}}_triggerOnChange(){Array.from(this._listeners.values()).forEach((e=>{e(this._index,this._sliderConfig.previous)}))}getConfig(){return this._sliderConfig}}var a,h;a=module.exports,h=d,Object.keys(h).forEach((function(e){\"default\"===e||\"__esModule\"===e||a.hasOwnProperty(e)||Object.defineProperty(a,e,{enumerable:!0,get:function(){return h[e]}})}));","import { WFComponent } from \"@xatom/core\";\nimport { userAuth } from \"../../../auth/authConfig\";\n\n// Initialize the sidebar indicators for the ticket form\nexport const initializeTicketSidebarIndicators = () => {\n  const steps = [\n    { id: \"sidebarStepOne\", index: 1 },\n    { id: \"sidebarStepTwo\", index: 2 },\n    { id: \"sidebarStepThree\", index: 3 },\n    { id: \"sidebarStepFour\", index: 4 },\n  ];\n\n  // Set sidebar first name from userAuth\n  const firstNameText = new WFComponent(\"#firstNameText\");\n  const user = userAuth.getUser();\n\n  if (user && user.profile && user.profile.first_name) {\n    firstNameText.setText(user.profile.first_name);\n  } else {\n    firstNameText.setText(\"Friend\");\n  }\n\n  steps.forEach((step) => {\n    const stepComponent = new WFComponent(`#${step.id}`);\n    let isCompleted = false; // Track the completed state\n\n    stepComponent.on(\"click\", () => {\n      if (isCompleted) {\n        isCompleted = false;\n        // Trigger reverse animation here if needed\n      } else {\n        isCompleted = true;\n        // Trigger completed animation here\n      }\n    });\n  });\n};\n\n// Set the active step for the ticket form\nexport const setActiveTicketStep = (stepNumber: number) => {\n  const stepId = getTicketStepId(stepNumber);\n  const stepComponent = new WFComponent(`#${stepId}`);\n  stepComponent.addCssClass(\"is-active\");\n};\n\n// Unset the active step for the ticket form\nexport const unsetActiveTicketStep = (stepNumber: number) => {\n  const stepId = getTicketStepId(stepNumber);\n  const stepComponent = new WFComponent(`#${stepId}`);\n  stepComponent.removeCssClass(\"is-active\");\n};\n\n// Mark step as completed for the ticket form\nexport const markTicketStepAsCompleted = (stepNumber: number) => {\n  const stepId = getTicketStepId(stepNumber);\n  const step = new WFComponent(`#${stepId}`);\n  step.getElement().click(); // Programmatically trigger the click event to mark as complete\n};\n\n// Unmark step as completed (reverse the completed animation) for the ticket form\nexport const unmarkTicketStepAsCompleted = (stepNumber: number) => {\n  const stepId = getTicketStepId(stepNumber);\n  const step = new WFComponent(`#${stepId}`);\n  step.getElement().click(); // Programmatically trigger the click event to unmark as complete\n};\n\n// Helper function to get the ID string for a step in the ticket form\nconst getTicketStepId = (stepNumber: number): string => {\n  const stepMap: Record<number, string> = {\n    1: \"sidebarStepOne\",\n    2: \"sidebarStepTwo\",\n    3: \"sidebarStepThree\",\n    4: \"sidebarStepFour\",\n  };\n  return stepMap[stepNumber] || `ticketSidebarStep${stepNumber}`;\n};\n","import { WFComponent } from \"@xatom/core\";\nimport { toggleError } from \"./formUtils\";\n\nexport function validateNotEmpty(input: string | undefined): boolean {\n  return input !== undefined && input.trim() !== \"\";\n}\n\nexport function validateEmail(input: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(input);\n}\n\n/**\n * Validates that the email is either empty or correctly formatted.\n * @param value The email input value.\n * @returns True if valid, false otherwise.\n */\nexport const validateEmailOptional = (value: string): boolean => {\n  if (value.trim() === \"\") {\n    // Email is optional, so empty string is valid\n    return true;\n  }\n  // Validate the email format if not empty\n  return validateEmail(value);\n};\n\nexport function validatePasswordRequirements(password: string): boolean {\n  const hasLowercase = /[a-z]/.test(password);\n  const hasUppercase = /[A-Z]/.test(password);\n  const hasDigit = /\\d/.test(password);\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n  const hasValidLength = password.length >= 8;\n  return (\n    hasLowercase && hasUppercase && hasDigit && hasSpecialChar && hasValidLength\n  );\n}\n\nexport function validateCheckbox(checked: boolean): boolean {\n  return checked;\n}\n\nexport function validatePasswordsMatch(\n  originalPassword: string,\n  confirmPassword: string\n): boolean {\n  return originalPassword === confirmPassword;\n}\n\nexport function validateSelectField(input: string | undefined): boolean {\n  return input !== undefined && input !== \"N/A\";\n}\n\nexport function validatePhoneNumber(input: string): boolean {\n  const phoneRegex = /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/;\n  return phoneRegex.test(input);\n}\n\nexport const validatePhoneNumberOptional = (value: string): boolean => {\n  if (value.trim() === \"\") {\n    // Phone number is optional, so empty string is valid\n    return true;\n  }\n  // Validate the phone number format if not empty\n  return validatePhoneNumber(value);\n};\n","// src/modules/tickets/components/urlParamNavigator.ts\n\nimport {\n  saveSelectedProduction,\n  saveSelectedPerformance,\n  clearTicketPurchaseState,\n} from \"../state/ticketPurchaseState\";\nimport { initializeProductionList } from \"../productionList\";\nimport { initializePerformanceList } from \"../performanceList\";\nimport { initializeTicketTiers } from \"../ticketTiers\";\nimport { WFSlider } from \"@xatom/slider\";\nimport {\n  initializeTicketSidebarIndicators,\n  setActiveTicketStep,\n  markTicketStepAsCompleted,\n} from \"../components/sidebarIndicators\";\nimport { WFComponent } from \"@xatom/core\";\nimport { updateSelectedPerformanceUI } from \"../components/selectedPerformanceUI\";\nimport { apiClient } from \"../../../api/apiConfig\";\n\n// parse URL params\nconst getUrlParams = () => {\n  const params = new URLSearchParams(window.location.search);\n  return {\n    productionId: params.get(\"production\"),   // string | null\n    performanceId: params.get(\"performance\"), // string | null\n    cancelId: params.get(\"cancel\"),           // string | null\n  };\n};\n\nexport const initializeStateFromUrlParams = async (slider: WFSlider) => {\n  const { productionId, performanceId, cancelId } = getUrlParams();\n  initializeTicketSidebarIndicators();\n\n  const loadingWall = new WFComponent(\".loading_wall\");\n  const animationDuration = 500;\n\n  if (productionId || performanceId || cancelId) {\n    loadingWall.setStyle({ display: \"flex\" });\n\n    try {\n      // handle cancellation\n      if (cancelId) {\n        const req = apiClient.delete(`/tickets/cancel_order/${cancelId}`);\n        await new Promise<void>((resolve, reject) => {\n          req.onData(() => {\n            // remove cancel from URL\n            const ps = new URLSearchParams(window.location.search);\n            ps.delete(\"cancel\");\n            const base = window.location.pathname;\n            const qs = ps.toString();\n            window.history.replaceState({}, document.title, base + (qs ? `?${qs}` : \"\"));\n            resolve();\n          });\n          req.onError((err) => reject(err));\n          req.fetch();\n        });\n      }\n\n      // if we have a productionId, pick step-1 → step-2\n      if (productionId) {\n        clearTicketPurchaseState();\n\n        // load & render productions\n        const productions = await initializeProductionList(\"#selectProductionList\");\n\n        // find by numeric id\n        const prod = productions.find((p) => p.id === Number(productionId));\n        if (prod) {\n          saveSelectedProduction({\n            id: prod.id,\n            name: prod.Name,\n            description: prod.Short_Description,\n            imageUrl: prod.Main_Image,\n          });\n\n          markTicketStepAsCompleted(1);\n          setActiveTicketStep(2);\n\n          // check the radio in the UI\n          const inp = document.querySelector<HTMLInputElement>(\n            `input[value=\"${productionId}\"]`\n          );\n          if (inp) {\n            inp.checked = true;\n            inp.dispatchEvent(new Event(\"change\"));\n          }\n\n          // now load performances for that production\n          const performances = await initializePerformanceList(\"#selectPerformanceList\");\n\n          // if URL has performanceId, pick step-2 → step-3\n          if (performanceId) {\n            const perf = performances.find((x) => x.id.toString() === performanceId);\n            if (perf) {\n              saveSelectedPerformance({\n                id: perf.id.toString(),\n                name: perf.Displayed_Name,\n                dateTime: perf.Date_Time.toString(),\n                description: perf.Short_Description,\n                imageUrl: perf.Main_Image,\n                location: perf.location_details.Name,\n              });\n\n              markTicketStepAsCompleted(2);\n              setActiveTicketStep(3);\n\n              updateSelectedPerformanceUI();\n              await initializeTicketTiers(\"#bundleList\", \"#ticketTierList\");\n              slider.goToIndex(2);\n            } else {\n              console.error(`Performance ${performanceId} not found`);\n              slider.goToIndex(1);\n            }\n          } else {\n            slider.goToIndex(1);\n          }\n        } else {\n          console.error(`Production ${productionId} not found`);\n          slider.goToIndex(0);\n        }\n      } else {\n        // no production param: stay on step-1\n        slider.goToIndex(0);\n      }\n    } catch (err) {\n      console.error(\"Error initializing from URL:\", err);\n      slider.goToIndex(0);\n    } finally {\n      loadingWall.addCssClass(\"hidden\");\n      setTimeout(() => loadingWall.setStyle({ display: \"none\" }), animationDuration);\n    }\n  }\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","export","makeTicketPurchase","_core","_productionList","_performanceList","_ticketTiers","_ticketPurchaseState","_slider","_sidebarIndicators","_validationUtils","_formUtils","_apiConfig","_urlParamNavigator","slider","WFSlider","initializeStateFromUrlParams","initializeTicketSidebarIndicators","initializeProductionList","formStepOne","WFFormComponent","submitButtonStepOne","WFComponent","onFormSubmit","formData","event","preventDefault","setAttribute","selectedProduction","getSelectedProduction","stepOneRequestingAnimation","console","error","submitStepOneError","setText","setStyle","display","log","initializePerformanceList","markTicketStepAsCompleted","setActiveTicketStep","goNext","removeAttribute","formStepTwo","submitButtonStepTwo","selectedPerformance","getSelectedPerformance","stepTwoRequestingAnimation","submitStepTwoError","initializeTicketTiers","formStepThree","emailWrap","firstNameInput","lastNameInput","emailInput","customQuestionInput","submitStepThreeError","noTicketsError","submitButtonStepThree","clearErrorOnInteraction","inputComponent","errorComponent","clearError","toggleError","on","formIsValid","getElement","style","firstNameError","firstNameValidationResult","firstNameValidation","createValidationFunction","validateNotEmpty","lastNameError","lastNameValidationResult","lastNameValidation","emailError","emailValidationResult","emailValidation","validateEmail","customQuestionWrap","document","getElementById","customQuestionError","customQuestionValidationResult","customQuestionValidation","selectedBundles","getSelectedBundles","selectedTickets","getSelectedTickets","stepThreeRequestingAnimation","email","firstName","lastName","customQuestion","assistanceNeeded","assistanceMessage","selectedProductionId","selectedPerformanceId","loadTicketPurchaseState","cancelUrl","location","origin","response","apiClient","post","data","cancel_url","fetch","href","checkout_url","backStepThree","clearSelectedBundles","clearSelectedTickets","goPrevious","unsetActiveTicketStep","unmarkTicketStepAsCompleted","backStepTwo","clearSelectedPerformance","_productions","initialTemplateState","containerSelector","container","querySelector","cloneNode","innerHTML","appendChild","list","WFDynamicList","rowSelector","loaderSelector","emptySelector","loaderRenderer","loaderElement","emptyRenderer","emptyElement","rowRenderer","rowData","rawData","rowElement","index","productionCard","productionTitle","getChildAsComponent","productionDescription","productionAges","productionImage","productionInput","productionLabel","inputId","toString","Name","Short_Description","Age_Description","Main_Image","warn","value","saveSelectedProduction","Number","description","imageUrl","changeLoadingStatus","productions","fetchProductions","setData","saveTicketPurchaseState","clearTicketPurchaseState","saveSelectedPerformance","saveSelectedBundle","removeSelectedBundle","saveSelectedTicket","removeSelectedTicket","getCustomQuestion","saveCustomQuestion","getAssistanceNeeded","saveAssistanceNeeded","getAssistanceMessage","saveAssistanceMessage","saveUserDetails","TICKET_PURCHASE_STATE_KEY","safeNumber","saved","localStorage","getItem","JSON","parse","state","merged","setItem","stringify","removeItem","s","selectedProductionName","selectedProductionDescription","selectedProductionImageUrl","production","selectedPerformanceName","dateTime","selectedPerformanceDateTime","selectedPerformanceDescription","selectedPerformanceImageUrl","selectedPerformanceLocation","perf","bundleId","quantity","bundles","idx","findIndex","b","bundle_id","splice","push","remaining","filter","reduce","sum","t","bundle_required","tierId","tickets","ticket_tier_id","q","v","m","d","undefined","_performances","_performanceFilter","loader","empty","card","dateWrapper","dayEl","monthEl","timeEl","weekdayEl","titleEl","prodTitleEl","descEl","imageEl","inputEl","labelEl","locEl","soldOutEl","Sold_Out","pointerEvents","opacity","date","Date","Date_Time","toLocaleString","day","timeZone","month","weekday","toLocaleTimeString","hour","minute","hour12","Displayed_Name","selectedProd","location_details","prod","performances","fetchPerformances","sort","a","initializePerformanceFilter","productionId","production_id","locationSelectElement","monthSelectElement","addEventListener","applyFilters","filterPerformances","performanceCards","querySelectorAll","hasVisibleItems","forEach","performanceCard","performanceLocationElement","performanceLocation","textContent","performanceMonthElement","performanceMonth","matchesMonth","toUpperCase","matchesLocation","emptyStateElement","_ticketTiersAPI","_ticketTierListRender","_selectedPerformanceUI","_customQuestionUI","_assistanceInputUI","_userDetailsUI","bundleContainerSelector","tierContainerSelector","tickets_available","performance_details","bundles_available","fetchTicketTiers","ticket_bundles_offered","flat","ticket_tiers_offered","updateSelectedPerformanceUI","initializeUserDetails","bundleContainer","tierContainer","hasBundlesOrTickets","renderBundles","renderTicketTiers","noTicketsElem","Custom_Question","updateCustomQuestion","initializeAssistanceInput","_bundleRenderer","_ticketTierRenderer","_bundleStateUpdater","initialBundleTemplate","bundlesAvailable","clearNoTicketsError","bundleCard","bundlePrice","bundleName","bundleDescription","bundleQuantityInput","bundleIncrementButton","bundleDecrementButton","bundleMaxAlert","bundleSoldOut","numberInputWrapper","product_details","Displayed_single_sale_price","availability","find","maxQty","max_available","Infinity","addCssClass","removeCssClass","hideAlert","showAlert","msg","current","String","updateTicketTierButtons","resetTicketQuantitiesIfNeeded","revalidateTicketTierQuantities","val","totalBundlesSelected","ticket","ticketElement","ticketTierInputs","ticketTierIncrementButtons","input","ticketCard","closest","requiresBundle","getAttribute","button","initialTicketTierTemplate","cards","maxAlert","qtyInput","totalBundles","availabilities","availabilityMap","Map","rec","set","Ticket_Tier","Quantity_Available","Requires_Bundle_Purchase","nameEl","priceEl","incBtn","decBtn","wrapper","available","updateAlertVisibility","message","setupValidation","createCheckboxValidationFunction","setupCheckboxValidation","validateSelectedSessions","setProfilePicUrl","setupFileUpload","formatPhoneNumber","_image","_authConfig","errorMessageComponent","show","updateTextViaAttrVar","text","validate","requestErrorComponent","validateAndUpdate","errorMessage","validationFn","isValid","inputElement","checkboxComponent","checkbox","checked","checkboxErrorComponent","selectedSessions","some","session","studentIds","user","userAuth","getUser","profile","profile_pic","url","setUser","fileInput","fileInputError","fileInputSuccess","uploadEndpoint","profilePictureImage","WFImage","uploadAnimation","overlay","dragCounter","Promise","handleFile","file","validTypes","includes","type","test","size","reader","FileReader","onload","result","target","setImage","readAsDataURL","FormData","append","existingStudent","student","postRequest","onData","status","onError","files","dragZoneElement","body","dataTransfer","cleaned","replace","slice","o","u","c","enumerable","configurable","constructor","getImageConfig","_config","getSrc","getSizes","getSrcSet","getLoading","onLoad","off","onLoadError","src","srcSet","sizes","e","map","join","loading","keys","hasOwnProperty","n","selectedPerformanceDate","selectedPerformanceMonth","selectedWeekday","selectedTime","selectedPerformanceTitle","selectedPerformanceProductionTitle","selectedImage","raw","optionsCommon","questionText","divider","label","answer","assistanceInput","hiddenAssistanceWrapper","assistanceMessageInput","isChecked","authManager","getUserAuth","first_name","last_name","jQuery","_sliderConfig","_slides","_defaultSwipeDisabled","_index","_listeners","init","Array","from","slides","_mask","mask","_nav","nav","_left","left","_right","right","styleSheets","getElementsByTagName","r","l","disabled","media","indexOf","mediaText","createElement","rules","selectorText","toLowerCase","cssText","addRule","cssRules","insertRule","_triggerOnChange","refereshSlides","reloadWFSlider","Webflow","destroy","redraw","ready","getChildAsComponents","remove","reverse","prepend","getActiveSlide","getAllSlides","getSlideByIndex","getActiveSlideIndex","getPreviousSlideIndex","previous","click","goToIndex","children","addSlide","cssClass","createComponent","removeSlide","getSlideNav","setSlideNavigationState","onSlideChange","v4","delete","values","getConfig","h","firstNameText","steps","step","stepComponent","isCompleted","stepNumber","stepId","getTicketStepId","stepMap","trim","emailRegex","validateEmailOptional","validatePasswordRequirements","validateCheckbox","validatePasswordsMatch","validateSelectField","validatePhoneNumber","validatePhoneNumberOptional","password","hasLowercase","hasUppercase","hasDigit","hasSpecialChar","hasValidLength","originalPassword","confirmPassword","phoneRegex","getUrlParams","params","URLSearchParams","search","performanceId","cancelId","loadingWall","req","reject","ps","base","pathname","qs","history","replaceState","title","p","inp","dispatchEvent","Event","setTimeout"],"version":3,"file":"makeTicketPurchase.6f09276a.js.map"}